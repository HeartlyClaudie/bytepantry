{"version":3,"file":"static/js/main.5027610f.js","mappings":"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","sources":["../node_modules/react/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/react-router/node_modules/cookie/src/index.ts","../node_modules/react/jsx-runtime.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/scheduler/index.js","../node_modules/react-dom/index.js","../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../node_modules/react-router/dist/development/chunk-HA7DTUK3.mjs","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/utils.js","../node_modules/axios/lib/core/AxiosError.js","../node_modules/axios/lib/helpers/toFormData.js","../node_modules/axios/lib/helpers/AxiosURLSearchParams.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/defaults/transitional.js","../node_modules/axios/lib/platform/browser/index.js","../node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","../node_modules/axios/lib/platform/browser/classes/FormData.js","../node_modules/axios/lib/platform/browser/classes/Blob.js","../node_modules/axios/lib/platform/common/utils.js","../node_modules/axios/lib/platform/index.js","../node_modules/axios/lib/helpers/formDataToJSON.js","../node_modules/axios/lib/defaults/index.js","../node_modules/axios/lib/helpers/toURLEncodedForm.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/core/AxiosHeaders.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/cancel/CanceledError.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/helpers/speedometer.js","../node_modules/axios/lib/helpers/throttle.js","../node_modules/axios/lib/helpers/progressEventReducer.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/helpers/resolveConfig.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/helpers/parseProtocol.js","../node_modules/axios/lib/helpers/composeSignals.js","../node_modules/axios/lib/helpers/trackStream.js","../node_modules/axios/lib/adapters/fetch.js","../node_modules/axios/lib/adapters/adapters.js","../node_modules/axios/lib/helpers/null.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/env/data.js","../node_modules/axios/lib/helpers/validator.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/helpers/HttpStatusCode.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/isAxiosError.js","../node_modules/@azure/msal-common/src/utils/Constants.ts","../node_modules/@azure/msal-common/src/logger/Logger.ts","../node_modules/@azure/msal-common/src/authority/ProtocolMode.ts","../node_modules/@azure/msal-common/src/authority/AuthorityOptions.ts","../node_modules/@azure/msal-common/src/error/AuthErrorCodes.ts","../node_modules/@azure/msal-common/src/error/AuthError.ts","../node_modules/@azure/msal-common/src/error/ClientAuthErrorCodes.ts","../node_modules/@azure/msal-common/src/error/ClientAuthError.ts","../node_modules/@azure/msal-common/src/crypto/ICrypto.ts","../node_modules/@azure/msal-common/src/packageMetadata.ts","../node_modules/@azure/msal-common/src/account/AuthToken.ts","../node_modules/@azure/msal-common/src/utils/TimeUtils.ts","../node_modules/@azure/msal-common/src/cache/utils/CacheHelpers.ts","../node_modules/@azure/msal-common/src/error/ClientConfigurationErrorCodes.ts","../node_modules/@azure/msal-common/src/error/ClientConfigurationError.ts","../node_modules/@azure/msal-common/src/utils/StringUtils.ts","../node_modules/@azure/msal-common/src/request/ScopeSet.ts","../node_modules/@azure/msal-common/src/account/ClientInfo.ts","../node_modules/@azure/msal-common/src/account/AccountInfo.ts","../node_modules/@azure/msal-common/src/authority/AuthorityType.ts","../node_modules/@azure/msal-common/src/account/TokenClaims.ts","../node_modules/@azure/msal-common/src/cache/entities/AccountEntity.ts","../node_modules/@azure/msal-common/src/utils/UrlUtils.ts","../node_modules/@azure/msal-common/src/url/UrlString.ts","../node_modules/@azure/msal-common/src/authority/AuthorityMetadata.ts","../node_modules/@azure/msal-common/src/error/CacheErrorCodes.ts","../node_modules/@azure/msal-common/src/error/CacheError.ts","../node_modules/@azure/msal-common/src/cache/CacheManager.ts","../node_modules/@azure/msal-common/src/config/ClientConfiguration.ts","../node_modules/@azure/msal-common/src/network/INetworkModule.ts","../node_modules/@azure/msal-common/src/telemetry/performance/PerformanceEvent.ts","../node_modules/@azure/msal-common/src/telemetry/performance/StubPerformanceClient.ts","../node_modules/@azure/msal-browser/src/utils/BrowserConstants.ts","../node_modules/@azure/msal-browser/src/navigation/NavigationClient.ts","../node_modules/@azure/msal-common/src/error/NetworkError.ts","../node_modules/@azure/msal-browser/src/error/BrowserAuthErrorCodes.ts","../node_modules/@azure/msal-browser/src/error/BrowserAuthError.ts","../node_modules/@azure/msal-browser/src/network/FetchClient.ts","../node_modules/@azure/msal-browser/src/encode/Base64Encode.ts","../node_modules/@azure/msal-browser/src/encode/Base64Decode.ts","../node_modules/@azure/msal-browser/src/crypto/BrowserCrypto.ts","../node_modules/@azure/msal-browser/src/error/BrowserConfigurationAuthErrorCodes.ts","../node_modules/@azure/msal-browser/src/error/BrowserConfigurationAuthError.ts","../node_modules/@azure/msal-browser/src/utils/BrowserUtils.ts","../node_modules/@azure/msal-browser/src/config/Configuration.ts","../node_modules/@azure/msal-browser/src/packageMetadata.ts","../node_modules/@azure/msal-browser/src/operatingcontext/BaseOperatingContext.ts","../node_modules/@azure/msal-browser/src/operatingcontext/StandardOperatingContext.ts","../node_modules/@azure/msal-common/src/error/JoseHeaderErrorCodes.ts","../node_modules/@azure/msal-common/src/error/JoseHeaderError.ts","../node_modules/@azure/msal-common/src/crypto/JoseHeader.ts","../node_modules/@azure/msal-browser/src/cache/DatabaseStorage.ts","../node_modules/@azure/msal-browser/src/cache/MemoryStorage.ts","../node_modules/@azure/msal-browser/src/cache/AsyncMemoryStorage.ts","../node_modules/@azure/msal-browser/src/crypto/CryptoOps.ts","../node_modules/@azure/msal-common/src/utils/FunctionWrappers.ts","../node_modules/@azure/msal-common/src/authority/RegionDiscovery.ts","../node_modules/@azure/msal-common/src/authority/Authority.ts","../node_modules/@azure/msal-common/src/authority/OpenIdConfigResponse.ts","../node_modules/@azure/msal-common/src/authority/CloudInstanceDiscoveryResponse.ts","../node_modules/@azure/msal-common/src/authority/CloudInstanceDiscoveryErrorResponse.ts","../node_modules/@azure/msal-common/src/error/InteractionRequiredAuthErrorCodes.ts","../node_modules/@azure/msal-common/src/error/InteractionRequiredAuthError.ts","../node_modules/@azure/msal-common/src/utils/ProtocolUtils.ts","../node_modules/@azure/msal-common/src/account/CcsCredential.ts","../node_modules/@azure/msal-browser/src/cache/CookieStorage.ts","../node_modules/@azure/msal-browser/src/cache/CacheHelpers.ts","../node_modules/@azure/msal-browser/src/cache/LocalStorage.ts","../node_modules/@azure/msal-browser/src/cache/SessionStorage.ts","../node_modules/@azure/msal-browser/src/utils/BrowserProtocolUtils.ts","../node_modules/@azure/msal-browser/src/event/EventType.ts","../node_modules/@azure/msal-browser/src/cache/BrowserCacheManager.ts","../node_modules/@azure/msal-browser/src/event/EventHandler.ts","../node_modules/@azure/msal-common/src/error/ServerError.ts","../node_modules/@azure/msal-common/src/network/ThrottlingUtils.ts","../node_modules/@azure/msal-common/src/constants/AADServerParamKeys.ts","../node_modules/@azure/msal-common/src/request/RequestValidator.ts","../node_modules/@azure/msal-common/src/request/RequestParameterBuilder.ts","../node_modules/@azure/msal-common/src/authority/AuthorityFactory.ts","../node_modules/@azure/msal-common/src/client/BaseClient.ts","../node_modules/@azure/msal-common/src/crypto/PopTokenGenerator.ts","../node_modules/@azure/msal-common/src/cache/persistence/TokenCacheContext.ts","../node_modules/@azure/msal-common/src/response/ResponseHandler.ts","../node_modules/@azure/msal-common/src/utils/ClientAssertionUtils.ts","../node_modules/@azure/msal-common/src/client/AuthorizationCodeClient.ts","../node_modules/@azure/msal-common/src/telemetry/server/ServerTelemetryManager.ts","../node_modules/@azure/msal-browser/src/interaction_client/BaseInteractionClient.ts","../node_modules/@azure/msal-browser/src/crypto/PkceGenerator.ts","../node_modules/@azure/msal-browser/src/request/RequestHelpers.ts","../node_modules/@azure/msal-browser/src/interaction_client/StandardInteractionClient.ts","../node_modules/@azure/msal-browser/src/error/NativeAuthErrorCodes.ts","../node_modules/@azure/msal-browser/src/error/NativeAuthError.ts","../node_modules/@azure/msal-browser/src/broker/nativeBroker/NativeStatusCodes.ts","../node_modules/@azure/msal-common/src/client/SilentFlowClient.ts","../node_modules/@azure/msal-browser/src/interaction_client/SilentCacheClient.ts","../node_modules/@azure/msal-browser/src/interaction_client/NativeInteractionClient.ts","../node_modules/@azure/msal-browser/src/broker/nativeBroker/NativeMessageHandler.ts","../node_modules/@azure/msal-browser/src/interaction_handler/InteractionHandler.ts","../node_modules/@azure/msal-browser/src/response/ResponseHandler.ts","../node_modules/@azure/msal-browser/src/interaction_client/PopupClient.ts","../node_modules/@azure/msal-browser/src/interaction_handler/RedirectHandler.ts","../node_modules/@azure/msal-browser/src/interaction_client/RedirectClient.ts","../node_modules/@azure/msal-browser/src/interaction_handler/SilentHandler.ts","../node_modules/@azure/msal-browser/src/interaction_client/SilentIframeClient.ts","../node_modules/@azure/msal-common/src/client/RefreshTokenClient.ts","../node_modules/@azure/msal-browser/src/interaction_client/SilentRefreshClient.ts","../node_modules/@azure/msal-browser/src/cache/TokenCache.ts","../node_modules/@azure/msal-browser/src/interaction_client/HybridSpaAuthorizationCodeClient.ts","../node_modules/@azure/msal-browser/src/interaction_client/SilentAuthCodeClient.ts","../node_modules/@azure/msal-browser/src/controllers/StandardController.ts","../node_modules/@azure/msal-browser/src/cache/AccountManager.ts","../node_modules/@azure/msal-browser/src/app/PublicClientApplication.ts","../node_modules/@azure/msal-browser/src/controllers/ControllerFactory.ts","authConfig.js","api.js","pages/Home.js","../node_modules/@azure/msal-react/src/MsalContext.ts","../node_modules/@azure/msal-browser/src/app/IPublicClientApplication.ts","../node_modules/@azure/msal-browser/src/event/EventMessage.ts","../node_modules/@azure/msal-react/src/utils/utilities.ts","../node_modules/@azure/msal-react/src/packageMetadata.ts","../node_modules/@azure/msal-react/src/MsalProvider.tsx","../node_modules/@azure/msal-react/src/hooks/useMsal.ts","pages/Login.js","pages/Profile.js","pages/Donation.js","pages/ItemAdd.js","pages/ItemList.js","App.js","index.js"],"sourcesContent":["'use strict';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./cjs/react.production.min.js');\r\n} else {\r\n  module.exports = require('./cjs/react.development.js');\r\n}\r\n","/**\r\n * @license React\r\n * react-jsx-runtime.production.min.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\r\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\r\n","/**\r\n * @license React\r\n * react.production.min.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\r\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\r\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\r\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\r\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\r\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\r\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\r\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\r\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\r\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\r\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\r\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\r\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\r\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\r\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\r\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\r\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\r\n","/**\r\n * @license React\r\n * scheduler.production.min.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\r\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\r\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\r\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\r\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\r\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\r\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\r\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\r\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\r\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\r\n","/**\n * RegExp to match cookie-name in RFC 6265 sec 4.1.1\n * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2\n * which has been replaced by the token definition in RFC 7230 appendix B.\n *\n * cookie-name       = token\n * token             = 1*tchar\n * tchar             = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" /\n *                     \"*\" / \"+\" / \"-\" / \".\" / \"^\" / \"_\" /\n *                     \"`\" / \"|\" / \"~\" / DIGIT / ALPHA\n *\n * Note: Allowing more characters - https://github.com/jshttp/cookie/issues/191\n * Allow same range as cookie value, except `=`, which delimits end of name.\n */\nconst cookieNameRegExp = /^[\\u0021-\\u003A\\u003C\\u003E-\\u007E]+$/;\n\n/**\n * RegExp to match cookie-value in RFC 6265 sec 4.1.1\n *\n * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\n * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n *                     ; US-ASCII characters excluding CTLs,\n *                     ; whitespace DQUOTE, comma, semicolon,\n *                     ; and backslash\n *\n * Allowing more characters: https://github.com/jshttp/cookie/issues/191\n * Comma, backslash, and DQUOTE are not part of the parsing algorithm.\n */\nconst cookieValueRegExp = /^[\\u0021-\\u003A\\u003C-\\u007E]*$/;\n\n/**\n * RegExp to match domain-value in RFC 6265 sec 4.1.1\n *\n * domain-value      = <subdomain>\n *                     ; defined in [RFC1034], Section 3.5, as\n *                     ; enhanced by [RFC1123], Section 2.1\n * <subdomain>       = <label> | <subdomain> \".\" <label>\n * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]\n *                     Labels must be 63 characters or less.\n *                     'let-dig' not 'letter' in the first char, per RFC1123\n * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>\n * <let-dig-hyp>     = <let-dig> | \"-\"\n * <let-dig>         = <letter> | <digit>\n * <letter>          = any one of the 52 alphabetic characters A through Z in\n *                     upper case and a through z in lower case\n * <digit>           = any one of the ten digits 0 through 9\n *\n * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173\n *\n * > (Note that a leading %x2E (\".\"), if present, is ignored even though that\n * character is not permitted, but a trailing %x2E (\".\"), if present, will\n * cause the user agent to ignore the attribute.)\n */\nconst domainValueRegExp =\n  /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;\n\n/**\n * RegExp to match path-value in RFC 6265 sec 4.1.1\n *\n * path-value        = <any CHAR except CTLs or \";\">\n * CHAR              = %x01-7F\n *                     ; defined in RFC 5234 appendix B.1\n */\nconst pathValueRegExp = /^[\\u0020-\\u003A\\u003D-\\u007E]*$/;\n\nconst __toString = Object.prototype.toString;\n\nconst NullObject = /* @__PURE__ */ (() => {\n  const C = function () {};\n  C.prototype = Object.create(null);\n  return C;\n})() as unknown as { new (): any };\n\n/**\n * Parse options.\n */\nexport interface ParseOptions {\n  /**\n   * Specifies a function that will be used to decode a [cookie-value](https://datatracker.ietf.org/doc/html/rfc6265#section-4.1.1).\n   * Since the value of a cookie has a limited character set (and must be a simple string), this function can be used to decode\n   * a previously-encoded cookie value into a JavaScript string.\n   *\n   * The default function is the global `decodeURIComponent`, wrapped in a `try..catch`. If an error\n   * is thrown it will return the cookie's original value. If you provide your own encode/decode\n   * scheme you must ensure errors are appropriately handled.\n   *\n   * @default decode\n   */\n  decode?: (str: string) => string | undefined;\n}\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n */\nexport function parse(\n  str: string,\n  options?: ParseOptions,\n): Record<string, string | undefined> {\n  const obj: Record<string, string | undefined> = new NullObject();\n  const len = str.length;\n  // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.\n  if (len < 2) return obj;\n\n  const dec = options?.decode || decode;\n  let index = 0;\n\n  do {\n    const eqIdx = str.indexOf(\"=\", index);\n    if (eqIdx === -1) break; // No more cookie pairs.\n\n    const colonIdx = str.indexOf(\";\", index);\n    const endIdx = colonIdx === -1 ? len : colonIdx;\n\n    if (eqIdx > endIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n      continue;\n    }\n\n    const keyStartIdx = startIndex(str, index, eqIdx);\n    const keyEndIdx = endIndex(str, eqIdx, keyStartIdx);\n    const key = str.slice(keyStartIdx, keyEndIdx);\n\n    // only assign once\n    if (obj[key] === undefined) {\n      let valStartIdx = startIndex(str, eqIdx + 1, endIdx);\n      let valEndIdx = endIndex(str, endIdx, valStartIdx);\n\n      const value = dec(str.slice(valStartIdx, valEndIdx));\n      obj[key] = value;\n    }\n\n    index = endIdx + 1;\n  } while (index < len);\n\n  return obj;\n}\n\nfunction startIndex(str: string, index: number, max: number) {\n  do {\n    const code = str.charCodeAt(index);\n    if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index;\n  } while (++index < max);\n  return max;\n}\n\nfunction endIndex(str: string, index: number, min: number) {\n  while (index > min) {\n    const code = str.charCodeAt(--index);\n    if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index + 1;\n  }\n  return min;\n}\n\n/**\n * Serialize options.\n */\nexport interface SerializeOptions {\n  /**\n   * Specifies a function that will be used to encode a [cookie-value](https://datatracker.ietf.org/doc/html/rfc6265#section-4.1.1).\n   * Since value of a cookie has a limited character set (and must be a simple string), this function can be used to encode\n   * a value into a string suited for a cookie's value, and should mirror `decode` when parsing.\n   *\n   * @default encodeURIComponent\n   */\n  encode?: (str: string) => string;\n  /**\n   * Specifies the `number` (in seconds) to be the value for the [`Max-Age` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.2).\n   *\n   * The [cookie storage model specification](https://tools.ietf.org/html/rfc6265#section-5.3) states that if both `expires` and\n   * `maxAge` are set, then `maxAge` takes precedence, but it is possible not all clients by obey this,\n   * so if both are set, they should point to the same date and time.\n   */\n  maxAge?: number;\n  /**\n   * Specifies the `Date` object to be the value for the [`Expires` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.1).\n   * When no expiration is set clients consider this a \"non-persistent cookie\" and delete it the current session is over.\n   *\n   * The [cookie storage model specification](https://tools.ietf.org/html/rfc6265#section-5.3) states that if both `expires` and\n   * `maxAge` are set, then `maxAge` takes precedence, but it is possible not all clients by obey this,\n   * so if both are set, they should point to the same date and time.\n   */\n  expires?: Date;\n  /**\n   * Specifies the value for the [`Domain` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.3).\n   * When no domain is set clients consider the cookie to apply to the current domain only.\n   */\n  domain?: string;\n  /**\n   * Specifies the value for the [`Path` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.4).\n   * When no path is set, the path is considered the [\"default path\"](https://tools.ietf.org/html/rfc6265#section-5.1.4).\n   */\n  path?: string;\n  /**\n   * Enables the [`HttpOnly` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.6).\n   * When enabled, clients will not allow client-side JavaScript to see the cookie in `document.cookie`.\n   */\n  httpOnly?: boolean;\n  /**\n   * Enables the [`Secure` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.5).\n   * When enabled, clients will only send the cookie back if the browser has a HTTPS connection.\n   */\n  secure?: boolean;\n  /**\n   * Enables the [`Partitioned` `Set-Cookie` attribute](https://tools.ietf.org/html/draft-cutler-httpbis-partitioned-cookies/).\n   * When enabled, clients will only send the cookie back when the current domain _and_ top-level domain matches.\n   *\n   * This is an attribute that has not yet been fully standardized, and may change in the future.\n   * This also means clients may ignore this attribute until they understand it. More information\n   * about can be found in [the proposal](https://github.com/privacycg/CHIPS).\n   */\n  partitioned?: boolean;\n  /**\n   * Specifies the value for the [`Priority` `Set-Cookie` attribute](https://tools.ietf.org/html/draft-west-cookie-priority-00#section-4.1).\n   *\n   * - `'low'` will set the `Priority` attribute to `Low`.\n   * - `'medium'` will set the `Priority` attribute to `Medium`, the default priority when not set.\n   * - `'high'` will set the `Priority` attribute to `High`.\n   *\n   * More information about priority levels can be found in [the specification](https://tools.ietf.org/html/draft-west-cookie-priority-00#section-4.1).\n   */\n  priority?: \"low\" | \"medium\" | \"high\";\n  /**\n   * Specifies the value for the [`SameSite` `Set-Cookie` attribute](https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-09#section-5.4.7).\n   *\n   * - `true` will set the `SameSite` attribute to `Strict` for strict same site enforcement.\n   * - `'lax'` will set the `SameSite` attribute to `Lax` for lax same site enforcement.\n   * - `'none'` will set the `SameSite` attribute to `None` for an explicit cross-site cookie.\n   * - `'strict'` will set the `SameSite` attribute to `Strict` for strict same site enforcement.\n   *\n   * More information about enforcement levels can be found in [the specification](https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-09#section-5.4.7).\n   */\n  sameSite?: boolean | \"lax\" | \"strict\" | \"none\";\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize a name value pair into a cookie string suitable for\n * http headers. An optional options object specifies cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n */\nexport function serialize(\n  name: string,\n  val: string,\n  options?: SerializeOptions,\n): string {\n  const enc = options?.encode || encodeURIComponent;\n\n  if (!cookieNameRegExp.test(name)) {\n    throw new TypeError(`argument name is invalid: ${name}`);\n  }\n\n  const value = enc(val);\n\n  if (!cookieValueRegExp.test(value)) {\n    throw new TypeError(`argument val is invalid: ${val}`);\n  }\n\n  let str = name + \"=\" + value;\n  if (!options) return str;\n\n  if (options.maxAge !== undefined) {\n    if (!Number.isInteger(options.maxAge)) {\n      throw new TypeError(`option maxAge is invalid: ${options.maxAge}`);\n    }\n\n    str += \"; Max-Age=\" + options.maxAge;\n  }\n\n  if (options.domain) {\n    if (!domainValueRegExp.test(options.domain)) {\n      throw new TypeError(`option domain is invalid: ${options.domain}`);\n    }\n\n    str += \"; Domain=\" + options.domain;\n  }\n\n  if (options.path) {\n    if (!pathValueRegExp.test(options.path)) {\n      throw new TypeError(`option path is invalid: ${options.path}`);\n    }\n\n    str += \"; Path=\" + options.path;\n  }\n\n  if (options.expires) {\n    if (\n      !isDate(options.expires) ||\n      !Number.isFinite(options.expires.valueOf())\n    ) {\n      throw new TypeError(`option expires is invalid: ${options.expires}`);\n    }\n\n    str += \"; Expires=\" + options.expires.toUTCString();\n  }\n\n  if (options.httpOnly) {\n    str += \"; HttpOnly\";\n  }\n\n  if (options.secure) {\n    str += \"; Secure\";\n  }\n\n  if (options.partitioned) {\n    str += \"; Partitioned\";\n  }\n\n  if (options.priority) {\n    const priority =\n      typeof options.priority === \"string\"\n        ? options.priority.toLowerCase()\n        : undefined;\n    switch (priority) {\n      case \"low\":\n        str += \"; Priority=Low\";\n        break;\n      case \"medium\":\n        str += \"; Priority=Medium\";\n        break;\n      case \"high\":\n        str += \"; Priority=High\";\n        break;\n      default:\n        throw new TypeError(`option priority is invalid: ${options.priority}`);\n    }\n  }\n\n  if (options.sameSite) {\n    const sameSite =\n      typeof options.sameSite === \"string\"\n        ? options.sameSite.toLowerCase()\n        : options.sameSite;\n    switch (sameSite) {\n      case true:\n      case \"strict\":\n        str += \"; SameSite=Strict\";\n        break;\n      case \"lax\":\n        str += \"; SameSite=Lax\";\n        break;\n      case \"none\":\n        str += \"; SameSite=None\";\n        break;\n      default:\n        throw new TypeError(`option sameSite is invalid: ${options.sameSite}`);\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n */\nfunction decode(str: string): string {\n  if (str.indexOf(\"%\") === -1) return str;\n\n  try {\n    return decodeURIComponent(str);\n  } catch (e) {\n    return str;\n  }\n}\n\n/**\n * Determine if value is a Date.\n */\nfunction isDate(val: any): val is Date {\n  return __toString.call(val) === \"[object Date]\";\n}\n","'use strict';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\r\n} else {\r\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\r\n}\r\n","/**\r\n * @license React\r\n * react-dom.production.min.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n/*\r\n Modernizr 3.0.0pre (Custom Build) | MIT\r\n*/\r\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\r\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\r\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\r\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\r\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\r\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\r\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\r\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\r\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\r\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\r\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\r\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\r\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\r\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\r\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\r\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\r\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\r\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\r\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\r\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\r\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\r\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\r\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\r\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\r\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\r\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\r\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\r\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\r\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\r\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\r\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\r\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\r\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\r\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\r\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\r\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\r\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\r\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\r\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\r\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\r\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\r\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\r\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\r\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\r\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\r\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\r\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\r\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\r\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\r\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\r\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\r\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\r\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\r\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\r\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\r\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\r\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\r\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\r\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\r\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\r\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\r\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\r\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\r\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\r\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\r\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\r\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\r\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\r\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\r\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\r\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\r\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\r\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\r\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\r\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\r\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\r\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\r\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\r\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\r\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\r\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\r\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\r\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\r\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\r\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\r\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\r\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\r\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\r\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\r\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\r\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\r\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\r\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\r\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\r\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\r\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\r\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\r\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\r\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\r\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\r\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\r\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\r\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\r\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\r\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\r\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\r\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\r\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\r\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\r\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\r\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\r\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\r\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\r\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\r\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\r\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\r\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\r\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\r\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\r\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\r\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;\r\nfunction Lg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\r\nfunction Mg(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function Ng(a){var b=a._init;return b(a._payload)}\r\nfunction Og(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Pg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\r\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Qg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&Ng(f)===b.type))return d=e(b,c.props),d.ref=Lg(a,b,c),d.return=a,d;d=Rg(c.type,c.key,c.props,null,a.mode,d);d.ref=Lg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\r\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=Sg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Tg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=Qg(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=Rg(b.type,b.key,b.props,null,a.mode,c),\r\nc.ref=Lg(a,null,b),c.return=a,c;case wa:return b=Sg(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Tg(b,a.mode,c,null),b.return=a,b;Mg(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\r\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);Mg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);Mg(b,d)}return null}\r\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\r\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\r\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\r\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&Ng(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=Lg(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Tg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Rg(f.type,f.key,f.props,null,a.mode,h),h.ref=Lg(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\r\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Sg(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);Mg(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\r\n(c(a,d),d=Qg(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(a){var b=Wg.current;E(Wg);a._currentValue=b}function bh(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}\r\nfunction ch(a,b){Xg=a;Zg=Yg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(dh=!0),a.firstContext=null)}function eh(a){var b=a._currentValue;if(Zg!==a)if(a={context:a,memoizedValue:b,next:null},null===Yg){if(null===Xg)throw Error(p(308));Yg=a;Xg.dependencies={lanes:0,firstContext:a}}else Yg=Yg.next=a;return b}var fh=null;function gh(a){null===fh?fh=[a]:fh.push(a)}\r\nfunction hh(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,gh(b)):(c.next=e.next,e.next=c);b.interleaved=c;return ih(a,d)}function ih(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var jh=!1;function kh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\r\nfunction lh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function mh(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\r\nfunction nh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return ih(a,c)}e=d.interleaved;null===e?(b.next=b,gh(d)):(b.next=e.next,e.next=b);d.interleaved=b;return ih(a,c)}function oh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\r\nfunction ph(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\r\nb;c.lastBaseUpdate=b}\r\nfunction qh(a,b,c,d){var e=a.updateQueue;jh=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\r\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:jh=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\r\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);rh|=g;a.lanes=g;a.memoizedState=q}}\r\nfunction sh(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(a){if(a===th)throw Error(p(174));return a}\r\nfunction yh(a,b){G(wh,b);G(vh,a);G(uh,th);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(uh);G(uh,b)}function zh(){E(uh);E(vh);E(wh)}function Ah(a){xh(wh.current);var b=xh(uh.current);var c=lb(b,a.type);b!==c&&(G(vh,a),G(uh,c))}function Bh(a){vh.current===a&&(E(uh),E(vh))}var L=Uf(0);\r\nfunction Ch(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Dh=[];\r\nfunction Eh(){for(var a=0;a<Dh.length;a++)Dh[a]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p(321));}function Mh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\r\nfunction Nh(a,b,c,d,e,f){Hh=f;M=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Fh.current=null===a||null===a.memoizedState?Oh:Ph;a=c(d,e);if(Jh){f=0;do{Jh=!1;Kh=0;if(25<=f)throw Error(p(301));f+=1;O=N=null;b.updateQueue=null;Fh.current=Qh;a=c(d,e)}while(Jh)}Fh.current=Rh;b=null!==N&&null!==N.next;Hh=0;O=N=M=null;Ih=!1;if(b)throw Error(p(300));return a}function Sh(){var a=0!==Kh;Kh=0;return a}\r\nfunction Th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===O?M.memoizedState=O=a:O=O.next=a;return O}function Uh(){if(null===N){var a=M.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===O?M.memoizedState:O.next;if(null!==b)O=b,N=a;else{if(null===a)throw Error(p(310));N=a;a={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null};null===O?M.memoizedState=O=a:O=O.next=a}return O}\r\nfunction Vh(a,b){return\"function\"===typeof b?b(a):b}\r\nfunction Wh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Hh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\r\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;M.lanes|=m;rh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(dh=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,M.lanes|=f,rh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\r\nfunction Xh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(dh=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function Yh(){}\r\nfunction Zh(a,b){var c=M,d=Uh(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,dh=!0);d=d.queue;$h(ai.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==O&&O.memoizedState.tag&1){c.flags|=2048;bi(9,ci.bind(null,c,d,e,b),void 0,null);if(null===Q)throw Error(p(349));0!==(Hh&30)||di(c,b,e)}return e}function di(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\r\nfunction ci(a,b,c,d){b.value=c;b.getSnapshot=d;ei(b)&&fi(a)}function ai(a,b,c){return c(function(){ei(b)&&fi(a)})}function ei(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function fi(a){var b=ih(a,1);null!==b&&gi(b,a,1,-1)}\r\nfunction hi(a){var b=Th();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:a};b.queue=a;a=a.dispatch=ii.bind(null,M,a);return[b.memoizedState,a]}\r\nfunction bi(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function ji(){return Uh().memoizedState}function ki(a,b,c,d){var e=Th();M.flags|=a;e.memoizedState=bi(1|b,c,void 0,void 0===d?null:d)}\r\nfunction li(a,b,c,d){var e=Uh();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;f=g.destroy;if(null!==d&&Mh(d,g.deps)){e.memoizedState=bi(b,c,f,d);return}}M.flags|=a;e.memoizedState=bi(1|b,c,f,d)}function mi(a,b){return ki(8390656,8,a,b)}function $h(a,b){return li(2048,8,a,b)}function ni(a,b){return li(4,2,a,b)}function oi(a,b){return li(4,4,a,b)}\r\nfunction pi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function qi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return li(4,4,pi.bind(null,b,a),c)}function ri(){}function si(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\r\nfunction ti(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function ui(a,b,c){if(0===(Hh&21))return a.baseState&&(a.baseState=!1,dh=!0),a.memoizedState=c;He(c,b)||(c=yc(),M.lanes|=c,rh|=c,a.baseState=!0);return b}function vi(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Gh.transition;Gh.transition={};try{a(!1),b()}finally{C=c,Gh.transition=d}}function wi(){return Uh().memoizedState}\r\nfunction xi(a,b,c){var d=yi(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,c);else if(c=hh(a,b,c,d),null!==c){var e=R();gi(c,a,d,e);Bi(c,b,d)}}\r\nfunction ii(a,b,c){var d=yi(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,gh(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=hh(a,b,e,d);null!==c&&(e=R(),gi(c,a,d,e),Bi(c,b,d))}}\r\nfunction zi(a){var b=a.alternate;return a===M||null!==b&&b===M}function Ai(a,b){Jh=Ih=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Bi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\r\nvar Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(a,b){Th().memoizedState=[a,void 0===b?null:b];return a},useContext:eh,useEffect:mi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ki(4194308,\r\n4,pi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ki(4194308,4,a,b)},useInsertionEffect:function(a,b){return ki(4,2,a,b)},useMemo:function(a,b){var c=Th();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=xi.bind(null,M,a);return[d.memoizedState,a]},useRef:function(a){var b=\r\nTh();a={current:a};return b.memoizedState=a},useState:hi,useDebugValue:ri,useDeferredValue:function(a){return Th().memoizedState=a},useTransition:function(){var a=hi(!1),b=a[0];a=vi.bind(null,a[1]);Th().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=M,e=Th();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===Q)throw Error(p(349));0!==(Hh&30)||di(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;mi(ai.bind(null,d,\r\nf,a),[a]);d.flags|=2048;bi(9,ci.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=Th(),b=Q.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Kh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Lh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},\r\nuseDebugValue:ri,useDeferredValue:function(a){var b=Uh();return ui(b,N.memoizedState,a)},useTransition:function(){var a=Wh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return null===\r\nN?b.memoizedState=a:ui(b,N.memoizedState,a)},useTransition:function(){var a=Xh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}function Di(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\r\nvar Ei={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=R(),d=\r\nyi(a),e=mh(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=nh(a,e,d);null!==b&&(gi(b,a,d,c),oh(b,a,d))}};function Fi(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\r\nfunction Gi(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=eh(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Ei;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\r\nfunction Hi(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Ei.enqueueReplaceState(b,b.state,null)}\r\nfunction Ii(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs={};kh(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=eh(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Di(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\r\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Ei.enqueueReplaceState(e,e.state,null),qh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}function Ji(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}\r\nfunction Ki(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}function Li(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Mi=\"function\"===typeof WeakMap?WeakMap:Map;function Ni(a,b,c){c=mh(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Oi||(Oi=!0,Pi=d);Li(a,b)};return c}\r\nfunction Qi(a,b,c){c=mh(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Li(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Li(a,b);\"function\"!==typeof d&&(null===Ri?Ri=new Set([this]):Ri.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\r\nfunction Si(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Mi;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ti.bind(null,a,b,c),b.then(a,a))}function Ui(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\r\nfunction Vi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=mh(-1,1),b.tag=2,nh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(a,b,c,d){b.child=null===a?Vg(b,null,c,d):Ug(b,a.child,c,d)}\r\nfunction Yi(a,b,c,d,e){c=c.render;var f=b.ref;ch(b,e);d=Nh(a,b,c,d,f,e);c=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&c&&vg(b);b.flags|=1;Xi(a,b,d,e);return b.child}\r\nfunction $i(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!aj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,bj(a,b,f,d,e);a=Rg(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return Zi(a,b,e)}b.flags|=1;a=Pg(f,d);a.ref=b.ref;a.return=b;return b.child=a}\r\nfunction bj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(dh=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(dh=!0);else return b.lanes=a.lanes,Zi(a,b,e)}return cj(a,b,c,d,e)}\r\nfunction dj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(ej,fj),fj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(ej,fj);fj|=d}else null!==\r\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(ej,fj),fj|=d;Xi(a,b,e,c);return b.child}function gj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function cj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);ch(b,e);c=Nh(a,b,c,d,f,e);d=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&d&&vg(b);b.flags|=1;Xi(a,b,c,e);return b.child}\r\nfunction hj(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;ch(b,e);if(null===b.stateNode)ij(a,b),Gi(b,c,d),Ii(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=eh(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\r\n(h!==d||k!==l)&&Hi(b,g,d,l);jh=!1;var r=b.memoizedState;g.state=r;qh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||jh?(\"function\"===typeof m&&(Di(b,c,m,d),k=b.memoizedState),(h=jh||Fi(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\r\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;lh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Ci(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=eh(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\r\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&Hi(b,g,d,k);jh=!1;r=b.memoizedState;g.state=r;qh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||jh?(\"function\"===typeof y&&(Di(b,c,y,d),n=b.memoizedState),(l=jh||Fi(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\r\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\r\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return jj(a,b,c,d,f,e)}\r\nfunction jj(a,b,c,d,e,f){gj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),Zi(a,b,f);d=b.stateNode;Wi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Ug(b,a.child,null,f),b.child=Ug(b,null,h,f)):Xi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function kj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);yh(a,b.containerInfo)}\r\nfunction lj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Xi(a,b,c,d);return b.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(a){return{baseLanes:a,cachePool:null,transitions:null}}\r\nfunction oj(a,b,c){var d=b.pendingProps,e=L.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(L,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\r\ng):f=pj(g,d,0,null),a=Tg(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=nj(c),b.memoizedState=mj,a):qj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return rj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=Pg(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=Pg(h,f):(f=Tg(f,g,c,null),f.flags|=2);f.return=\r\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?nj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=mj;return d}f=a.child;a=f.sibling;d=Pg(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\r\nfunction qj(a,b){b=pj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function sj(a,b,c,d){null!==d&&Jg(d);Ug(b,a.child,null,c);a=qj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\r\nfunction rj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Ki(Error(p(422))),sj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=pj({mode:\"visible\",children:d.children},e,0,null);f=Tg(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Ug(b,a.child,null,g);b.child.memoizedState=nj(g);b.memoizedState=mj;return f}if(0===(b.mode&1))return sj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\r\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Ki(f,d,void 0);return sj(a,b,g,d)}h=0!==(g&a.childLanes);if(dh||h){d=Q;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\r\n0!==e&&e!==f.retryLane&&(f.retryLane=e,ih(a,e),gi(d,a,e,-1))}tj();d=Ki(Error(p(421)));return sj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=uj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=qj(b,d.children);b.flags|=4096;return b}function vj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);bh(a.return,b,c)}\r\nfunction wj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\r\nfunction xj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Xi(a,b,d.children,c);d=L.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&vj(a,c,b);else if(19===a.tag)vj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(L,d);if(0===(b.mode&1))b.memoizedState=\r\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Ch(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);wj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Ch(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}wj(b,!0,c,null,f);break;case \"together\":wj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\r\nfunction ij(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function Zi(a,b,c){null!==a&&(b.dependencies=a.dependencies);rh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=Pg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Pg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\r\nfunction yj(a,b,c){switch(b.tag){case 3:kj(b);Ig();break;case 5:Ah(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:yh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Wg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(L,L.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return oj(a,b,c);G(L,L.current&1);a=Zi(a,b,c);return null!==a?a.sibling:null}G(L,L.current&1);break;case 19:d=0!==(c&\r\nb.childLanes);if(0!==(a.flags&128)){if(d)return xj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(L,L.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,dj(a,b,c)}return Zi(a,b,c)}var zj,Aj,Bj,Cj;\r\nzj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Aj=function(){};\r\nBj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;xh(uh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\r\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\r\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Cj=function(a,b,c,d){c!==d&&(b.flags|=4)};\r\nfunction Dj(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\r\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\r\nfunction Ej(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;zh();E(Wf);E(H);Eh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Fj(zg),zg=null));Aj(a,b);S(b);return null;case 5:Bh(b);var e=xh(wh.current);\r\nc=b.type;if(null!==a&&null!=b.stateNode)Bj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\r\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\r\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\r\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;zj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\r\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\r\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\r\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Cj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=xh(wh.current);xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\r\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(L);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\r\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Fj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(L.current&1)?0===T&&(T=3):tj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return zh(),\r\nAj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return ah(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(L);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Dj(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Ch(a);if(null!==g){b.flags|=128;Dj(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\r\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(L,L.current&1|2);return b.child}a=\r\na.sibling}null!==f.tail&&B()>Gj&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304)}else{if(!d)if(a=Ch(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Dj(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Gj&&1073741824!==c&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\r\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=L.current,G(L,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Hj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(fj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\r\nfunction Ij(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return zh(),E(Wf),E(H),Eh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Bh(b),null;case 13:E(L);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(b.type._context),null;case 22:case 23:return Hj(),\r\nnull;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Lj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Mj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Nj=!1;\r\nfunction Oj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\r\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\r\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Ci(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Nj;Nj=!1;return n}\r\nfunction Pj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Mj(b,c,f)}e=e.next}while(e!==d)}}function Qj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Rj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\r\nfunction Sj(a){var b=a.alternate;null!==b&&(a.alternate=null,Sj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Tj(a){return 5===a.tag||3===a.tag||4===a.tag}\r\nfunction Uj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Tj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\r\nfunction Vj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Vj(a,b,c),a=a.sibling;null!==a;)Vj(a,b,c),a=a.sibling}\r\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}var X=null,Xj=!1;function Yj(a,b,c){for(c=c.child;null!==c;)Zj(a,b,c),c=c.sibling}\r\nfunction Zj(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Lj(c,b);case 6:var d=X,e=Xj;X=null;Yj(a,b,c);X=d;Xj=e;null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Xj;X=c.stateNode.containerInfo;Xj=!0;\r\nYj(a,b,c);X=d;Xj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Mj(c,b,g):0!==(f&4)&&Mj(c,b,g));e=e.next}while(e!==d)}Yj(a,b,c);break;case 1:if(!U&&(Lj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Yj(a,b,c);break;case 21:Yj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\r\nc.memoizedState,Yj(a,b,c),U=d):Yj(a,b,c);break;default:Yj(a,b,c)}}function ak(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Kj);b.forEach(function(b){var d=bk.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\r\nfunction ck(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Xj=!1;break a;case 3:X=h.stateNode.containerInfo;Xj=!0;break a;case 4:X=h.stateNode.containerInfo;Xj=!0;break a}h=h.return}if(null===X)throw Error(p(160));Zj(f,g,e);X=null;Xj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)dk(b,a),b=b.sibling}\r\nfunction dk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ck(b,a);ek(a);if(d&4){try{Pj(3,a,a.return),Qj(3,a)}catch(t){W(a,a.return,t)}try{Pj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);break;case 5:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\r\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\r\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:ck(b,a);ek(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:ck(b,a);ek(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:ck(b,a);ek(a);break;case 13:ck(b,a);ek(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\r\nnull!==e.alternate&&null!==e.alternate.memoizedState||(fk=B()));d&4&&ak(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,ck(b,a),U=l):ck(b,a);ek(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Pj(4,r,r.return);break;case 1:Lj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\r\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Lj(r,r.return);break;case 22:if(null!==r.memoizedState){gk(q);continue}}null!==y?(y.return=r,V=y):gk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\r\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:ck(b,a);ek(a);d&4&&ak(a);break;case 21:break;default:ck(b,\r\na),ek(a)}}function ek(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Tj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Uj(a);Wj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Uj(a);Vj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function hk(a,b,c){V=a;ik(a,b,c)}\r\nfunction ik(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Jj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Jj;var l=U;Jj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?jk(e):null!==k?(k.return=g,V=k):jk(e);for(;null!==f;)V=f,ik(f,b,c),f=f.sibling;V=e;Jj=h;U=l}kk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):kk(a,b,c)}}\r\nfunction kk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Qj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Ci(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&sh(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\r\nb.child.stateNode;break;case 1:c=b.child.stateNode}sh(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\r\ndefault:throw Error(p(163));}U||b.flags&512&&Rj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function gk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\r\nfunction jk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Qj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Rj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Rj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\r\nvar lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=Infinity,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return 0!==(K&6)?B():-1!==Ak?Ak:Ak=B()}\r\nfunction yi(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Bk&&(Bk=yc()),Bk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function gi(a,b,c,d){if(50<yk)throw yk=0,zk=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==Q)a===Q&&(0===(K&2)&&(qk|=c),4===T&&Ck(a,Z)),Dk(a,d),1===c&&0===K&&0===(b.mode&1)&&(Gj=B()+500,fg&&jg())}\r\nfunction Dk(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===Q?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Ek.bind(null,a)):hg(Ek.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Fk(c,Gk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\r\nfunction Gk(a,b){Ak=-1;Bk=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Hk()&&a.callbackNode!==c)return null;var d=uc(a,a===Q?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Ik(a,d);else{b=d;var e=K;K|=2;var f=Jk();if(Q!==a||Z!==b)uk=null,Gj=B()+500,Kk(a,b);do try{Lk();break}catch(h){Mk(a,h)}while(1);$g();mk.current=f;K=e;null!==Y?b=0:(Q=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Nk(a,e)));if(1===b)throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;if(6===b)Ck(a,d);\r\nelse{e=a.current.alternate;if(0===(d&30)&&!Ok(e)&&(b=Ik(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Nk(a,f))),1===b))throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Pk(a,tk,uk);break;case 3:Ck(a,d);if((d&130023424)===d&&(b=fk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){R();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),b);break}Pk(a,tk,uk);break;case 4:Ck(a,d);if((d&4194240)===\r\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*lk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),d);break}Pk(a,tk,uk);break;case 5:Pk(a,tk,uk);break;default:throw Error(p(329));}}}Dk(a,B());return a.callbackNode===c?Gk.bind(null,a):null}\r\nfunction Nk(a,b){var c=sk;a.current.memoizedState.isDehydrated&&(Kk(a,b).flags|=256);a=Ik(a,b);2!==a&&(b=tk,tk=c,null!==b&&Fj(b));return a}function Fj(a){null===tk?tk=a:tk.push.apply(tk,a)}\r\nfunction Ok(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\r\nfunction Ck(a,b){b&=~rk;b&=~qk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Ek(a){if(0!==(K&6))throw Error(p(327));Hk();var b=uc(a,0);if(0===(b&1))return Dk(a,B()),null;var c=Ik(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Nk(a,d))}if(1===c)throw c=pk,Kk(a,0),Ck(a,b),Dk(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Pk(a,tk,uk);Dk(a,B());return null}\r\nfunction Qk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Gj=B()+500,fg&&jg())}}function Rk(a){null!==wk&&0===wk.tag&&0===(K&6)&&Hk();var b=K;K|=1;var c=ok.transition,d=C;try{if(ok.transition=null,C=1,a)return a()}finally{C=d,ok.transition=c,K=b,0===(K&6)&&jg()}}function Hj(){fj=ej.current;E(ej)}\r\nfunction Kk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:zh();E(Wf);E(H);Eh();break;case 5:Bh(d);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(d.type._context);break;case 22:case 23:Hj()}c=c.return}Q=a;Y=a=Pg(a.current,null);Z=fj=b;T=0;pk=null;rk=qk=rh=0;tk=sk=null;if(null!==fh){for(b=\r\n0;b<fh.length;b++)if(c=fh[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}fh=null}return a}\r\nfunction Mk(a,b){do{var c=Y;try{$g();Fh.current=Rh;if(Ih){for(var d=M.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Ih=!1}Hh=0;O=N=M=null;Jh=!1;Kh=0;nk.current=null;if(null===c||null===c.return){T=1;pk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\r\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Ui(g);if(null!==y){y.flags&=-257;Vi(y,g,h,f,b);y.mode&1&&Si(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Si(f,l,b);tj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Ui(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Vi(J,g,h,f,b);Jg(Ji(k,h));break a}}f=k=Ji(k,h);4!==T&&(T=2);null===sk?sk=[f]:sk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\r\nb&=-b;f.lanes|=b;var x=Ni(f,k,b);ph(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Ri||!Ri.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Qi(f,h,b);ph(f,F);break a}}f=f.return}while(null!==f)}Sk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Jk(){var a=mk.current;mk.current=Rh;return null===a?Rh:a}\r\nfunction tj(){if(0===T||3===T||2===T)T=4;null===Q||0===(rh&268435455)&&0===(qk&268435455)||Ck(Q,Z)}function Ik(a,b){var c=K;K|=2;var d=Jk();if(Q!==a||Z!==b)uk=null,Kk(a,b);do try{Tk();break}catch(e){Mk(a,e)}while(1);$g();K=c;mk.current=d;if(null!==Y)throw Error(p(261));Q=null;Z=0;return T}function Tk(){for(;null!==Y;)Uk(Y)}function Lk(){for(;null!==Y&&!cc();)Uk(Y)}function Uk(a){var b=Vk(a.alternate,a,fj);a.memoizedProps=a.pendingProps;null===b?Sk(a):Y=b;nk.current=null}\r\nfunction Sk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Ej(c,b,fj),null!==c){Y=c;return}}else{c=Ij(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Pk(a,b,c){var d=C,e=ok.transition;try{ok.transition=null,C=1,Wk(a,b,c,d)}finally{ok.transition=e,C=d}return null}\r\nfunction Wk(a,b,c,d){do Hk();while(null!==wk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===Q&&(Y=Q=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||vk||(vk=!0,Fk(hc,function(){Hk();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=ok.transition;ok.transition=null;\r\nvar g=C;C=1;var h=K;K|=4;nk.current=null;Oj(a,c);dk(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;hk(c,a,e);dc();K=h;C=g;ok.transition=f}else a.current=c;vk&&(vk=!1,wk=a,xk=e);f=a.pendingLanes;0===f&&(Ri=null);mc(c.stateNode,d);Dk(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Oi)throw Oi=!1,a=Pi,Pi=null,a;0!==(xk&1)&&0!==a.tag&&Hk();f=a.pendingLanes;0!==(f&1)?a===zk?yk++:(yk=0,zk=a):yk=0;jg();return null}\r\nfunction Hk(){if(null!==wk){var a=Dc(xk),b=ok.transition,c=C;try{ok.transition=null;C=16>a?16:a;if(null===wk)var d=!1;else{a=wk;wk=null;xk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Pj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Sj(m);if(m===\r\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Pj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\r\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Qj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,ok.transition=b}}return!1}function Xk(a,b,c){b=Ji(c,b);b=Ni(a,b,1);a=nh(a,b,1);b=R();null!==a&&(Ac(a,1,b),Dk(a,b))}\r\nfunction W(a,b,c){if(3===a.tag)Xk(a,a,c);else for(;null!==b;){if(3===b.tag){Xk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ri||!Ri.has(d))){a=Ji(c,a);a=Qi(b,a,1);b=nh(b,a,1);a=R();null!==b&&(Ac(b,1,a),Dk(b,a));break}}b=b.return}}\r\nfunction Ti(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=R();a.pingedLanes|=a.suspendedLanes&c;Q===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-fk?Kk(a,0):rk|=c);Dk(a,b)}function Yk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=R();a=ih(a,b);null!==a&&(Ac(a,b,c),Dk(a,c))}function uj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Yk(a,c)}\r\nfunction bk(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Yk(a,c)}var Vk;\r\nVk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)dh=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return dh=!1,yj(a,b,c);dh=0!==(a.flags&131072)?!0:!1}else dh=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;ij(a,b);a=b.pendingProps;var e=Yf(b,H.current);ch(b,c);e=Nh(null,b,d,a,e,c);var f=Sh();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\r\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,kh(b),e.updater=Ei,b.stateNode=e,e._reactInternals=b,Ii(b,d,a,c),b=jj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Xi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{ij(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Zk(d);a=Ci(d,a);switch(e){case 0:b=cj(null,b,d,a,c);break a;case 1:b=hj(null,b,d,a,c);break a;case 11:b=Yi(null,b,d,a,c);break a;case 14:b=$i(null,b,d,Ci(d.type,a),c);break a}throw Error(p(306,\r\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),cj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),hj(a,b,d,e,c);case 3:a:{kj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;lh(a,b);qh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\r\nf,b.memoizedState=f,b.flags&256){e=Ji(Error(p(423)),b);b=lj(a,b,d,c,e);break a}else if(d!==e){e=Ji(Error(p(424)),b);b=lj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Vg(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=Zi(a,b,c);break a}Xi(a,b,d,c)}b=b.child}return b;case 5:return Ah(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\r\ngj(a,b),Xi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return oj(a,b,c);case 4:return yh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Ug(b,null,d,c):Xi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),Yi(a,b,d,e,c);case 7:return Xi(a,b,b.pendingProps,c),b.child;case 8:return Xi(a,b,b.pendingProps.children,c),b.child;case 12:return Xi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\r\ng=e.value;G(Wg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=Zi(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=mh(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);bh(f.return,\r\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);bh(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Xi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,ch(b,c),e=eh(e),d=d(e),b.flags|=1,Xi(a,b,d,c),\r\nb.child;case 14:return d=b.type,e=Ci(d,b.pendingProps),e=Ci(d.type,e),$i(a,b,d,e,c);case 15:return bj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),ij(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,ch(b,c),Gi(b,d,e),Ii(b,d,e,c),jj(null,b,d,!0,a,c);case 19:return xj(a,b,c);case 22:return dj(a,b,c)}throw Error(p(156,b.tag));};function Fk(a,b){return ac(a,b)}\r\nfunction $k(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new $k(a,b,c,d)}function aj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\r\nfunction Zk(a){if(\"function\"===typeof a)return aj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\r\nfunction Pg(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\r\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\r\nfunction Rg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)aj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Tg(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return pj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\r\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Tg(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function pj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function Qg(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\r\nfunction Sg(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\r\nfunction al(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\r\nnull}function bl(a,b,c,d,e,f,g,h,k){a=new al(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};kh(f);return a}function cl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\r\nfunction dl(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\r\nfunction el(a,b,c,d,e,f,g,h,k){a=bl(c,d,!0,a,e,f,g,h,k);a.context=dl(null);c=a.current;d=R();e=yi(c);f=mh(d,e);f.callback=void 0!==b&&null!==b?b:null;nh(c,f,e);a.current.lanes=e;Ac(a,e,d);Dk(a,d);return a}function fl(a,b,c,d){var e=b.current,f=R(),g=yi(e);c=dl(c);null===b.context?b.context=c:b.pendingContext=c;b=mh(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=nh(e,b,g);null!==a&&(gi(a,e,g,f),oh(a,e,g));return g}\r\nfunction gl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function hl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function il(a,b){hl(a,b);(a=a.alternate)&&hl(a,b)}function jl(){return null}var kl=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ll(a){this._internalRoot=a}\r\nml.prototype.render=ll.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));fl(a,b,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Rk(function(){fl(null,a,null,null)});b[uf]=null}};function ml(a){this._internalRoot=a}\r\nml.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function pl(){}\r\nfunction ql(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=gl(g);f.call(a)}}var g=el(b,d,a,0,null,!1,!1,\"\",pl);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Rk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=gl(k);h.call(a)}}var k=bl(a,0,!1,null,null,!1,!1,\"\",pl);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Rk(function(){fl(b,k,c,d)});return k}\r\nfunction rl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=gl(g);h.call(a)}}fl(b,g,a,e)}else g=ql(c,b,a,e,d);return gl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Dk(b,B()),0===(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var b=ih(a,1);if(null!==b){var c=R();gi(b,a,1,c)}}),il(a,1)}};\r\nFc=function(a){if(13===a.tag){var b=ih(a,134217728);if(null!==b){var c=R();gi(b,a,134217728,c)}il(a,134217728)}};Gc=function(a){if(13===a.tag){var b=yi(a),c=ih(a,b);if(null!==c){var d=R();gi(c,a,b,d)}il(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\r\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Qk;Hb=Rk;\r\nvar sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:\"18.3.1\",rendererPackageName:\"react-dom\"};\r\nvar ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||\r\njl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.3.1-next-f1338f8080-20240426\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;\r\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nl(b))throw Error(p(200));return cl(a,b,null,c)};exports.createRoot=function(a,b){if(!nl(a))throw Error(p(299));var c=!1,d=\"\",e=kl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=bl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ll(b)};\r\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Rk(a)};exports.hydrate=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!0,c)};\r\nexports.hydrateRoot=function(a,b,c){if(!nl(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=kl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=el(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\r\ne);return new ml(b)};exports.render=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!ol(a))throw Error(p(40));return a._reactRootContainer?(Rk(function(){rl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Qk;\r\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!ol(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return rl(a,b,c,!1,d)};exports.version=\"18.3.1-next-f1338f8080-20240426\";\r\n","'use strict';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./cjs/scheduler.production.min.js');\r\n} else {\r\n  module.exports = require('./cjs/scheduler.development.js');\r\n}\r\n","'use strict';\r\n\r\nfunction checkDCE() {\r\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\r\n  if (\r\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\r\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\r\n  ) {\r\n    return;\r\n  }\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    // This branch is unreachable because this function is only called\r\n    // in production, but the condition is true only in development.\r\n    // Therefore if the branch is still here, dead code elimination wasn't\r\n    // properly applied.\r\n    // Don't change the message. React DevTools relies on it. Also make sure\r\n    // this message doesn't occur elsewhere in this function, or it will cause\r\n    // a false positive.\r\n    throw new Error('^_^');\r\n  }\r\n  try {\r\n    // Verify that the code above has been dead code eliminated (DCE'd).\r\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\r\n  } catch (err) {\r\n    // DevTools shouldn't crash React, no matter what.\r\n    // We should still report in case we break this code.\r\n    console.error(err);\r\n  }\r\n}\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  // DCE check should happen before ReactDOM bundle executes so that\r\n  // DevTools can report bad minification during injection.\r\n  checkDCE();\r\n  module.exports = require('./cjs/react-dom.production.min.js');\r\n} else {\r\n  module.exports = require('./cjs/react-dom.development.js');\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * react-router v7.2.0\r\n *\r\n * Copyright (c) Remix Software Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE.md file in the root directory of this source tree.\r\n *\r\n * @license MIT\r\n */\r\n\r\n// lib/router/history.ts\r\nvar Action = /* @__PURE__ */ ((Action2) => {\r\n  Action2[\"Pop\"] = \"POP\";\r\n  Action2[\"Push\"] = \"PUSH\";\r\n  Action2[\"Replace\"] = \"REPLACE\";\r\n  return Action2;\r\n})(Action || {});\r\nvar PopStateEventType = \"popstate\";\r\nfunction createMemoryHistory(options = {}) {\r\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\r\n  let entries;\r\n  entries = initialEntries.map(\r\n    (entry, index2) => createMemoryLocation(\r\n      entry,\r\n      typeof entry === \"string\" ? null : entry.state,\r\n      index2 === 0 ? \"default\" : void 0\r\n    )\r\n  );\r\n  let index = clampIndex(\r\n    initialIndex == null ? entries.length - 1 : initialIndex\r\n  );\r\n  let action = \"POP\" /* Pop */;\r\n  let listener = null;\r\n  function clampIndex(n) {\r\n    return Math.min(Math.max(n, 0), entries.length - 1);\r\n  }\r\n  function getCurrentLocation() {\r\n    return entries[index];\r\n  }\r\n  function createMemoryLocation(to, state = null, key) {\r\n    let location = createLocation(\r\n      entries ? getCurrentLocation().pathname : \"/\",\r\n      to,\r\n      state,\r\n      key\r\n    );\r\n    warning(\r\n      location.pathname.charAt(0) === \"/\",\r\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\r\n        to\r\n      )}`\r\n    );\r\n    return location;\r\n  }\r\n  function createHref2(to) {\r\n    return typeof to === \"string\" ? to : createPath(to);\r\n  }\r\n  let history = {\r\n    get index() {\r\n      return index;\r\n    },\r\n    get action() {\r\n      return action;\r\n    },\r\n    get location() {\r\n      return getCurrentLocation();\r\n    },\r\n    createHref: createHref2,\r\n    createURL(to) {\r\n      return new URL(createHref2(to), \"http://localhost\");\r\n    },\r\n    encodeLocation(to) {\r\n      let path = typeof to === \"string\" ? parsePath(to) : to;\r\n      return {\r\n        pathname: path.pathname || \"\",\r\n        search: path.search || \"\",\r\n        hash: path.hash || \"\"\r\n      };\r\n    },\r\n    push(to, state) {\r\n      action = \"PUSH\" /* Push */;\r\n      let nextLocation = createMemoryLocation(to, state);\r\n      index += 1;\r\n      entries.splice(index, entries.length, nextLocation);\r\n      if (v5Compat && listener) {\r\n        listener({ action, location: nextLocation, delta: 1 });\r\n      }\r\n    },\r\n    replace(to, state) {\r\n      action = \"REPLACE\" /* Replace */;\r\n      let nextLocation = createMemoryLocation(to, state);\r\n      entries[index] = nextLocation;\r\n      if (v5Compat && listener) {\r\n        listener({ action, location: nextLocation, delta: 0 });\r\n      }\r\n    },\r\n    go(delta) {\r\n      action = \"POP\" /* Pop */;\r\n      let nextIndex = clampIndex(index + delta);\r\n      let nextLocation = entries[nextIndex];\r\n      index = nextIndex;\r\n      if (listener) {\r\n        listener({ action, location: nextLocation, delta });\r\n      }\r\n    },\r\n    listen(fn) {\r\n      listener = fn;\r\n      return () => {\r\n        listener = null;\r\n      };\r\n    }\r\n  };\r\n  return history;\r\n}\r\nfunction createBrowserHistory(options = {}) {\r\n  function createBrowserLocation(window2, globalHistory) {\r\n    let { pathname, search, hash } = window2.location;\r\n    return createLocation(\r\n      \"\",\r\n      { pathname, search, hash },\r\n      // state defaults to `null` because `window.history.state` does\r\n      globalHistory.state && globalHistory.state.usr || null,\r\n      globalHistory.state && globalHistory.state.key || \"default\"\r\n    );\r\n  }\r\n  function createBrowserHref(window2, to) {\r\n    return typeof to === \"string\" ? to : createPath(to);\r\n  }\r\n  return getUrlBasedHistory(\r\n    createBrowserLocation,\r\n    createBrowserHref,\r\n    null,\r\n    options\r\n  );\r\n}\r\nfunction createHashHistory(options = {}) {\r\n  function createHashLocation(window2, globalHistory) {\r\n    let {\r\n      pathname = \"/\",\r\n      search = \"\",\r\n      hash = \"\"\r\n    } = parsePath(window2.location.hash.substring(1));\r\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\r\n      pathname = \"/\" + pathname;\r\n    }\r\n    return createLocation(\r\n      \"\",\r\n      { pathname, search, hash },\r\n      // state defaults to `null` because `window.history.state` does\r\n      globalHistory.state && globalHistory.state.usr || null,\r\n      globalHistory.state && globalHistory.state.key || \"default\"\r\n    );\r\n  }\r\n  function createHashHref(window2, to) {\r\n    let base = window2.document.querySelector(\"base\");\r\n    let href2 = \"\";\r\n    if (base && base.getAttribute(\"href\")) {\r\n      let url = window2.location.href;\r\n      let hashIndex = url.indexOf(\"#\");\r\n      href2 = hashIndex === -1 ? url : url.slice(0, hashIndex);\r\n    }\r\n    return href2 + \"#\" + (typeof to === \"string\" ? to : createPath(to));\r\n  }\r\n  function validateHashLocation(location, to) {\r\n    warning(\r\n      location.pathname.charAt(0) === \"/\",\r\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\r\n        to\r\n      )})`\r\n    );\r\n  }\r\n  return getUrlBasedHistory(\r\n    createHashLocation,\r\n    createHashHref,\r\n    validateHashLocation,\r\n    options\r\n  );\r\n}\r\nfunction invariant(value, message) {\r\n  if (value === false || value === null || typeof value === \"undefined\") {\r\n    throw new Error(message);\r\n  }\r\n}\r\nfunction warning(cond, message) {\r\n  if (!cond) {\r\n    if (typeof console !== \"undefined\") console.warn(message);\r\n    try {\r\n      throw new Error(message);\r\n    } catch (e) {\r\n    }\r\n  }\r\n}\r\nfunction createKey() {\r\n  return Math.random().toString(36).substring(2, 10);\r\n}\r\nfunction getHistoryState(location, index) {\r\n  return {\r\n    usr: location.state,\r\n    key: location.key,\r\n    idx: index\r\n  };\r\n}\r\nfunction createLocation(current, to, state = null, key) {\r\n  let location = {\r\n    pathname: typeof current === \"string\" ? current : current.pathname,\r\n    search: \"\",\r\n    hash: \"\",\r\n    ...typeof to === \"string\" ? parsePath(to) : to,\r\n    state,\r\n    // TODO: This could be cleaned up.  push/replace should probably just take\r\n    // full Locations now and avoid the need to run through this flow at all\r\n    // But that's a pretty big refactor to the current test suite so going to\r\n    // keep as is for the time being and just let any incoming keys take precedence\r\n    key: to && to.key || key || createKey()\r\n  };\r\n  return location;\r\n}\r\nfunction createPath({\r\n  pathname = \"/\",\r\n  search = \"\",\r\n  hash = \"\"\r\n}) {\r\n  if (search && search !== \"?\")\r\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\r\n  if (hash && hash !== \"#\")\r\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\r\n  return pathname;\r\n}\r\nfunction parsePath(path) {\r\n  let parsedPath = {};\r\n  if (path) {\r\n    let hashIndex = path.indexOf(\"#\");\r\n    if (hashIndex >= 0) {\r\n      parsedPath.hash = path.substring(hashIndex);\r\n      path = path.substring(0, hashIndex);\r\n    }\r\n    let searchIndex = path.indexOf(\"?\");\r\n    if (searchIndex >= 0) {\r\n      parsedPath.search = path.substring(searchIndex);\r\n      path = path.substring(0, searchIndex);\r\n    }\r\n    if (path) {\r\n      parsedPath.pathname = path;\r\n    }\r\n  }\r\n  return parsedPath;\r\n}\r\nfunction getUrlBasedHistory(getLocation, createHref2, validateLocation, options = {}) {\r\n  let { window: window2 = document.defaultView, v5Compat = false } = options;\r\n  let globalHistory = window2.history;\r\n  let action = \"POP\" /* Pop */;\r\n  let listener = null;\r\n  let index = getIndex();\r\n  if (index == null) {\r\n    index = 0;\r\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\r\n  }\r\n  function getIndex() {\r\n    let state = globalHistory.state || { idx: null };\r\n    return state.idx;\r\n  }\r\n  function handlePop() {\r\n    action = \"POP\" /* Pop */;\r\n    let nextIndex = getIndex();\r\n    let delta = nextIndex == null ? null : nextIndex - index;\r\n    index = nextIndex;\r\n    if (listener) {\r\n      listener({ action, location: history.location, delta });\r\n    }\r\n  }\r\n  function push(to, state) {\r\n    action = \"PUSH\" /* Push */;\r\n    let location = createLocation(history.location, to, state);\r\n    if (validateLocation) validateLocation(location, to);\r\n    index = getIndex() + 1;\r\n    let historyState = getHistoryState(location, index);\r\n    let url = history.createHref(location);\r\n    try {\r\n      globalHistory.pushState(historyState, \"\", url);\r\n    } catch (error) {\r\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\r\n        throw error;\r\n      }\r\n      window2.location.assign(url);\r\n    }\r\n    if (v5Compat && listener) {\r\n      listener({ action, location: history.location, delta: 1 });\r\n    }\r\n  }\r\n  function replace2(to, state) {\r\n    action = \"REPLACE\" /* Replace */;\r\n    let location = createLocation(history.location, to, state);\r\n    if (validateLocation) validateLocation(location, to);\r\n    index = getIndex();\r\n    let historyState = getHistoryState(location, index);\r\n    let url = history.createHref(location);\r\n    globalHistory.replaceState(historyState, \"\", url);\r\n    if (v5Compat && listener) {\r\n      listener({ action, location: history.location, delta: 0 });\r\n    }\r\n  }\r\n  function createURL(to) {\r\n    let base = window2.location.origin !== \"null\" ? window2.location.origin : window2.location.href;\r\n    let href2 = typeof to === \"string\" ? to : createPath(to);\r\n    href2 = href2.replace(/ $/, \"%20\");\r\n    invariant(\r\n      base,\r\n      `No window.location.(origin|href) available to create URL for href: ${href2}`\r\n    );\r\n    return new URL(href2, base);\r\n  }\r\n  let history = {\r\n    get action() {\r\n      return action;\r\n    },\r\n    get location() {\r\n      return getLocation(window2, globalHistory);\r\n    },\r\n    listen(fn) {\r\n      if (listener) {\r\n        throw new Error(\"A history only accepts one active listener\");\r\n      }\r\n      window2.addEventListener(PopStateEventType, handlePop);\r\n      listener = fn;\r\n      return () => {\r\n        window2.removeEventListener(PopStateEventType, handlePop);\r\n        listener = null;\r\n      };\r\n    },\r\n    createHref(to) {\r\n      return createHref2(window2, to);\r\n    },\r\n    createURL,\r\n    encodeLocation(to) {\r\n      let url = createURL(to);\r\n      return {\r\n        pathname: url.pathname,\r\n        search: url.search,\r\n        hash: url.hash\r\n      };\r\n    },\r\n    push,\r\n    replace: replace2,\r\n    go(n) {\r\n      return globalHistory.go(n);\r\n    }\r\n  };\r\n  return history;\r\n}\r\n\r\n// lib/router/utils.ts\r\nvar immutableRouteKeys = /* @__PURE__ */ new Set([\r\n  \"lazy\",\r\n  \"caseSensitive\",\r\n  \"path\",\r\n  \"id\",\r\n  \"index\",\r\n  \"children\"\r\n]);\r\nfunction isIndexRoute(route) {\r\n  return route.index === true;\r\n}\r\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties2, parentPath = [], manifest = {}) {\r\n  return routes.map((route, index) => {\r\n    let treePath = [...parentPath, String(index)];\r\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\r\n    invariant(\r\n      route.index !== true || !route.children,\r\n      `Cannot specify children on an index route`\r\n    );\r\n    invariant(\r\n      !manifest[id],\r\n      `Found a route id collision on id \"${id}\".  Route id's must be globally unique within Data Router usages`\r\n    );\r\n    if (isIndexRoute(route)) {\r\n      let indexRoute = {\r\n        ...route,\r\n        ...mapRouteProperties2(route),\r\n        id\r\n      };\r\n      manifest[id] = indexRoute;\r\n      return indexRoute;\r\n    } else {\r\n      let pathOrLayoutRoute = {\r\n        ...route,\r\n        ...mapRouteProperties2(route),\r\n        id,\r\n        children: void 0\r\n      };\r\n      manifest[id] = pathOrLayoutRoute;\r\n      if (route.children) {\r\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\r\n          route.children,\r\n          mapRouteProperties2,\r\n          treePath,\r\n          manifest\r\n        );\r\n      }\r\n      return pathOrLayoutRoute;\r\n    }\r\n  });\r\n}\r\nfunction matchRoutes(routes, locationArg, basename = \"/\") {\r\n  return matchRoutesImpl(routes, locationArg, basename, false);\r\n}\r\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\r\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\r\n  let pathname = stripBasename(location.pathname || \"/\", basename);\r\n  if (pathname == null) {\r\n    return null;\r\n  }\r\n  let branches = flattenRoutes(routes);\r\n  rankRouteBranches(branches);\r\n  let matches = null;\r\n  for (let i = 0; matches == null && i < branches.length; ++i) {\r\n    let decoded = decodePath(pathname);\r\n    matches = matchRouteBranch(\r\n      branches[i],\r\n      decoded,\r\n      allowPartial\r\n    );\r\n  }\r\n  return matches;\r\n}\r\nfunction convertRouteMatchToUiMatch(match, loaderData) {\r\n  let { route, pathname, params } = match;\r\n  return {\r\n    id: route.id,\r\n    pathname,\r\n    params,\r\n    data: loaderData[route.id],\r\n    handle: route.handle\r\n  };\r\n}\r\nfunction flattenRoutes(routes, branches = [], parentsMeta = [], parentPath = \"\") {\r\n  let flattenRoute = (route, index, relativePath) => {\r\n    let meta = {\r\n      relativePath: relativePath === void 0 ? route.path || \"\" : relativePath,\r\n      caseSensitive: route.caseSensitive === true,\r\n      childrenIndex: index,\r\n      route\r\n    };\r\n    if (meta.relativePath.startsWith(\"/\")) {\r\n      invariant(\r\n        meta.relativePath.startsWith(parentPath),\r\n        `Absolute route path \"${meta.relativePath}\" nested under path \"${parentPath}\" is not valid. An absolute child route path must start with the combined path of all its parent routes.`\r\n      );\r\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\r\n    }\r\n    let path = joinPaths([parentPath, meta.relativePath]);\r\n    let routesMeta = parentsMeta.concat(meta);\r\n    if (route.children && route.children.length > 0) {\r\n      invariant(\r\n        // Our types know better, but runtime JS may not!\r\n        // @ts-expect-error\r\n        route.index !== true,\r\n        `Index routes must not have child routes. Please remove all child routes from route path \"${path}\".`\r\n      );\r\n      flattenRoutes(route.children, branches, routesMeta, path);\r\n    }\r\n    if (route.path == null && !route.index) {\r\n      return;\r\n    }\r\n    branches.push({\r\n      path,\r\n      score: computeScore(path, route.index),\r\n      routesMeta\r\n    });\r\n  };\r\n  routes.forEach((route, index) => {\r\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\r\n      flattenRoute(route, index);\r\n    } else {\r\n      for (let exploded of explodeOptionalSegments(route.path)) {\r\n        flattenRoute(route, index, exploded);\r\n      }\r\n    }\r\n  });\r\n  return branches;\r\n}\r\nfunction explodeOptionalSegments(path) {\r\n  let segments = path.split(\"/\");\r\n  if (segments.length === 0) return [];\r\n  let [first, ...rest] = segments;\r\n  let isOptional = first.endsWith(\"?\");\r\n  let required = first.replace(/\\?$/, \"\");\r\n  if (rest.length === 0) {\r\n    return isOptional ? [required, \"\"] : [required];\r\n  }\r\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\r\n  let result = [];\r\n  result.push(\r\n    ...restExploded.map(\r\n      (subpath) => subpath === \"\" ? required : [required, subpath].join(\"/\")\r\n    )\r\n  );\r\n  if (isOptional) {\r\n    result.push(...restExploded);\r\n  }\r\n  return result.map(\r\n    (exploded) => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\r\n  );\r\n}\r\nfunction rankRouteBranches(branches) {\r\n  branches.sort(\r\n    (a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(\r\n      a.routesMeta.map((meta) => meta.childrenIndex),\r\n      b.routesMeta.map((meta) => meta.childrenIndex)\r\n    )\r\n  );\r\n}\r\nvar paramRe = /^:[\\w-]+$/;\r\nvar dynamicSegmentValue = 3;\r\nvar indexRouteValue = 2;\r\nvar emptySegmentValue = 1;\r\nvar staticSegmentValue = 10;\r\nvar splatPenalty = -2;\r\nvar isSplat = (s) => s === \"*\";\r\nfunction computeScore(path, index) {\r\n  let segments = path.split(\"/\");\r\n  let initialScore = segments.length;\r\n  if (segments.some(isSplat)) {\r\n    initialScore += splatPenalty;\r\n  }\r\n  if (index) {\r\n    initialScore += indexRouteValue;\r\n  }\r\n  return segments.filter((s) => !isSplat(s)).reduce(\r\n    (score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue),\r\n    initialScore\r\n  );\r\n}\r\nfunction compareIndexes(a, b) {\r\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\r\n  return siblings ? (\r\n    // If two routes are siblings, we should try to match the earlier sibling\r\n    // first. This allows people to have fine-grained control over the matching\r\n    // behavior by simply putting routes with identical paths in the order they\r\n    // want them tried.\r\n    a[a.length - 1] - b[b.length - 1]\r\n  ) : (\r\n    // Otherwise, it doesn't really make sense to rank non-siblings by index,\r\n    // so they sort equally.\r\n    0\r\n  );\r\n}\r\nfunction matchRouteBranch(branch, pathname, allowPartial = false) {\r\n  let { routesMeta } = branch;\r\n  let matchedParams = {};\r\n  let matchedPathname = \"/\";\r\n  let matches = [];\r\n  for (let i = 0; i < routesMeta.length; ++i) {\r\n    let meta = routesMeta[i];\r\n    let end = i === routesMeta.length - 1;\r\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\r\n    let match = matchPath(\r\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\r\n      remainingPathname\r\n    );\r\n    let route = meta.route;\r\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\r\n      match = matchPath(\r\n        {\r\n          path: meta.relativePath,\r\n          caseSensitive: meta.caseSensitive,\r\n          end: false\r\n        },\r\n        remainingPathname\r\n      );\r\n    }\r\n    if (!match) {\r\n      return null;\r\n    }\r\n    Object.assign(matchedParams, match.params);\r\n    matches.push({\r\n      // TODO: Can this as be avoided?\r\n      params: matchedParams,\r\n      pathname: joinPaths([matchedPathname, match.pathname]),\r\n      pathnameBase: normalizePathname(\r\n        joinPaths([matchedPathname, match.pathnameBase])\r\n      ),\r\n      route\r\n    });\r\n    if (match.pathnameBase !== \"/\") {\r\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\r\n    }\r\n  }\r\n  return matches;\r\n}\r\nfunction generatePath(originalPath, params = {}) {\r\n  let path = originalPath;\r\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\r\n    warning(\r\n      false,\r\n      `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\r\n    );\r\n    path = path.replace(/\\*$/, \"/*\");\r\n  }\r\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\r\n  const stringify = (p) => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\r\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\r\n    const isLastSegment = index === array.length - 1;\r\n    if (isLastSegment && segment === \"*\") {\r\n      const star = \"*\";\r\n      return stringify(params[star]);\r\n    }\r\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\r\n    if (keyMatch) {\r\n      const [, key, optional] = keyMatch;\r\n      let param = params[key];\r\n      invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\r\n      return stringify(param);\r\n    }\r\n    return segment.replace(/\\?$/g, \"\");\r\n  }).filter((segment) => !!segment);\r\n  return prefix + segments.join(\"/\");\r\n}\r\nfunction matchPath(pattern, pathname) {\r\n  if (typeof pattern === \"string\") {\r\n    pattern = { path: pattern, caseSensitive: false, end: true };\r\n  }\r\n  let [matcher, compiledParams] = compilePath(\r\n    pattern.path,\r\n    pattern.caseSensitive,\r\n    pattern.end\r\n  );\r\n  let match = pathname.match(matcher);\r\n  if (!match) return null;\r\n  let matchedPathname = match[0];\r\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\r\n  let captureGroups = match.slice(1);\r\n  let params = compiledParams.reduce(\r\n    (memo2, { paramName, isOptional }, index) => {\r\n      if (paramName === \"*\") {\r\n        let splatValue = captureGroups[index] || \"\";\r\n        pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\r\n      }\r\n      const value = captureGroups[index];\r\n      if (isOptional && !value) {\r\n        memo2[paramName] = void 0;\r\n      } else {\r\n        memo2[paramName] = (value || \"\").replace(/%2F/g, \"/\");\r\n      }\r\n      return memo2;\r\n    },\r\n    {}\r\n  );\r\n  return {\r\n    params,\r\n    pathname: matchedPathname,\r\n    pathnameBase,\r\n    pattern\r\n  };\r\n}\r\nfunction compilePath(path, caseSensitive = false, end = true) {\r\n  warning(\r\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\r\n    `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\r\n  );\r\n  let params = [];\r\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\").replace(/^\\/*/, \"/\").replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\").replace(\r\n    /\\/:([\\w-]+)(\\?)?/g,\r\n    (_, paramName, isOptional) => {\r\n      params.push({ paramName, isOptional: isOptional != null });\r\n      return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\r\n    }\r\n  );\r\n  if (path.endsWith(\"*\")) {\r\n    params.push({ paramName: \"*\" });\r\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" : \"(?:\\\\/(.+)|\\\\/*)$\";\r\n  } else if (end) {\r\n    regexpSource += \"\\\\/*$\";\r\n  } else if (path !== \"\" && path !== \"/\") {\r\n    regexpSource += \"(?:(?=\\\\/|$))\";\r\n  } else {\r\n  }\r\n  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : \"i\");\r\n  return [matcher, params];\r\n}\r\nfunction decodePath(value) {\r\n  try {\r\n    return value.split(\"/\").map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\r\n  } catch (error) {\r\n    warning(\r\n      false,\r\n      `The URL path \"${value}\" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${error}).`\r\n    );\r\n    return value;\r\n  }\r\n}\r\nfunction stripBasename(pathname, basename) {\r\n  if (basename === \"/\") return pathname;\r\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\r\n    return null;\r\n  }\r\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\r\n  let nextChar = pathname.charAt(startIndex);\r\n  if (nextChar && nextChar !== \"/\") {\r\n    return null;\r\n  }\r\n  return pathname.slice(startIndex) || \"/\";\r\n}\r\nfunction resolvePath(to, fromPathname = \"/\") {\r\n  let {\r\n    pathname: toPathname,\r\n    search = \"\",\r\n    hash = \"\"\r\n  } = typeof to === \"string\" ? parsePath(to) : to;\r\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\r\n  return {\r\n    pathname,\r\n    search: normalizeSearch(search),\r\n    hash: normalizeHash(hash)\r\n  };\r\n}\r\nfunction resolvePathname(relativePath, fromPathname) {\r\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\r\n  let relativeSegments = relativePath.split(\"/\");\r\n  relativeSegments.forEach((segment) => {\r\n    if (segment === \"..\") {\r\n      if (segments.length > 1) segments.pop();\r\n    } else if (segment !== \".\") {\r\n      segments.push(segment);\r\n    }\r\n  });\r\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\r\n}\r\nfunction getInvalidPathError(char, field, dest, path) {\r\n  return `Cannot include a '${char}' character in a manually specified \\`to.${field}\\` field [${JSON.stringify(\r\n    path\r\n  )}].  Please separate it out to the \\`to.${dest}\\` field. Alternatively you may provide the full path as a string in <Link to=\"...\"> and the router will parse it for you.`;\r\n}\r\nfunction getPathContributingMatches(matches) {\r\n  return matches.filter(\r\n    (match, index) => index === 0 || match.route.path && match.route.path.length > 0\r\n  );\r\n}\r\nfunction getResolveToMatches(matches) {\r\n  let pathMatches = getPathContributingMatches(matches);\r\n  return pathMatches.map(\r\n    (match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\r\n  );\r\n}\r\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative = false) {\r\n  let to;\r\n  if (typeof toArg === \"string\") {\r\n    to = parsePath(toArg);\r\n  } else {\r\n    to = { ...toArg };\r\n    invariant(\r\n      !to.pathname || !to.pathname.includes(\"?\"),\r\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\r\n    );\r\n    invariant(\r\n      !to.pathname || !to.pathname.includes(\"#\"),\r\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\r\n    );\r\n    invariant(\r\n      !to.search || !to.search.includes(\"#\"),\r\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\r\n    );\r\n  }\r\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\r\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\r\n  let from;\r\n  if (toPathname == null) {\r\n    from = locationPathname;\r\n  } else {\r\n    let routePathnameIndex = routePathnames.length - 1;\r\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\r\n      let toSegments = toPathname.split(\"/\");\r\n      while (toSegments[0] === \"..\") {\r\n        toSegments.shift();\r\n        routePathnameIndex -= 1;\r\n      }\r\n      to.pathname = toSegments.join(\"/\");\r\n    }\r\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\r\n  }\r\n  let path = resolvePath(to, from);\r\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\r\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\r\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\r\n    path.pathname += \"/\";\r\n  }\r\n  return path;\r\n}\r\nvar joinPaths = (paths) => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\r\nvar normalizePathname = (pathname) => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\r\nvar normalizeSearch = (search) => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\r\nvar normalizeHash = (hash) => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\r\nvar DataWithResponseInit = class {\r\n  constructor(data2, init) {\r\n    this.type = \"DataWithResponseInit\";\r\n    this.data = data2;\r\n    this.init = init || null;\r\n  }\r\n};\r\nfunction data(data2, init) {\r\n  return new DataWithResponseInit(\r\n    data2,\r\n    typeof init === \"number\" ? { status: init } : init\r\n  );\r\n}\r\nvar redirect = (url, init = 302) => {\r\n  let responseInit = init;\r\n  if (typeof responseInit === \"number\") {\r\n    responseInit = { status: responseInit };\r\n  } else if (typeof responseInit.status === \"undefined\") {\r\n    responseInit.status = 302;\r\n  }\r\n  let headers = new Headers(responseInit.headers);\r\n  headers.set(\"Location\", url);\r\n  return new Response(null, { ...responseInit, headers });\r\n};\r\nvar redirectDocument = (url, init) => {\r\n  let response = redirect(url, init);\r\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\r\n  return response;\r\n};\r\nvar replace = (url, init) => {\r\n  let response = redirect(url, init);\r\n  response.headers.set(\"X-Remix-Replace\", \"true\");\r\n  return response;\r\n};\r\nvar ErrorResponseImpl = class {\r\n  constructor(status, statusText, data2, internal = false) {\r\n    this.status = status;\r\n    this.statusText = statusText || \"\";\r\n    this.internal = internal;\r\n    if (data2 instanceof Error) {\r\n      this.data = data2.toString();\r\n      this.error = data2;\r\n    } else {\r\n      this.data = data2;\r\n    }\r\n  }\r\n};\r\nfunction isRouteErrorResponse(error) {\r\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\r\n}\r\n\r\n// lib/router/router.ts\r\nvar validMutationMethodsArr = [\r\n  \"POST\",\r\n  \"PUT\",\r\n  \"PATCH\",\r\n  \"DELETE\"\r\n];\r\nvar validMutationMethods = new Set(\r\n  validMutationMethodsArr\r\n);\r\nvar validRequestMethodsArr = [\r\n  \"GET\",\r\n  ...validMutationMethodsArr\r\n];\r\nvar validRequestMethods = new Set(validRequestMethodsArr);\r\nvar redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);\r\nvar redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([307, 308]);\r\nvar IDLE_NAVIGATION = {\r\n  state: \"idle\",\r\n  location: void 0,\r\n  formMethod: void 0,\r\n  formAction: void 0,\r\n  formEncType: void 0,\r\n  formData: void 0,\r\n  json: void 0,\r\n  text: void 0\r\n};\r\nvar IDLE_FETCHER = {\r\n  state: \"idle\",\r\n  data: void 0,\r\n  formMethod: void 0,\r\n  formAction: void 0,\r\n  formEncType: void 0,\r\n  formData: void 0,\r\n  json: void 0,\r\n  text: void 0\r\n};\r\nvar IDLE_BLOCKER = {\r\n  state: \"unblocked\",\r\n  proceed: void 0,\r\n  reset: void 0,\r\n  location: void 0\r\n};\r\nvar ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\r\nvar defaultMapRouteProperties = (route) => ({\r\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\r\n});\r\nvar TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\r\nvar ResetLoaderDataSymbol = Symbol(\"ResetLoaderData\");\r\nfunction createRouter(init) {\r\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : void 0;\r\n  const isBrowser2 = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\r\n  invariant(\r\n    init.routes.length > 0,\r\n    \"You must provide a non-empty routes array to createRouter\"\r\n  );\r\n  let mapRouteProperties2 = init.mapRouteProperties || defaultMapRouteProperties;\r\n  let manifest = {};\r\n  let dataRoutes = convertRoutesToDataRoutes(\r\n    init.routes,\r\n    mapRouteProperties2,\r\n    void 0,\r\n    manifest\r\n  );\r\n  let inFlightDataRoutes;\r\n  let basename = init.basename || \"/\";\r\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategy;\r\n  let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;\r\n  let future = {\r\n    ...init.future\r\n  };\r\n  let unlistenHistory = null;\r\n  let subscribers = /* @__PURE__ */ new Set();\r\n  let savedScrollPositions2 = null;\r\n  let getScrollRestorationKey2 = null;\r\n  let getScrollPosition = null;\r\n  let initialScrollRestored = init.hydrationData != null;\r\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\r\n  let initialMatchesIsFOW = false;\r\n  let initialErrors = null;\r\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\r\n    let error = getInternalRouterError(404, {\r\n      pathname: init.history.location.pathname\r\n    });\r\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\r\n    initialMatches = matches;\r\n    initialErrors = { [route.id]: error };\r\n  }\r\n  if (initialMatches && !init.hydrationData) {\r\n    let fogOfWar = checkFogOfWar(\r\n      initialMatches,\r\n      dataRoutes,\r\n      init.history.location.pathname\r\n    );\r\n    if (fogOfWar.active) {\r\n      initialMatches = null;\r\n    }\r\n  }\r\n  let initialized;\r\n  if (!initialMatches) {\r\n    initialized = false;\r\n    initialMatches = [];\r\n    let fogOfWar = checkFogOfWar(\r\n      null,\r\n      dataRoutes,\r\n      init.history.location.pathname\r\n    );\r\n    if (fogOfWar.active && fogOfWar.matches) {\r\n      initialMatchesIsFOW = true;\r\n      initialMatches = fogOfWar.matches;\r\n    }\r\n  } else if (initialMatches.some((m) => m.route.lazy)) {\r\n    initialized = false;\r\n  } else if (!initialMatches.some((m) => m.route.loader)) {\r\n    initialized = true;\r\n  } else {\r\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\r\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\r\n    if (errors) {\r\n      let idx = initialMatches.findIndex(\r\n        (m) => errors[m.route.id] !== void 0\r\n      );\r\n      initialized = initialMatches.slice(0, idx + 1).every((m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\r\n    } else {\r\n      initialized = initialMatches.every(\r\n        (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\r\n      );\r\n    }\r\n  }\r\n  let router;\r\n  let state = {\r\n    historyAction: init.history.action,\r\n    location: init.history.location,\r\n    matches: initialMatches,\r\n    initialized,\r\n    navigation: IDLE_NAVIGATION,\r\n    // Don't restore on initial updateState() if we were SSR'd\r\n    restoreScrollPosition: init.hydrationData != null ? false : null,\r\n    preventScrollReset: false,\r\n    revalidation: \"idle\",\r\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\r\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\r\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\r\n    fetchers: /* @__PURE__ */ new Map(),\r\n    blockers: /* @__PURE__ */ new Map()\r\n  };\r\n  let pendingAction = \"POP\" /* Pop */;\r\n  let pendingPreventScrollReset = false;\r\n  let pendingNavigationController;\r\n  let pendingViewTransitionEnabled = false;\r\n  let appliedViewTransitions = /* @__PURE__ */ new Map();\r\n  let removePageHideEventListener = null;\r\n  let isUninterruptedRevalidation = false;\r\n  let isRevalidationRequired = false;\r\n  let cancelledFetcherLoads = /* @__PURE__ */ new Set();\r\n  let fetchControllers = /* @__PURE__ */ new Map();\r\n  let incrementingLoadId = 0;\r\n  let pendingNavigationLoadId = -1;\r\n  let fetchReloadIds = /* @__PURE__ */ new Map();\r\n  let fetchRedirectIds = /* @__PURE__ */ new Set();\r\n  let fetchLoadMatches = /* @__PURE__ */ new Map();\r\n  let activeFetchers = /* @__PURE__ */ new Map();\r\n  let fetchersQueuedForDeletion = /* @__PURE__ */ new Set();\r\n  let blockerFunctions = /* @__PURE__ */ new Map();\r\n  let unblockBlockerHistoryUpdate = void 0;\r\n  let pendingRevalidationDfd = null;\r\n  function initialize() {\r\n    unlistenHistory = init.history.listen(\r\n      ({ action: historyAction, location, delta }) => {\r\n        if (unblockBlockerHistoryUpdate) {\r\n          unblockBlockerHistoryUpdate();\r\n          unblockBlockerHistoryUpdate = void 0;\r\n          return;\r\n        }\r\n        warning(\r\n          blockerFunctions.size === 0 || delta != null,\r\n          \"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.\"\r\n        );\r\n        let blockerKey = shouldBlockNavigation({\r\n          currentLocation: state.location,\r\n          nextLocation: location,\r\n          historyAction\r\n        });\r\n        if (blockerKey && delta != null) {\r\n          let nextHistoryUpdatePromise = new Promise((resolve) => {\r\n            unblockBlockerHistoryUpdate = resolve;\r\n          });\r\n          init.history.go(delta * -1);\r\n          updateBlocker(blockerKey, {\r\n            state: \"blocked\",\r\n            location,\r\n            proceed() {\r\n              updateBlocker(blockerKey, {\r\n                state: \"proceeding\",\r\n                proceed: void 0,\r\n                reset: void 0,\r\n                location\r\n              });\r\n              nextHistoryUpdatePromise.then(() => init.history.go(delta));\r\n            },\r\n            reset() {\r\n              let blockers = new Map(state.blockers);\r\n              blockers.set(blockerKey, IDLE_BLOCKER);\r\n              updateState({ blockers });\r\n            }\r\n          });\r\n          return;\r\n        }\r\n        return startNavigation(historyAction, location);\r\n      }\r\n    );\r\n    if (isBrowser2) {\r\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\r\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\r\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\r\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\r\n    }\r\n    if (!state.initialized) {\r\n      startNavigation(\"POP\" /* Pop */, state.location, {\r\n        initialHydration: true\r\n      });\r\n    }\r\n    return router;\r\n  }\r\n  function dispose() {\r\n    if (unlistenHistory) {\r\n      unlistenHistory();\r\n    }\r\n    if (removePageHideEventListener) {\r\n      removePageHideEventListener();\r\n    }\r\n    subscribers.clear();\r\n    pendingNavigationController && pendingNavigationController.abort();\r\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\r\n    state.blockers.forEach((_, key) => deleteBlocker(key));\r\n  }\r\n  function subscribe(fn) {\r\n    subscribers.add(fn);\r\n    return () => subscribers.delete(fn);\r\n  }\r\n  function updateState(newState, opts = {}) {\r\n    state = {\r\n      ...state,\r\n      ...newState\r\n    };\r\n    let unmountedFetchers = [];\r\n    let mountedFetchers = [];\r\n    state.fetchers.forEach((fetcher, key) => {\r\n      if (fetcher.state === \"idle\") {\r\n        if (fetchersQueuedForDeletion.has(key)) {\r\n          unmountedFetchers.push(key);\r\n        } else {\r\n          mountedFetchers.push(key);\r\n        }\r\n      }\r\n    });\r\n    fetchersQueuedForDeletion.forEach((key) => {\r\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\r\n        unmountedFetchers.push(key);\r\n      }\r\n    });\r\n    [...subscribers].forEach(\r\n      (subscriber) => subscriber(state, {\r\n        deletedFetchers: unmountedFetchers,\r\n        viewTransitionOpts: opts.viewTransitionOpts,\r\n        flushSync: opts.flushSync === true\r\n      })\r\n    );\r\n    unmountedFetchers.forEach((key) => deleteFetcher(key));\r\n    mountedFetchers.forEach((key) => state.fetchers.delete(key));\r\n  }\r\n  function completeNavigation(location, newState, { flushSync } = {}) {\r\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && location.state?._isRedirect !== true;\r\n    let actionData;\r\n    if (newState.actionData) {\r\n      if (Object.keys(newState.actionData).length > 0) {\r\n        actionData = newState.actionData;\r\n      } else {\r\n        actionData = null;\r\n      }\r\n    } else if (isActionReload) {\r\n      actionData = state.actionData;\r\n    } else {\r\n      actionData = null;\r\n    }\r\n    let loaderData = newState.loaderData ? mergeLoaderData(\r\n      state.loaderData,\r\n      newState.loaderData,\r\n      newState.matches || [],\r\n      newState.errors\r\n    ) : state.loaderData;\r\n    let blockers = state.blockers;\r\n    if (blockers.size > 0) {\r\n      blockers = new Map(blockers);\r\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\r\n    }\r\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && location.state?._isRedirect !== true;\r\n    if (inFlightDataRoutes) {\r\n      dataRoutes = inFlightDataRoutes;\r\n      inFlightDataRoutes = void 0;\r\n    }\r\n    if (isUninterruptedRevalidation) {\r\n    } else if (pendingAction === \"POP\" /* Pop */) {\r\n    } else if (pendingAction === \"PUSH\" /* Push */) {\r\n      init.history.push(location, location.state);\r\n    } else if (pendingAction === \"REPLACE\" /* Replace */) {\r\n      init.history.replace(location, location.state);\r\n    }\r\n    let viewTransitionOpts;\r\n    if (pendingAction === \"POP\" /* Pop */) {\r\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\r\n      if (priorPaths && priorPaths.has(location.pathname)) {\r\n        viewTransitionOpts = {\r\n          currentLocation: state.location,\r\n          nextLocation: location\r\n        };\r\n      } else if (appliedViewTransitions.has(location.pathname)) {\r\n        viewTransitionOpts = {\r\n          currentLocation: location,\r\n          nextLocation: state.location\r\n        };\r\n      }\r\n    } else if (pendingViewTransitionEnabled) {\r\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\r\n      if (toPaths) {\r\n        toPaths.add(location.pathname);\r\n      } else {\r\n        toPaths = /* @__PURE__ */ new Set([location.pathname]);\r\n        appliedViewTransitions.set(state.location.pathname, toPaths);\r\n      }\r\n      viewTransitionOpts = {\r\n        currentLocation: state.location,\r\n        nextLocation: location\r\n      };\r\n    }\r\n    updateState(\r\n      {\r\n        ...newState,\r\n        // matches, errors, fetchers go through as-is\r\n        actionData,\r\n        loaderData,\r\n        historyAction: pendingAction,\r\n        location,\r\n        initialized: true,\r\n        navigation: IDLE_NAVIGATION,\r\n        revalidation: \"idle\",\r\n        restoreScrollPosition: getSavedScrollPosition(\r\n          location,\r\n          newState.matches || state.matches\r\n        ),\r\n        preventScrollReset,\r\n        blockers\r\n      },\r\n      {\r\n        viewTransitionOpts,\r\n        flushSync: flushSync === true\r\n      }\r\n    );\r\n    pendingAction = \"POP\" /* Pop */;\r\n    pendingPreventScrollReset = false;\r\n    pendingViewTransitionEnabled = false;\r\n    isUninterruptedRevalidation = false;\r\n    isRevalidationRequired = false;\r\n    pendingRevalidationDfd?.resolve();\r\n    pendingRevalidationDfd = null;\r\n  }\r\n  async function navigate(to, opts) {\r\n    if (typeof to === \"number\") {\r\n      init.history.go(to);\r\n      return;\r\n    }\r\n    let normalizedPath = normalizeTo(\r\n      state.location,\r\n      state.matches,\r\n      basename,\r\n      to,\r\n      opts?.fromRouteId,\r\n      opts?.relative\r\n    );\r\n    let { path, submission, error } = normalizeNavigateOptions(\r\n      false,\r\n      normalizedPath,\r\n      opts\r\n    );\r\n    let currentLocation = state.location;\r\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\r\n    nextLocation = {\r\n      ...nextLocation,\r\n      ...init.history.encodeLocation(nextLocation)\r\n    };\r\n    let userReplace = opts && opts.replace != null ? opts.replace : void 0;\r\n    let historyAction = \"PUSH\" /* Push */;\r\n    if (userReplace === true) {\r\n      historyAction = \"REPLACE\" /* Replace */;\r\n    } else if (userReplace === false) {\r\n    } else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\r\n      historyAction = \"REPLACE\" /* Replace */;\r\n    }\r\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : void 0;\r\n    let flushSync = (opts && opts.flushSync) === true;\r\n    let blockerKey = shouldBlockNavigation({\r\n      currentLocation,\r\n      nextLocation,\r\n      historyAction\r\n    });\r\n    if (blockerKey) {\r\n      updateBlocker(blockerKey, {\r\n        state: \"blocked\",\r\n        location: nextLocation,\r\n        proceed() {\r\n          updateBlocker(blockerKey, {\r\n            state: \"proceeding\",\r\n            proceed: void 0,\r\n            reset: void 0,\r\n            location: nextLocation\r\n          });\r\n          navigate(to, opts);\r\n        },\r\n        reset() {\r\n          let blockers = new Map(state.blockers);\r\n          blockers.set(blockerKey, IDLE_BLOCKER);\r\n          updateState({ blockers });\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    await startNavigation(historyAction, nextLocation, {\r\n      submission,\r\n      // Send through the formData serialization error if we have one so we can\r\n      // render at the right error boundary after we match routes\r\n      pendingError: error,\r\n      preventScrollReset,\r\n      replace: opts && opts.replace,\r\n      enableViewTransition: opts && opts.viewTransition,\r\n      flushSync\r\n    });\r\n  }\r\n  function revalidate() {\r\n    if (!pendingRevalidationDfd) {\r\n      pendingRevalidationDfd = createDeferred();\r\n    }\r\n    interruptActiveLoads();\r\n    updateState({ revalidation: \"loading\" });\r\n    let promise = pendingRevalidationDfd.promise;\r\n    if (state.navigation.state === \"submitting\") {\r\n      return promise;\r\n    }\r\n    if (state.navigation.state === \"idle\") {\r\n      startNavigation(state.historyAction, state.location, {\r\n        startUninterruptedRevalidation: true\r\n      });\r\n      return promise;\r\n    }\r\n    startNavigation(\r\n      pendingAction || state.historyAction,\r\n      state.navigation.location,\r\n      {\r\n        overrideNavigation: state.navigation,\r\n        // Proxy through any rending view transition\r\n        enableViewTransition: pendingViewTransitionEnabled === true\r\n      }\r\n    );\r\n    return promise;\r\n  }\r\n  async function startNavigation(historyAction, location, opts) {\r\n    pendingNavigationController && pendingNavigationController.abort();\r\n    pendingNavigationController = null;\r\n    pendingAction = historyAction;\r\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\r\n    saveScrollPosition(state.location, state.matches);\r\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\r\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    let loadingNavigation = opts && opts.overrideNavigation;\r\n    let matches = opts?.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ? (\r\n      // `matchRoutes()` has already been called if we're in here via `router.initialize()`\r\n      state.matches\r\n    ) : matchRoutes(routesToUse, location, basename);\r\n    let flushSync = (opts && opts.flushSync) === true;\r\n    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\r\n      completeNavigation(location, { matches }, { flushSync });\r\n      return;\r\n    }\r\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\r\n    if (fogOfWar.active && fogOfWar.matches) {\r\n      matches = fogOfWar.matches;\r\n    }\r\n    if (!matches) {\r\n      let { error, notFoundMatches, route } = handleNavigational404(\r\n        location.pathname\r\n      );\r\n      completeNavigation(\r\n        location,\r\n        {\r\n          matches: notFoundMatches,\r\n          loaderData: {},\r\n          errors: {\r\n            [route.id]: error\r\n          }\r\n        },\r\n        { flushSync }\r\n      );\r\n      return;\r\n    }\r\n    pendingNavigationController = new AbortController();\r\n    let request = createClientSideRequest(\r\n      init.history,\r\n      location,\r\n      pendingNavigationController.signal,\r\n      opts && opts.submission\r\n    );\r\n    let pendingActionResult;\r\n    if (opts && opts.pendingError) {\r\n      pendingActionResult = [\r\n        findNearestBoundary(matches).route.id,\r\n        { type: \"error\" /* error */, error: opts.pendingError }\r\n      ];\r\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\r\n      let actionResult = await handleAction(\r\n        request,\r\n        location,\r\n        opts.submission,\r\n        matches,\r\n        fogOfWar.active,\r\n        { replace: opts.replace, flushSync }\r\n      );\r\n      if (actionResult.shortCircuited) {\r\n        return;\r\n      }\r\n      if (actionResult.pendingActionResult) {\r\n        let [routeId, result] = actionResult.pendingActionResult;\r\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\r\n          pendingNavigationController = null;\r\n          completeNavigation(location, {\r\n            matches: actionResult.matches,\r\n            loaderData: {},\r\n            errors: {\r\n              [routeId]: result.error\r\n            }\r\n          });\r\n          return;\r\n        }\r\n      }\r\n      matches = actionResult.matches || matches;\r\n      pendingActionResult = actionResult.pendingActionResult;\r\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\r\n      flushSync = false;\r\n      fogOfWar.active = false;\r\n      request = createClientSideRequest(\r\n        init.history,\r\n        request.url,\r\n        request.signal\r\n      );\r\n    }\r\n    let {\r\n      shortCircuited,\r\n      matches: updatedMatches,\r\n      loaderData,\r\n      errors\r\n    } = await handleLoaders(\r\n      request,\r\n      location,\r\n      matches,\r\n      fogOfWar.active,\r\n      loadingNavigation,\r\n      opts && opts.submission,\r\n      opts && opts.fetcherSubmission,\r\n      opts && opts.replace,\r\n      opts && opts.initialHydration === true,\r\n      flushSync,\r\n      pendingActionResult\r\n    );\r\n    if (shortCircuited) {\r\n      return;\r\n    }\r\n    pendingNavigationController = null;\r\n    completeNavigation(location, {\r\n      matches: updatedMatches || matches,\r\n      ...getActionDataForCommit(pendingActionResult),\r\n      loaderData,\r\n      errors\r\n    });\r\n  }\r\n  async function handleAction(request, location, submission, matches, isFogOfWar, opts = {}) {\r\n    interruptActiveLoads();\r\n    let navigation = getSubmittingNavigation(location, submission);\r\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\r\n    if (isFogOfWar) {\r\n      let discoverResult = await discoverRoutes(\r\n        matches,\r\n        location.pathname,\r\n        request.signal\r\n      );\r\n      if (discoverResult.type === \"aborted\") {\r\n        return { shortCircuited: true };\r\n      } else if (discoverResult.type === \"error\") {\r\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\r\n        return {\r\n          matches: discoverResult.partialMatches,\r\n          pendingActionResult: [\r\n            boundaryId,\r\n            {\r\n              type: \"error\" /* error */,\r\n              error: discoverResult.error\r\n            }\r\n          ]\r\n        };\r\n      } else if (!discoverResult.matches) {\r\n        let { notFoundMatches, error, route } = handleNavigational404(\r\n          location.pathname\r\n        );\r\n        return {\r\n          matches: notFoundMatches,\r\n          pendingActionResult: [\r\n            route.id,\r\n            {\r\n              type: \"error\" /* error */,\r\n              error\r\n            }\r\n          ]\r\n        };\r\n      } else {\r\n        matches = discoverResult.matches;\r\n      }\r\n    }\r\n    let result;\r\n    let actionMatch = getTargetMatch(matches, location);\r\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\r\n      result = {\r\n        type: \"error\" /* error */,\r\n        error: getInternalRouterError(405, {\r\n          method: request.method,\r\n          pathname: location.pathname,\r\n          routeId: actionMatch.route.id\r\n        })\r\n      };\r\n    } else {\r\n      let results = await callDataStrategy(\r\n        \"action\",\r\n        state,\r\n        request,\r\n        [actionMatch],\r\n        matches,\r\n        null\r\n      );\r\n      result = results[actionMatch.route.id];\r\n      if (request.signal.aborted) {\r\n        return { shortCircuited: true };\r\n      }\r\n    }\r\n    if (isRedirectResult(result)) {\r\n      let replace2;\r\n      if (opts && opts.replace != null) {\r\n        replace2 = opts.replace;\r\n      } else {\r\n        let location2 = normalizeRedirectLocation(\r\n          result.response.headers.get(\"Location\"),\r\n          new URL(request.url),\r\n          basename\r\n        );\r\n        replace2 = location2 === state.location.pathname + state.location.search;\r\n      }\r\n      await startRedirectNavigation(request, result, true, {\r\n        submission,\r\n        replace: replace2\r\n      });\r\n      return { shortCircuited: true };\r\n    }\r\n    if (isErrorResult(result)) {\r\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\r\n      if ((opts && opts.replace) !== true) {\r\n        pendingAction = \"PUSH\" /* Push */;\r\n      }\r\n      return {\r\n        matches,\r\n        pendingActionResult: [boundaryMatch.route.id, result]\r\n      };\r\n    }\r\n    return {\r\n      matches,\r\n      pendingActionResult: [actionMatch.route.id, result]\r\n    };\r\n  }\r\n  async function handleLoaders(request, location, matches, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace2, initialHydration, flushSync, pendingActionResult) {\r\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\r\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\r\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && !initialHydration;\r\n    if (isFogOfWar) {\r\n      if (shouldUpdateNavigationState) {\r\n        let actionData = getUpdatedActionData(pendingActionResult);\r\n        updateState(\r\n          {\r\n            navigation: loadingNavigation,\r\n            ...actionData !== void 0 ? { actionData } : {}\r\n          },\r\n          {\r\n            flushSync\r\n          }\r\n        );\r\n      }\r\n      let discoverResult = await discoverRoutes(\r\n        matches,\r\n        location.pathname,\r\n        request.signal\r\n      );\r\n      if (discoverResult.type === \"aborted\") {\r\n        return { shortCircuited: true };\r\n      } else if (discoverResult.type === \"error\") {\r\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\r\n        return {\r\n          matches: discoverResult.partialMatches,\r\n          loaderData: {},\r\n          errors: {\r\n            [boundaryId]: discoverResult.error\r\n          }\r\n        };\r\n      } else if (!discoverResult.matches) {\r\n        let { error, notFoundMatches, route } = handleNavigational404(\r\n          location.pathname\r\n        );\r\n        return {\r\n          matches: notFoundMatches,\r\n          loaderData: {},\r\n          errors: {\r\n            [route.id]: error\r\n          }\r\n        };\r\n      } else {\r\n        matches = discoverResult.matches;\r\n      }\r\n    }\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\r\n      init.history,\r\n      state,\r\n      matches,\r\n      activeSubmission,\r\n      location,\r\n      initialHydration === true,\r\n      isRevalidationRequired,\r\n      cancelledFetcherLoads,\r\n      fetchersQueuedForDeletion,\r\n      fetchLoadMatches,\r\n      fetchRedirectIds,\r\n      routesToUse,\r\n      basename,\r\n      pendingActionResult\r\n    );\r\n    pendingNavigationLoadId = ++incrementingLoadId;\r\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\r\n      let updatedFetchers2 = markFetchRedirectsDone();\r\n      completeNavigation(\r\n        location,\r\n        {\r\n          matches,\r\n          loaderData: {},\r\n          // Commit pending error if we're short circuiting\r\n          errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? { [pendingActionResult[0]]: pendingActionResult[1].error } : null,\r\n          ...getActionDataForCommit(pendingActionResult),\r\n          ...updatedFetchers2 ? { fetchers: new Map(state.fetchers) } : {}\r\n        },\r\n        { flushSync }\r\n      );\r\n      return { shortCircuited: true };\r\n    }\r\n    if (shouldUpdateNavigationState) {\r\n      let updates = {};\r\n      if (!isFogOfWar) {\r\n        updates.navigation = loadingNavigation;\r\n        let actionData = getUpdatedActionData(pendingActionResult);\r\n        if (actionData !== void 0) {\r\n          updates.actionData = actionData;\r\n        }\r\n      }\r\n      if (revalidatingFetchers.length > 0) {\r\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\r\n      }\r\n      updateState(updates, { flushSync });\r\n    }\r\n    revalidatingFetchers.forEach((rf) => {\r\n      abortFetcher(rf.key);\r\n      if (rf.controller) {\r\n        fetchControllers.set(rf.key, rf.controller);\r\n      }\r\n    });\r\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((f) => abortFetcher(f.key));\r\n    if (pendingNavigationController) {\r\n      pendingNavigationController.signal.addEventListener(\r\n        \"abort\",\r\n        abortPendingFetchRevalidations\r\n      );\r\n    }\r\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\r\n      state,\r\n      matches,\r\n      matchesToLoad,\r\n      revalidatingFetchers,\r\n      request\r\n    );\r\n    if (request.signal.aborted) {\r\n      return { shortCircuited: true };\r\n    }\r\n    if (pendingNavigationController) {\r\n      pendingNavigationController.signal.removeEventListener(\r\n        \"abort\",\r\n        abortPendingFetchRevalidations\r\n      );\r\n    }\r\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\r\n    let redirect2 = findRedirect(loaderResults);\r\n    if (redirect2) {\r\n      await startRedirectNavigation(request, redirect2.result, true, {\r\n        replace: replace2\r\n      });\r\n      return { shortCircuited: true };\r\n    }\r\n    redirect2 = findRedirect(fetcherResults);\r\n    if (redirect2) {\r\n      fetchRedirectIds.add(redirect2.key);\r\n      await startRedirectNavigation(request, redirect2.result, true, {\r\n        replace: replace2\r\n      });\r\n      return { shortCircuited: true };\r\n    }\r\n    let { loaderData, errors } = processLoaderData(\r\n      state,\r\n      matches,\r\n      loaderResults,\r\n      pendingActionResult,\r\n      revalidatingFetchers,\r\n      fetcherResults\r\n    );\r\n    if (initialHydration && state.errors) {\r\n      errors = { ...state.errors, ...errors };\r\n    }\r\n    let updatedFetchers = markFetchRedirectsDone();\r\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\r\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\r\n    return {\r\n      matches,\r\n      loaderData,\r\n      errors,\r\n      ...shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}\r\n    };\r\n  }\r\n  function getUpdatedActionData(pendingActionResult) {\r\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\r\n      return {\r\n        [pendingActionResult[0]]: pendingActionResult[1].data\r\n      };\r\n    } else if (state.actionData) {\r\n      if (Object.keys(state.actionData).length === 0) {\r\n        return null;\r\n      } else {\r\n        return state.actionData;\r\n      }\r\n    }\r\n  }\r\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\r\n    revalidatingFetchers.forEach((rf) => {\r\n      let fetcher = state.fetchers.get(rf.key);\r\n      let revalidatingFetcher = getLoadingFetcher(\r\n        void 0,\r\n        fetcher ? fetcher.data : void 0\r\n      );\r\n      state.fetchers.set(rf.key, revalidatingFetcher);\r\n    });\r\n    return new Map(state.fetchers);\r\n  }\r\n  async function fetch2(key, routeId, href2, opts) {\r\n    abortFetcher(key);\r\n    let flushSync = (opts && opts.flushSync) === true;\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    let normalizedPath = normalizeTo(\r\n      state.location,\r\n      state.matches,\r\n      basename,\r\n      href2,\r\n      routeId,\r\n      opts?.relative\r\n    );\r\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\r\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\r\n    if (fogOfWar.active && fogOfWar.matches) {\r\n      matches = fogOfWar.matches;\r\n    }\r\n    if (!matches) {\r\n      setFetcherError(\r\n        key,\r\n        routeId,\r\n        getInternalRouterError(404, { pathname: normalizedPath }),\r\n        { flushSync }\r\n      );\r\n      return;\r\n    }\r\n    let { path, submission, error } = normalizeNavigateOptions(\r\n      true,\r\n      normalizedPath,\r\n      opts\r\n    );\r\n    if (error) {\r\n      setFetcherError(key, routeId, error, { flushSync });\r\n      return;\r\n    }\r\n    let match = getTargetMatch(matches, path);\r\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\r\n    if (submission && isMutationMethod(submission.formMethod)) {\r\n      await handleFetcherAction(\r\n        key,\r\n        routeId,\r\n        path,\r\n        match,\r\n        matches,\r\n        fogOfWar.active,\r\n        flushSync,\r\n        preventScrollReset,\r\n        submission\r\n      );\r\n      return;\r\n    }\r\n    fetchLoadMatches.set(key, { routeId, path });\r\n    await handleFetcherLoader(\r\n      key,\r\n      routeId,\r\n      path,\r\n      match,\r\n      matches,\r\n      fogOfWar.active,\r\n      flushSync,\r\n      preventScrollReset,\r\n      submission\r\n    );\r\n  }\r\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, isFogOfWar, flushSync, preventScrollReset, submission) {\r\n    interruptActiveLoads();\r\n    fetchLoadMatches.delete(key);\r\n    function detectAndHandle405Error(m) {\r\n      if (!m.route.action && !m.route.lazy) {\r\n        let error = getInternalRouterError(405, {\r\n          method: submission.formMethod,\r\n          pathname: path,\r\n          routeId\r\n        });\r\n        setFetcherError(key, routeId, error, { flushSync });\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\r\n      return;\r\n    }\r\n    let existingFetcher = state.fetchers.get(key);\r\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\r\n      flushSync\r\n    });\r\n    let abortController = new AbortController();\r\n    let fetchRequest = createClientSideRequest(\r\n      init.history,\r\n      path,\r\n      abortController.signal,\r\n      submission\r\n    );\r\n    if (isFogOfWar) {\r\n      let discoverResult = await discoverRoutes(\r\n        requestMatches,\r\n        path,\r\n        fetchRequest.signal\r\n      );\r\n      if (discoverResult.type === \"aborted\") {\r\n        return;\r\n      } else if (discoverResult.type === \"error\") {\r\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\r\n        return;\r\n      } else if (!discoverResult.matches) {\r\n        setFetcherError(\r\n          key,\r\n          routeId,\r\n          getInternalRouterError(404, { pathname: path }),\r\n          { flushSync }\r\n        );\r\n        return;\r\n      } else {\r\n        requestMatches = discoverResult.matches;\r\n        match = getTargetMatch(requestMatches, path);\r\n        if (detectAndHandle405Error(match)) {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    fetchControllers.set(key, abortController);\r\n    let originatingLoadId = incrementingLoadId;\r\n    let actionResults = await callDataStrategy(\r\n      \"action\",\r\n      state,\r\n      fetchRequest,\r\n      [match],\r\n      requestMatches,\r\n      key\r\n    );\r\n    let actionResult = actionResults[match.route.id];\r\n    if (fetchRequest.signal.aborted) {\r\n      if (fetchControllers.get(key) === abortController) {\r\n        fetchControllers.delete(key);\r\n      }\r\n      return;\r\n    }\r\n    if (fetchersQueuedForDeletion.has(key)) {\r\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\r\n        updateFetcherState(key, getDoneFetcher(void 0));\r\n        return;\r\n      }\r\n    } else {\r\n      if (isRedirectResult(actionResult)) {\r\n        fetchControllers.delete(key);\r\n        if (pendingNavigationLoadId > originatingLoadId) {\r\n          updateFetcherState(key, getDoneFetcher(void 0));\r\n          return;\r\n        } else {\r\n          fetchRedirectIds.add(key);\r\n          updateFetcherState(key, getLoadingFetcher(submission));\r\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\r\n            fetcherSubmission: submission,\r\n            preventScrollReset\r\n          });\r\n        }\r\n      }\r\n      if (isErrorResult(actionResult)) {\r\n        setFetcherError(key, routeId, actionResult.error);\r\n        return;\r\n      }\r\n    }\r\n    let nextLocation = state.navigation.location || state.location;\r\n    let revalidationRequest = createClientSideRequest(\r\n      init.history,\r\n      nextLocation,\r\n      abortController.signal\r\n    );\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\r\n    invariant(matches, \"Didn't find any matches after fetcher action\");\r\n    let loadId = ++incrementingLoadId;\r\n    fetchReloadIds.set(key, loadId);\r\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\r\n    state.fetchers.set(key, loadFetcher);\r\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\r\n      init.history,\r\n      state,\r\n      matches,\r\n      submission,\r\n      nextLocation,\r\n      false,\r\n      isRevalidationRequired,\r\n      cancelledFetcherLoads,\r\n      fetchersQueuedForDeletion,\r\n      fetchLoadMatches,\r\n      fetchRedirectIds,\r\n      routesToUse,\r\n      basename,\r\n      [match.route.id, actionResult]\r\n    );\r\n    revalidatingFetchers.filter((rf) => rf.key !== key).forEach((rf) => {\r\n      let staleKey = rf.key;\r\n      let existingFetcher2 = state.fetchers.get(staleKey);\r\n      let revalidatingFetcher = getLoadingFetcher(\r\n        void 0,\r\n        existingFetcher2 ? existingFetcher2.data : void 0\r\n      );\r\n      state.fetchers.set(staleKey, revalidatingFetcher);\r\n      abortFetcher(staleKey);\r\n      if (rf.controller) {\r\n        fetchControllers.set(staleKey, rf.controller);\r\n      }\r\n    });\r\n    updateState({ fetchers: new Map(state.fetchers) });\r\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\r\n    abortController.signal.addEventListener(\r\n      \"abort\",\r\n      abortPendingFetchRevalidations\r\n    );\r\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\r\n      state,\r\n      matches,\r\n      matchesToLoad,\r\n      revalidatingFetchers,\r\n      revalidationRequest\r\n    );\r\n    if (abortController.signal.aborted) {\r\n      return;\r\n    }\r\n    abortController.signal.removeEventListener(\r\n      \"abort\",\r\n      abortPendingFetchRevalidations\r\n    );\r\n    fetchReloadIds.delete(key);\r\n    fetchControllers.delete(key);\r\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\r\n    let redirect2 = findRedirect(loaderResults);\r\n    if (redirect2) {\r\n      return startRedirectNavigation(\r\n        revalidationRequest,\r\n        redirect2.result,\r\n        false,\r\n        { preventScrollReset }\r\n      );\r\n    }\r\n    redirect2 = findRedirect(fetcherResults);\r\n    if (redirect2) {\r\n      fetchRedirectIds.add(redirect2.key);\r\n      return startRedirectNavigation(\r\n        revalidationRequest,\r\n        redirect2.result,\r\n        false,\r\n        { preventScrollReset }\r\n      );\r\n    }\r\n    let { loaderData, errors } = processLoaderData(\r\n      state,\r\n      matches,\r\n      loaderResults,\r\n      void 0,\r\n      revalidatingFetchers,\r\n      fetcherResults\r\n    );\r\n    if (state.fetchers.has(key)) {\r\n      let doneFetcher = getDoneFetcher(actionResult.data);\r\n      state.fetchers.set(key, doneFetcher);\r\n    }\r\n    abortStaleFetchLoads(loadId);\r\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\r\n      invariant(pendingAction, \"Expected pending action\");\r\n      pendingNavigationController && pendingNavigationController.abort();\r\n      completeNavigation(state.navigation.location, {\r\n        matches,\r\n        loaderData,\r\n        errors,\r\n        fetchers: new Map(state.fetchers)\r\n      });\r\n    } else {\r\n      updateState({\r\n        errors,\r\n        loaderData: mergeLoaderData(\r\n          state.loaderData,\r\n          loaderData,\r\n          matches,\r\n          errors\r\n        ),\r\n        fetchers: new Map(state.fetchers)\r\n      });\r\n      isRevalidationRequired = false;\r\n    }\r\n  }\r\n  async function handleFetcherLoader(key, routeId, path, match, matches, isFogOfWar, flushSync, preventScrollReset, submission) {\r\n    let existingFetcher = state.fetchers.get(key);\r\n    updateFetcherState(\r\n      key,\r\n      getLoadingFetcher(\r\n        submission,\r\n        existingFetcher ? existingFetcher.data : void 0\r\n      ),\r\n      { flushSync }\r\n    );\r\n    let abortController = new AbortController();\r\n    let fetchRequest = createClientSideRequest(\r\n      init.history,\r\n      path,\r\n      abortController.signal\r\n    );\r\n    if (isFogOfWar) {\r\n      let discoverResult = await discoverRoutes(\r\n        matches,\r\n        path,\r\n        fetchRequest.signal\r\n      );\r\n      if (discoverResult.type === \"aborted\") {\r\n        return;\r\n      } else if (discoverResult.type === \"error\") {\r\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\r\n        return;\r\n      } else if (!discoverResult.matches) {\r\n        setFetcherError(\r\n          key,\r\n          routeId,\r\n          getInternalRouterError(404, { pathname: path }),\r\n          { flushSync }\r\n        );\r\n        return;\r\n      } else {\r\n        matches = discoverResult.matches;\r\n        match = getTargetMatch(matches, path);\r\n      }\r\n    }\r\n    fetchControllers.set(key, abortController);\r\n    let originatingLoadId = incrementingLoadId;\r\n    let results = await callDataStrategy(\r\n      \"loader\",\r\n      state,\r\n      fetchRequest,\r\n      [match],\r\n      matches,\r\n      key\r\n    );\r\n    let result = results[match.route.id];\r\n    if (fetchControllers.get(key) === abortController) {\r\n      fetchControllers.delete(key);\r\n    }\r\n    if (fetchRequest.signal.aborted) {\r\n      return;\r\n    }\r\n    if (fetchersQueuedForDeletion.has(key)) {\r\n      updateFetcherState(key, getDoneFetcher(void 0));\r\n      return;\r\n    }\r\n    if (isRedirectResult(result)) {\r\n      if (pendingNavigationLoadId > originatingLoadId) {\r\n        updateFetcherState(key, getDoneFetcher(void 0));\r\n        return;\r\n      } else {\r\n        fetchRedirectIds.add(key);\r\n        await startRedirectNavigation(fetchRequest, result, false, {\r\n          preventScrollReset\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    if (isErrorResult(result)) {\r\n      setFetcherError(key, routeId, result.error);\r\n      return;\r\n    }\r\n    updateFetcherState(key, getDoneFetcher(result.data));\r\n  }\r\n  async function startRedirectNavigation(request, redirect2, isNavigation, {\r\n    submission,\r\n    fetcherSubmission,\r\n    preventScrollReset,\r\n    replace: replace2\r\n  } = {}) {\r\n    if (redirect2.response.headers.has(\"X-Remix-Revalidate\")) {\r\n      isRevalidationRequired = true;\r\n    }\r\n    let location = redirect2.response.headers.get(\"Location\");\r\n    invariant(location, \"Expected a Location header on the redirect Response\");\r\n    location = normalizeRedirectLocation(\r\n      location,\r\n      new URL(request.url),\r\n      basename\r\n    );\r\n    let redirectLocation = createLocation(state.location, location, {\r\n      _isRedirect: true\r\n    });\r\n    if (isBrowser2) {\r\n      let isDocumentReload = false;\r\n      if (redirect2.response.headers.has(\"X-Remix-Reload-Document\")) {\r\n        isDocumentReload = true;\r\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\r\n        const url = init.history.createURL(location);\r\n        isDocumentReload = // Hard reload if it's an absolute URL to a new origin\r\n        url.origin !== routerWindow.location.origin || // Hard reload if it's an absolute URL that does not match our basename\r\n        stripBasename(url.pathname, basename) == null;\r\n      }\r\n      if (isDocumentReload) {\r\n        if (replace2) {\r\n          routerWindow.location.replace(location);\r\n        } else {\r\n          routerWindow.location.assign(location);\r\n        }\r\n        return;\r\n      }\r\n    }\r\n    pendingNavigationController = null;\r\n    let redirectNavigationType = replace2 === true || redirect2.response.headers.has(\"X-Remix-Replace\") ? \"REPLACE\" /* Replace */ : \"PUSH\" /* Push */;\r\n    let { formMethod, formAction, formEncType } = state.navigation;\r\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\r\n      submission = getSubmissionFromNavigation(state.navigation);\r\n    }\r\n    let activeSubmission = submission || fetcherSubmission;\r\n    if (redirectPreserveMethodStatusCodes.has(redirect2.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\r\n      await startNavigation(redirectNavigationType, redirectLocation, {\r\n        submission: {\r\n          ...activeSubmission,\r\n          formAction: location\r\n        },\r\n        // Preserve these flags across redirects\r\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\r\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\r\n      });\r\n    } else {\r\n      let overrideNavigation = getLoadingNavigation(\r\n        redirectLocation,\r\n        submission\r\n      );\r\n      await startNavigation(redirectNavigationType, redirectLocation, {\r\n        overrideNavigation,\r\n        // Send fetcher submissions through for shouldRevalidate\r\n        fetcherSubmission,\r\n        // Preserve these flags across redirects\r\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\r\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\r\n      });\r\n    }\r\n  }\r\n  async function callDataStrategy(type, state2, request, matchesToLoad, matches, fetcherKey) {\r\n    let results;\r\n    let dataResults = {};\r\n    try {\r\n      results = await callDataStrategyImpl(\r\n        dataStrategyImpl,\r\n        type,\r\n        state2,\r\n        request,\r\n        matchesToLoad,\r\n        matches,\r\n        fetcherKey,\r\n        manifest,\r\n        mapRouteProperties2\r\n      );\r\n    } catch (e) {\r\n      matchesToLoad.forEach((m) => {\r\n        dataResults[m.route.id] = {\r\n          type: \"error\" /* error */,\r\n          error: e\r\n        };\r\n      });\r\n      return dataResults;\r\n    }\r\n    for (let [routeId, result] of Object.entries(results)) {\r\n      if (isRedirectDataStrategyResult(result)) {\r\n        let response = result.result;\r\n        dataResults[routeId] = {\r\n          type: \"redirect\" /* redirect */,\r\n          response: normalizeRelativeRoutingRedirectResponse(\r\n            response,\r\n            request,\r\n            routeId,\r\n            matches,\r\n            basename\r\n          )\r\n        };\r\n      } else {\r\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(\r\n          result\r\n        );\r\n      }\r\n    }\r\n    return dataResults;\r\n  }\r\n  async function callLoadersAndMaybeResolveData(state2, matches, matchesToLoad, fetchersToLoad, request) {\r\n    let loaderResultsPromise = callDataStrategy(\r\n      \"loader\",\r\n      state2,\r\n      request,\r\n      matchesToLoad,\r\n      matches,\r\n      null\r\n    );\r\n    let fetcherResultsPromise = Promise.all(\r\n      fetchersToLoad.map(async (f) => {\r\n        if (f.matches && f.match && f.controller) {\r\n          let results = await callDataStrategy(\r\n            \"loader\",\r\n            state2,\r\n            createClientSideRequest(init.history, f.path, f.controller.signal),\r\n            [f.match],\r\n            f.matches,\r\n            f.key\r\n          );\r\n          let result = results[f.match.route.id];\r\n          return { [f.key]: result };\r\n        } else {\r\n          return Promise.resolve({\r\n            [f.key]: {\r\n              type: \"error\" /* error */,\r\n              error: getInternalRouterError(404, {\r\n                pathname: f.path\r\n              })\r\n            }\r\n          });\r\n        }\r\n      })\r\n    );\r\n    let loaderResults = await loaderResultsPromise;\r\n    let fetcherResults = (await fetcherResultsPromise).reduce(\r\n      (acc, r) => Object.assign(acc, r),\r\n      {}\r\n    );\r\n    return {\r\n      loaderResults,\r\n      fetcherResults\r\n    };\r\n  }\r\n  function interruptActiveLoads() {\r\n    isRevalidationRequired = true;\r\n    fetchLoadMatches.forEach((_, key) => {\r\n      if (fetchControllers.has(key)) {\r\n        cancelledFetcherLoads.add(key);\r\n      }\r\n      abortFetcher(key);\r\n    });\r\n  }\r\n  function updateFetcherState(key, fetcher, opts = {}) {\r\n    state.fetchers.set(key, fetcher);\r\n    updateState(\r\n      { fetchers: new Map(state.fetchers) },\r\n      { flushSync: (opts && opts.flushSync) === true }\r\n    );\r\n  }\r\n  function setFetcherError(key, routeId, error, opts = {}) {\r\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\r\n    deleteFetcher(key);\r\n    updateState(\r\n      {\r\n        errors: {\r\n          [boundaryMatch.route.id]: error\r\n        },\r\n        fetchers: new Map(state.fetchers)\r\n      },\r\n      { flushSync: (opts && opts.flushSync) === true }\r\n    );\r\n  }\r\n  function getFetcher(key) {\r\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\r\n    if (fetchersQueuedForDeletion.has(key)) {\r\n      fetchersQueuedForDeletion.delete(key);\r\n    }\r\n    return state.fetchers.get(key) || IDLE_FETCHER;\r\n  }\r\n  function deleteFetcher(key) {\r\n    let fetcher = state.fetchers.get(key);\r\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\r\n      abortFetcher(key);\r\n    }\r\n    fetchLoadMatches.delete(key);\r\n    fetchReloadIds.delete(key);\r\n    fetchRedirectIds.delete(key);\r\n    fetchersQueuedForDeletion.delete(key);\r\n    cancelledFetcherLoads.delete(key);\r\n    state.fetchers.delete(key);\r\n  }\r\n  function queueFetcherForDeletion(key) {\r\n    let count = (activeFetchers.get(key) || 0) - 1;\r\n    if (count <= 0) {\r\n      activeFetchers.delete(key);\r\n      fetchersQueuedForDeletion.add(key);\r\n    } else {\r\n      activeFetchers.set(key, count);\r\n    }\r\n    updateState({ fetchers: new Map(state.fetchers) });\r\n  }\r\n  function abortFetcher(key) {\r\n    let controller = fetchControllers.get(key);\r\n    if (controller) {\r\n      controller.abort();\r\n      fetchControllers.delete(key);\r\n    }\r\n  }\r\n  function markFetchersDone(keys) {\r\n    for (let key of keys) {\r\n      let fetcher = getFetcher(key);\r\n      let doneFetcher = getDoneFetcher(fetcher.data);\r\n      state.fetchers.set(key, doneFetcher);\r\n    }\r\n  }\r\n  function markFetchRedirectsDone() {\r\n    let doneKeys = [];\r\n    let updatedFetchers = false;\r\n    for (let key of fetchRedirectIds) {\r\n      let fetcher = state.fetchers.get(key);\r\n      invariant(fetcher, `Expected fetcher: ${key}`);\r\n      if (fetcher.state === \"loading\") {\r\n        fetchRedirectIds.delete(key);\r\n        doneKeys.push(key);\r\n        updatedFetchers = true;\r\n      }\r\n    }\r\n    markFetchersDone(doneKeys);\r\n    return updatedFetchers;\r\n  }\r\n  function abortStaleFetchLoads(landedId) {\r\n    let yeetedKeys = [];\r\n    for (let [key, id] of fetchReloadIds) {\r\n      if (id < landedId) {\r\n        let fetcher = state.fetchers.get(key);\r\n        invariant(fetcher, `Expected fetcher: ${key}`);\r\n        if (fetcher.state === \"loading\") {\r\n          abortFetcher(key);\r\n          fetchReloadIds.delete(key);\r\n          yeetedKeys.push(key);\r\n        }\r\n      }\r\n    }\r\n    markFetchersDone(yeetedKeys);\r\n    return yeetedKeys.length > 0;\r\n  }\r\n  function getBlocker(key, fn) {\r\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\r\n    if (blockerFunctions.get(key) !== fn) {\r\n      blockerFunctions.set(key, fn);\r\n    }\r\n    return blocker;\r\n  }\r\n  function deleteBlocker(key) {\r\n    state.blockers.delete(key);\r\n    blockerFunctions.delete(key);\r\n  }\r\n  function updateBlocker(key, newBlocker) {\r\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\r\n    invariant(\r\n      blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\",\r\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\r\n    );\r\n    let blockers = new Map(state.blockers);\r\n    blockers.set(key, newBlocker);\r\n    updateState({ blockers });\r\n  }\r\n  function shouldBlockNavigation({\r\n    currentLocation,\r\n    nextLocation,\r\n    historyAction\r\n  }) {\r\n    if (blockerFunctions.size === 0) {\r\n      return;\r\n    }\r\n    if (blockerFunctions.size > 1) {\r\n      warning(false, \"A router only supports one blocker at a time\");\r\n    }\r\n    let entries = Array.from(blockerFunctions.entries());\r\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\r\n    let blocker = state.blockers.get(blockerKey);\r\n    if (blocker && blocker.state === \"proceeding\") {\r\n      return;\r\n    }\r\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\r\n      return blockerKey;\r\n    }\r\n  }\r\n  function handleNavigational404(pathname) {\r\n    let error = getInternalRouterError(404, { pathname });\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    let { matches, route } = getShortCircuitMatches(routesToUse);\r\n    return { notFoundMatches: matches, route, error };\r\n  }\r\n  function enableScrollRestoration(positions, getPosition, getKey) {\r\n    savedScrollPositions2 = positions;\r\n    getScrollPosition = getPosition;\r\n    getScrollRestorationKey2 = getKey || null;\r\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\r\n      initialScrollRestored = true;\r\n      let y = getSavedScrollPosition(state.location, state.matches);\r\n      if (y != null) {\r\n        updateState({ restoreScrollPosition: y });\r\n      }\r\n    }\r\n    return () => {\r\n      savedScrollPositions2 = null;\r\n      getScrollPosition = null;\r\n      getScrollRestorationKey2 = null;\r\n    };\r\n  }\r\n  function getScrollKey(location, matches) {\r\n    if (getScrollRestorationKey2) {\r\n      let key = getScrollRestorationKey2(\r\n        location,\r\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\r\n      );\r\n      return key || location.key;\r\n    }\r\n    return location.key;\r\n  }\r\n  function saveScrollPosition(location, matches) {\r\n    if (savedScrollPositions2 && getScrollPosition) {\r\n      let key = getScrollKey(location, matches);\r\n      savedScrollPositions2[key] = getScrollPosition();\r\n    }\r\n  }\r\n  function getSavedScrollPosition(location, matches) {\r\n    if (savedScrollPositions2) {\r\n      let key = getScrollKey(location, matches);\r\n      let y = savedScrollPositions2[key];\r\n      if (typeof y === \"number\") {\r\n        return y;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  function checkFogOfWar(matches, routesToUse, pathname) {\r\n    if (patchRoutesOnNavigationImpl) {\r\n      if (!matches) {\r\n        let fogMatches = matchRoutesImpl(\r\n          routesToUse,\r\n          pathname,\r\n          basename,\r\n          true\r\n        );\r\n        return { active: true, matches: fogMatches || [] };\r\n      } else {\r\n        if (Object.keys(matches[0].params).length > 0) {\r\n          let partialMatches = matchRoutesImpl(\r\n            routesToUse,\r\n            pathname,\r\n            basename,\r\n            true\r\n          );\r\n          return { active: true, matches: partialMatches };\r\n        }\r\n      }\r\n    }\r\n    return { active: false, matches: null };\r\n  }\r\n  async function discoverRoutes(matches, pathname, signal) {\r\n    if (!patchRoutesOnNavigationImpl) {\r\n      return { type: \"success\", matches };\r\n    }\r\n    let partialMatches = matches;\r\n    while (true) {\r\n      let isNonHMR = inFlightDataRoutes == null;\r\n      let routesToUse = inFlightDataRoutes || dataRoutes;\r\n      let localManifest = manifest;\r\n      try {\r\n        await patchRoutesOnNavigationImpl({\r\n          signal,\r\n          path: pathname,\r\n          matches: partialMatches,\r\n          patch: (routeId, children) => {\r\n            if (signal.aborted) return;\r\n            patchRoutesImpl(\r\n              routeId,\r\n              children,\r\n              routesToUse,\r\n              localManifest,\r\n              mapRouteProperties2\r\n            );\r\n          }\r\n        });\r\n      } catch (e) {\r\n        return { type: \"error\", error: e, partialMatches };\r\n      } finally {\r\n        if (isNonHMR && !signal.aborted) {\r\n          dataRoutes = [...dataRoutes];\r\n        }\r\n      }\r\n      if (signal.aborted) {\r\n        return { type: \"aborted\" };\r\n      }\r\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\r\n      if (newMatches) {\r\n        return { type: \"success\", matches: newMatches };\r\n      }\r\n      let newPartialMatches = matchRoutesImpl(\r\n        routesToUse,\r\n        pathname,\r\n        basename,\r\n        true\r\n      );\r\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every(\r\n        (m, i) => m.route.id === newPartialMatches[i].route.id\r\n      )) {\r\n        return { type: \"success\", matches: null };\r\n      }\r\n      partialMatches = newPartialMatches;\r\n    }\r\n  }\r\n  function _internalSetRoutes(newRoutes) {\r\n    manifest = {};\r\n    inFlightDataRoutes = convertRoutesToDataRoutes(\r\n      newRoutes,\r\n      mapRouteProperties2,\r\n      void 0,\r\n      manifest\r\n    );\r\n  }\r\n  function patchRoutes(routeId, children) {\r\n    let isNonHMR = inFlightDataRoutes == null;\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    patchRoutesImpl(\r\n      routeId,\r\n      children,\r\n      routesToUse,\r\n      manifest,\r\n      mapRouteProperties2\r\n    );\r\n    if (isNonHMR) {\r\n      dataRoutes = [...dataRoutes];\r\n      updateState({});\r\n    }\r\n  }\r\n  router = {\r\n    get basename() {\r\n      return basename;\r\n    },\r\n    get future() {\r\n      return future;\r\n    },\r\n    get state() {\r\n      return state;\r\n    },\r\n    get routes() {\r\n      return dataRoutes;\r\n    },\r\n    get window() {\r\n      return routerWindow;\r\n    },\r\n    initialize,\r\n    subscribe,\r\n    enableScrollRestoration,\r\n    navigate,\r\n    fetch: fetch2,\r\n    revalidate,\r\n    // Passthrough to history-aware createHref used by useHref so we get proper\r\n    // hash-aware URLs in DOM paths\r\n    createHref: (to) => init.history.createHref(to),\r\n    encodeLocation: (to) => init.history.encodeLocation(to),\r\n    getFetcher,\r\n    deleteFetcher: queueFetcherForDeletion,\r\n    dispose,\r\n    getBlocker,\r\n    deleteBlocker,\r\n    patchRoutes,\r\n    _internalFetchControllers: fetchControllers,\r\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\r\n    // updating the tree while validating the update algorithm.\r\n    _internalSetRoutes\r\n  };\r\n  return router;\r\n}\r\nfunction createStaticHandler(routes, opts) {\r\n  invariant(\r\n    routes.length > 0,\r\n    \"You must provide a non-empty routes array to createStaticHandler\"\r\n  );\r\n  let manifest = {};\r\n  let basename = (opts ? opts.basename : null) || \"/\";\r\n  let mapRouteProperties2 = opts?.mapRouteProperties || defaultMapRouteProperties;\r\n  let dataRoutes = convertRoutesToDataRoutes(\r\n    routes,\r\n    mapRouteProperties2,\r\n    void 0,\r\n    manifest\r\n  );\r\n  async function query(request, {\r\n    requestContext,\r\n    skipLoaderErrorBubbling,\r\n    dataStrategy\r\n  } = {}) {\r\n    let url = new URL(request.url);\r\n    let method = request.method;\r\n    let location = createLocation(\"\", createPath(url), null, \"default\");\r\n    let matches = matchRoutes(dataRoutes, location, basename);\r\n    if (!isValidMethod(method) && method !== \"HEAD\") {\r\n      let error = getInternalRouterError(405, { method });\r\n      let { matches: methodNotAllowedMatches, route } = getShortCircuitMatches(dataRoutes);\r\n      return {\r\n        basename,\r\n        location,\r\n        matches: methodNotAllowedMatches,\r\n        loaderData: {},\r\n        actionData: null,\r\n        errors: {\r\n          [route.id]: error\r\n        },\r\n        statusCode: error.status,\r\n        loaderHeaders: {},\r\n        actionHeaders: {}\r\n      };\r\n    } else if (!matches) {\r\n      let error = getInternalRouterError(404, { pathname: location.pathname });\r\n      let { matches: notFoundMatches, route } = getShortCircuitMatches(dataRoutes);\r\n      return {\r\n        basename,\r\n        location,\r\n        matches: notFoundMatches,\r\n        loaderData: {},\r\n        actionData: null,\r\n        errors: {\r\n          [route.id]: error\r\n        },\r\n        statusCode: error.status,\r\n        loaderHeaders: {},\r\n        actionHeaders: {}\r\n      };\r\n    }\r\n    let result = await queryImpl(\r\n      request,\r\n      location,\r\n      matches,\r\n      requestContext,\r\n      dataStrategy || null,\r\n      skipLoaderErrorBubbling === true,\r\n      null\r\n    );\r\n    if (isResponse(result)) {\r\n      return result;\r\n    }\r\n    return { location, basename, ...result };\r\n  }\r\n  async function queryRoute(request, {\r\n    routeId,\r\n    requestContext,\r\n    dataStrategy\r\n  } = {}) {\r\n    let url = new URL(request.url);\r\n    let method = request.method;\r\n    let location = createLocation(\"\", createPath(url), null, \"default\");\r\n    let matches = matchRoutes(dataRoutes, location, basename);\r\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\r\n      throw getInternalRouterError(405, { method });\r\n    } else if (!matches) {\r\n      throw getInternalRouterError(404, { pathname: location.pathname });\r\n    }\r\n    let match = routeId ? matches.find((m) => m.route.id === routeId) : getTargetMatch(matches, location);\r\n    if (routeId && !match) {\r\n      throw getInternalRouterError(403, {\r\n        pathname: location.pathname,\r\n        routeId\r\n      });\r\n    } else if (!match) {\r\n      throw getInternalRouterError(404, { pathname: location.pathname });\r\n    }\r\n    let result = await queryImpl(\r\n      request,\r\n      location,\r\n      matches,\r\n      requestContext,\r\n      dataStrategy || null,\r\n      false,\r\n      match\r\n    );\r\n    if (isResponse(result)) {\r\n      return result;\r\n    }\r\n    let error = result.errors ? Object.values(result.errors)[0] : void 0;\r\n    if (error !== void 0) {\r\n      throw error;\r\n    }\r\n    if (result.actionData) {\r\n      return Object.values(result.actionData)[0];\r\n    }\r\n    if (result.loaderData) {\r\n      return Object.values(result.loaderData)[0];\r\n    }\r\n    return void 0;\r\n  }\r\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch) {\r\n    invariant(\r\n      request.signal,\r\n      \"query()/queryRoute() requests must contain an AbortController signal\"\r\n    );\r\n    try {\r\n      if (isMutationMethod(request.method)) {\r\n        let result2 = await submit(\r\n          request,\r\n          matches,\r\n          routeMatch || getTargetMatch(matches, location),\r\n          requestContext,\r\n          dataStrategy,\r\n          skipLoaderErrorBubbling,\r\n          routeMatch != null\r\n        );\r\n        return result2;\r\n      }\r\n      let result = await loadRouteData(\r\n        request,\r\n        matches,\r\n        requestContext,\r\n        dataStrategy,\r\n        skipLoaderErrorBubbling,\r\n        routeMatch\r\n      );\r\n      return isResponse(result) ? result : {\r\n        ...result,\r\n        actionData: null,\r\n        actionHeaders: {}\r\n      };\r\n    } catch (e) {\r\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\r\n        if (e.type === \"error\" /* error */) {\r\n          throw e.result;\r\n        }\r\n        return e.result;\r\n      }\r\n      if (isRedirectResponse(e)) {\r\n        return e;\r\n      }\r\n      throw e;\r\n    }\r\n  }\r\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest) {\r\n    let result;\r\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\r\n      let error = getInternalRouterError(405, {\r\n        method: request.method,\r\n        pathname: new URL(request.url).pathname,\r\n        routeId: actionMatch.route.id\r\n      });\r\n      if (isRouteRequest) {\r\n        throw error;\r\n      }\r\n      result = {\r\n        type: \"error\" /* error */,\r\n        error\r\n      };\r\n    } else {\r\n      let results = await callDataStrategy(\r\n        \"action\",\r\n        request,\r\n        [actionMatch],\r\n        matches,\r\n        isRouteRequest,\r\n        requestContext,\r\n        dataStrategy\r\n      );\r\n      result = results[actionMatch.route.id];\r\n      if (request.signal.aborted) {\r\n        throwStaticHandlerAbortedError(request, isRouteRequest);\r\n      }\r\n    }\r\n    if (isRedirectResult(result)) {\r\n      throw new Response(null, {\r\n        status: result.response.status,\r\n        headers: {\r\n          Location: result.response.headers.get(\"Location\")\r\n        }\r\n      });\r\n    }\r\n    if (isRouteRequest) {\r\n      if (isErrorResult(result)) {\r\n        throw result.error;\r\n      }\r\n      return {\r\n        matches: [actionMatch],\r\n        loaderData: {},\r\n        actionData: { [actionMatch.route.id]: result.data },\r\n        errors: null,\r\n        // Note: statusCode + headers are unused here since queryRoute will\r\n        // return the raw Response or value\r\n        statusCode: 200,\r\n        loaderHeaders: {},\r\n        actionHeaders: {}\r\n      };\r\n    }\r\n    let loaderRequest = new Request(request.url, {\r\n      headers: request.headers,\r\n      redirect: request.redirect,\r\n      signal: request.signal\r\n    });\r\n    if (isErrorResult(result)) {\r\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\r\n      let context2 = await loadRouteData(\r\n        loaderRequest,\r\n        matches,\r\n        requestContext,\r\n        dataStrategy,\r\n        skipLoaderErrorBubbling,\r\n        null,\r\n        [boundaryMatch.route.id, result]\r\n      );\r\n      return {\r\n        ...context2,\r\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\r\n        actionData: null,\r\n        actionHeaders: {\r\n          ...result.headers ? { [actionMatch.route.id]: result.headers } : {}\r\n        }\r\n      };\r\n    }\r\n    let context = await loadRouteData(\r\n      loaderRequest,\r\n      matches,\r\n      requestContext,\r\n      dataStrategy,\r\n      skipLoaderErrorBubbling,\r\n      null\r\n    );\r\n    return {\r\n      ...context,\r\n      actionData: {\r\n        [actionMatch.route.id]: result.data\r\n      },\r\n      // action status codes take precedence over loader status codes\r\n      ...result.statusCode ? { statusCode: result.statusCode } : {},\r\n      actionHeaders: result.headers ? { [actionMatch.route.id]: result.headers } : {}\r\n    };\r\n  }\r\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, pendingActionResult) {\r\n    let isRouteRequest = routeMatch != null;\r\n    if (isRouteRequest && !routeMatch?.route.loader && !routeMatch?.route.lazy) {\r\n      throw getInternalRouterError(400, {\r\n        method: request.method,\r\n        pathname: new URL(request.url).pathname,\r\n        routeId: routeMatch?.route.id\r\n      });\r\n    }\r\n    let requestMatches = routeMatch ? [routeMatch] : pendingActionResult && isErrorResult(pendingActionResult[1]) ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]) : matches;\r\n    let matchesToLoad = requestMatches.filter(\r\n      (m) => m.route.loader || m.route.lazy\r\n    );\r\n    if (matchesToLoad.length === 0) {\r\n      return {\r\n        matches,\r\n        // Add a null for all matched routes for proper revalidation on the client\r\n        loaderData: matches.reduce(\r\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\r\n          {}\r\n        ),\r\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\r\n          [pendingActionResult[0]]: pendingActionResult[1].error\r\n        } : null,\r\n        statusCode: 200,\r\n        loaderHeaders: {}\r\n      };\r\n    }\r\n    let results = await callDataStrategy(\r\n      \"loader\",\r\n      request,\r\n      matchesToLoad,\r\n      matches,\r\n      isRouteRequest,\r\n      requestContext,\r\n      dataStrategy\r\n    );\r\n    if (request.signal.aborted) {\r\n      throwStaticHandlerAbortedError(request, isRouteRequest);\r\n    }\r\n    let context = processRouteLoaderData(\r\n      matches,\r\n      results,\r\n      pendingActionResult,\r\n      true,\r\n      skipLoaderErrorBubbling\r\n    );\r\n    let executedLoaders = new Set(\r\n      matchesToLoad.map((match) => match.route.id)\r\n    );\r\n    matches.forEach((match) => {\r\n      if (!executedLoaders.has(match.route.id)) {\r\n        context.loaderData[match.route.id] = null;\r\n      }\r\n    });\r\n    return {\r\n      ...context,\r\n      matches\r\n    };\r\n  }\r\n  async function callDataStrategy(type, request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy) {\r\n    let results = await callDataStrategyImpl(\r\n      dataStrategy || defaultDataStrategy,\r\n      type,\r\n      null,\r\n      request,\r\n      matchesToLoad,\r\n      matches,\r\n      null,\r\n      manifest,\r\n      mapRouteProperties2,\r\n      requestContext\r\n    );\r\n    let dataResults = {};\r\n    await Promise.all(\r\n      matches.map(async (match) => {\r\n        if (!(match.route.id in results)) {\r\n          return;\r\n        }\r\n        let result = results[match.route.id];\r\n        if (isRedirectDataStrategyResult(result)) {\r\n          let response = result.result;\r\n          throw normalizeRelativeRoutingRedirectResponse(\r\n            response,\r\n            request,\r\n            match.route.id,\r\n            matches,\r\n            basename\r\n          );\r\n        }\r\n        if (isResponse(result.result) && isRouteRequest) {\r\n          throw result;\r\n        }\r\n        dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\r\n      })\r\n    );\r\n    return dataResults;\r\n  }\r\n  return {\r\n    dataRoutes,\r\n    query,\r\n    queryRoute\r\n  };\r\n}\r\nfunction getStaticContextFromError(routes, context, error) {\r\n  let newContext = {\r\n    ...context,\r\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\r\n    errors: {\r\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\r\n    }\r\n  };\r\n  return newContext;\r\n}\r\nfunction throwStaticHandlerAbortedError(request, isRouteRequest) {\r\n  if (request.signal.reason !== void 0) {\r\n    throw request.signal.reason;\r\n  }\r\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\r\n  throw new Error(\r\n    `${method}() call aborted without an \\`AbortSignal.reason\\`: ${request.method} ${request.url}`\r\n  );\r\n}\r\nfunction isSubmissionNavigation(opts) {\r\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== void 0);\r\n}\r\nfunction normalizeTo(location, matches, basename, to, fromRouteId, relative) {\r\n  let contextualMatches;\r\n  let activeRouteMatch;\r\n  if (fromRouteId) {\r\n    contextualMatches = [];\r\n    for (let match of matches) {\r\n      contextualMatches.push(match);\r\n      if (match.route.id === fromRouteId) {\r\n        activeRouteMatch = match;\r\n        break;\r\n      }\r\n    }\r\n  } else {\r\n    contextualMatches = matches;\r\n    activeRouteMatch = matches[matches.length - 1];\r\n  }\r\n  let path = resolveTo(\r\n    to ? to : \".\",\r\n    getResolveToMatches(contextualMatches),\r\n    stripBasename(location.pathname, basename) || location.pathname,\r\n    relative === \"path\"\r\n  );\r\n  if (to == null) {\r\n    path.search = location.search;\r\n    path.hash = location.hash;\r\n  }\r\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\r\n    let nakedIndex = hasNakedIndexQuery(path.search);\r\n    if (activeRouteMatch.route.index && !nakedIndex) {\r\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\r\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\r\n      let params = new URLSearchParams(path.search);\r\n      let indexValues = params.getAll(\"index\");\r\n      params.delete(\"index\");\r\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\r\n      let qs = params.toString();\r\n      path.search = qs ? `?${qs}` : \"\";\r\n    }\r\n  }\r\n  if (basename !== \"/\") {\r\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\r\n  }\r\n  return createPath(path);\r\n}\r\nfunction normalizeNavigateOptions(isFetcher, path, opts) {\r\n  if (!opts || !isSubmissionNavigation(opts)) {\r\n    return { path };\r\n  }\r\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\r\n    return {\r\n      path,\r\n      error: getInternalRouterError(405, { method: opts.formMethod })\r\n    };\r\n  }\r\n  let getInvalidBodyError = () => ({\r\n    path,\r\n    error: getInternalRouterError(400, { type: \"invalid-body\" })\r\n  });\r\n  let rawFormMethod = opts.formMethod || \"get\";\r\n  let formMethod = rawFormMethod.toUpperCase();\r\n  let formAction = stripHashFromPath(path);\r\n  if (opts.body !== void 0) {\r\n    if (opts.formEncType === \"text/plain\") {\r\n      if (!isMutationMethod(formMethod)) {\r\n        return getInvalidBodyError();\r\n      }\r\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ? (\r\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\r\n        Array.from(opts.body.entries()).reduce(\r\n          (acc, [name, value]) => `${acc}${name}=${value}\r\n`,\r\n          \"\"\r\n        )\r\n      ) : String(opts.body);\r\n      return {\r\n        path,\r\n        submission: {\r\n          formMethod,\r\n          formAction,\r\n          formEncType: opts.formEncType,\r\n          formData: void 0,\r\n          json: void 0,\r\n          text\r\n        }\r\n      };\r\n    } else if (opts.formEncType === \"application/json\") {\r\n      if (!isMutationMethod(formMethod)) {\r\n        return getInvalidBodyError();\r\n      }\r\n      try {\r\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\r\n        return {\r\n          path,\r\n          submission: {\r\n            formMethod,\r\n            formAction,\r\n            formEncType: opts.formEncType,\r\n            formData: void 0,\r\n            json,\r\n            text: void 0\r\n          }\r\n        };\r\n      } catch (e) {\r\n        return getInvalidBodyError();\r\n      }\r\n    }\r\n  }\r\n  invariant(\r\n    typeof FormData === \"function\",\r\n    \"FormData is not available in this environment\"\r\n  );\r\n  let searchParams;\r\n  let formData;\r\n  if (opts.formData) {\r\n    searchParams = convertFormDataToSearchParams(opts.formData);\r\n    formData = opts.formData;\r\n  } else if (opts.body instanceof FormData) {\r\n    searchParams = convertFormDataToSearchParams(opts.body);\r\n    formData = opts.body;\r\n  } else if (opts.body instanceof URLSearchParams) {\r\n    searchParams = opts.body;\r\n    formData = convertSearchParamsToFormData(searchParams);\r\n  } else if (opts.body == null) {\r\n    searchParams = new URLSearchParams();\r\n    formData = new FormData();\r\n  } else {\r\n    try {\r\n      searchParams = new URLSearchParams(opts.body);\r\n      formData = convertSearchParamsToFormData(searchParams);\r\n    } catch (e) {\r\n      return getInvalidBodyError();\r\n    }\r\n  }\r\n  let submission = {\r\n    formMethod,\r\n    formAction,\r\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\r\n    formData,\r\n    json: void 0,\r\n    text: void 0\r\n  };\r\n  if (isMutationMethod(submission.formMethod)) {\r\n    return { path, submission };\r\n  }\r\n  let parsedPath = parsePath(path);\r\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\r\n    searchParams.append(\"index\", \"\");\r\n  }\r\n  parsedPath.search = `?${searchParams}`;\r\n  return { path: createPath(parsedPath), submission };\r\n}\r\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId, includeBoundary = false) {\r\n  let index = matches.findIndex((m) => m.route.id === boundaryId);\r\n  if (index >= 0) {\r\n    return matches.slice(0, includeBoundary ? index + 1 : index);\r\n  }\r\n  return matches;\r\n}\r\nfunction getMatchesToLoad(history, state, matches, submission, location, initialHydration, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\r\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : void 0;\r\n  let currentUrl = history.createURL(state.location);\r\n  let nextUrl = history.createURL(location);\r\n  let boundaryMatches = matches;\r\n  if (initialHydration && state.errors) {\r\n    boundaryMatches = getLoaderMatchesUntilBoundary(\r\n      matches,\r\n      Object.keys(state.errors)[0],\r\n      true\r\n    );\r\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\r\n    boundaryMatches = getLoaderMatchesUntilBoundary(\r\n      matches,\r\n      pendingActionResult[0]\r\n    );\r\n  }\r\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : void 0;\r\n  let shouldSkipRevalidation = actionStatus && actionStatus >= 400;\r\n  let navigationMatches = boundaryMatches.filter((match, index) => {\r\n    let { route } = match;\r\n    if (route.lazy) {\r\n      return true;\r\n    }\r\n    if (route.loader == null) {\r\n      return false;\r\n    }\r\n    if (initialHydration) {\r\n      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\r\n    }\r\n    if (isNewLoader(state.loaderData, state.matches[index], match)) {\r\n      return true;\r\n    }\r\n    let currentRouteMatch = state.matches[index];\r\n    let nextRouteMatch = match;\r\n    return shouldRevalidateLoader(match, {\r\n      currentUrl,\r\n      currentParams: currentRouteMatch.params,\r\n      nextUrl,\r\n      nextParams: nextRouteMatch.params,\r\n      ...submission,\r\n      actionResult,\r\n      actionStatus,\r\n      defaultShouldRevalidate: shouldSkipRevalidation ? false : (\r\n        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\r\n        isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders\r\n        currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\r\n      )\r\n    });\r\n  });\r\n  let revalidatingFetchers = [];\r\n  fetchLoadMatches.forEach((f, key) => {\r\n    if (initialHydration || !matches.some((m) => m.route.id === f.routeId) || fetchersQueuedForDeletion.has(key)) {\r\n      return;\r\n    }\r\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\r\n    if (!fetcherMatches) {\r\n      revalidatingFetchers.push({\r\n        key,\r\n        routeId: f.routeId,\r\n        path: f.path,\r\n        matches: null,\r\n        match: null,\r\n        controller: null\r\n      });\r\n      return;\r\n    }\r\n    let fetcher = state.fetchers.get(key);\r\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\r\n    let shouldRevalidate = false;\r\n    if (fetchRedirectIds.has(key)) {\r\n      shouldRevalidate = false;\r\n    } else if (cancelledFetcherLoads.has(key)) {\r\n      cancelledFetcherLoads.delete(key);\r\n      shouldRevalidate = true;\r\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === void 0) {\r\n      shouldRevalidate = isRevalidationRequired;\r\n    } else {\r\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\r\n        currentUrl,\r\n        currentParams: state.matches[state.matches.length - 1].params,\r\n        nextUrl,\r\n        nextParams: matches[matches.length - 1].params,\r\n        ...submission,\r\n        actionResult,\r\n        actionStatus,\r\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\r\n      });\r\n    }\r\n    if (shouldRevalidate) {\r\n      revalidatingFetchers.push({\r\n        key,\r\n        routeId: f.routeId,\r\n        path: f.path,\r\n        matches: fetcherMatches,\r\n        match: fetcherMatch,\r\n        controller: new AbortController()\r\n      });\r\n    }\r\n  });\r\n  return [navigationMatches, revalidatingFetchers];\r\n}\r\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\r\n  if (route.lazy) {\r\n    return true;\r\n  }\r\n  if (!route.loader) {\r\n    return false;\r\n  }\r\n  let hasData = loaderData != null && loaderData[route.id] !== void 0;\r\n  let hasError = errors != null && errors[route.id] !== void 0;\r\n  if (!hasData && hasError) {\r\n    return false;\r\n  }\r\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\r\n    return true;\r\n  }\r\n  return !hasData && !hasError;\r\n}\r\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\r\n  let isNew = (\r\n    // [a] -> [a, b]\r\n    !currentMatch || // [a, b] -> [a, c]\r\n    match.route.id !== currentMatch.route.id\r\n  );\r\n  let isMissingData = !currentLoaderData.hasOwnProperty(match.route.id);\r\n  return isNew || isMissingData;\r\n}\r\nfunction isNewRouteInstance(currentMatch, match) {\r\n  let currentPath = currentMatch.route.path;\r\n  return (\r\n    // param change for this match, /users/123 -> /users/456\r\n    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path\r\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\r\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\r\n  );\r\n}\r\nfunction shouldRevalidateLoader(loaderMatch, arg) {\r\n  if (loaderMatch.route.shouldRevalidate) {\r\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\r\n    if (typeof routeChoice === \"boolean\") {\r\n      return routeChoice;\r\n    }\r\n  }\r\n  return arg.defaultShouldRevalidate;\r\n}\r\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2) {\r\n  let childrenToPatch;\r\n  if (routeId) {\r\n    let route = manifest[routeId];\r\n    invariant(\r\n      route,\r\n      `No route found to patch children into: routeId = ${routeId}`\r\n    );\r\n    if (!route.children) {\r\n      route.children = [];\r\n    }\r\n    childrenToPatch = route.children;\r\n  } else {\r\n    childrenToPatch = routesToUse;\r\n  }\r\n  let uniqueChildren = children.filter(\r\n    (newRoute) => !childrenToPatch.some(\r\n      (existingRoute) => isSameRoute(newRoute, existingRoute)\r\n    )\r\n  );\r\n  let newRoutes = convertRoutesToDataRoutes(\r\n    uniqueChildren,\r\n    mapRouteProperties2,\r\n    [routeId || \"_\", \"patch\", String(childrenToPatch?.length || \"0\")],\r\n    manifest\r\n  );\r\n  childrenToPatch.push(...newRoutes);\r\n}\r\nfunction isSameRoute(newRoute, existingRoute) {\r\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\r\n    return true;\r\n  }\r\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\r\n    return false;\r\n  }\r\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\r\n    return true;\r\n  }\r\n  return newRoute.children.every(\r\n    (aChild, i) => existingRoute.children?.some((bChild) => isSameRoute(aChild, bChild))\r\n  );\r\n}\r\nasync function loadLazyRouteModule(route, mapRouteProperties2, manifest) {\r\n  if (!route.lazy) {\r\n    return;\r\n  }\r\n  let lazyRoute = await route.lazy();\r\n  if (!route.lazy) {\r\n    return;\r\n  }\r\n  let routeToUpdate = manifest[route.id];\r\n  invariant(routeToUpdate, \"No route found in manifest\");\r\n  let routeUpdates = {};\r\n  for (let lazyRouteProperty in lazyRoute) {\r\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\r\n    let isPropertyStaticallyDefined = staticRouteValue !== void 0 && // This property isn't static since it should always be updated based\r\n    // on the route updates\r\n    lazyRouteProperty !== \"hasErrorBoundary\";\r\n    warning(\r\n      !isPropertyStaticallyDefined,\r\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" defined but its lazy function is also returning a value for this property. The lazy route property \"${lazyRouteProperty}\" will be ignored.`\r\n    );\r\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\r\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\r\n    }\r\n  }\r\n  Object.assign(routeToUpdate, routeUpdates);\r\n  Object.assign(routeToUpdate, {\r\n    // To keep things framework agnostic, we use the provided `mapRouteProperties`\r\n    // function to set the framework-aware properties (`element`/`hasErrorBoundary`)\r\n    // since the logic will differ between frameworks.\r\n    ...mapRouteProperties2(routeToUpdate),\r\n    lazy: void 0\r\n  });\r\n}\r\nasync function defaultDataStrategy({\r\n  matches\r\n}) {\r\n  let matchesToLoad = matches.filter((m) => m.shouldLoad);\r\n  let results = await Promise.all(matchesToLoad.map((m) => m.resolve()));\r\n  return results.reduce(\r\n    (acc, result, i) => Object.assign(acc, { [matchesToLoad[i].route.id]: result }),\r\n    {}\r\n  );\r\n}\r\nasync function callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties2, requestContext) {\r\n  let loadRouteDefinitionsPromises = matches.map(\r\n    (m) => m.route.lazy ? loadLazyRouteModule(m.route, mapRouteProperties2, manifest) : void 0\r\n  );\r\n  let dsMatches = matches.map((match, i) => {\r\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\r\n    let shouldLoad = matchesToLoad.some((m) => m.route.id === match.route.id);\r\n    let resolve = async (handlerOverride) => {\r\n      if (handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) {\r\n        shouldLoad = true;\r\n      }\r\n      return shouldLoad ? callLoaderOrAction(\r\n        type,\r\n        request,\r\n        match,\r\n        loadRoutePromise,\r\n        handlerOverride,\r\n        requestContext\r\n      ) : Promise.resolve({ type: \"data\" /* data */, result: void 0 });\r\n    };\r\n    return {\r\n      ...match,\r\n      shouldLoad,\r\n      resolve\r\n    };\r\n  });\r\n  let results = await dataStrategyImpl({\r\n    matches: dsMatches,\r\n    request,\r\n    params: matches[0].params,\r\n    fetcherKey,\r\n    context: requestContext\r\n  });\r\n  try {\r\n    await Promise.all(loadRouteDefinitionsPromises);\r\n  } catch (e) {\r\n  }\r\n  return results;\r\n}\r\nasync function callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, staticContext) {\r\n  let result;\r\n  let onReject;\r\n  let runHandler = (handler) => {\r\n    let reject;\r\n    let abortPromise = new Promise((_, r) => reject = r);\r\n    onReject = () => reject();\r\n    request.signal.addEventListener(\"abort\", onReject);\r\n    let actualHandler = (ctx) => {\r\n      if (typeof handler !== \"function\") {\r\n        return Promise.reject(\r\n          new Error(\r\n            `You cannot call the handler for a route which defines a boolean \"${type}\" [routeId: ${match.route.id}]`\r\n          )\r\n        );\r\n      }\r\n      return handler(\r\n        {\r\n          request,\r\n          params: match.params,\r\n          context: staticContext\r\n        },\r\n        ...ctx !== void 0 ? [ctx] : []\r\n      );\r\n    };\r\n    let handlerPromise = (async () => {\r\n      try {\r\n        let val = await (handlerOverride ? handlerOverride((ctx) => actualHandler(ctx)) : actualHandler());\r\n        return { type: \"data\", result: val };\r\n      } catch (e) {\r\n        return { type: \"error\", result: e };\r\n      }\r\n    })();\r\n    return Promise.race([handlerPromise, abortPromise]);\r\n  };\r\n  try {\r\n    let handler = match.route[type];\r\n    if (loadRoutePromise) {\r\n      if (handler) {\r\n        let handlerError;\r\n        let [value] = await Promise.all([\r\n          // If the handler throws, don't let it immediately bubble out,\r\n          // since we need to let the lazy() execution finish so we know if this\r\n          // route has a boundary that can handle the error\r\n          runHandler(handler).catch((e) => {\r\n            handlerError = e;\r\n          }),\r\n          loadRoutePromise\r\n        ]);\r\n        if (handlerError !== void 0) {\r\n          throw handlerError;\r\n        }\r\n        result = value;\r\n      } else {\r\n        await loadRoutePromise;\r\n        handler = match.route[type];\r\n        if (handler) {\r\n          result = await runHandler(handler);\r\n        } else if (type === \"action\") {\r\n          let url = new URL(request.url);\r\n          let pathname = url.pathname + url.search;\r\n          throw getInternalRouterError(405, {\r\n            method: request.method,\r\n            pathname,\r\n            routeId: match.route.id\r\n          });\r\n        } else {\r\n          return { type: \"data\" /* data */, result: void 0 };\r\n        }\r\n      }\r\n    } else if (!handler) {\r\n      let url = new URL(request.url);\r\n      let pathname = url.pathname + url.search;\r\n      throw getInternalRouterError(404, {\r\n        pathname\r\n      });\r\n    } else {\r\n      result = await runHandler(handler);\r\n    }\r\n  } catch (e) {\r\n    return { type: \"error\" /* error */, result: e };\r\n  } finally {\r\n    if (onReject) {\r\n      request.signal.removeEventListener(\"abort\", onReject);\r\n    }\r\n  }\r\n  return result;\r\n}\r\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\r\n  let { result, type } = dataStrategyResult;\r\n  if (isResponse(result)) {\r\n    let data2;\r\n    try {\r\n      let contentType = result.headers.get(\"Content-Type\");\r\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\r\n        if (result.body == null) {\r\n          data2 = null;\r\n        } else {\r\n          data2 = await result.json();\r\n        }\r\n      } else {\r\n        data2 = await result.text();\r\n      }\r\n    } catch (e) {\r\n      return { type: \"error\" /* error */, error: e };\r\n    }\r\n    if (type === \"error\" /* error */) {\r\n      return {\r\n        type: \"error\" /* error */,\r\n        error: new ErrorResponseImpl(result.status, result.statusText, data2),\r\n        statusCode: result.status,\r\n        headers: result.headers\r\n      };\r\n    }\r\n    return {\r\n      type: \"data\" /* data */,\r\n      data: data2,\r\n      statusCode: result.status,\r\n      headers: result.headers\r\n    };\r\n  }\r\n  if (type === \"error\" /* error */) {\r\n    if (isDataWithResponseInit(result)) {\r\n      if (result.data instanceof Error) {\r\n        return {\r\n          type: \"error\" /* error */,\r\n          error: result.data,\r\n          statusCode: result.init?.status,\r\n          headers: result.init?.headers ? new Headers(result.init.headers) : void 0\r\n        };\r\n      }\r\n      return {\r\n        type: \"error\" /* error */,\r\n        error: new ErrorResponseImpl(\r\n          result.init?.status || 500,\r\n          void 0,\r\n          result.data\r\n        ),\r\n        statusCode: isRouteErrorResponse(result) ? result.status : void 0,\r\n        headers: result.init?.headers ? new Headers(result.init.headers) : void 0\r\n      };\r\n    }\r\n    return {\r\n      type: \"error\" /* error */,\r\n      error: result,\r\n      statusCode: isRouteErrorResponse(result) ? result.status : void 0\r\n    };\r\n  }\r\n  if (isDataWithResponseInit(result)) {\r\n    return {\r\n      type: \"data\" /* data */,\r\n      data: result.data,\r\n      statusCode: result.init?.status,\r\n      headers: result.init?.headers ? new Headers(result.init.headers) : void 0\r\n    };\r\n  }\r\n  return { type: \"data\" /* data */, data: result };\r\n}\r\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename) {\r\n  let location = response.headers.get(\"Location\");\r\n  invariant(\r\n    location,\r\n    \"Redirects returned/thrown from loaders/actions must have a Location header\"\r\n  );\r\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\r\n    let trimmedMatches = matches.slice(\r\n      0,\r\n      matches.findIndex((m) => m.route.id === routeId) + 1\r\n    );\r\n    location = normalizeTo(\r\n      new URL(request.url),\r\n      trimmedMatches,\r\n      basename,\r\n      location\r\n    );\r\n    response.headers.set(\"Location\", location);\r\n  }\r\n  return response;\r\n}\r\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\r\n  if (ABSOLUTE_URL_REGEX.test(location)) {\r\n    let normalizedLocation = location;\r\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\r\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\r\n    if (url.origin === currentUrl.origin && isSameBasename) {\r\n      return url.pathname + url.search + url.hash;\r\n    }\r\n  }\r\n  return location;\r\n}\r\nfunction createClientSideRequest(history, location, signal, submission) {\r\n  let url = history.createURL(stripHashFromPath(location)).toString();\r\n  let init = { signal };\r\n  if (submission && isMutationMethod(submission.formMethod)) {\r\n    let { formMethod, formEncType } = submission;\r\n    init.method = formMethod.toUpperCase();\r\n    if (formEncType === \"application/json\") {\r\n      init.headers = new Headers({ \"Content-Type\": formEncType });\r\n      init.body = JSON.stringify(submission.json);\r\n    } else if (formEncType === \"text/plain\") {\r\n      init.body = submission.text;\r\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\r\n      init.body = convertFormDataToSearchParams(submission.formData);\r\n    } else {\r\n      init.body = submission.formData;\r\n    }\r\n  }\r\n  return new Request(url, init);\r\n}\r\nfunction convertFormDataToSearchParams(formData) {\r\n  let searchParams = new URLSearchParams();\r\n  for (let [key, value] of formData.entries()) {\r\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\r\n  }\r\n  return searchParams;\r\n}\r\nfunction convertSearchParamsToFormData(searchParams) {\r\n  let formData = new FormData();\r\n  for (let [key, value] of searchParams.entries()) {\r\n    formData.append(key, value);\r\n  }\r\n  return formData;\r\n}\r\nfunction processRouteLoaderData(matches, results, pendingActionResult, isStaticHandler = false, skipLoaderErrorBubbling = false) {\r\n  let loaderData = {};\r\n  let errors = null;\r\n  let statusCode;\r\n  let foundError = false;\r\n  let loaderHeaders = {};\r\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : void 0;\r\n  matches.forEach((match) => {\r\n    if (!(match.route.id in results)) {\r\n      return;\r\n    }\r\n    let id = match.route.id;\r\n    let result = results[id];\r\n    invariant(\r\n      !isRedirectResult(result),\r\n      \"Cannot handle redirect results in processLoaderData\"\r\n    );\r\n    if (isErrorResult(result)) {\r\n      let error = result.error;\r\n      if (pendingError !== void 0) {\r\n        error = pendingError;\r\n        pendingError = void 0;\r\n      }\r\n      errors = errors || {};\r\n      if (skipLoaderErrorBubbling) {\r\n        errors[id] = error;\r\n      } else {\r\n        let boundaryMatch = findNearestBoundary(matches, id);\r\n        if (errors[boundaryMatch.route.id] == null) {\r\n          errors[boundaryMatch.route.id] = error;\r\n        }\r\n      }\r\n      if (!isStaticHandler) {\r\n        loaderData[id] = ResetLoaderDataSymbol;\r\n      }\r\n      if (!foundError) {\r\n        foundError = true;\r\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\r\n      }\r\n      if (result.headers) {\r\n        loaderHeaders[id] = result.headers;\r\n      }\r\n    } else {\r\n      loaderData[id] = result.data;\r\n      if (result.statusCode && result.statusCode !== 200 && !foundError) {\r\n        statusCode = result.statusCode;\r\n      }\r\n      if (result.headers) {\r\n        loaderHeaders[id] = result.headers;\r\n      }\r\n    }\r\n  });\r\n  if (pendingError !== void 0 && pendingActionResult) {\r\n    errors = { [pendingActionResult[0]]: pendingError };\r\n    loaderData[pendingActionResult[0]] = void 0;\r\n  }\r\n  return {\r\n    loaderData,\r\n    errors,\r\n    statusCode: statusCode || 200,\r\n    loaderHeaders\r\n  };\r\n}\r\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults) {\r\n  let { loaderData, errors } = processRouteLoaderData(\r\n    matches,\r\n    results,\r\n    pendingActionResult\r\n  );\r\n  revalidatingFetchers.forEach((rf) => {\r\n    let { key, match, controller } = rf;\r\n    let result = fetcherResults[key];\r\n    invariant(result, \"Did not find corresponding fetcher result\");\r\n    if (controller && controller.signal.aborted) {\r\n      return;\r\n    } else if (isErrorResult(result)) {\r\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\r\n      if (!(errors && errors[boundaryMatch.route.id])) {\r\n        errors = {\r\n          ...errors,\r\n          [boundaryMatch.route.id]: result.error\r\n        };\r\n      }\r\n      state.fetchers.delete(key);\r\n    } else if (isRedirectResult(result)) {\r\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\r\n    } else {\r\n      let doneFetcher = getDoneFetcher(result.data);\r\n      state.fetchers.set(key, doneFetcher);\r\n    }\r\n  });\r\n  return { loaderData, errors };\r\n}\r\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\r\n  let mergedLoaderData = Object.entries(newLoaderData).filter(([, v]) => v !== ResetLoaderDataSymbol).reduce((merged, [k, v]) => {\r\n    merged[k] = v;\r\n    return merged;\r\n  }, {});\r\n  for (let match of matches) {\r\n    let id = match.route.id;\r\n    if (!newLoaderData.hasOwnProperty(id) && loaderData.hasOwnProperty(id) && match.route.loader) {\r\n      mergedLoaderData[id] = loaderData[id];\r\n    }\r\n    if (errors && errors.hasOwnProperty(id)) {\r\n      break;\r\n    }\r\n  }\r\n  return mergedLoaderData;\r\n}\r\nfunction getActionDataForCommit(pendingActionResult) {\r\n  if (!pendingActionResult) {\r\n    return {};\r\n  }\r\n  return isErrorResult(pendingActionResult[1]) ? {\r\n    // Clear out prior actionData on errors\r\n    actionData: {}\r\n  } : {\r\n    actionData: {\r\n      [pendingActionResult[0]]: pendingActionResult[1].data\r\n    }\r\n  };\r\n}\r\nfunction findNearestBoundary(matches, routeId) {\r\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1) : [...matches];\r\n  return eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) || matches[0];\r\n}\r\nfunction getShortCircuitMatches(routes) {\r\n  let route = routes.length === 1 ? routes[0] : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\r\n    id: `__shim-error-route__`\r\n  };\r\n  return {\r\n    matches: [\r\n      {\r\n        params: {},\r\n        pathname: \"\",\r\n        pathnameBase: \"\",\r\n        route\r\n      }\r\n    ],\r\n    route\r\n  };\r\n}\r\nfunction getInternalRouterError(status, {\r\n  pathname,\r\n  routeId,\r\n  method,\r\n  type,\r\n  message\r\n} = {}) {\r\n  let statusText = \"Unknown Server Error\";\r\n  let errorMessage = \"Unknown @remix-run/router error\";\r\n  if (status === 400) {\r\n    statusText = \"Bad Request\";\r\n    if (method && pathname && routeId) {\r\n      errorMessage = `You made a ${method} request to \"${pathname}\" but did not provide a \\`loader\\` for route \"${routeId}\", so there is no way to handle the request.`;\r\n    } else if (type === \"invalid-body\") {\r\n      errorMessage = \"Unable to encode submission body\";\r\n    }\r\n  } else if (status === 403) {\r\n    statusText = \"Forbidden\";\r\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\r\n  } else if (status === 404) {\r\n    statusText = \"Not Found\";\r\n    errorMessage = `No route matches URL \"${pathname}\"`;\r\n  } else if (status === 405) {\r\n    statusText = \"Method Not Allowed\";\r\n    if (method && pathname && routeId) {\r\n      errorMessage = `You made a ${method.toUpperCase()} request to \"${pathname}\" but did not provide an \\`action\\` for route \"${routeId}\", so there is no way to handle the request.`;\r\n    } else if (method) {\r\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\r\n    }\r\n  }\r\n  return new ErrorResponseImpl(\r\n    status || 500,\r\n    statusText,\r\n    new Error(errorMessage),\r\n    true\r\n  );\r\n}\r\nfunction findRedirect(results) {\r\n  let entries = Object.entries(results);\r\n  for (let i = entries.length - 1; i >= 0; i--) {\r\n    let [key, result] = entries[i];\r\n    if (isRedirectResult(result)) {\r\n      return { key, result };\r\n    }\r\n  }\r\n}\r\nfunction stripHashFromPath(path) {\r\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\r\n  return createPath({ ...parsedPath, hash: \"\" });\r\n}\r\nfunction isHashChangeOnly(a, b) {\r\n  if (a.pathname !== b.pathname || a.search !== b.search) {\r\n    return false;\r\n  }\r\n  if (a.hash === \"\") {\r\n    return b.hash !== \"\";\r\n  } else if (a.hash === b.hash) {\r\n    return true;\r\n  } else if (b.hash !== \"\") {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nfunction isDataStrategyResult(result) {\r\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === \"data\" /* data */ || result.type === \"error\" /* error */);\r\n}\r\nfunction isRedirectDataStrategyResult(result) {\r\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\r\n}\r\nfunction isErrorResult(result) {\r\n  return result.type === \"error\" /* error */;\r\n}\r\nfunction isRedirectResult(result) {\r\n  return (result && result.type) === \"redirect\" /* redirect */;\r\n}\r\nfunction isDataWithResponseInit(value) {\r\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\r\n}\r\nfunction isResponse(value) {\r\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\r\n}\r\nfunction isRedirectStatusCode(statusCode) {\r\n  return redirectStatusCodes.has(statusCode);\r\n}\r\nfunction isRedirectResponse(result) {\r\n  return isResponse(result) && isRedirectStatusCode(result.status) && result.headers.has(\"Location\");\r\n}\r\nfunction isValidMethod(method) {\r\n  return validRequestMethods.has(method.toUpperCase());\r\n}\r\nfunction isMutationMethod(method) {\r\n  return validMutationMethods.has(method.toUpperCase());\r\n}\r\nfunction hasNakedIndexQuery(search) {\r\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\r\n}\r\nfunction getTargetMatch(matches, location) {\r\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\r\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\r\n    return matches[matches.length - 1];\r\n  }\r\n  let pathMatches = getPathContributingMatches(matches);\r\n  return pathMatches[pathMatches.length - 1];\r\n}\r\nfunction getSubmissionFromNavigation(navigation) {\r\n  let { formMethod, formAction, formEncType, text, formData, json } = navigation;\r\n  if (!formMethod || !formAction || !formEncType) {\r\n    return;\r\n  }\r\n  if (text != null) {\r\n    return {\r\n      formMethod,\r\n      formAction,\r\n      formEncType,\r\n      formData: void 0,\r\n      json: void 0,\r\n      text\r\n    };\r\n  } else if (formData != null) {\r\n    return {\r\n      formMethod,\r\n      formAction,\r\n      formEncType,\r\n      formData,\r\n      json: void 0,\r\n      text: void 0\r\n    };\r\n  } else if (json !== void 0) {\r\n    return {\r\n      formMethod,\r\n      formAction,\r\n      formEncType,\r\n      formData: void 0,\r\n      json,\r\n      text: void 0\r\n    };\r\n  }\r\n}\r\nfunction getLoadingNavigation(location, submission) {\r\n  if (submission) {\r\n    let navigation = {\r\n      state: \"loading\",\r\n      location,\r\n      formMethod: submission.formMethod,\r\n      formAction: submission.formAction,\r\n      formEncType: submission.formEncType,\r\n      formData: submission.formData,\r\n      json: submission.json,\r\n      text: submission.text\r\n    };\r\n    return navigation;\r\n  } else {\r\n    let navigation = {\r\n      state: \"loading\",\r\n      location,\r\n      formMethod: void 0,\r\n      formAction: void 0,\r\n      formEncType: void 0,\r\n      formData: void 0,\r\n      json: void 0,\r\n      text: void 0\r\n    };\r\n    return navigation;\r\n  }\r\n}\r\nfunction getSubmittingNavigation(location, submission) {\r\n  let navigation = {\r\n    state: \"submitting\",\r\n    location,\r\n    formMethod: submission.formMethod,\r\n    formAction: submission.formAction,\r\n    formEncType: submission.formEncType,\r\n    formData: submission.formData,\r\n    json: submission.json,\r\n    text: submission.text\r\n  };\r\n  return navigation;\r\n}\r\nfunction getLoadingFetcher(submission, data2) {\r\n  if (submission) {\r\n    let fetcher = {\r\n      state: \"loading\",\r\n      formMethod: submission.formMethod,\r\n      formAction: submission.formAction,\r\n      formEncType: submission.formEncType,\r\n      formData: submission.formData,\r\n      json: submission.json,\r\n      text: submission.text,\r\n      data: data2\r\n    };\r\n    return fetcher;\r\n  } else {\r\n    let fetcher = {\r\n      state: \"loading\",\r\n      formMethod: void 0,\r\n      formAction: void 0,\r\n      formEncType: void 0,\r\n      formData: void 0,\r\n      json: void 0,\r\n      text: void 0,\r\n      data: data2\r\n    };\r\n    return fetcher;\r\n  }\r\n}\r\nfunction getSubmittingFetcher(submission, existingFetcher) {\r\n  let fetcher = {\r\n    state: \"submitting\",\r\n    formMethod: submission.formMethod,\r\n    formAction: submission.formAction,\r\n    formEncType: submission.formEncType,\r\n    formData: submission.formData,\r\n    json: submission.json,\r\n    text: submission.text,\r\n    data: existingFetcher ? existingFetcher.data : void 0\r\n  };\r\n  return fetcher;\r\n}\r\nfunction getDoneFetcher(data2) {\r\n  let fetcher = {\r\n    state: \"idle\",\r\n    formMethod: void 0,\r\n    formAction: void 0,\r\n    formEncType: void 0,\r\n    formData: void 0,\r\n    json: void 0,\r\n    text: void 0,\r\n    data: data2\r\n  };\r\n  return fetcher;\r\n}\r\nfunction restoreAppliedTransitions(_window, transitions) {\r\n  try {\r\n    let sessionPositions = _window.sessionStorage.getItem(\r\n      TRANSITIONS_STORAGE_KEY\r\n    );\r\n    if (sessionPositions) {\r\n      let json = JSON.parse(sessionPositions);\r\n      for (let [k, v] of Object.entries(json || {})) {\r\n        if (v && Array.isArray(v)) {\r\n          transitions.set(k, new Set(v || []));\r\n        }\r\n      }\r\n    }\r\n  } catch (e) {\r\n  }\r\n}\r\nfunction persistAppliedTransitions(_window, transitions) {\r\n  if (transitions.size > 0) {\r\n    let json = {};\r\n    for (let [k, v] of transitions) {\r\n      json[k] = [...v];\r\n    }\r\n    try {\r\n      _window.sessionStorage.setItem(\r\n        TRANSITIONS_STORAGE_KEY,\r\n        JSON.stringify(json)\r\n      );\r\n    } catch (error) {\r\n      warning(\r\n        false,\r\n        `Failed to save applied view transitions in sessionStorage (${error}).`\r\n      );\r\n    }\r\n  }\r\n}\r\nfunction createDeferred() {\r\n  let resolve;\r\n  let reject;\r\n  let promise = new Promise((res, rej) => {\r\n    resolve = async (val) => {\r\n      res(val);\r\n      try {\r\n        await promise;\r\n      } catch (e) {\r\n      }\r\n    };\r\n    reject = async (error) => {\r\n      rej(error);\r\n      try {\r\n        await promise;\r\n      } catch (e) {\r\n      }\r\n    };\r\n  });\r\n  return {\r\n    promise,\r\n    //@ts-ignore\r\n    resolve,\r\n    //@ts-ignore\r\n    reject\r\n  };\r\n}\r\n\r\n// lib/components.tsx\r\nimport * as React3 from \"react\";\r\n\r\n// lib/context.ts\r\nimport * as React from \"react\";\r\nvar DataRouterContext = React.createContext(null);\r\nDataRouterContext.displayName = \"DataRouter\";\r\nvar DataRouterStateContext = React.createContext(null);\r\nDataRouterStateContext.displayName = \"DataRouterState\";\r\nvar ViewTransitionContext = React.createContext({\r\n  isTransitioning: false\r\n});\r\nViewTransitionContext.displayName = \"ViewTransition\";\r\nvar FetchersContext = React.createContext(\r\n  /* @__PURE__ */ new Map()\r\n);\r\nFetchersContext.displayName = \"Fetchers\";\r\nvar AwaitContext = React.createContext(null);\r\nAwaitContext.displayName = \"Await\";\r\nvar NavigationContext = React.createContext(\r\n  null\r\n);\r\nNavigationContext.displayName = \"Navigation\";\r\nvar LocationContext = React.createContext(\r\n  null\r\n);\r\nLocationContext.displayName = \"Location\";\r\nvar RouteContext = React.createContext({\r\n  outlet: null,\r\n  matches: [],\r\n  isDataRoute: false\r\n});\r\nRouteContext.displayName = \"Route\";\r\nvar RouteErrorContext = React.createContext(null);\r\nRouteErrorContext.displayName = \"RouteError\";\r\n\r\n// lib/hooks.tsx\r\nimport * as React2 from \"react\";\r\nvar ENABLE_DEV_WARNINGS = true;\r\nfunction useHref(to, { relative } = {}) {\r\n  invariant(\r\n    useInRouterContext(),\r\n    // TODO: This error is probably because they somehow have 2 versions of the\r\n    // router loaded. We can help them understand how to avoid that.\r\n    `useHref() may be used only in the context of a <Router> component.`\r\n  );\r\n  let { basename, navigator: navigator2 } = React2.useContext(NavigationContext);\r\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\r\n  let joinedPathname = pathname;\r\n  if (basename !== \"/\") {\r\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\r\n  }\r\n  return navigator2.createHref({ pathname: joinedPathname, search, hash });\r\n}\r\nfunction useInRouterContext() {\r\n  return React2.useContext(LocationContext) != null;\r\n}\r\nfunction useLocation() {\r\n  invariant(\r\n    useInRouterContext(),\r\n    // TODO: This error is probably because they somehow have 2 versions of the\r\n    // router loaded. We can help them understand how to avoid that.\r\n    `useLocation() may be used only in the context of a <Router> component.`\r\n  );\r\n  return React2.useContext(LocationContext).location;\r\n}\r\nfunction useNavigationType() {\r\n  return React2.useContext(LocationContext).navigationType;\r\n}\r\nfunction useMatch(pattern) {\r\n  invariant(\r\n    useInRouterContext(),\r\n    // TODO: This error is probably because they somehow have 2 versions of the\r\n    // router loaded. We can help them understand how to avoid that.\r\n    `useMatch() may be used only in the context of a <Router> component.`\r\n  );\r\n  let { pathname } = useLocation();\r\n  return React2.useMemo(\r\n    () => matchPath(pattern, decodePath(pathname)),\r\n    [pathname, pattern]\r\n  );\r\n}\r\nvar navigateEffectWarning = `You should call navigate() in a React.useEffect(), not when your component is first rendered.`;\r\nfunction useIsomorphicLayoutEffect(cb) {\r\n  let isStatic = React2.useContext(NavigationContext).static;\r\n  if (!isStatic) {\r\n    React2.useLayoutEffect(cb);\r\n  }\r\n}\r\nfunction useNavigate() {\r\n  let { isDataRoute } = React2.useContext(RouteContext);\r\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\r\n}\r\nfunction useNavigateUnstable() {\r\n  invariant(\r\n    useInRouterContext(),\r\n    // TODO: This error is probably because they somehow have 2 versions of the\r\n    // router loaded. We can help them understand how to avoid that.\r\n    `useNavigate() may be used only in the context of a <Router> component.`\r\n  );\r\n  let dataRouterContext = React2.useContext(DataRouterContext);\r\n  let { basename, navigator: navigator2 } = React2.useContext(NavigationContext);\r\n  let { matches } = React2.useContext(RouteContext);\r\n  let { pathname: locationPathname } = useLocation();\r\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\r\n  let activeRef = React2.useRef(false);\r\n  useIsomorphicLayoutEffect(() => {\r\n    activeRef.current = true;\r\n  });\r\n  let navigate = React2.useCallback(\r\n    (to, options = {}) => {\r\n      warning(activeRef.current, navigateEffectWarning);\r\n      if (!activeRef.current) return;\r\n      if (typeof to === \"number\") {\r\n        navigator2.go(to);\r\n        return;\r\n      }\r\n      let path = resolveTo(\r\n        to,\r\n        JSON.parse(routePathnamesJson),\r\n        locationPathname,\r\n        options.relative === \"path\"\r\n      );\r\n      if (dataRouterContext == null && basename !== \"/\") {\r\n        path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\r\n      }\r\n      (!!options.replace ? navigator2.replace : navigator2.push)(\r\n        path,\r\n        options.state,\r\n        options\r\n      );\r\n    },\r\n    [\r\n      basename,\r\n      navigator2,\r\n      routePathnamesJson,\r\n      locationPathname,\r\n      dataRouterContext\r\n    ]\r\n  );\r\n  return navigate;\r\n}\r\nvar OutletContext = React2.createContext(null);\r\nfunction useOutletContext() {\r\n  return React2.useContext(OutletContext);\r\n}\r\nfunction useOutlet(context) {\r\n  let outlet = React2.useContext(RouteContext).outlet;\r\n  if (outlet) {\r\n    return /* @__PURE__ */ React2.createElement(OutletContext.Provider, { value: context }, outlet);\r\n  }\r\n  return outlet;\r\n}\r\nfunction useParams() {\r\n  let { matches } = React2.useContext(RouteContext);\r\n  let routeMatch = matches[matches.length - 1];\r\n  return routeMatch ? routeMatch.params : {};\r\n}\r\nfunction useResolvedPath(to, { relative } = {}) {\r\n  let { matches } = React2.useContext(RouteContext);\r\n  let { pathname: locationPathname } = useLocation();\r\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\r\n  return React2.useMemo(\r\n    () => resolveTo(\r\n      to,\r\n      JSON.parse(routePathnamesJson),\r\n      locationPathname,\r\n      relative === \"path\"\r\n    ),\r\n    [to, routePathnamesJson, locationPathname, relative]\r\n  );\r\n}\r\nfunction useRoutes(routes, locationArg) {\r\n  return useRoutesImpl(routes, locationArg);\r\n}\r\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\r\n  invariant(\r\n    useInRouterContext(),\r\n    // TODO: This error is probably because they somehow have 2 versions of the\r\n    // router loaded. We can help them understand how to avoid that.\r\n    `useRoutes() may be used only in the context of a <Router> component.`\r\n  );\r\n  let { navigator: navigator2, static: isStatic } = React2.useContext(NavigationContext);\r\n  let { matches: parentMatches } = React2.useContext(RouteContext);\r\n  let routeMatch = parentMatches[parentMatches.length - 1];\r\n  let parentParams = routeMatch ? routeMatch.params : {};\r\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\r\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\r\n  let parentRoute = routeMatch && routeMatch.route;\r\n  if (ENABLE_DEV_WARNINGS) {\r\n    let parentPath = parentRoute && parentRoute.path || \"\";\r\n    warningOnce(\r\n      parentPathname,\r\n      !parentRoute || parentPath.endsWith(\"*\") || parentPath.endsWith(\"*?\"),\r\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at \"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the parent route path has no trailing \"*\". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.\r\n\r\nPlease change the parent <Route path=\"${parentPath}\"> to <Route path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\r\n    );\r\n  }\r\n  let locationFromContext = useLocation();\r\n  let location;\r\n  if (locationArg) {\r\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\r\n    invariant(\r\n      parentPathnameBase === \"/\" || parsedLocationArg.pathname?.startsWith(parentPathnameBase),\r\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\r\n    );\r\n    location = parsedLocationArg;\r\n  } else {\r\n    location = locationFromContext;\r\n  }\r\n  let pathname = location.pathname || \"/\";\r\n  let remainingPathname = pathname;\r\n  if (parentPathnameBase !== \"/\") {\r\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\r\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\r\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\r\n  }\r\n  let matches = !isStatic && dataRouterState && dataRouterState.matches && dataRouterState.matches.length > 0 ? dataRouterState.matches : matchRoutes(routes, { pathname: remainingPathname });\r\n  if (ENABLE_DEV_WARNINGS) {\r\n    warning(\r\n      parentRoute || matches != null,\r\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\r\n    );\r\n    warning(\r\n      matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0 || matches[matches.length - 1].route.lazy !== void 0,\r\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\r\n    );\r\n  }\r\n  let renderedMatches = _renderMatches(\r\n    matches && matches.map(\r\n      (match) => Object.assign({}, match, {\r\n        params: Object.assign({}, parentParams, match.params),\r\n        pathname: joinPaths([\r\n          parentPathnameBase,\r\n          // Re-encode pathnames that were decoded inside matchRoutes\r\n          navigator2.encodeLocation ? navigator2.encodeLocation(match.pathname).pathname : match.pathname\r\n        ]),\r\n        pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([\r\n          parentPathnameBase,\r\n          // Re-encode pathnames that were decoded inside matchRoutes\r\n          navigator2.encodeLocation ? navigator2.encodeLocation(match.pathnameBase).pathname : match.pathnameBase\r\n        ])\r\n      })\r\n    ),\r\n    parentMatches,\r\n    dataRouterState,\r\n    future\r\n  );\r\n  if (locationArg && renderedMatches) {\r\n    return /* @__PURE__ */ React2.createElement(\r\n      LocationContext.Provider,\r\n      {\r\n        value: {\r\n          location: {\r\n            pathname: \"/\",\r\n            search: \"\",\r\n            hash: \"\",\r\n            state: null,\r\n            key: \"default\",\r\n            ...location\r\n          },\r\n          navigationType: \"POP\" /* Pop */\r\n        }\r\n      },\r\n      renderedMatches\r\n    );\r\n  }\r\n  return renderedMatches;\r\n}\r\nfunction DefaultErrorComponent() {\r\n  let error = useRouteError();\r\n  let message = isRouteErrorResponse(error) ? `${error.status} ${error.statusText}` : error instanceof Error ? error.message : JSON.stringify(error);\r\n  let stack = error instanceof Error ? error.stack : null;\r\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\r\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\r\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\r\n  let devInfo = null;\r\n  if (ENABLE_DEV_WARNINGS) {\r\n    console.error(\r\n      \"Error handled by React Router default ErrorBoundary:\",\r\n      error\r\n    );\r\n    devInfo = /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\"p\", null, \"\\u{1F4BF} Hey developer \\u{1F44B}\"), /* @__PURE__ */ React2.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /* @__PURE__ */ React2.createElement(\"code\", { style: codeStyles }, \"ErrorBoundary\"), \" or\", \" \", /* @__PURE__ */ React2.createElement(\"code\", { style: codeStyles }, \"errorElement\"), \" prop on your route.\"));\r\n  }\r\n  return /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\"h2\", null, \"Unexpected Application Error!\"), /* @__PURE__ */ React2.createElement(\"h3\", { style: { fontStyle: \"italic\" } }, message), stack ? /* @__PURE__ */ React2.createElement(\"pre\", { style: preStyles }, stack) : null, devInfo);\r\n}\r\nvar defaultErrorElement = /* @__PURE__ */ React2.createElement(DefaultErrorComponent, null);\r\nvar RenderErrorBoundary = class extends React2.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      location: props.location,\r\n      revalidation: props.revalidation,\r\n      error: props.error\r\n    };\r\n  }\r\n  static getDerivedStateFromError(error) {\r\n    return { error };\r\n  }\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\r\n      return {\r\n        error: props.error,\r\n        location: props.location,\r\n        revalidation: props.revalidation\r\n      };\r\n    }\r\n    return {\r\n      error: props.error !== void 0 ? props.error : state.error,\r\n      location: state.location,\r\n      revalidation: props.revalidation || state.revalidation\r\n    };\r\n  }\r\n  componentDidCatch(error, errorInfo) {\r\n    console.error(\r\n      \"React Router caught the following error during render\",\r\n      error,\r\n      errorInfo\r\n    );\r\n  }\r\n  render() {\r\n    return this.state.error !== void 0 ? /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: this.props.routeContext }, /* @__PURE__ */ React2.createElement(\r\n      RouteErrorContext.Provider,\r\n      {\r\n        value: this.state.error,\r\n        children: this.props.component\r\n      }\r\n    )) : this.props.children;\r\n  }\r\n};\r\nfunction RenderedRoute({ routeContext, match, children }) {\r\n  let dataRouterContext = React2.useContext(DataRouterContext);\r\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\r\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\r\n  }\r\n  return /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: routeContext }, children);\r\n}\r\nfunction _renderMatches(matches, parentMatches = [], dataRouterState = null, future = null) {\r\n  if (matches == null) {\r\n    if (!dataRouterState) {\r\n      return null;\r\n    }\r\n    if (dataRouterState.errors) {\r\n      matches = dataRouterState.matches;\r\n    } else if (parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\r\n      matches = dataRouterState.matches;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  let renderedMatches = matches;\r\n  let errors = dataRouterState?.errors;\r\n  if (errors != null) {\r\n    let errorIndex = renderedMatches.findIndex(\r\n      (m) => m.route.id && errors?.[m.route.id] !== void 0\r\n    );\r\n    invariant(\r\n      errorIndex >= 0,\r\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\r\n        errors\r\n      ).join(\",\")}`\r\n    );\r\n    renderedMatches = renderedMatches.slice(\r\n      0,\r\n      Math.min(renderedMatches.length, errorIndex + 1)\r\n    );\r\n  }\r\n  let renderFallback = false;\r\n  let fallbackIndex = -1;\r\n  if (dataRouterState) {\r\n    for (let i = 0; i < renderedMatches.length; i++) {\r\n      let match = renderedMatches[i];\r\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\r\n        fallbackIndex = i;\r\n      }\r\n      if (match.route.id) {\r\n        let { loaderData, errors: errors2 } = dataRouterState;\r\n        let needsToRunLoader = match.route.loader && !loaderData.hasOwnProperty(match.route.id) && (!errors2 || errors2[match.route.id] === void 0);\r\n        if (match.route.lazy || needsToRunLoader) {\r\n          renderFallback = true;\r\n          if (fallbackIndex >= 0) {\r\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\r\n          } else {\r\n            renderedMatches = [renderedMatches[0]];\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return renderedMatches.reduceRight((outlet, match, index) => {\r\n    let error;\r\n    let shouldRenderHydrateFallback = false;\r\n    let errorElement = null;\r\n    let hydrateFallbackElement = null;\r\n    if (dataRouterState) {\r\n      error = errors && match.route.id ? errors[match.route.id] : void 0;\r\n      errorElement = match.route.errorElement || defaultErrorElement;\r\n      if (renderFallback) {\r\n        if (fallbackIndex < 0 && index === 0) {\r\n          warningOnce(\r\n            \"route-fallback\",\r\n            false,\r\n            \"No `HydrateFallback` element provided to render during initial hydration\"\r\n          );\r\n          shouldRenderHydrateFallback = true;\r\n          hydrateFallbackElement = null;\r\n        } else if (fallbackIndex === index) {\r\n          shouldRenderHydrateFallback = true;\r\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\r\n        }\r\n      }\r\n    }\r\n    let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));\r\n    let getChildren = () => {\r\n      let children;\r\n      if (error) {\r\n        children = errorElement;\r\n      } else if (shouldRenderHydrateFallback) {\r\n        children = hydrateFallbackElement;\r\n      } else if (match.route.Component) {\r\n        children = /* @__PURE__ */ React2.createElement(match.route.Component, null);\r\n      } else if (match.route.element) {\r\n        children = match.route.element;\r\n      } else {\r\n        children = outlet;\r\n      }\r\n      return /* @__PURE__ */ React2.createElement(\r\n        RenderedRoute,\r\n        {\r\n          match,\r\n          routeContext: {\r\n            outlet,\r\n            matches: matches2,\r\n            isDataRoute: dataRouterState != null\r\n          },\r\n          children\r\n        }\r\n      );\r\n    };\r\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */ React2.createElement(\r\n      RenderErrorBoundary,\r\n      {\r\n        location: dataRouterState.location,\r\n        revalidation: dataRouterState.revalidation,\r\n        component: errorElement,\r\n        error,\r\n        children: getChildren(),\r\n        routeContext: { outlet: null, matches: matches2, isDataRoute: true }\r\n      }\r\n    ) : getChildren();\r\n  }, null);\r\n}\r\nfunction getDataRouterConsoleError(hookName) {\r\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\r\n}\r\nfunction useDataRouterContext(hookName) {\r\n  let ctx = React2.useContext(DataRouterContext);\r\n  invariant(ctx, getDataRouterConsoleError(hookName));\r\n  return ctx;\r\n}\r\nfunction useDataRouterState(hookName) {\r\n  let state = React2.useContext(DataRouterStateContext);\r\n  invariant(state, getDataRouterConsoleError(hookName));\r\n  return state;\r\n}\r\nfunction useRouteContext(hookName) {\r\n  let route = React2.useContext(RouteContext);\r\n  invariant(route, getDataRouterConsoleError(hookName));\r\n  return route;\r\n}\r\nfunction useCurrentRouteId(hookName) {\r\n  let route = useRouteContext(hookName);\r\n  let thisRoute = route.matches[route.matches.length - 1];\r\n  invariant(\r\n    thisRoute.route.id,\r\n    `${hookName} can only be used on routes that contain a unique \"id\"`\r\n  );\r\n  return thisRoute.route.id;\r\n}\r\nfunction useRouteId() {\r\n  return useCurrentRouteId(\"useRouteId\" /* UseRouteId */);\r\n}\r\nfunction useNavigation() {\r\n  let state = useDataRouterState(\"useNavigation\" /* UseNavigation */);\r\n  return state.navigation;\r\n}\r\nfunction useRevalidator() {\r\n  let dataRouterContext = useDataRouterContext(\"useRevalidator\" /* UseRevalidator */);\r\n  let state = useDataRouterState(\"useRevalidator\" /* UseRevalidator */);\r\n  return React2.useMemo(\r\n    () => ({\r\n      async revalidate() {\r\n        await dataRouterContext.router.revalidate();\r\n      },\r\n      state: state.revalidation\r\n    }),\r\n    [dataRouterContext.router, state.revalidation]\r\n  );\r\n}\r\nfunction useMatches() {\r\n  let { matches, loaderData } = useDataRouterState(\r\n    \"useMatches\" /* UseMatches */\r\n  );\r\n  return React2.useMemo(\r\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\r\n    [matches, loaderData]\r\n  );\r\n}\r\nfunction useLoaderData() {\r\n  let state = useDataRouterState(\"useLoaderData\" /* UseLoaderData */);\r\n  let routeId = useCurrentRouteId(\"useLoaderData\" /* UseLoaderData */);\r\n  return state.loaderData[routeId];\r\n}\r\nfunction useRouteLoaderData(routeId) {\r\n  let state = useDataRouterState(\"useRouteLoaderData\" /* UseRouteLoaderData */);\r\n  return state.loaderData[routeId];\r\n}\r\nfunction useActionData() {\r\n  let state = useDataRouterState(\"useActionData\" /* UseActionData */);\r\n  let routeId = useCurrentRouteId(\"useLoaderData\" /* UseLoaderData */);\r\n  return state.actionData ? state.actionData[routeId] : void 0;\r\n}\r\nfunction useRouteError() {\r\n  let error = React2.useContext(RouteErrorContext);\r\n  let state = useDataRouterState(\"useRouteError\" /* UseRouteError */);\r\n  let routeId = useCurrentRouteId(\"useRouteError\" /* UseRouteError */);\r\n  if (error !== void 0) {\r\n    return error;\r\n  }\r\n  return state.errors?.[routeId];\r\n}\r\nfunction useAsyncValue() {\r\n  let value = React2.useContext(AwaitContext);\r\n  return value?._data;\r\n}\r\nfunction useAsyncError() {\r\n  let value = React2.useContext(AwaitContext);\r\n  return value?._error;\r\n}\r\nvar blockerId = 0;\r\nfunction useBlocker(shouldBlock) {\r\n  let { router, basename } = useDataRouterContext(\"useBlocker\" /* UseBlocker */);\r\n  let state = useDataRouterState(\"useBlocker\" /* UseBlocker */);\r\n  let [blockerKey, setBlockerKey] = React2.useState(\"\");\r\n  let blockerFunction = React2.useCallback(\r\n    (arg) => {\r\n      if (typeof shouldBlock !== \"function\") {\r\n        return !!shouldBlock;\r\n      }\r\n      if (basename === \"/\") {\r\n        return shouldBlock(arg);\r\n      }\r\n      let { currentLocation, nextLocation, historyAction } = arg;\r\n      return shouldBlock({\r\n        currentLocation: {\r\n          ...currentLocation,\r\n          pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\r\n        },\r\n        nextLocation: {\r\n          ...nextLocation,\r\n          pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\r\n        },\r\n        historyAction\r\n      });\r\n    },\r\n    [basename, shouldBlock]\r\n  );\r\n  React2.useEffect(() => {\r\n    let key = String(++blockerId);\r\n    setBlockerKey(key);\r\n    return () => router.deleteBlocker(key);\r\n  }, [router]);\r\n  React2.useEffect(() => {\r\n    if (blockerKey !== \"\") {\r\n      router.getBlocker(blockerKey, blockerFunction);\r\n    }\r\n  }, [router, blockerKey, blockerFunction]);\r\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\r\n}\r\nfunction useNavigateStable() {\r\n  let { router } = useDataRouterContext(\"useNavigate\" /* UseNavigateStable */);\r\n  let id = useCurrentRouteId(\"useNavigate\" /* UseNavigateStable */);\r\n  let activeRef = React2.useRef(false);\r\n  useIsomorphicLayoutEffect(() => {\r\n    activeRef.current = true;\r\n  });\r\n  let navigate = React2.useCallback(\r\n    async (to, options = {}) => {\r\n      warning(activeRef.current, navigateEffectWarning);\r\n      if (!activeRef.current) return;\r\n      if (typeof to === \"number\") {\r\n        router.navigate(to);\r\n      } else {\r\n        await router.navigate(to, { fromRouteId: id, ...options });\r\n      }\r\n    },\r\n    [router, id]\r\n  );\r\n  return navigate;\r\n}\r\nvar alreadyWarned = {};\r\nfunction warningOnce(key, cond, message) {\r\n  if (!cond && !alreadyWarned[key]) {\r\n    alreadyWarned[key] = true;\r\n    warning(false, message);\r\n  }\r\n}\r\n\r\n// lib/server-runtime/warnings.ts\r\nvar alreadyWarned2 = {};\r\nfunction warnOnce(condition, message) {\r\n  if (!condition && !alreadyWarned2[message]) {\r\n    alreadyWarned2[message] = true;\r\n    console.warn(message);\r\n  }\r\n}\r\n\r\n// lib/components.tsx\r\nvar ENABLE_DEV_WARNINGS2 = true;\r\nfunction mapRouteProperties(route) {\r\n  let updates = {\r\n    // Note: this check also occurs in createRoutesFromChildren so update\r\n    // there if you change this -- please and thank you!\r\n    hasErrorBoundary: route.hasErrorBoundary || route.ErrorBoundary != null || route.errorElement != null\r\n  };\r\n  if (route.Component) {\r\n    if (ENABLE_DEV_WARNINGS2) {\r\n      if (route.element) {\r\n        warning(\r\n          false,\r\n          \"You should not include both `Component` and `element` on your route - `Component` will be used.\"\r\n        );\r\n      }\r\n    }\r\n    Object.assign(updates, {\r\n      element: React3.createElement(route.Component),\r\n      Component: void 0\r\n    });\r\n  }\r\n  if (route.HydrateFallback) {\r\n    if (ENABLE_DEV_WARNINGS2) {\r\n      if (route.hydrateFallbackElement) {\r\n        warning(\r\n          false,\r\n          \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - `HydrateFallback` will be used.\"\r\n        );\r\n      }\r\n    }\r\n    Object.assign(updates, {\r\n      hydrateFallbackElement: React3.createElement(route.HydrateFallback),\r\n      HydrateFallback: void 0\r\n    });\r\n  }\r\n  if (route.ErrorBoundary) {\r\n    if (ENABLE_DEV_WARNINGS2) {\r\n      if (route.errorElement) {\r\n        warning(\r\n          false,\r\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - `ErrorBoundary` will be used.\"\r\n        );\r\n      }\r\n    }\r\n    Object.assign(updates, {\r\n      errorElement: React3.createElement(route.ErrorBoundary),\r\n      ErrorBoundary: void 0\r\n    });\r\n  }\r\n  return updates;\r\n}\r\nfunction createMemoryRouter(routes, opts) {\r\n  return createRouter({\r\n    basename: opts?.basename,\r\n    future: opts?.future,\r\n    history: createMemoryHistory({\r\n      initialEntries: opts?.initialEntries,\r\n      initialIndex: opts?.initialIndex\r\n    }),\r\n    hydrationData: opts?.hydrationData,\r\n    routes,\r\n    mapRouteProperties,\r\n    dataStrategy: opts?.dataStrategy,\r\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation\r\n  }).initialize();\r\n}\r\nvar Deferred = class {\r\n  constructor() {\r\n    this.status = \"pending\";\r\n    this.promise = new Promise((resolve, reject) => {\r\n      this.resolve = (value) => {\r\n        if (this.status === \"pending\") {\r\n          this.status = \"resolved\";\r\n          resolve(value);\r\n        }\r\n      };\r\n      this.reject = (reason) => {\r\n        if (this.status === \"pending\") {\r\n          this.status = \"rejected\";\r\n          reject(reason);\r\n        }\r\n      };\r\n    });\r\n  }\r\n};\r\nfunction RouterProvider({\r\n  router,\r\n  flushSync: reactDomFlushSyncImpl\r\n}) {\r\n  let [state, setStateImpl] = React3.useState(router.state);\r\n  let [pendingState, setPendingState] = React3.useState();\r\n  let [vtContext, setVtContext] = React3.useState({\r\n    isTransitioning: false\r\n  });\r\n  let [renderDfd, setRenderDfd] = React3.useState();\r\n  let [transition, setTransition] = React3.useState();\r\n  let [interruption, setInterruption] = React3.useState();\r\n  let fetcherData = React3.useRef(/* @__PURE__ */ new Map());\r\n  let setState = React3.useCallback(\r\n    (newState, { deletedFetchers, flushSync, viewTransitionOpts }) => {\r\n      newState.fetchers.forEach((fetcher, key) => {\r\n        if (fetcher.data !== void 0) {\r\n          fetcherData.current.set(key, fetcher.data);\r\n        }\r\n      });\r\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\r\n      warnOnce(\r\n        flushSync === false || reactDomFlushSyncImpl != null,\r\n        'You provided the `flushSync` option to a router update, but you are not using the `<RouterProvider>` from `react-router/dom` so `ReactDOM.flushSync()` is unavailable.  Please update your app to `import { RouterProvider } from \"react-router/dom\"` and ensure you have `react-dom` installed as a dependency to use the `flushSync` option.'\r\n      );\r\n      let isViewTransitionAvailable = router.window != null && router.window.document != null && typeof router.window.document.startViewTransition === \"function\";\r\n      warnOnce(\r\n        viewTransitionOpts == null || isViewTransitionAvailable,\r\n        \"You provided the `viewTransition` option to a router update, but you do not appear to be running in a DOM environment as `window.startViewTransition` is not available.\"\r\n      );\r\n      if (!viewTransitionOpts || !isViewTransitionAvailable) {\r\n        if (reactDomFlushSyncImpl && flushSync) {\r\n          reactDomFlushSyncImpl(() => setStateImpl(newState));\r\n        } else {\r\n          React3.startTransition(() => setStateImpl(newState));\r\n        }\r\n        return;\r\n      }\r\n      if (reactDomFlushSyncImpl && flushSync) {\r\n        reactDomFlushSyncImpl(() => {\r\n          if (transition) {\r\n            renderDfd && renderDfd.resolve();\r\n            transition.skipTransition();\r\n          }\r\n          setVtContext({\r\n            isTransitioning: true,\r\n            flushSync: true,\r\n            currentLocation: viewTransitionOpts.currentLocation,\r\n            nextLocation: viewTransitionOpts.nextLocation\r\n          });\r\n        });\r\n        let t = router.window.document.startViewTransition(() => {\r\n          reactDomFlushSyncImpl(() => setStateImpl(newState));\r\n        });\r\n        t.finished.finally(() => {\r\n          reactDomFlushSyncImpl(() => {\r\n            setRenderDfd(void 0);\r\n            setTransition(void 0);\r\n            setPendingState(void 0);\r\n            setVtContext({ isTransitioning: false });\r\n          });\r\n        });\r\n        reactDomFlushSyncImpl(() => setTransition(t));\r\n        return;\r\n      }\r\n      if (transition) {\r\n        renderDfd && renderDfd.resolve();\r\n        transition.skipTransition();\r\n        setInterruption({\r\n          state: newState,\r\n          currentLocation: viewTransitionOpts.currentLocation,\r\n          nextLocation: viewTransitionOpts.nextLocation\r\n        });\r\n      } else {\r\n        setPendingState(newState);\r\n        setVtContext({\r\n          isTransitioning: true,\r\n          flushSync: false,\r\n          currentLocation: viewTransitionOpts.currentLocation,\r\n          nextLocation: viewTransitionOpts.nextLocation\r\n        });\r\n      }\r\n    },\r\n    [router.window, reactDomFlushSyncImpl, transition, renderDfd]\r\n  );\r\n  React3.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\r\n  React3.useEffect(() => {\r\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\r\n      setRenderDfd(new Deferred());\r\n    }\r\n  }, [vtContext]);\r\n  React3.useEffect(() => {\r\n    if (renderDfd && pendingState && router.window) {\r\n      let newState = pendingState;\r\n      let renderPromise = renderDfd.promise;\r\n      let transition2 = router.window.document.startViewTransition(async () => {\r\n        React3.startTransition(() => setStateImpl(newState));\r\n        await renderPromise;\r\n      });\r\n      transition2.finished.finally(() => {\r\n        setRenderDfd(void 0);\r\n        setTransition(void 0);\r\n        setPendingState(void 0);\r\n        setVtContext({ isTransitioning: false });\r\n      });\r\n      setTransition(transition2);\r\n    }\r\n  }, [pendingState, renderDfd, router.window]);\r\n  React3.useEffect(() => {\r\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\r\n      renderDfd.resolve();\r\n    }\r\n  }, [renderDfd, transition, state.location, pendingState]);\r\n  React3.useEffect(() => {\r\n    if (!vtContext.isTransitioning && interruption) {\r\n      setPendingState(interruption.state);\r\n      setVtContext({\r\n        isTransitioning: true,\r\n        flushSync: false,\r\n        currentLocation: interruption.currentLocation,\r\n        nextLocation: interruption.nextLocation\r\n      });\r\n      setInterruption(void 0);\r\n    }\r\n  }, [vtContext.isTransitioning, interruption]);\r\n  let navigator2 = React3.useMemo(() => {\r\n    return {\r\n      createHref: router.createHref,\r\n      encodeLocation: router.encodeLocation,\r\n      go: (n) => router.navigate(n),\r\n      push: (to, state2, opts) => router.navigate(to, {\r\n        state: state2,\r\n        preventScrollReset: opts?.preventScrollReset\r\n      }),\r\n      replace: (to, state2, opts) => router.navigate(to, {\r\n        replace: true,\r\n        state: state2,\r\n        preventScrollReset: opts?.preventScrollReset\r\n      })\r\n    };\r\n  }, [router]);\r\n  let basename = router.basename || \"/\";\r\n  let dataRouterContext = React3.useMemo(\r\n    () => ({\r\n      router,\r\n      navigator: navigator2,\r\n      static: false,\r\n      basename\r\n    }),\r\n    [router, navigator2, basename]\r\n  );\r\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React3.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React3.createElement(FetchersContext.Provider, { value: fetcherData.current }, /* @__PURE__ */ React3.createElement(ViewTransitionContext.Provider, { value: vtContext }, /* @__PURE__ */ React3.createElement(\r\n    Router,\r\n    {\r\n      basename,\r\n      location: state.location,\r\n      navigationType: state.historyAction,\r\n      navigator: navigator2\r\n    },\r\n    /* @__PURE__ */ React3.createElement(\r\n      MemoizedDataRoutes,\r\n      {\r\n        routes: router.routes,\r\n        future: router.future,\r\n        state\r\n      }\r\n    )\r\n  ))))), null);\r\n}\r\nvar MemoizedDataRoutes = React3.memo(DataRoutes);\r\nfunction DataRoutes({\r\n  routes,\r\n  future,\r\n  state\r\n}) {\r\n  return useRoutesImpl(routes, void 0, state, future);\r\n}\r\nfunction MemoryRouter({\r\n  basename,\r\n  children,\r\n  initialEntries,\r\n  initialIndex\r\n}) {\r\n  let historyRef = React3.useRef();\r\n  if (historyRef.current == null) {\r\n    historyRef.current = createMemoryHistory({\r\n      initialEntries,\r\n      initialIndex,\r\n      v5Compat: true\r\n    });\r\n  }\r\n  let history = historyRef.current;\r\n  let [state, setStateImpl] = React3.useState({\r\n    action: history.action,\r\n    location: history.location\r\n  });\r\n  let setState = React3.useCallback(\r\n    (newState) => {\r\n      React3.startTransition(() => setStateImpl(newState));\r\n    },\r\n    [setStateImpl]\r\n  );\r\n  React3.useLayoutEffect(() => history.listen(setState), [history, setState]);\r\n  return /* @__PURE__ */ React3.createElement(\r\n    Router,\r\n    {\r\n      basename,\r\n      children,\r\n      location: state.location,\r\n      navigationType: state.action,\r\n      navigator: history\r\n    }\r\n  );\r\n}\r\nfunction Navigate({\r\n  to,\r\n  replace: replace2,\r\n  state,\r\n  relative\r\n}) {\r\n  invariant(\r\n    useInRouterContext(),\r\n    // TODO: This error is probably because they somehow have 2 versions of\r\n    // the router loaded. We can help them understand how to avoid that.\r\n    `<Navigate> may be used only in the context of a <Router> component.`\r\n  );\r\n  let { static: isStatic } = React3.useContext(NavigationContext);\r\n  warning(\r\n    !isStatic,\r\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.`\r\n  );\r\n  let { matches } = React3.useContext(RouteContext);\r\n  let { pathname: locationPathname } = useLocation();\r\n  let navigate = useNavigate();\r\n  let path = resolveTo(\r\n    to,\r\n    getResolveToMatches(matches),\r\n    locationPathname,\r\n    relative === \"path\"\r\n  );\r\n  let jsonPath = JSON.stringify(path);\r\n  React3.useEffect(() => {\r\n    navigate(JSON.parse(jsonPath), { replace: replace2, state, relative });\r\n  }, [navigate, jsonPath, relative, replace2, state]);\r\n  return null;\r\n}\r\nfunction Outlet(props) {\r\n  return useOutlet(props.context);\r\n}\r\nfunction Route(_props) {\r\n  invariant(\r\n    false,\r\n    `A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.`\r\n  );\r\n}\r\nfunction Router({\r\n  basename: basenameProp = \"/\",\r\n  children = null,\r\n  location: locationProp,\r\n  navigationType = \"POP\" /* Pop */,\r\n  navigator: navigator2,\r\n  static: staticProp = false\r\n}) {\r\n  invariant(\r\n    !useInRouterContext(),\r\n    `You cannot render a <Router> inside another <Router>. You should never have more than one in your app.`\r\n  );\r\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\r\n  let navigationContext = React3.useMemo(\r\n    () => ({\r\n      basename,\r\n      navigator: navigator2,\r\n      static: staticProp,\r\n      future: {}\r\n    }),\r\n    [basename, navigator2, staticProp]\r\n  );\r\n  if (typeof locationProp === \"string\") {\r\n    locationProp = parsePath(locationProp);\r\n  }\r\n  let {\r\n    pathname = \"/\",\r\n    search = \"\",\r\n    hash = \"\",\r\n    state = null,\r\n    key = \"default\"\r\n  } = locationProp;\r\n  let locationContext = React3.useMemo(() => {\r\n    let trailingPathname = stripBasename(pathname, basename);\r\n    if (trailingPathname == null) {\r\n      return null;\r\n    }\r\n    return {\r\n      location: {\r\n        pathname: trailingPathname,\r\n        search,\r\n        hash,\r\n        state,\r\n        key\r\n      },\r\n      navigationType\r\n    };\r\n  }, [basename, pathname, search, hash, state, key, navigationType]);\r\n  warning(\r\n    locationContext != null,\r\n    `<Router basename=\"${basename}\"> is not able to match the URL \"${pathname}${search}${hash}\" because it does not start with the basename, so the <Router> won't render anything.`\r\n  );\r\n  if (locationContext == null) {\r\n    return null;\r\n  }\r\n  return /* @__PURE__ */ React3.createElement(NavigationContext.Provider, { value: navigationContext }, /* @__PURE__ */ React3.createElement(LocationContext.Provider, { children, value: locationContext }));\r\n}\r\nfunction Routes({\r\n  children,\r\n  location\r\n}) {\r\n  return useRoutes(createRoutesFromChildren(children), location);\r\n}\r\nfunction Await({\r\n  children,\r\n  errorElement,\r\n  resolve\r\n}) {\r\n  return /* @__PURE__ */ React3.createElement(AwaitErrorBoundary, { resolve, errorElement }, /* @__PURE__ */ React3.createElement(ResolveAwait, null, children));\r\n}\r\nvar AwaitErrorBoundary = class extends React3.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { error: null };\r\n  }\r\n  static getDerivedStateFromError(error) {\r\n    return { error };\r\n  }\r\n  componentDidCatch(error, errorInfo) {\r\n    console.error(\r\n      \"<Await> caught the following error during render\",\r\n      error,\r\n      errorInfo\r\n    );\r\n  }\r\n  render() {\r\n    let { children, errorElement, resolve } = this.props;\r\n    let promise = null;\r\n    let status = 0 /* pending */;\r\n    if (!(resolve instanceof Promise)) {\r\n      status = 1 /* success */;\r\n      promise = Promise.resolve();\r\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\r\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\r\n    } else if (this.state.error) {\r\n      status = 2 /* error */;\r\n      let renderError = this.state.error;\r\n      promise = Promise.reject().catch(() => {\r\n      });\r\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\r\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\r\n    } else if (resolve._tracked) {\r\n      promise = resolve;\r\n      status = \"_error\" in promise ? 2 /* error */ : \"_data\" in promise ? 1 /* success */ : 0 /* pending */;\r\n    } else {\r\n      status = 0 /* pending */;\r\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\r\n      promise = resolve.then(\r\n        (data2) => Object.defineProperty(resolve, \"_data\", { get: () => data2 }),\r\n        (error) => Object.defineProperty(resolve, \"_error\", { get: () => error })\r\n      );\r\n    }\r\n    if (status === 2 /* error */ && !errorElement) {\r\n      throw promise._error;\r\n    }\r\n    if (status === 2 /* error */) {\r\n      return /* @__PURE__ */ React3.createElement(AwaitContext.Provider, { value: promise, children: errorElement });\r\n    }\r\n    if (status === 1 /* success */) {\r\n      return /* @__PURE__ */ React3.createElement(AwaitContext.Provider, { value: promise, children });\r\n    }\r\n    throw promise;\r\n  }\r\n};\r\nfunction ResolveAwait({\r\n  children\r\n}) {\r\n  let data2 = useAsyncValue();\r\n  let toRender = typeof children === \"function\" ? children(data2) : children;\r\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, toRender);\r\n}\r\nfunction createRoutesFromChildren(children, parentPath = []) {\r\n  let routes = [];\r\n  React3.Children.forEach(children, (element, index) => {\r\n    if (!React3.isValidElement(element)) {\r\n      return;\r\n    }\r\n    let treePath = [...parentPath, index];\r\n    if (element.type === React3.Fragment) {\r\n      routes.push.apply(\r\n        routes,\r\n        createRoutesFromChildren(element.props.children, treePath)\r\n      );\r\n      return;\r\n    }\r\n    invariant(\r\n      element.type === Route,\r\n      `[${typeof element.type === \"string\" ? element.type : element.type.name}] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\r\n    );\r\n    invariant(\r\n      !element.props.index || !element.props.children,\r\n      \"An index route cannot have child routes.\"\r\n    );\r\n    let route = {\r\n      id: element.props.id || treePath.join(\"-\"),\r\n      caseSensitive: element.props.caseSensitive,\r\n      element: element.props.element,\r\n      Component: element.props.Component,\r\n      index: element.props.index,\r\n      path: element.props.path,\r\n      loader: element.props.loader,\r\n      action: element.props.action,\r\n      hydrateFallbackElement: element.props.hydrateFallbackElement,\r\n      HydrateFallback: element.props.HydrateFallback,\r\n      errorElement: element.props.errorElement,\r\n      ErrorBoundary: element.props.ErrorBoundary,\r\n      hasErrorBoundary: element.props.hasErrorBoundary === true || element.props.ErrorBoundary != null || element.props.errorElement != null,\r\n      shouldRevalidate: element.props.shouldRevalidate,\r\n      handle: element.props.handle,\r\n      lazy: element.props.lazy\r\n    };\r\n    if (element.props.children) {\r\n      route.children = createRoutesFromChildren(\r\n        element.props.children,\r\n        treePath\r\n      );\r\n    }\r\n    routes.push(route);\r\n  });\r\n  return routes;\r\n}\r\nvar createRoutesFromElements = createRoutesFromChildren;\r\nfunction renderMatches(matches) {\r\n  return _renderMatches(matches);\r\n}\r\n\r\n// lib/dom/lib.tsx\r\nimport * as React10 from \"react\";\r\n\r\n// lib/dom/dom.ts\r\nvar defaultMethod = \"get\";\r\nvar defaultEncType = \"application/x-www-form-urlencoded\";\r\nfunction isHtmlElement(object) {\r\n  return object != null && typeof object.tagName === \"string\";\r\n}\r\nfunction isButtonElement(object) {\r\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\r\n}\r\nfunction isFormElement(object) {\r\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\r\n}\r\nfunction isInputElement(object) {\r\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\r\n}\r\nfunction isModifiedEvent(event) {\r\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\r\n}\r\nfunction shouldProcessLinkClick(event, target) {\r\n  return event.button === 0 && // Ignore everything but left clicks\r\n  (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\r\n  !isModifiedEvent(event);\r\n}\r\nfunction createSearchParams(init = \"\") {\r\n  return new URLSearchParams(\r\n    typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo2, key) => {\r\n      let value = init[key];\r\n      return memo2.concat(\r\n        Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\r\n      );\r\n    }, [])\r\n  );\r\n}\r\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\r\n  let searchParams = createSearchParams(locationSearch);\r\n  if (defaultSearchParams) {\r\n    defaultSearchParams.forEach((_, key) => {\r\n      if (!searchParams.has(key)) {\r\n        defaultSearchParams.getAll(key).forEach((value) => {\r\n          searchParams.append(key, value);\r\n        });\r\n      }\r\n    });\r\n  }\r\n  return searchParams;\r\n}\r\nvar _formDataSupportsSubmitter = null;\r\nfunction isFormDataSubmitterSupported() {\r\n  if (_formDataSupportsSubmitter === null) {\r\n    try {\r\n      new FormData(\r\n        document.createElement(\"form\"),\r\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\r\n        0\r\n      );\r\n      _formDataSupportsSubmitter = false;\r\n    } catch (e) {\r\n      _formDataSupportsSubmitter = true;\r\n    }\r\n  }\r\n  return _formDataSupportsSubmitter;\r\n}\r\nvar supportedFormEncTypes = /* @__PURE__ */ new Set([\r\n  \"application/x-www-form-urlencoded\",\r\n  \"multipart/form-data\",\r\n  \"text/plain\"\r\n]);\r\nfunction getFormEncType(encType) {\r\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\r\n    warning(\r\n      false,\r\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` and will default to \"${defaultEncType}\"`\r\n    );\r\n    return null;\r\n  }\r\n  return encType;\r\n}\r\nfunction getFormSubmissionInfo(target, basename) {\r\n  let method;\r\n  let action;\r\n  let encType;\r\n  let formData;\r\n  let body;\r\n  if (isFormElement(target)) {\r\n    let attr = target.getAttribute(\"action\");\r\n    action = attr ? stripBasename(attr, basename) : null;\r\n    method = target.getAttribute(\"method\") || defaultMethod;\r\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\r\n    formData = new FormData(target);\r\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\r\n    let form = target.form;\r\n    if (form == null) {\r\n      throw new Error(\r\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\r\n      );\r\n    }\r\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\r\n    action = attr ? stripBasename(attr, basename) : null;\r\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\r\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\r\n    formData = new FormData(form, target);\r\n    if (!isFormDataSubmitterSupported()) {\r\n      let { name, type, value } = target;\r\n      if (type === \"image\") {\r\n        let prefix = name ? `${name}.` : \"\";\r\n        formData.append(`${prefix}x`, \"0\");\r\n        formData.append(`${prefix}y`, \"0\");\r\n      } else if (name) {\r\n        formData.append(name, value);\r\n      }\r\n    }\r\n  } else if (isHtmlElement(target)) {\r\n    throw new Error(\r\n      `Cannot submit element that is not <form>, <button>, or <input type=\"submit|image\">`\r\n    );\r\n  } else {\r\n    method = defaultMethod;\r\n    action = null;\r\n    encType = defaultEncType;\r\n    body = target;\r\n  }\r\n  if (formData && encType === \"text/plain\") {\r\n    body = formData;\r\n    formData = void 0;\r\n  }\r\n  return { action, method: method.toLowerCase(), encType, formData, body };\r\n}\r\n\r\n// lib/dom/ssr/components.tsx\r\nimport * as React9 from \"react\";\r\n\r\n// lib/dom/ssr/invariant.ts\r\nfunction invariant2(value, message) {\r\n  if (value === false || value === null || typeof value === \"undefined\") {\r\n    throw new Error(message);\r\n  }\r\n}\r\n\r\n// lib/dom/ssr/routeModules.ts\r\nasync function loadRouteModule(route, routeModulesCache) {\r\n  if (route.id in routeModulesCache) {\r\n    return routeModulesCache[route.id];\r\n  }\r\n  try {\r\n    let routeModule = await import(\r\n      /* @vite-ignore */\r\n      /* webpackIgnore: true */\r\n      route.module\r\n    );\r\n    routeModulesCache[route.id] = routeModule;\r\n    return routeModule;\r\n  } catch (error) {\r\n    console.error(\r\n      `Error loading route module \\`${route.module}\\`, reloading page...`\r\n    );\r\n    console.error(error);\r\n    if (window.__reactRouterContext && window.__reactRouterContext.isSpaMode && // @ts-expect-error\r\n    import.meta.hot) {\r\n      throw error;\r\n    }\r\n    window.location.reload();\r\n    return new Promise(() => {\r\n    });\r\n  }\r\n}\r\n\r\n// lib/dom/ssr/links.ts\r\nfunction getKeyedLinksForMatches(matches, routeModules, manifest) {\r\n  let descriptors = matches.map((match) => {\r\n    let module = routeModules[match.route.id];\r\n    let route = manifest.routes[match.route.id];\r\n    return [\r\n      route && route.css ? route.css.map((href2) => ({ rel: \"stylesheet\", href: href2 })) : [],\r\n      module?.links?.() || []\r\n    ];\r\n  }).flat(2);\r\n  let preloads = getModuleLinkHrefs(matches, manifest);\r\n  return dedupeLinkDescriptors(descriptors, preloads);\r\n}\r\nfunction getRouteCssDescriptors(route) {\r\n  if (!route.css) return [];\r\n  return route.css.map((href2) => ({ rel: \"stylesheet\", href: href2 }));\r\n}\r\nasync function prefetchRouteCss(route) {\r\n  if (!route.css) return;\r\n  let descriptors = getRouteCssDescriptors(route);\r\n  await Promise.all(descriptors.map(prefetchStyleLink));\r\n}\r\nasync function prefetchStyleLinks(route, routeModule) {\r\n  if (!route.css && !routeModule.links || !isPreloadSupported()) return;\r\n  let descriptors = [];\r\n  if (route.css) {\r\n    descriptors.push(...getRouteCssDescriptors(route));\r\n  }\r\n  if (routeModule.links) {\r\n    descriptors.push(...routeModule.links());\r\n  }\r\n  if (descriptors.length === 0) return;\r\n  let styleLinks = [];\r\n  for (let descriptor of descriptors) {\r\n    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === \"stylesheet\") {\r\n      styleLinks.push({\r\n        ...descriptor,\r\n        rel: \"preload\",\r\n        as: \"style\"\r\n      });\r\n    }\r\n  }\r\n  await Promise.all(styleLinks.map(prefetchStyleLink));\r\n}\r\nasync function prefetchStyleLink(descriptor) {\r\n  return new Promise((resolve) => {\r\n    if (descriptor.media && !window.matchMedia(descriptor.media).matches || document.querySelector(\r\n      `link[rel=\"stylesheet\"][href=\"${descriptor.href}\"]`\r\n    )) {\r\n      return resolve();\r\n    }\r\n    let link = document.createElement(\"link\");\r\n    Object.assign(link, descriptor);\r\n    function removeLink() {\r\n      if (document.head.contains(link)) {\r\n        document.head.removeChild(link);\r\n      }\r\n    }\r\n    link.onload = () => {\r\n      removeLink();\r\n      resolve();\r\n    };\r\n    link.onerror = () => {\r\n      removeLink();\r\n      resolve();\r\n    };\r\n    document.head.appendChild(link);\r\n  });\r\n}\r\nfunction isPageLinkDescriptor(object) {\r\n  return object != null && typeof object.page === \"string\";\r\n}\r\nfunction isHtmlLinkDescriptor(object) {\r\n  if (object == null) {\r\n    return false;\r\n  }\r\n  if (object.href == null) {\r\n    return object.rel === \"preload\" && typeof object.imageSrcSet === \"string\" && typeof object.imageSizes === \"string\";\r\n  }\r\n  return typeof object.rel === \"string\" && typeof object.href === \"string\";\r\n}\r\nasync function getKeyedPrefetchLinks(matches, manifest, routeModules) {\r\n  let links = await Promise.all(\r\n    matches.map(async (match) => {\r\n      let route = manifest.routes[match.route.id];\r\n      if (route) {\r\n        let mod = await loadRouteModule(route, routeModules);\r\n        return mod.links ? mod.links() : [];\r\n      }\r\n      return [];\r\n    })\r\n  );\r\n  return dedupeLinkDescriptors(\r\n    links.flat(1).filter(isHtmlLinkDescriptor).filter((link) => link.rel === \"stylesheet\" || link.rel === \"preload\").map(\r\n      (link) => link.rel === \"stylesheet\" ? { ...link, rel: \"prefetch\", as: \"style\" } : { ...link, rel: \"prefetch\" }\r\n    )\r\n  );\r\n}\r\nfunction getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, mode) {\r\n  let isNew = (match, index) => {\r\n    if (!currentMatches[index]) return true;\r\n    return match.route.id !== currentMatches[index].route.id;\r\n  };\r\n  let matchPathChanged = (match, index) => {\r\n    return (\r\n      // param change, /users/123 -> /users/456\r\n      currentMatches[index].pathname !== match.pathname || // splat param changed, which is not present in match.path\r\n      // e.g. /files/images/avatar.jpg -> files/finances.xls\r\n      currentMatches[index].route.path?.endsWith(\"*\") && currentMatches[index].params[\"*\"] !== match.params[\"*\"]\r\n    );\r\n  };\r\n  if (mode === \"assets\") {\r\n    return nextMatches.filter(\r\n      (match, index) => isNew(match, index) || matchPathChanged(match, index)\r\n    );\r\n  }\r\n  if (mode === \"data\") {\r\n    return nextMatches.filter((match, index) => {\r\n      let manifestRoute = manifest.routes[match.route.id];\r\n      if (!manifestRoute || !manifestRoute.hasLoader) {\r\n        return false;\r\n      }\r\n      if (isNew(match, index) || matchPathChanged(match, index)) {\r\n        return true;\r\n      }\r\n      if (match.route.shouldRevalidate) {\r\n        let routeChoice = match.route.shouldRevalidate({\r\n          currentUrl: new URL(\r\n            location.pathname + location.search + location.hash,\r\n            window.origin\r\n          ),\r\n          currentParams: currentMatches[0]?.params || {},\r\n          nextUrl: new URL(page, window.origin),\r\n          nextParams: match.params,\r\n          defaultShouldRevalidate: true\r\n        });\r\n        if (typeof routeChoice === \"boolean\") {\r\n          return routeChoice;\r\n        }\r\n      }\r\n      return true;\r\n    });\r\n  }\r\n  return [];\r\n}\r\nfunction getModuleLinkHrefs(matches, manifest, { includeHydrateFallback } = {}) {\r\n  return dedupeHrefs(\r\n    matches.map((match) => {\r\n      let route = manifest.routes[match.route.id];\r\n      if (!route) return [];\r\n      let hrefs = [route.module];\r\n      if (route.clientActionModule) {\r\n        hrefs = hrefs.concat(route.clientActionModule);\r\n      }\r\n      if (route.clientLoaderModule) {\r\n        hrefs = hrefs.concat(route.clientLoaderModule);\r\n      }\r\n      if (includeHydrateFallback && route.hydrateFallbackModule) {\r\n        hrefs = hrefs.concat(route.hydrateFallbackModule);\r\n      }\r\n      if (route.imports) {\r\n        hrefs = hrefs.concat(route.imports);\r\n      }\r\n      return hrefs;\r\n    }).flat(1)\r\n  );\r\n}\r\nfunction dedupeHrefs(hrefs) {\r\n  return [...new Set(hrefs)];\r\n}\r\nfunction sortKeys(obj) {\r\n  let sorted = {};\r\n  let keys = Object.keys(obj).sort();\r\n  for (let key of keys) {\r\n    sorted[key] = obj[key];\r\n  }\r\n  return sorted;\r\n}\r\nfunction dedupeLinkDescriptors(descriptors, preloads) {\r\n  let set = /* @__PURE__ */ new Set();\r\n  let preloadsSet = new Set(preloads);\r\n  return descriptors.reduce((deduped, descriptor) => {\r\n    let alreadyModulePreload = preloads && !isPageLinkDescriptor(descriptor) && descriptor.as === \"script\" && descriptor.href && preloadsSet.has(descriptor.href);\r\n    if (alreadyModulePreload) {\r\n      return deduped;\r\n    }\r\n    let key = JSON.stringify(sortKeys(descriptor));\r\n    if (!set.has(key)) {\r\n      set.add(key);\r\n      deduped.push({ key, link: descriptor });\r\n    }\r\n    return deduped;\r\n  }, []);\r\n}\r\nvar _isPreloadSupported;\r\nfunction isPreloadSupported() {\r\n  if (_isPreloadSupported !== void 0) {\r\n    return _isPreloadSupported;\r\n  }\r\n  let el = document.createElement(\"link\");\r\n  _isPreloadSupported = el.relList.supports(\"preload\");\r\n  el = null;\r\n  return _isPreloadSupported;\r\n}\r\n\r\n// lib/dom/ssr/markup.ts\r\nvar ESCAPE_LOOKUP = {\r\n  \"&\": \"\\\\u0026\",\r\n  \">\": \"\\\\u003e\",\r\n  \"<\": \"\\\\u003c\",\r\n  \"\\u2028\": \"\\\\u2028\",\r\n  \"\\u2029\": \"\\\\u2029\"\r\n};\r\nvar ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\r\nfunction escapeHtml(html) {\r\n  return html.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);\r\n}\r\nfunction createHtml(html) {\r\n  return { __html: html };\r\n}\r\n\r\n// lib/dom/ssr/single-fetch.tsx\r\nimport * as React4 from \"react\";\r\nimport { decode } from \"turbo-stream\";\r\n\r\n// lib/dom/ssr/data.ts\r\nasync function createRequestInit(request) {\r\n  let init = { signal: request.signal };\r\n  if (request.method !== \"GET\") {\r\n    init.method = request.method;\r\n    let contentType = request.headers.get(\"Content-Type\");\r\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\r\n      init.headers = { \"Content-Type\": contentType };\r\n      init.body = JSON.stringify(await request.json());\r\n    } else if (contentType && /\\btext\\/plain\\b/.test(contentType)) {\r\n      init.headers = { \"Content-Type\": contentType };\r\n      init.body = await request.text();\r\n    } else if (contentType && /\\bapplication\\/x-www-form-urlencoded\\b/.test(contentType)) {\r\n      init.body = new URLSearchParams(await request.text());\r\n    } else {\r\n      init.body = await request.formData();\r\n    }\r\n  }\r\n  return init;\r\n}\r\n\r\n// lib/dom/ssr/single-fetch.tsx\r\nvar SingleFetchRedirectSymbol = Symbol(\"SingleFetchRedirect\");\r\nfunction StreamTransfer({\r\n  context,\r\n  identifier,\r\n  reader,\r\n  textDecoder,\r\n  nonce\r\n}) {\r\n  if (!context.renderMeta || !context.renderMeta.didRenderScripts) {\r\n    return null;\r\n  }\r\n  if (!context.renderMeta.streamCache) {\r\n    context.renderMeta.streamCache = {};\r\n  }\r\n  let { streamCache } = context.renderMeta;\r\n  let promise = streamCache[identifier];\r\n  if (!promise) {\r\n    promise = streamCache[identifier] = reader.read().then((result) => {\r\n      streamCache[identifier].result = {\r\n        done: result.done,\r\n        value: textDecoder.decode(result.value, { stream: true })\r\n      };\r\n    }).catch((e) => {\r\n      streamCache[identifier].error = e;\r\n    });\r\n  }\r\n  if (promise.error) {\r\n    throw promise.error;\r\n  }\r\n  if (promise.result === void 0) {\r\n    throw promise;\r\n  }\r\n  let { done, value } = promise.result;\r\n  let scriptTag = value ? /* @__PURE__ */ React4.createElement(\r\n    \"script\",\r\n    {\r\n      nonce,\r\n      dangerouslySetInnerHTML: {\r\n        __html: `window.__reactRouterContext.streamController.enqueue(${escapeHtml(\r\n          JSON.stringify(value)\r\n        )});`\r\n      }\r\n    }\r\n  ) : null;\r\n  if (done) {\r\n    return /* @__PURE__ */ React4.createElement(React4.Fragment, null, scriptTag, /* @__PURE__ */ React4.createElement(\r\n      \"script\",\r\n      {\r\n        nonce,\r\n        dangerouslySetInnerHTML: {\r\n          __html: `window.__reactRouterContext.streamController.close();`\r\n        }\r\n      }\r\n    ));\r\n  } else {\r\n    return /* @__PURE__ */ React4.createElement(React4.Fragment, null, scriptTag, /* @__PURE__ */ React4.createElement(React4.Suspense, null, /* @__PURE__ */ React4.createElement(\r\n      StreamTransfer,\r\n      {\r\n        context,\r\n        identifier: identifier + 1,\r\n        reader,\r\n        textDecoder,\r\n        nonce\r\n      }\r\n    )));\r\n  }\r\n}\r\nfunction getSingleFetchDataStrategy(manifest, routeModules, ssr, getRouter) {\r\n  return async ({ request, matches, fetcherKey }) => {\r\n    if (request.method !== \"GET\") {\r\n      return singleFetchActionStrategy(request, matches);\r\n    }\r\n    if (!ssr) {\r\n      let foundRevalidatingServerLoader = matches.some(\r\n        (m) => m.shouldLoad && manifest.routes[m.route.id]?.hasLoader && !manifest.routes[m.route.id]?.hasClientLoader\r\n      );\r\n      if (!foundRevalidatingServerLoader) {\r\n        let matchesToLoad = matches.filter((m) => m.shouldLoad);\r\n        let url = stripIndexParam(singleFetchUrl(request.url));\r\n        let init = await createRequestInit(request);\r\n        let results = {};\r\n        await Promise.all(\r\n          matchesToLoad.map(\r\n            (m) => m.resolve(async (handler) => {\r\n              try {\r\n                let result = manifest.routes[m.route.id]?.hasClientLoader ? await fetchSingleLoader(handler, url, init, m.route.id) : await handler();\r\n                results[m.route.id] = { type: \"data\", result };\r\n              } catch (e) {\r\n                results[m.route.id] = { type: \"error\", result: e };\r\n              }\r\n            })\r\n          )\r\n        );\r\n        return results;\r\n      }\r\n    }\r\n    if (fetcherKey) {\r\n      return singleFetchLoaderFetcherStrategy(request, matches);\r\n    }\r\n    return singleFetchLoaderNavigationStrategy(\r\n      manifest,\r\n      routeModules,\r\n      ssr,\r\n      getRouter(),\r\n      request,\r\n      matches\r\n    );\r\n  };\r\n}\r\nasync function singleFetchActionStrategy(request, matches) {\r\n  let actionMatch = matches.find((m) => m.shouldLoad);\r\n  invariant2(actionMatch, \"No action match found\");\r\n  let actionStatus = void 0;\r\n  let result = await actionMatch.resolve(async (handler) => {\r\n    let result2 = await handler(async () => {\r\n      let url = singleFetchUrl(request.url);\r\n      let init = await createRequestInit(request);\r\n      let { data: data2, status } = await fetchAndDecode(url, init);\r\n      actionStatus = status;\r\n      return unwrapSingleFetchResult(\r\n        data2,\r\n        actionMatch.route.id\r\n      );\r\n    });\r\n    return result2;\r\n  });\r\n  if (isResponse(result.result) || isRouteErrorResponse(result.result)) {\r\n    return { [actionMatch.route.id]: result };\r\n  }\r\n  return {\r\n    [actionMatch.route.id]: {\r\n      type: result.type,\r\n      result: data(result.result, actionStatus)\r\n    }\r\n  };\r\n}\r\nasync function singleFetchLoaderNavigationStrategy(manifest, routeModules, ssr, router, request, matches) {\r\n  let routesParams = /* @__PURE__ */ new Set();\r\n  let foundOptOutRoute = false;\r\n  let routeDfds = matches.map(() => createDeferred2());\r\n  let routesLoadedPromise = Promise.all(routeDfds.map((d) => d.promise));\r\n  let singleFetchDfd = createDeferred2();\r\n  let url = stripIndexParam(singleFetchUrl(request.url));\r\n  let init = await createRequestInit(request);\r\n  let results = {};\r\n  let resolvePromise = Promise.all(\r\n    matches.map(\r\n      async (m, i) => m.resolve(async (handler) => {\r\n        routeDfds[i].resolve();\r\n        let manifestRoute = manifest.routes[m.route.id];\r\n        if (!m.shouldLoad) {\r\n          if (!router.state.initialized) {\r\n            return;\r\n          }\r\n          if (m.route.id in router.state.loaderData && manifestRoute && manifestRoute.hasLoader && routeModules[m.route.id]?.shouldRevalidate) {\r\n            foundOptOutRoute = true;\r\n            return;\r\n          }\r\n        }\r\n        if (manifestRoute && manifestRoute.hasClientLoader) {\r\n          if (manifestRoute.hasLoader) {\r\n            foundOptOutRoute = true;\r\n          }\r\n          try {\r\n            let result = await fetchSingleLoader(\r\n              handler,\r\n              url,\r\n              init,\r\n              m.route.id\r\n            );\r\n            results[m.route.id] = { type: \"data\", result };\r\n          } catch (e) {\r\n            results[m.route.id] = { type: \"error\", result: e };\r\n          }\r\n          return;\r\n        }\r\n        if (manifestRoute && manifestRoute.hasLoader) {\r\n          routesParams.add(m.route.id);\r\n        }\r\n        try {\r\n          let result = await handler(async () => {\r\n            let data2 = await singleFetchDfd.promise;\r\n            return unwrapSingleFetchResults(data2, m.route.id);\r\n          });\r\n          results[m.route.id] = {\r\n            type: \"data\",\r\n            result\r\n          };\r\n        } catch (e) {\r\n          results[m.route.id] = {\r\n            type: \"error\",\r\n            result: e\r\n          };\r\n        }\r\n      })\r\n    )\r\n  );\r\n  await routesLoadedPromise;\r\n  if ((!router.state.initialized || routesParams.size === 0) && !window.__reactRouterHdrActive) {\r\n    singleFetchDfd.resolve({});\r\n  } else {\r\n    try {\r\n      if (ssr && foundOptOutRoute && routesParams.size > 0) {\r\n        url.searchParams.set(\r\n          \"_routes\",\r\n          matches.filter((m) => routesParams.has(m.route.id)).map((m) => m.route.id).join(\",\")\r\n        );\r\n      }\r\n      let data2 = await fetchAndDecode(url, init);\r\n      singleFetchDfd.resolve(data2.data);\r\n    } catch (e) {\r\n      singleFetchDfd.reject(e);\r\n    }\r\n  }\r\n  await resolvePromise;\r\n  return results;\r\n}\r\nasync function singleFetchLoaderFetcherStrategy(request, matches) {\r\n  let fetcherMatch = matches.find((m) => m.shouldLoad);\r\n  invariant2(fetcherMatch, \"No fetcher match found\");\r\n  let result = await fetcherMatch.resolve(async (handler) => {\r\n    let url = stripIndexParam(singleFetchUrl(request.url));\r\n    let init = await createRequestInit(request);\r\n    return fetchSingleLoader(handler, url, init, fetcherMatch.route.id);\r\n  });\r\n  return { [fetcherMatch.route.id]: result };\r\n}\r\nfunction fetchSingleLoader(handler, url, init, routeId) {\r\n  return handler(async () => {\r\n    let singleLoaderUrl = new URL(url);\r\n    singleLoaderUrl.searchParams.set(\"_routes\", routeId);\r\n    let { data: data2 } = await fetchAndDecode(singleLoaderUrl, init);\r\n    return unwrapSingleFetchResults(data2, routeId);\r\n  });\r\n}\r\nfunction stripIndexParam(url) {\r\n  let indexValues = url.searchParams.getAll(\"index\");\r\n  url.searchParams.delete(\"index\");\r\n  let indexValuesToKeep = [];\r\n  for (let indexValue of indexValues) {\r\n    if (indexValue) {\r\n      indexValuesToKeep.push(indexValue);\r\n    }\r\n  }\r\n  for (let toKeep of indexValuesToKeep) {\r\n    url.searchParams.append(\"index\", toKeep);\r\n  }\r\n  return url;\r\n}\r\nfunction singleFetchUrl(reqUrl) {\r\n  let url = typeof reqUrl === \"string\" ? new URL(\r\n    reqUrl,\r\n    // This can be called during the SSR flow via PrefetchPageLinksImpl so\r\n    // don't assume window is available\r\n    typeof window === \"undefined\" ? \"server://singlefetch/\" : window.location.origin\r\n  ) : reqUrl;\r\n  if (url.pathname === \"/\") {\r\n    url.pathname = \"_root.data\";\r\n  } else {\r\n    url.pathname = `${url.pathname.replace(/\\/$/, \"\")}.data`;\r\n  }\r\n  return url;\r\n}\r\nasync function fetchAndDecode(url, init) {\r\n  let res = await fetch(url, init);\r\n  if (res.status === 404 && !res.headers.has(\"X-Remix-Response\")) {\r\n    throw new ErrorResponseImpl(404, \"Not Found\", true);\r\n  }\r\n  const NO_BODY_STATUS_CODES2 = /* @__PURE__ */ new Set([100, 101, 204, 205]);\r\n  if (NO_BODY_STATUS_CODES2.has(res.status)) {\r\n    if (!init.method || init.method === \"GET\") {\r\n      return { status: res.status, data: {} };\r\n    } else {\r\n      return { status: res.status, data: { data: void 0 } };\r\n    }\r\n  }\r\n  invariant2(res.body, \"No response body to decode\");\r\n  try {\r\n    let decoded = await decodeViaTurboStream(res.body, window);\r\n    return { status: res.status, data: decoded.value };\r\n  } catch (e) {\r\n    throw new Error(\"Unable to decode turbo-stream response\");\r\n  }\r\n}\r\nfunction decodeViaTurboStream(body, global2) {\r\n  return decode(body, {\r\n    plugins: [\r\n      (type, ...rest) => {\r\n        if (type === \"SanitizedError\") {\r\n          let [name, message, stack] = rest;\r\n          let Constructor = Error;\r\n          if (name && name in global2 && typeof global2[name] === \"function\") {\r\n            Constructor = global2[name];\r\n          }\r\n          let error = new Constructor(message);\r\n          error.stack = stack;\r\n          return { value: error };\r\n        }\r\n        if (type === \"ErrorResponse\") {\r\n          let [data2, status, statusText] = rest;\r\n          return {\r\n            value: new ErrorResponseImpl(status, statusText, data2)\r\n          };\r\n        }\r\n        if (type === \"SingleFetchRedirect\") {\r\n          return { value: { [SingleFetchRedirectSymbol]: rest[0] } };\r\n        }\r\n        if (type === \"SingleFetchClassInstance\") {\r\n          return { value: rest[0] };\r\n        }\r\n        if (type === \"SingleFetchFallback\") {\r\n          return { value: void 0 };\r\n        }\r\n      }\r\n    ]\r\n  });\r\n}\r\nfunction unwrapSingleFetchResults(results, routeId) {\r\n  let redirect2 = results[SingleFetchRedirectSymbol];\r\n  if (redirect2) {\r\n    return unwrapSingleFetchResult(redirect2, routeId);\r\n  }\r\n  return results[routeId] !== void 0 ? unwrapSingleFetchResult(results[routeId], routeId) : null;\r\n}\r\nfunction unwrapSingleFetchResult(result, routeId) {\r\n  if (\"error\" in result) {\r\n    throw result.error;\r\n  } else if (\"redirect\" in result) {\r\n    let headers = {};\r\n    if (result.revalidate) {\r\n      headers[\"X-Remix-Revalidate\"] = \"yes\";\r\n    }\r\n    if (result.reload) {\r\n      headers[\"X-Remix-Reload-Document\"] = \"yes\";\r\n    }\r\n    if (result.replace) {\r\n      headers[\"X-Remix-Replace\"] = \"yes\";\r\n    }\r\n    throw redirect(result.redirect, { status: result.status, headers });\r\n  } else if (\"data\" in result) {\r\n    return result.data;\r\n  } else {\r\n    throw new Error(`No response found for routeId \"${routeId}\"`);\r\n  }\r\n}\r\nfunction createDeferred2() {\r\n  let resolve;\r\n  let reject;\r\n  let promise = new Promise((res, rej) => {\r\n    resolve = async (val) => {\r\n      res(val);\r\n      try {\r\n        await promise;\r\n      } catch (e) {\r\n      }\r\n    };\r\n    reject = async (error) => {\r\n      rej(error);\r\n      try {\r\n        await promise;\r\n      } catch (e) {\r\n      }\r\n    };\r\n  });\r\n  return {\r\n    promise,\r\n    //@ts-ignore\r\n    resolve,\r\n    //@ts-ignore\r\n    reject\r\n  };\r\n}\r\n\r\n// lib/dom/ssr/fog-of-war.ts\r\nimport * as React8 from \"react\";\r\n\r\n// lib/dom/ssr/routes.tsx\r\nimport * as React7 from \"react\";\r\n\r\n// lib/dom/ssr/errorBoundaries.tsx\r\nimport * as React5 from \"react\";\r\nvar RemixErrorBoundary = class extends React5.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { error: props.error || null, location: props.location };\r\n  }\r\n  static getDerivedStateFromError(error) {\r\n    return { error };\r\n  }\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (state.location !== props.location) {\r\n      return { error: props.error || null, location: props.location };\r\n    }\r\n    return { error: props.error || state.error, location: state.location };\r\n  }\r\n  render() {\r\n    if (this.state.error) {\r\n      return /* @__PURE__ */ React5.createElement(\r\n        RemixRootDefaultErrorBoundary,\r\n        {\r\n          error: this.state.error,\r\n          isOutsideRemixApp: true\r\n        }\r\n      );\r\n    } else {\r\n      return this.props.children;\r\n    }\r\n  }\r\n};\r\nfunction RemixRootDefaultErrorBoundary({\r\n  error,\r\n  isOutsideRemixApp\r\n}) {\r\n  console.error(error);\r\n  let heyDeveloper = /* @__PURE__ */ React5.createElement(\r\n    \"script\",\r\n    {\r\n      dangerouslySetInnerHTML: {\r\n        __html: `\r\n        console.log(\r\n          \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://remix.run/guides/errors for more information.\"\r\n        );\r\n      `\r\n      }\r\n    }\r\n  );\r\n  if (isRouteErrorResponse(error)) {\r\n    return /* @__PURE__ */ React5.createElement(BoundaryShell, { title: \"Unhandled Thrown Response!\" }, /* @__PURE__ */ React5.createElement(\"h1\", { style: { fontSize: \"24px\" } }, error.status, \" \", error.statusText), heyDeveloper);\r\n  }\r\n  let errorInstance;\r\n  if (error instanceof Error) {\r\n    errorInstance = error;\r\n  } else {\r\n    let errorString = error == null ? \"Unknown Error\" : typeof error === \"object\" && \"toString\" in error ? error.toString() : JSON.stringify(error);\r\n    errorInstance = new Error(errorString);\r\n  }\r\n  return /* @__PURE__ */ React5.createElement(\r\n    BoundaryShell,\r\n    {\r\n      title: \"Application Error!\",\r\n      isOutsideRemixApp\r\n    },\r\n    /* @__PURE__ */ React5.createElement(\"h1\", { style: { fontSize: \"24px\" } }, \"Application Error\"),\r\n    /* @__PURE__ */ React5.createElement(\r\n      \"pre\",\r\n      {\r\n        style: {\r\n          padding: \"2rem\",\r\n          background: \"hsla(10, 50%, 50%, 0.1)\",\r\n          color: \"red\",\r\n          overflow: \"auto\"\r\n        }\r\n      },\r\n      errorInstance.stack\r\n    ),\r\n    heyDeveloper\r\n  );\r\n}\r\nfunction BoundaryShell({\r\n  title,\r\n  renderScripts,\r\n  isOutsideRemixApp,\r\n  children\r\n}) {\r\n  let { routeModules } = useFrameworkContext();\r\n  if (routeModules.root?.Layout && !isOutsideRemixApp) {\r\n    return children;\r\n  }\r\n  return /* @__PURE__ */ React5.createElement(\"html\", { lang: \"en\" }, /* @__PURE__ */ React5.createElement(\"head\", null, /* @__PURE__ */ React5.createElement(\"meta\", { charSet: \"utf-8\" }), /* @__PURE__ */ React5.createElement(\r\n    \"meta\",\r\n    {\r\n      name: \"viewport\",\r\n      content: \"width=device-width,initial-scale=1,viewport-fit=cover\"\r\n    }\r\n  ), /* @__PURE__ */ React5.createElement(\"title\", null, title)), /* @__PURE__ */ React5.createElement(\"body\", null, /* @__PURE__ */ React5.createElement(\"main\", { style: { fontFamily: \"system-ui, sans-serif\", padding: \"2rem\" } }, children, renderScripts ? /* @__PURE__ */ React5.createElement(Scripts, null) : null)));\r\n}\r\n\r\n// lib/dom/ssr/fallback.tsx\r\nimport * as React6 from \"react\";\r\nfunction RemixRootDefaultHydrateFallback() {\r\n  return /* @__PURE__ */ React6.createElement(BoundaryShell, { title: \"Loading...\", renderScripts: true }, /* @__PURE__ */ React6.createElement(\r\n    \"script\",\r\n    {\r\n      dangerouslySetInnerHTML: {\r\n        __html: `\r\n              console.log(\r\n                \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this \" +\r\n                \"when your app is loading JS modules and/or running \\`clientLoader\\` \" +\r\n                \"functions. Check out https://remix.run/route/hydrate-fallback \" +\r\n                \"for more information.\"\r\n              );\r\n            `\r\n      }\r\n    }\r\n  ));\r\n}\r\n\r\n// lib/dom/ssr/routes.tsx\r\nfunction groupRoutesByParentId(manifest) {\r\n  let routes = {};\r\n  Object.values(manifest).forEach((route) => {\r\n    if (route) {\r\n      let parentId = route.parentId || \"\";\r\n      if (!routes[parentId]) {\r\n        routes[parentId] = [];\r\n      }\r\n      routes[parentId].push(route);\r\n    }\r\n  });\r\n  return routes;\r\n}\r\nfunction getRouteComponents(route, routeModule, isSpaMode) {\r\n  let Component4 = getRouteModuleComponent(routeModule);\r\n  let HydrateFallback = routeModule.HydrateFallback && (!isSpaMode || route.id === \"root\") ? routeModule.HydrateFallback : route.id === \"root\" ? RemixRootDefaultHydrateFallback : void 0;\r\n  let ErrorBoundary = routeModule.ErrorBoundary ? routeModule.ErrorBoundary : route.id === \"root\" ? () => /* @__PURE__ */ React7.createElement(RemixRootDefaultErrorBoundary, { error: useRouteError() }) : void 0;\r\n  if (route.id === \"root\" && routeModule.Layout) {\r\n    return {\r\n      ...Component4 ? {\r\n        element: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(Component4, null))\r\n      } : { Component: Component4 },\r\n      ...ErrorBoundary ? {\r\n        errorElement: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(ErrorBoundary, null))\r\n      } : { ErrorBoundary },\r\n      ...HydrateFallback ? {\r\n        hydrateFallbackElement: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(HydrateFallback, null))\r\n      } : { HydrateFallback }\r\n    };\r\n  }\r\n  return { Component: Component4, ErrorBoundary, HydrateFallback };\r\n}\r\nfunction createServerRoutes(manifest, routeModules, future, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), spaModeLazyPromise = Promise.resolve({ Component: () => null })) {\r\n  return (routesByParentId[parentId] || []).map((route) => {\r\n    let routeModule = routeModules[route.id];\r\n    invariant2(\r\n      routeModule,\r\n      \"No `routeModule` available to create server routes\"\r\n    );\r\n    let dataRoute = {\r\n      ...getRouteComponents(route, routeModule, isSpaMode),\r\n      caseSensitive: route.caseSensitive,\r\n      id: route.id,\r\n      index: route.index,\r\n      path: route.path,\r\n      handle: routeModule.handle,\r\n      // For SPA Mode, all routes are lazy except root.  However we tell the\r\n      // router root is also lazy here too since we don't need a full\r\n      // implementation - we just need a `lazy` prop to tell the RR rendering\r\n      // where to stop which is always at the root route in SPA mode\r\n      lazy: isSpaMode ? () => spaModeLazyPromise : void 0,\r\n      // For partial hydration rendering, we need to indicate when the route\r\n      // has a loader/clientLoader, but it won't ever be called during the static\r\n      // render, so just give it a no-op function so we can render down to the\r\n      // proper fallback\r\n      loader: route.hasLoader || route.hasClientLoader ? () => null : void 0\r\n      // We don't need action/shouldRevalidate on these routes since they're\r\n      // for a static render\r\n    };\r\n    let children = createServerRoutes(\r\n      manifest,\r\n      routeModules,\r\n      future,\r\n      isSpaMode,\r\n      route.id,\r\n      routesByParentId,\r\n      spaModeLazyPromise\r\n    );\r\n    if (children.length > 0) dataRoute.children = children;\r\n    return dataRoute;\r\n  });\r\n}\r\nfunction createClientRoutesWithHMRRevalidationOptOut(needsRevalidation, manifest, routeModulesCache, initialState, ssr, isSpaMode) {\r\n  return createClientRoutes(\r\n    manifest,\r\n    routeModulesCache,\r\n    initialState,\r\n    ssr,\r\n    isSpaMode,\r\n    \"\",\r\n    groupRoutesByParentId(manifest),\r\n    needsRevalidation\r\n  );\r\n}\r\nfunction preventInvalidServerHandlerCall(type, route) {\r\n  if (type === \"loader\" && !route.hasLoader || type === \"action\" && !route.hasAction) {\r\n    let fn = type === \"action\" ? \"serverAction()\" : \"serverLoader()\";\r\n    let msg = `You are trying to call ${fn} on a route that does not have a server ${type} (routeId: \"${route.id}\")`;\r\n    console.error(msg);\r\n    throw new ErrorResponseImpl(400, \"Bad Request\", new Error(msg), true);\r\n  }\r\n}\r\nfunction noActionDefinedError(type, routeId) {\r\n  let article = type === \"clientAction\" ? \"a\" : \"an\";\r\n  let msg = `Route \"${routeId}\" does not have ${article} ${type}, but you are trying to submit to it. To fix this, please add ${article} \\`${type}\\` function to the route`;\r\n  console.error(msg);\r\n  throw new ErrorResponseImpl(405, \"Method Not Allowed\", new Error(msg), true);\r\n}\r\nfunction createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), needsRevalidation) {\r\n  return (routesByParentId[parentId] || []).map((route) => {\r\n    let routeModule = routeModulesCache[route.id];\r\n    function fetchServerHandler(singleFetch) {\r\n      invariant2(\r\n        typeof singleFetch === \"function\",\r\n        \"No single fetch function available for route handler\"\r\n      );\r\n      return singleFetch();\r\n    }\r\n    function fetchServerLoader(singleFetch) {\r\n      if (!route.hasLoader) return Promise.resolve(null);\r\n      return fetchServerHandler(singleFetch);\r\n    }\r\n    function fetchServerAction(singleFetch) {\r\n      if (!route.hasAction) {\r\n        throw noActionDefinedError(\"action\", route.id);\r\n      }\r\n      return fetchServerHandler(singleFetch);\r\n    }\r\n    function prefetchModule(modulePath) {\r\n      import(\r\n        /* @vite-ignore */\r\n        /* webpackIgnore: true */\r\n        modulePath\r\n      );\r\n    }\r\n    function prefetchRouteModuleChunks(route2) {\r\n      if (route2.clientActionModule) {\r\n        prefetchModule(route2.clientActionModule);\r\n      }\r\n      if (route2.clientLoaderModule) {\r\n        prefetchModule(route2.clientLoaderModule);\r\n      }\r\n    }\r\n    async function prefetchStylesAndCallHandler(handler) {\r\n      let cachedModule = routeModulesCache[route.id];\r\n      let linkPrefetchPromise = cachedModule ? prefetchStyleLinks(route, cachedModule) : Promise.resolve();\r\n      try {\r\n        return handler();\r\n      } finally {\r\n        await linkPrefetchPromise;\r\n      }\r\n    }\r\n    let dataRoute = {\r\n      id: route.id,\r\n      index: route.index,\r\n      path: route.path\r\n    };\r\n    if (routeModule) {\r\n      Object.assign(dataRoute, {\r\n        ...dataRoute,\r\n        ...getRouteComponents(route, routeModule, isSpaMode),\r\n        handle: routeModule.handle,\r\n        shouldRevalidate: getShouldRevalidateFunction(\r\n          routeModule,\r\n          route,\r\n          ssr,\r\n          needsRevalidation\r\n        )\r\n      });\r\n      let hasInitialData = initialState && initialState.loaderData && route.id in initialState.loaderData;\r\n      let initialData = hasInitialData ? initialState?.loaderData?.[route.id] : void 0;\r\n      let hasInitialError = initialState && initialState.errors && route.id in initialState.errors;\r\n      let initialError = hasInitialError ? initialState?.errors?.[route.id] : void 0;\r\n      let isHydrationRequest = needsRevalidation == null && (routeModule.clientLoader?.hydrate === true || !route.hasLoader);\r\n      dataRoute.loader = async ({ request, params }, singleFetch) => {\r\n        try {\r\n          let result = await prefetchStylesAndCallHandler(async () => {\r\n            invariant2(\r\n              routeModule,\r\n              \"No `routeModule` available for critical-route loader\"\r\n            );\r\n            if (!routeModule.clientLoader) {\r\n              return fetchServerLoader(singleFetch);\r\n            }\r\n            return routeModule.clientLoader({\r\n              request,\r\n              params,\r\n              async serverLoader() {\r\n                preventInvalidServerHandlerCall(\"loader\", route);\r\n                if (isHydrationRequest) {\r\n                  if (hasInitialData) {\r\n                    return initialData;\r\n                  }\r\n                  if (hasInitialError) {\r\n                    throw initialError;\r\n                  }\r\n                }\r\n                return fetchServerLoader(singleFetch);\r\n              }\r\n            });\r\n          });\r\n          return result;\r\n        } finally {\r\n          isHydrationRequest = false;\r\n        }\r\n      };\r\n      dataRoute.loader.hydrate = shouldHydrateRouteLoader(\r\n        route,\r\n        routeModule,\r\n        isSpaMode\r\n      );\r\n      dataRoute.action = ({ request, params }, singleFetch) => {\r\n        return prefetchStylesAndCallHandler(async () => {\r\n          invariant2(\r\n            routeModule,\r\n            \"No `routeModule` available for critical-route action\"\r\n          );\r\n          if (!routeModule.clientAction) {\r\n            if (isSpaMode) {\r\n              throw noActionDefinedError(\"clientAction\", route.id);\r\n            }\r\n            return fetchServerAction(singleFetch);\r\n          }\r\n          return routeModule.clientAction({\r\n            request,\r\n            params,\r\n            async serverAction() {\r\n              preventInvalidServerHandlerCall(\"action\", route);\r\n              return fetchServerAction(singleFetch);\r\n            }\r\n          });\r\n        });\r\n      };\r\n    } else {\r\n      if (!route.hasClientLoader) {\r\n        dataRoute.loader = ({ request }, singleFetch) => prefetchStylesAndCallHandler(() => {\r\n          return fetchServerLoader(singleFetch);\r\n        });\r\n      } else if (route.clientLoaderModule) {\r\n        dataRoute.loader = async (args, singleFetch) => {\r\n          invariant2(route.clientLoaderModule);\r\n          let { clientLoader } = await import(\r\n            /* @vite-ignore */\r\n            /* webpackIgnore: true */\r\n            route.clientLoaderModule\r\n          );\r\n          return clientLoader({\r\n            ...args,\r\n            async serverLoader() {\r\n              preventInvalidServerHandlerCall(\"loader\", route);\r\n              return fetchServerLoader(singleFetch);\r\n            }\r\n          });\r\n        };\r\n      }\r\n      if (!route.hasClientAction) {\r\n        dataRoute.action = ({ request }, singleFetch) => prefetchStylesAndCallHandler(() => {\r\n          if (isSpaMode) {\r\n            throw noActionDefinedError(\"clientAction\", route.id);\r\n          }\r\n          return fetchServerAction(singleFetch);\r\n        });\r\n      } else if (route.clientActionModule) {\r\n        dataRoute.action = async (args, singleFetch) => {\r\n          invariant2(route.clientActionModule);\r\n          prefetchRouteModuleChunks(route);\r\n          let { clientAction } = await import(\r\n            /* @vite-ignore */\r\n            /* webpackIgnore: true */\r\n            route.clientActionModule\r\n          );\r\n          return clientAction({\r\n            ...args,\r\n            async serverAction() {\r\n              preventInvalidServerHandlerCall(\"action\", route);\r\n              return fetchServerAction(singleFetch);\r\n            }\r\n          });\r\n        };\r\n      }\r\n      dataRoute.lazy = async () => {\r\n        if (route.clientLoaderModule || route.clientActionModule) {\r\n          await new Promise((resolve) => setTimeout(resolve, 0));\r\n        }\r\n        let modPromise = loadRouteModuleWithBlockingLinks(\r\n          route,\r\n          routeModulesCache\r\n        );\r\n        prefetchRouteModuleChunks(route);\r\n        let mod = await modPromise;\r\n        let lazyRoute = { ...mod };\r\n        if (mod.clientLoader) {\r\n          let clientLoader = mod.clientLoader;\r\n          lazyRoute.loader = (args, singleFetch) => clientLoader({\r\n            ...args,\r\n            async serverLoader() {\r\n              preventInvalidServerHandlerCall(\"loader\", route);\r\n              return fetchServerLoader(singleFetch);\r\n            }\r\n          });\r\n        }\r\n        if (mod.clientAction) {\r\n          let clientAction = mod.clientAction;\r\n          lazyRoute.action = (args, singleFetch) => clientAction({\r\n            ...args,\r\n            async serverAction() {\r\n              preventInvalidServerHandlerCall(\"action\", route);\r\n              return fetchServerAction(singleFetch);\r\n            }\r\n          });\r\n        }\r\n        return {\r\n          ...lazyRoute.loader ? { loader: lazyRoute.loader } : {},\r\n          ...lazyRoute.action ? { action: lazyRoute.action } : {},\r\n          hasErrorBoundary: lazyRoute.hasErrorBoundary,\r\n          shouldRevalidate: getShouldRevalidateFunction(\r\n            lazyRoute,\r\n            route,\r\n            ssr,\r\n            needsRevalidation\r\n          ),\r\n          handle: lazyRoute.handle,\r\n          // No need to wrap these in layout since the root route is never\r\n          // loaded via route.lazy()\r\n          Component: lazyRoute.Component,\r\n          ErrorBoundary: lazyRoute.ErrorBoundary\r\n        };\r\n      };\r\n    }\r\n    let children = createClientRoutes(\r\n      manifest,\r\n      routeModulesCache,\r\n      initialState,\r\n      ssr,\r\n      isSpaMode,\r\n      route.id,\r\n      routesByParentId,\r\n      needsRevalidation\r\n    );\r\n    if (children.length > 0) dataRoute.children = children;\r\n    return dataRoute;\r\n  });\r\n}\r\nfunction getShouldRevalidateFunction(route, manifestRoute, ssr, needsRevalidation) {\r\n  if (needsRevalidation) {\r\n    return wrapShouldRevalidateForHdr(\r\n      manifestRoute.id,\r\n      route.shouldRevalidate,\r\n      needsRevalidation\r\n    );\r\n  }\r\n  if (!ssr && manifestRoute.hasLoader && !manifestRoute.hasClientLoader) {\r\n    if (route.shouldRevalidate) {\r\n      let fn = route.shouldRevalidate;\r\n      return (opts) => fn({ ...opts, defaultShouldRevalidate: false });\r\n    } else {\r\n      return () => false;\r\n    }\r\n  }\r\n  if (ssr && route.shouldRevalidate) {\r\n    let fn = route.shouldRevalidate;\r\n    return (opts) => fn({ ...opts, defaultShouldRevalidate: true });\r\n  }\r\n  return route.shouldRevalidate;\r\n}\r\nfunction wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalidation) {\r\n  let handledRevalidation = false;\r\n  return (arg) => {\r\n    if (!handledRevalidation) {\r\n      handledRevalidation = true;\r\n      return needsRevalidation.has(routeId);\r\n    }\r\n    return routeShouldRevalidate ? routeShouldRevalidate(arg) : arg.defaultShouldRevalidate;\r\n  };\r\n}\r\nasync function loadRouteModuleWithBlockingLinks(route, routeModules) {\r\n  let routeModulePromise = loadRouteModule(route, routeModules);\r\n  let prefetchRouteCssPromise = prefetchRouteCss(route);\r\n  let routeModule = await routeModulePromise;\r\n  await Promise.all([\r\n    prefetchRouteCssPromise,\r\n    prefetchStyleLinks(route, routeModule)\r\n  ]);\r\n  return {\r\n    Component: getRouteModuleComponent(routeModule),\r\n    ErrorBoundary: routeModule.ErrorBoundary,\r\n    clientAction: routeModule.clientAction,\r\n    clientLoader: routeModule.clientLoader,\r\n    handle: routeModule.handle,\r\n    links: routeModule.links,\r\n    meta: routeModule.meta,\r\n    shouldRevalidate: routeModule.shouldRevalidate\r\n  };\r\n}\r\nfunction getRouteModuleComponent(routeModule) {\r\n  if (routeModule.default == null) return void 0;\r\n  let isEmptyObject = typeof routeModule.default === \"object\" && Object.keys(routeModule.default).length === 0;\r\n  if (!isEmptyObject) {\r\n    return routeModule.default;\r\n  }\r\n}\r\nfunction shouldHydrateRouteLoader(route, routeModule, isSpaMode) {\r\n  return isSpaMode && route.id !== \"root\" || routeModule.clientLoader != null && (routeModule.clientLoader.hydrate === true || route.hasLoader !== true);\r\n}\r\n\r\n// lib/dom/ssr/fog-of-war.ts\r\nvar nextPaths = /* @__PURE__ */ new Set();\r\nvar discoveredPathsMaxSize = 1e3;\r\nvar discoveredPaths = /* @__PURE__ */ new Set();\r\nvar URL_LIMIT = 7680;\r\nfunction isFogOfWarEnabled(ssr) {\r\n  return ssr === true;\r\n}\r\nfunction getPartialManifest(manifest, router) {\r\n  let routeIds = new Set(router.state.matches.map((m) => m.route.id));\r\n  let segments = router.state.location.pathname.split(\"/\").filter(Boolean);\r\n  let paths = [\"/\"];\r\n  segments.pop();\r\n  while (segments.length > 0) {\r\n    paths.push(`/${segments.join(\"/\")}`);\r\n    segments.pop();\r\n  }\r\n  paths.forEach((path) => {\r\n    let matches = matchRoutes(router.routes, path, router.basename);\r\n    if (matches) {\r\n      matches.forEach((m) => routeIds.add(m.route.id));\r\n    }\r\n  });\r\n  let initialRoutes = [...routeIds].reduce(\r\n    (acc, id) => Object.assign(acc, { [id]: manifest.routes[id] }),\r\n    {}\r\n  );\r\n  return {\r\n    ...manifest,\r\n    routes: initialRoutes\r\n  };\r\n}\r\nfunction getPatchRoutesOnNavigationFunction(manifest, routeModules, ssr, isSpaMode, basename) {\r\n  if (!isFogOfWarEnabled(ssr)) {\r\n    return void 0;\r\n  }\r\n  return async ({ path, patch, signal }) => {\r\n    if (discoveredPaths.has(path)) {\r\n      return;\r\n    }\r\n    await fetchAndApplyManifestPatches(\r\n      [path],\r\n      manifest,\r\n      routeModules,\r\n      ssr,\r\n      isSpaMode,\r\n      basename,\r\n      patch,\r\n      signal\r\n    );\r\n  };\r\n}\r\nfunction useFogOFWarDiscovery(router, manifest, routeModules, ssr, isSpaMode) {\r\n  React8.useEffect(() => {\r\n    if (!isFogOfWarEnabled(ssr) || navigator.connection?.saveData === true) {\r\n      return;\r\n    }\r\n    function registerElement(el) {\r\n      let path = el.tagName === \"FORM\" ? el.getAttribute(\"action\") : el.getAttribute(\"href\");\r\n      if (!path) {\r\n        return;\r\n      }\r\n      let pathname = el.tagName === \"A\" ? el.pathname : new URL(path, window.location.origin).pathname;\r\n      if (!discoveredPaths.has(pathname)) {\r\n        nextPaths.add(pathname);\r\n      }\r\n    }\r\n    async function fetchPatches() {\r\n      document.querySelectorAll(\"a[data-discover], form[data-discover]\").forEach(registerElement);\r\n      let lazyPaths = Array.from(nextPaths.keys()).filter((path) => {\r\n        if (discoveredPaths.has(path)) {\r\n          nextPaths.delete(path);\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n      if (lazyPaths.length === 0) {\r\n        return;\r\n      }\r\n      try {\r\n        await fetchAndApplyManifestPatches(\r\n          lazyPaths,\r\n          manifest,\r\n          routeModules,\r\n          ssr,\r\n          isSpaMode,\r\n          router.basename,\r\n          router.patchRoutes\r\n        );\r\n      } catch (e) {\r\n        console.error(\"Failed to fetch manifest patches\", e);\r\n      }\r\n    }\r\n    let debouncedFetchPatches = debounce(fetchPatches, 100);\r\n    fetchPatches();\r\n    let observer = new MutationObserver(() => debouncedFetchPatches());\r\n    observer.observe(document.documentElement, {\r\n      subtree: true,\r\n      childList: true,\r\n      attributes: true,\r\n      attributeFilter: [\"data-discover\", \"href\", \"action\"]\r\n    });\r\n    return () => observer.disconnect();\r\n  }, [ssr, isSpaMode, manifest, routeModules, router]);\r\n}\r\nasync function fetchAndApplyManifestPatches(paths, manifest, routeModules, ssr, isSpaMode, basename, patchRoutes, signal) {\r\n  let manifestPath = `${basename != null ? basename : \"/\"}/__manifest`.replace(\r\n    /\\/+/g,\r\n    \"/\"\r\n  );\r\n  let url = new URL(manifestPath, window.location.origin);\r\n  paths.sort().forEach((path) => url.searchParams.append(\"p\", path));\r\n  url.searchParams.set(\"version\", manifest.version);\r\n  if (url.toString().length > URL_LIMIT) {\r\n    nextPaths.clear();\r\n    return;\r\n  }\r\n  let serverPatches;\r\n  try {\r\n    let res = await fetch(url, { signal });\r\n    if (!res.ok) {\r\n      throw new Error(`${res.status} ${res.statusText}`);\r\n    } else if (res.status >= 400) {\r\n      throw new Error(await res.text());\r\n    }\r\n    serverPatches = await res.json();\r\n  } catch (e) {\r\n    if (signal?.aborted) return;\r\n    throw e;\r\n  }\r\n  let knownRoutes = new Set(Object.keys(manifest.routes));\r\n  let patches = Object.values(serverPatches).reduce((acc, route) => {\r\n    if (route && !knownRoutes.has(route.id)) {\r\n      acc[route.id] = route;\r\n    }\r\n    return acc;\r\n  }, {});\r\n  Object.assign(manifest.routes, patches);\r\n  paths.forEach((p) => addToFifoQueue(p, discoveredPaths));\r\n  let parentIds = /* @__PURE__ */ new Set();\r\n  Object.values(patches).forEach((patch) => {\r\n    if (patch && (!patch.parentId || !patches[patch.parentId])) {\r\n      parentIds.add(patch.parentId);\r\n    }\r\n  });\r\n  parentIds.forEach(\r\n    (parentId) => patchRoutes(\r\n      parentId || null,\r\n      createClientRoutes(patches, routeModules, null, ssr, isSpaMode, parentId)\r\n    )\r\n  );\r\n}\r\nfunction addToFifoQueue(path, queue) {\r\n  if (queue.size >= discoveredPathsMaxSize) {\r\n    let first = queue.values().next().value;\r\n    queue.delete(first);\r\n  }\r\n  queue.add(path);\r\n}\r\nfunction debounce(callback, wait) {\r\n  let timeoutId;\r\n  return (...args) => {\r\n    window.clearTimeout(timeoutId);\r\n    timeoutId = window.setTimeout(() => callback(...args), wait);\r\n  };\r\n}\r\n\r\n// lib/dom/ssr/components.tsx\r\nfunction useDataRouterContext2() {\r\n  let context = React9.useContext(DataRouterContext);\r\n  invariant2(\r\n    context,\r\n    \"You must render this element inside a <DataRouterContext.Provider> element\"\r\n  );\r\n  return context;\r\n}\r\nfunction useDataRouterStateContext() {\r\n  let context = React9.useContext(DataRouterStateContext);\r\n  invariant2(\r\n    context,\r\n    \"You must render this element inside a <DataRouterStateContext.Provider> element\"\r\n  );\r\n  return context;\r\n}\r\nvar FrameworkContext = React9.createContext(void 0);\r\nFrameworkContext.displayName = \"FrameworkContext\";\r\nfunction useFrameworkContext() {\r\n  let context = React9.useContext(FrameworkContext);\r\n  invariant2(\r\n    context,\r\n    \"You must render this element inside a <HydratedRouter> element\"\r\n  );\r\n  return context;\r\n}\r\nfunction usePrefetchBehavior(prefetch, theirElementProps) {\r\n  let frameworkContext = React9.useContext(FrameworkContext);\r\n  let [maybePrefetch, setMaybePrefetch] = React9.useState(false);\r\n  let [shouldPrefetch, setShouldPrefetch] = React9.useState(false);\r\n  let { onFocus, onBlur, onMouseEnter, onMouseLeave, onTouchStart } = theirElementProps;\r\n  let ref = React9.useRef(null);\r\n  React9.useEffect(() => {\r\n    if (prefetch === \"render\") {\r\n      setShouldPrefetch(true);\r\n    }\r\n    if (prefetch === \"viewport\") {\r\n      let callback = (entries) => {\r\n        entries.forEach((entry) => {\r\n          setShouldPrefetch(entry.isIntersecting);\r\n        });\r\n      };\r\n      let observer = new IntersectionObserver(callback, { threshold: 0.5 });\r\n      if (ref.current) observer.observe(ref.current);\r\n      return () => {\r\n        observer.disconnect();\r\n      };\r\n    }\r\n  }, [prefetch]);\r\n  React9.useEffect(() => {\r\n    if (maybePrefetch) {\r\n      let id = setTimeout(() => {\r\n        setShouldPrefetch(true);\r\n      }, 100);\r\n      return () => {\r\n        clearTimeout(id);\r\n      };\r\n    }\r\n  }, [maybePrefetch]);\r\n  let setIntent = () => {\r\n    setMaybePrefetch(true);\r\n  };\r\n  let cancelIntent = () => {\r\n    setMaybePrefetch(false);\r\n    setShouldPrefetch(false);\r\n  };\r\n  if (!frameworkContext) {\r\n    return [false, ref, {}];\r\n  }\r\n  if (prefetch !== \"intent\") {\r\n    return [shouldPrefetch, ref, {}];\r\n  }\r\n  return [\r\n    shouldPrefetch,\r\n    ref,\r\n    {\r\n      onFocus: composeEventHandlers(onFocus, setIntent),\r\n      onBlur: composeEventHandlers(onBlur, cancelIntent),\r\n      onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),\r\n      onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),\r\n      onTouchStart: composeEventHandlers(onTouchStart, setIntent)\r\n    }\r\n  ];\r\n}\r\nfunction composeEventHandlers(theirHandler, ourHandler) {\r\n  return (event) => {\r\n    theirHandler && theirHandler(event);\r\n    if (!event.defaultPrevented) {\r\n      ourHandler(event);\r\n    }\r\n  };\r\n}\r\nfunction getActiveMatches(matches, errors, isSpaMode) {\r\n  if (isSpaMode && !isHydrated) {\r\n    return [matches[0]];\r\n  }\r\n  if (errors) {\r\n    let errorIdx = matches.findIndex((m) => errors[m.route.id] !== void 0);\r\n    return matches.slice(0, errorIdx + 1);\r\n  }\r\n  return matches;\r\n}\r\nfunction Links() {\r\n  let { isSpaMode, manifest, routeModules, criticalCss } = useFrameworkContext();\r\n  let { errors, matches: routerMatches } = useDataRouterStateContext();\r\n  let matches = getActiveMatches(routerMatches, errors, isSpaMode);\r\n  let keyedLinks = React9.useMemo(\r\n    () => getKeyedLinksForMatches(matches, routeModules, manifest),\r\n    [matches, routeModules, manifest]\r\n  );\r\n  return /* @__PURE__ */ React9.createElement(React9.Fragment, null, criticalCss ? /* @__PURE__ */ React9.createElement(\"style\", { dangerouslySetInnerHTML: { __html: criticalCss } }) : null, keyedLinks.map(\r\n    ({ key, link }) => isPageLinkDescriptor(link) ? /* @__PURE__ */ React9.createElement(PrefetchPageLinks, { key, ...link }) : /* @__PURE__ */ React9.createElement(\"link\", { key, ...link })\r\n  ));\r\n}\r\nfunction PrefetchPageLinks({\r\n  page,\r\n  ...dataLinkProps\r\n}) {\r\n  let { router } = useDataRouterContext2();\r\n  let matches = React9.useMemo(\r\n    () => matchRoutes(router.routes, page, router.basename),\r\n    [router.routes, page, router.basename]\r\n  );\r\n  if (!matches) {\r\n    return null;\r\n  }\r\n  return /* @__PURE__ */ React9.createElement(PrefetchPageLinksImpl, { page, matches, ...dataLinkProps });\r\n}\r\nfunction useKeyedPrefetchLinks(matches) {\r\n  let { manifest, routeModules } = useFrameworkContext();\r\n  let [keyedPrefetchLinks, setKeyedPrefetchLinks] = React9.useState([]);\r\n  React9.useEffect(() => {\r\n    let interrupted = false;\r\n    void getKeyedPrefetchLinks(matches, manifest, routeModules).then(\r\n      (links) => {\r\n        if (!interrupted) {\r\n          setKeyedPrefetchLinks(links);\r\n        }\r\n      }\r\n    );\r\n    return () => {\r\n      interrupted = true;\r\n    };\r\n  }, [matches, manifest, routeModules]);\r\n  return keyedPrefetchLinks;\r\n}\r\nfunction PrefetchPageLinksImpl({\r\n  page,\r\n  matches: nextMatches,\r\n  ...linkProps\r\n}) {\r\n  let location = useLocation();\r\n  let { manifest, routeModules } = useFrameworkContext();\r\n  let { loaderData, matches } = useDataRouterStateContext();\r\n  let newMatchesForData = React9.useMemo(\r\n    () => getNewMatchesForLinks(\r\n      page,\r\n      nextMatches,\r\n      matches,\r\n      manifest,\r\n      location,\r\n      \"data\"\r\n    ),\r\n    [page, nextMatches, matches, manifest, location]\r\n  );\r\n  let newMatchesForAssets = React9.useMemo(\r\n    () => getNewMatchesForLinks(\r\n      page,\r\n      nextMatches,\r\n      matches,\r\n      manifest,\r\n      location,\r\n      \"assets\"\r\n    ),\r\n    [page, nextMatches, matches, manifest, location]\r\n  );\r\n  let dataHrefs = React9.useMemo(() => {\r\n    if (page === location.pathname + location.search + location.hash) {\r\n      return [];\r\n    }\r\n    let routesParams = /* @__PURE__ */ new Set();\r\n    let foundOptOutRoute = false;\r\n    nextMatches.forEach((m) => {\r\n      let manifestRoute = manifest.routes[m.route.id];\r\n      if (!manifestRoute || !manifestRoute.hasLoader) {\r\n        return;\r\n      }\r\n      if (!newMatchesForData.some((m2) => m2.route.id === m.route.id) && m.route.id in loaderData && routeModules[m.route.id]?.shouldRevalidate) {\r\n        foundOptOutRoute = true;\r\n      } else if (manifestRoute.hasClientLoader) {\r\n        foundOptOutRoute = true;\r\n      } else {\r\n        routesParams.add(m.route.id);\r\n      }\r\n    });\r\n    if (routesParams.size === 0) {\r\n      return [];\r\n    }\r\n    let url = singleFetchUrl(page);\r\n    if (foundOptOutRoute && routesParams.size > 0) {\r\n      url.searchParams.set(\r\n        \"_routes\",\r\n        nextMatches.filter((m) => routesParams.has(m.route.id)).map((m) => m.route.id).join(\",\")\r\n      );\r\n    }\r\n    return [url.pathname + url.search];\r\n  }, [\r\n    loaderData,\r\n    location,\r\n    manifest,\r\n    newMatchesForData,\r\n    nextMatches,\r\n    page,\r\n    routeModules\r\n  ]);\r\n  let moduleHrefs = React9.useMemo(\r\n    () => getModuleLinkHrefs(newMatchesForAssets, manifest),\r\n    [newMatchesForAssets, manifest]\r\n  );\r\n  let keyedPrefetchLinks = useKeyedPrefetchLinks(newMatchesForAssets);\r\n  return /* @__PURE__ */ React9.createElement(React9.Fragment, null, dataHrefs.map((href2) => /* @__PURE__ */ React9.createElement(\"link\", { key: href2, rel: \"prefetch\", as: \"fetch\", href: href2, ...linkProps })), moduleHrefs.map((href2) => /* @__PURE__ */ React9.createElement(\"link\", { key: href2, rel: \"modulepreload\", href: href2, ...linkProps })), keyedPrefetchLinks.map(({ key, link }) => (\r\n    // these don't spread `linkProps` because they are full link descriptors\r\n    // already with their own props\r\n    /* @__PURE__ */ React9.createElement(\"link\", { key, ...link })\r\n  )));\r\n}\r\nfunction Meta() {\r\n  let { isSpaMode, routeModules } = useFrameworkContext();\r\n  let {\r\n    errors,\r\n    matches: routerMatches,\r\n    loaderData\r\n  } = useDataRouterStateContext();\r\n  let location = useLocation();\r\n  let _matches = getActiveMatches(routerMatches, errors, isSpaMode);\r\n  let error = null;\r\n  if (errors) {\r\n    error = errors[_matches[_matches.length - 1].route.id];\r\n  }\r\n  let meta = [];\r\n  let leafMeta = null;\r\n  let matches = [];\r\n  for (let i = 0; i < _matches.length; i++) {\r\n    let _match = _matches[i];\r\n    let routeId = _match.route.id;\r\n    let data2 = loaderData[routeId];\r\n    let params = _match.params;\r\n    let routeModule = routeModules[routeId];\r\n    let routeMeta = [];\r\n    let match = {\r\n      id: routeId,\r\n      data: data2,\r\n      meta: [],\r\n      params: _match.params,\r\n      pathname: _match.pathname,\r\n      handle: _match.route.handle,\r\n      error\r\n    };\r\n    matches[i] = match;\r\n    if (routeModule?.meta) {\r\n      routeMeta = typeof routeModule.meta === \"function\" ? routeModule.meta({\r\n        data: data2,\r\n        params,\r\n        location,\r\n        matches,\r\n        error\r\n      }) : Array.isArray(routeModule.meta) ? [...routeModule.meta] : routeModule.meta;\r\n    } else if (leafMeta) {\r\n      routeMeta = [...leafMeta];\r\n    }\r\n    routeMeta = routeMeta || [];\r\n    if (!Array.isArray(routeMeta)) {\r\n      throw new Error(\r\n        \"The route at \" + _match.route.path + \" returns an invalid value. All route meta functions must return an array of meta objects.\\n\\nTo reference the meta function API, see https://remix.run/route/meta\"\r\n      );\r\n    }\r\n    match.meta = routeMeta;\r\n    matches[i] = match;\r\n    meta = [...routeMeta];\r\n    leafMeta = meta;\r\n  }\r\n  return /* @__PURE__ */ React9.createElement(React9.Fragment, null, meta.flat().map((metaProps) => {\r\n    if (!metaProps) {\r\n      return null;\r\n    }\r\n    if (\"tagName\" in metaProps) {\r\n      let { tagName, ...rest } = metaProps;\r\n      if (!isValidMetaTag(tagName)) {\r\n        console.warn(\r\n          `A meta object uses an invalid tagName: ${tagName}. Expected either 'link' or 'meta'`\r\n        );\r\n        return null;\r\n      }\r\n      let Comp = tagName;\r\n      return /* @__PURE__ */ React9.createElement(Comp, { key: JSON.stringify(rest), ...rest });\r\n    }\r\n    if (\"title\" in metaProps) {\r\n      return /* @__PURE__ */ React9.createElement(\"title\", { key: \"title\" }, String(metaProps.title));\r\n    }\r\n    if (\"charset\" in metaProps) {\r\n      metaProps.charSet ?? (metaProps.charSet = metaProps.charset);\r\n      delete metaProps.charset;\r\n    }\r\n    if (\"charSet\" in metaProps && metaProps.charSet != null) {\r\n      return typeof metaProps.charSet === \"string\" ? /* @__PURE__ */ React9.createElement(\"meta\", { key: \"charSet\", charSet: metaProps.charSet }) : null;\r\n    }\r\n    if (\"script:ld+json\" in metaProps) {\r\n      try {\r\n        let json = JSON.stringify(metaProps[\"script:ld+json\"]);\r\n        return /* @__PURE__ */ React9.createElement(\r\n          \"script\",\r\n          {\r\n            key: `script:ld+json:${json}`,\r\n            type: \"application/ld+json\",\r\n            dangerouslySetInnerHTML: { __html: json }\r\n          }\r\n        );\r\n      } catch (err) {\r\n        return null;\r\n      }\r\n    }\r\n    return /* @__PURE__ */ React9.createElement(\"meta\", { key: JSON.stringify(metaProps), ...metaProps });\r\n  }));\r\n}\r\nfunction isValidMetaTag(tagName) {\r\n  return typeof tagName === \"string\" && /^(meta|link)$/.test(tagName);\r\n}\r\nvar isHydrated = false;\r\nfunction Scripts(props) {\r\n  let { manifest, serverHandoffString, isSpaMode, ssr, renderMeta } = useFrameworkContext();\r\n  let { router, static: isStatic, staticContext } = useDataRouterContext2();\r\n  let { matches: routerMatches } = useDataRouterStateContext();\r\n  let enableFogOfWar = isFogOfWarEnabled(ssr);\r\n  if (renderMeta) {\r\n    renderMeta.didRenderScripts = true;\r\n  }\r\n  let matches = getActiveMatches(routerMatches, null, isSpaMode);\r\n  React9.useEffect(() => {\r\n    isHydrated = true;\r\n  }, []);\r\n  let initialScripts = React9.useMemo(() => {\r\n    let streamScript = \"window.__reactRouterContext.stream = new ReadableStream({start(controller){window.__reactRouterContext.streamController = controller;}}).pipeThrough(new TextEncoderStream());\";\r\n    let contextScript = staticContext ? `window.__reactRouterContext = ${serverHandoffString};${streamScript}` : \" \";\r\n    let routeModulesScript = !isStatic ? \" \" : `${manifest.hmr?.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : \"\"}${!enableFogOfWar ? `import ${JSON.stringify(manifest.url)}` : \"\"};\r\n${matches.map((match, routeIndex) => {\r\n      let routeVarName = `route${routeIndex}`;\r\n      let manifestEntry = manifest.routes[match.route.id];\r\n      invariant2(manifestEntry, `Route ${match.route.id} not found in manifest`);\r\n      let {\r\n        clientActionModule,\r\n        clientLoaderModule,\r\n        hydrateFallbackModule,\r\n        module\r\n      } = manifestEntry;\r\n      let chunks = [\r\n        ...clientActionModule ? [\r\n          {\r\n            module: clientActionModule,\r\n            varName: `${routeVarName}_clientAction`\r\n          }\r\n        ] : [],\r\n        ...clientLoaderModule ? [\r\n          {\r\n            module: clientLoaderModule,\r\n            varName: `${routeVarName}_clientLoader`\r\n          }\r\n        ] : [],\r\n        ...hydrateFallbackModule ? [\r\n          {\r\n            module: hydrateFallbackModule,\r\n            varName: `${routeVarName}_HydrateFallback`\r\n          }\r\n        ] : [],\r\n        { module, varName: `${routeVarName}_main` }\r\n      ];\r\n      if (chunks.length === 1) {\r\n        return `import * as ${routeVarName} from ${JSON.stringify(module)};`;\r\n      }\r\n      let chunkImportsSnippet = chunks.map((chunk) => `import * as ${chunk.varName} from \"${chunk.module}\";`).join(\"\\n\");\r\n      let mergedChunksSnippet = `const ${routeVarName} = {${chunks.map((chunk) => `...${chunk.varName}`).join(\",\")}};`;\r\n      return [chunkImportsSnippet, mergedChunksSnippet].join(\"\\n\");\r\n    }).join(\"\\n\")}\r\n  ${enableFogOfWar ? (\r\n      // Inline a minimal manifest with the SSR matches\r\n      `window.__reactRouterManifest = ${JSON.stringify(\r\n        getPartialManifest(manifest, router),\r\n        null,\r\n        2\r\n      )};`\r\n    ) : \"\"}\r\n  window.__reactRouterRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(\",\")}};\r\n\r\nimport(${JSON.stringify(manifest.entry.module)});`;\r\n    return /* @__PURE__ */ React9.createElement(React9.Fragment, null, /* @__PURE__ */ React9.createElement(\r\n      \"script\",\r\n      {\r\n        ...props,\r\n        suppressHydrationWarning: true,\r\n        dangerouslySetInnerHTML: createHtml(contextScript),\r\n        type: void 0\r\n      }\r\n    ), /* @__PURE__ */ React9.createElement(\r\n      \"script\",\r\n      {\r\n        ...props,\r\n        suppressHydrationWarning: true,\r\n        dangerouslySetInnerHTML: createHtml(routeModulesScript),\r\n        type: \"module\",\r\n        async: true\r\n      }\r\n    ));\r\n  }, []);\r\n  let preloads = isHydrated ? [] : manifest.entry.imports.concat(\r\n    getModuleLinkHrefs(matches, manifest, {\r\n      includeHydrateFallback: true\r\n    })\r\n  );\r\n  return isHydrated ? null : /* @__PURE__ */ React9.createElement(React9.Fragment, null, !enableFogOfWar ? /* @__PURE__ */ React9.createElement(\r\n    \"link\",\r\n    {\r\n      rel: \"modulepreload\",\r\n      href: manifest.url,\r\n      crossOrigin: props.crossOrigin\r\n    }\r\n  ) : null, /* @__PURE__ */ React9.createElement(\r\n    \"link\",\r\n    {\r\n      rel: \"modulepreload\",\r\n      href: manifest.entry.module,\r\n      crossOrigin: props.crossOrigin\r\n    }\r\n  ), dedupe(preloads).map((path) => /* @__PURE__ */ React9.createElement(\r\n    \"link\",\r\n    {\r\n      key: path,\r\n      rel: \"modulepreload\",\r\n      href: path,\r\n      crossOrigin: props.crossOrigin\r\n    }\r\n  )), initialScripts);\r\n}\r\nfunction dedupe(array) {\r\n  return [...new Set(array)];\r\n}\r\nfunction mergeRefs(...refs) {\r\n  return (value) => {\r\n    refs.forEach((ref) => {\r\n      if (typeof ref === \"function\") {\r\n        ref(value);\r\n      } else if (ref != null) {\r\n        ref.current = value;\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\n// lib/dom/lib.tsx\r\nvar isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\r\ntry {\r\n  if (isBrowser) {\r\n    window.__reactRouterVersion = \"7.2.0\";\r\n  }\r\n} catch (e) {\r\n}\r\nfunction createBrowserRouter(routes, opts) {\r\n  return createRouter({\r\n    basename: opts?.basename,\r\n    future: opts?.future,\r\n    history: createBrowserHistory({ window: opts?.window }),\r\n    hydrationData: opts?.hydrationData || parseHydrationData(),\r\n    routes,\r\n    mapRouteProperties,\r\n    dataStrategy: opts?.dataStrategy,\r\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\r\n    window: opts?.window\r\n  }).initialize();\r\n}\r\nfunction createHashRouter(routes, opts) {\r\n  return createRouter({\r\n    basename: opts?.basename,\r\n    future: opts?.future,\r\n    history: createHashHistory({ window: opts?.window }),\r\n    hydrationData: opts?.hydrationData || parseHydrationData(),\r\n    routes,\r\n    mapRouteProperties,\r\n    dataStrategy: opts?.dataStrategy,\r\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\r\n    window: opts?.window\r\n  }).initialize();\r\n}\r\nfunction parseHydrationData() {\r\n  let state = window?.__staticRouterHydrationData;\r\n  if (state && state.errors) {\r\n    state = {\r\n      ...state,\r\n      errors: deserializeErrors(state.errors)\r\n    };\r\n  }\r\n  return state;\r\n}\r\nfunction deserializeErrors(errors) {\r\n  if (!errors) return null;\r\n  let entries = Object.entries(errors);\r\n  let serialized = {};\r\n  for (let [key, val] of entries) {\r\n    if (val && val.__type === \"RouteErrorResponse\") {\r\n      serialized[key] = new ErrorResponseImpl(\r\n        val.status,\r\n        val.statusText,\r\n        val.data,\r\n        val.internal === true\r\n      );\r\n    } else if (val && val.__type === \"Error\") {\r\n      if (val.__subType) {\r\n        let ErrorConstructor = window[val.__subType];\r\n        if (typeof ErrorConstructor === \"function\") {\r\n          try {\r\n            let error = new ErrorConstructor(val.message);\r\n            error.stack = \"\";\r\n            serialized[key] = error;\r\n          } catch (e) {\r\n          }\r\n        }\r\n      }\r\n      if (serialized[key] == null) {\r\n        let error = new Error(val.message);\r\n        error.stack = \"\";\r\n        serialized[key] = error;\r\n      }\r\n    } else {\r\n      serialized[key] = val;\r\n    }\r\n  }\r\n  return serialized;\r\n}\r\nfunction BrowserRouter({\r\n  basename,\r\n  children,\r\n  window: window2\r\n}) {\r\n  let historyRef = React10.useRef();\r\n  if (historyRef.current == null) {\r\n    historyRef.current = createBrowserHistory({ window: window2, v5Compat: true });\r\n  }\r\n  let history = historyRef.current;\r\n  let [state, setStateImpl] = React10.useState({\r\n    action: history.action,\r\n    location: history.location\r\n  });\r\n  let setState = React10.useCallback(\r\n    (newState) => {\r\n      React10.startTransition(() => setStateImpl(newState));\r\n    },\r\n    [setStateImpl]\r\n  );\r\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\r\n  return /* @__PURE__ */ React10.createElement(\r\n    Router,\r\n    {\r\n      basename,\r\n      children,\r\n      location: state.location,\r\n      navigationType: state.action,\r\n      navigator: history\r\n    }\r\n  );\r\n}\r\nfunction HashRouter({ basename, children, window: window2 }) {\r\n  let historyRef = React10.useRef();\r\n  if (historyRef.current == null) {\r\n    historyRef.current = createHashHistory({ window: window2, v5Compat: true });\r\n  }\r\n  let history = historyRef.current;\r\n  let [state, setStateImpl] = React10.useState({\r\n    action: history.action,\r\n    location: history.location\r\n  });\r\n  let setState = React10.useCallback(\r\n    (newState) => {\r\n      React10.startTransition(() => setStateImpl(newState));\r\n    },\r\n    [setStateImpl]\r\n  );\r\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\r\n  return /* @__PURE__ */ React10.createElement(\r\n    Router,\r\n    {\r\n      basename,\r\n      children,\r\n      location: state.location,\r\n      navigationType: state.action,\r\n      navigator: history\r\n    }\r\n  );\r\n}\r\nfunction HistoryRouter({\r\n  basename,\r\n  children,\r\n  history\r\n}) {\r\n  let [state, setStateImpl] = React10.useState({\r\n    action: history.action,\r\n    location: history.location\r\n  });\r\n  let setState = React10.useCallback(\r\n    (newState) => {\r\n      React10.startTransition(() => setStateImpl(newState));\r\n    },\r\n    [setStateImpl]\r\n  );\r\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\r\n  return /* @__PURE__ */ React10.createElement(\r\n    Router,\r\n    {\r\n      basename,\r\n      children,\r\n      location: state.location,\r\n      navigationType: state.action,\r\n      navigator: history\r\n    }\r\n  );\r\n}\r\nHistoryRouter.displayName = \"unstable_HistoryRouter\";\r\nvar ABSOLUTE_URL_REGEX2 = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\r\nvar Link = React10.forwardRef(\r\n  function LinkWithRef({\r\n    onClick,\r\n    discover = \"render\",\r\n    prefetch = \"none\",\r\n    relative,\r\n    reloadDocument,\r\n    replace: replace2,\r\n    state,\r\n    target,\r\n    to,\r\n    preventScrollReset,\r\n    viewTransition,\r\n    ...rest\r\n  }, forwardedRef) {\r\n    let { basename } = React10.useContext(NavigationContext);\r\n    let isAbsolute = typeof to === \"string\" && ABSOLUTE_URL_REGEX2.test(to);\r\n    let absoluteHref;\r\n    let isExternal = false;\r\n    if (typeof to === \"string\" && isAbsolute) {\r\n      absoluteHref = to;\r\n      if (isBrowser) {\r\n        try {\r\n          let currentUrl = new URL(window.location.href);\r\n          let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\r\n          let path = stripBasename(targetUrl.pathname, basename);\r\n          if (targetUrl.origin === currentUrl.origin && path != null) {\r\n            to = path + targetUrl.search + targetUrl.hash;\r\n          } else {\r\n            isExternal = true;\r\n          }\r\n        } catch (e) {\r\n          warning(\r\n            false,\r\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`\r\n          );\r\n        }\r\n      }\r\n    }\r\n    let href2 = useHref(to, { relative });\r\n    let [shouldPrefetch, prefetchRef, prefetchHandlers] = usePrefetchBehavior(\r\n      prefetch,\r\n      rest\r\n    );\r\n    let internalOnClick = useLinkClickHandler(to, {\r\n      replace: replace2,\r\n      state,\r\n      target,\r\n      preventScrollReset,\r\n      relative,\r\n      viewTransition\r\n    });\r\n    function handleClick(event) {\r\n      if (onClick) onClick(event);\r\n      if (!event.defaultPrevented) {\r\n        internalOnClick(event);\r\n      }\r\n    }\r\n    let link = (\r\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\r\n      /* @__PURE__ */ React10.createElement(\r\n        \"a\",\r\n        {\r\n          ...rest,\r\n          ...prefetchHandlers,\r\n          href: absoluteHref || href2,\r\n          onClick: isExternal || reloadDocument ? onClick : handleClick,\r\n          ref: mergeRefs(forwardedRef, prefetchRef),\r\n          target,\r\n          \"data-discover\": !isAbsolute && discover === \"render\" ? \"true\" : void 0\r\n        }\r\n      )\r\n    );\r\n    return shouldPrefetch && !isAbsolute ? /* @__PURE__ */ React10.createElement(React10.Fragment, null, link, /* @__PURE__ */ React10.createElement(PrefetchPageLinks, { page: href2 })) : link;\r\n  }\r\n);\r\nLink.displayName = \"Link\";\r\nvar NavLink = React10.forwardRef(\r\n  function NavLinkWithRef({\r\n    \"aria-current\": ariaCurrentProp = \"page\",\r\n    caseSensitive = false,\r\n    className: classNameProp = \"\",\r\n    end = false,\r\n    style: styleProp,\r\n    to,\r\n    viewTransition,\r\n    children,\r\n    ...rest\r\n  }, ref) {\r\n    let path = useResolvedPath(to, { relative: rest.relative });\r\n    let location = useLocation();\r\n    let routerState = React10.useContext(DataRouterStateContext);\r\n    let { navigator: navigator2, basename } = React10.useContext(NavigationContext);\r\n    let isTransitioning = routerState != null && // Conditional usage is OK here because the usage of a data router is static\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    useViewTransitionState(path) && viewTransition === true;\r\n    let toPathname = navigator2.encodeLocation ? navigator2.encodeLocation(path).pathname : path.pathname;\r\n    let locationPathname = location.pathname;\r\n    let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\r\n    if (!caseSensitive) {\r\n      locationPathname = locationPathname.toLowerCase();\r\n      nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\r\n      toPathname = toPathname.toLowerCase();\r\n    }\r\n    if (nextLocationPathname && basename) {\r\n      nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\r\n    }\r\n    const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\r\n    let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\r\n    let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\r\n    let renderProps = {\r\n      isActive,\r\n      isPending,\r\n      isTransitioning\r\n    };\r\n    let ariaCurrent = isActive ? ariaCurrentProp : void 0;\r\n    let className;\r\n    if (typeof classNameProp === \"function\") {\r\n      className = classNameProp(renderProps);\r\n    } else {\r\n      className = [\r\n        classNameProp,\r\n        isActive ? \"active\" : null,\r\n        isPending ? \"pending\" : null,\r\n        isTransitioning ? \"transitioning\" : null\r\n      ].filter(Boolean).join(\" \");\r\n    }\r\n    let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\r\n    return /* @__PURE__ */ React10.createElement(\r\n      Link,\r\n      {\r\n        ...rest,\r\n        \"aria-current\": ariaCurrent,\r\n        className,\r\n        ref,\r\n        style,\r\n        to,\r\n        viewTransition\r\n      },\r\n      typeof children === \"function\" ? children(renderProps) : children\r\n    );\r\n  }\r\n);\r\nNavLink.displayName = \"NavLink\";\r\nvar Form = React10.forwardRef(\r\n  ({\r\n    discover = \"render\",\r\n    fetcherKey,\r\n    navigate,\r\n    reloadDocument,\r\n    replace: replace2,\r\n    state,\r\n    method = defaultMethod,\r\n    action,\r\n    onSubmit,\r\n    relative,\r\n    preventScrollReset,\r\n    viewTransition,\r\n    ...props\r\n  }, forwardedRef) => {\r\n    let submit = useSubmit();\r\n    let formAction = useFormAction(action, { relative });\r\n    let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\r\n    let isAbsolute = typeof action === \"string\" && ABSOLUTE_URL_REGEX2.test(action);\r\n    let submitHandler = (event) => {\r\n      onSubmit && onSubmit(event);\r\n      if (event.defaultPrevented) return;\r\n      event.preventDefault();\r\n      let submitter = event.nativeEvent.submitter;\r\n      let submitMethod = submitter?.getAttribute(\"formmethod\") || method;\r\n      submit(submitter || event.currentTarget, {\r\n        fetcherKey,\r\n        method: submitMethod,\r\n        navigate,\r\n        replace: replace2,\r\n        state,\r\n        relative,\r\n        preventScrollReset,\r\n        viewTransition\r\n      });\r\n    };\r\n    return /* @__PURE__ */ React10.createElement(\r\n      \"form\",\r\n      {\r\n        ref: forwardedRef,\r\n        method: formMethod,\r\n        action: formAction,\r\n        onSubmit: reloadDocument ? onSubmit : submitHandler,\r\n        ...props,\r\n        \"data-discover\": !isAbsolute && discover === \"render\" ? \"true\" : void 0\r\n      }\r\n    );\r\n  }\r\n);\r\nForm.displayName = \"Form\";\r\nfunction ScrollRestoration({\r\n  getKey,\r\n  storageKey,\r\n  ...props\r\n}) {\r\n  let remixContext = React10.useContext(FrameworkContext);\r\n  let { basename } = React10.useContext(NavigationContext);\r\n  let location = useLocation();\r\n  let matches = useMatches();\r\n  useScrollRestoration({ getKey, storageKey });\r\n  let ssrKey = React10.useMemo(\r\n    () => {\r\n      if (!remixContext || !getKey) return null;\r\n      let userKey = getScrollRestorationKey(\r\n        location,\r\n        matches,\r\n        basename,\r\n        getKey\r\n      );\r\n      return userKey !== location.key ? userKey : null;\r\n    },\r\n    // Nah, we only need this the first time for the SSR render\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n  if (!remixContext || remixContext.isSpaMode) {\r\n    return null;\r\n  }\r\n  let restoreScroll = ((storageKey2, restoreKey) => {\r\n    if (!window.history.state || !window.history.state.key) {\r\n      let key = Math.random().toString(32).slice(2);\r\n      window.history.replaceState({ key }, \"\");\r\n    }\r\n    try {\r\n      let positions = JSON.parse(sessionStorage.getItem(storageKey2) || \"{}\");\r\n      let storedY = positions[restoreKey || window.history.state.key];\r\n      if (typeof storedY === \"number\") {\r\n        window.scrollTo(0, storedY);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      sessionStorage.removeItem(storageKey2);\r\n    }\r\n  }).toString();\r\n  return /* @__PURE__ */ React10.createElement(\r\n    \"script\",\r\n    {\r\n      ...props,\r\n      suppressHydrationWarning: true,\r\n      dangerouslySetInnerHTML: {\r\n        __html: `(${restoreScroll})(${JSON.stringify(\r\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\r\n        )}, ${JSON.stringify(ssrKey)})`\r\n      }\r\n    }\r\n  );\r\n}\r\nScrollRestoration.displayName = \"ScrollRestoration\";\r\nfunction getDataRouterConsoleError2(hookName) {\r\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\r\n}\r\nfunction useDataRouterContext3(hookName) {\r\n  let ctx = React10.useContext(DataRouterContext);\r\n  invariant(ctx, getDataRouterConsoleError2(hookName));\r\n  return ctx;\r\n}\r\nfunction useDataRouterState2(hookName) {\r\n  let state = React10.useContext(DataRouterStateContext);\r\n  invariant(state, getDataRouterConsoleError2(hookName));\r\n  return state;\r\n}\r\nfunction useLinkClickHandler(to, {\r\n  target,\r\n  replace: replaceProp,\r\n  state,\r\n  preventScrollReset,\r\n  relative,\r\n  viewTransition\r\n} = {}) {\r\n  let navigate = useNavigate();\r\n  let location = useLocation();\r\n  let path = useResolvedPath(to, { relative });\r\n  return React10.useCallback(\r\n    (event) => {\r\n      if (shouldProcessLinkClick(event, target)) {\r\n        event.preventDefault();\r\n        let replace2 = replaceProp !== void 0 ? replaceProp : createPath(location) === createPath(path);\r\n        navigate(to, {\r\n          replace: replace2,\r\n          state,\r\n          preventScrollReset,\r\n          relative,\r\n          viewTransition\r\n        });\r\n      }\r\n    },\r\n    [\r\n      location,\r\n      navigate,\r\n      path,\r\n      replaceProp,\r\n      state,\r\n      target,\r\n      to,\r\n      preventScrollReset,\r\n      relative,\r\n      viewTransition\r\n    ]\r\n  );\r\n}\r\nfunction useSearchParams(defaultInit) {\r\n  warning(\r\n    typeof URLSearchParams !== \"undefined\",\r\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not support the URLSearchParams API. If you need to support Internet Explorer 11, we recommend you load a polyfill such as https://github.com/ungap/url-search-params.`\r\n  );\r\n  let defaultSearchParamsRef = React10.useRef(createSearchParams(defaultInit));\r\n  let hasSetSearchParamsRef = React10.useRef(false);\r\n  let location = useLocation();\r\n  let searchParams = React10.useMemo(\r\n    () => (\r\n      // Only merge in the defaults if we haven't yet called setSearchParams.\r\n      // Once we call that we want those to take precedence, otherwise you can't\r\n      // remove a param with setSearchParams({}) if it has an initial value\r\n      getSearchParamsForLocation(\r\n        location.search,\r\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\r\n      )\r\n    ),\r\n    [location.search]\r\n  );\r\n  let navigate = useNavigate();\r\n  let setSearchParams = React10.useCallback(\r\n    (nextInit, navigateOptions) => {\r\n      const newSearchParams = createSearchParams(\r\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\r\n      );\r\n      hasSetSearchParamsRef.current = true;\r\n      navigate(\"?\" + newSearchParams, navigateOptions);\r\n    },\r\n    [navigate, searchParams]\r\n  );\r\n  return [searchParams, setSearchParams];\r\n}\r\nvar fetcherId = 0;\r\nvar getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\r\nfunction useSubmit() {\r\n  let { router } = useDataRouterContext3(\"useSubmit\" /* UseSubmit */);\r\n  let { basename } = React10.useContext(NavigationContext);\r\n  let currentRouteId = useRouteId();\r\n  return React10.useCallback(\r\n    async (target, options = {}) => {\r\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\r\n        target,\r\n        basename\r\n      );\r\n      if (options.navigate === false) {\r\n        let key = options.fetcherKey || getUniqueFetcherId();\r\n        await router.fetch(key, currentRouteId, options.action || action, {\r\n          preventScrollReset: options.preventScrollReset,\r\n          formData,\r\n          body,\r\n          formMethod: options.method || method,\r\n          formEncType: options.encType || encType,\r\n          flushSync: options.flushSync\r\n        });\r\n      } else {\r\n        await router.navigate(options.action || action, {\r\n          preventScrollReset: options.preventScrollReset,\r\n          formData,\r\n          body,\r\n          formMethod: options.method || method,\r\n          formEncType: options.encType || encType,\r\n          replace: options.replace,\r\n          state: options.state,\r\n          fromRouteId: currentRouteId,\r\n          flushSync: options.flushSync,\r\n          viewTransition: options.viewTransition\r\n        });\r\n      }\r\n    },\r\n    [router, basename, currentRouteId]\r\n  );\r\n}\r\nfunction useFormAction(action, { relative } = {}) {\r\n  let { basename } = React10.useContext(NavigationContext);\r\n  let routeContext = React10.useContext(RouteContext);\r\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\r\n  let [match] = routeContext.matches.slice(-1);\r\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\r\n  let location = useLocation();\r\n  if (action == null) {\r\n    path.search = location.search;\r\n    let params = new URLSearchParams(path.search);\r\n    let indexValues = params.getAll(\"index\");\r\n    let hasNakedIndexParam = indexValues.some((v) => v === \"\");\r\n    if (hasNakedIndexParam) {\r\n      params.delete(\"index\");\r\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\r\n      let qs = params.toString();\r\n      path.search = qs ? `?${qs}` : \"\";\r\n    }\r\n  }\r\n  if ((!action || action === \".\") && match.route.index) {\r\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\r\n  }\r\n  if (basename !== \"/\") {\r\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\r\n  }\r\n  return createPath(path);\r\n}\r\nfunction useFetcher({\r\n  key\r\n} = {}) {\r\n  let { router } = useDataRouterContext3(\"useFetcher\" /* UseFetcher */);\r\n  let state = useDataRouterState2(\"useFetcher\" /* UseFetcher */);\r\n  let fetcherData = React10.useContext(FetchersContext);\r\n  let route = React10.useContext(RouteContext);\r\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\r\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\r\n  invariant(route, `useFetcher must be used inside a RouteContext`);\r\n  invariant(\r\n    routeId != null,\r\n    `useFetcher can only be used on routes that contain a unique \"id\"`\r\n  );\r\n  let defaultKey = React10.useId();\r\n  let [fetcherKey, setFetcherKey] = React10.useState(key || defaultKey);\r\n  if (key && key !== fetcherKey) {\r\n    setFetcherKey(key);\r\n  }\r\n  React10.useEffect(() => {\r\n    router.getFetcher(fetcherKey);\r\n    return () => router.deleteFetcher(fetcherKey);\r\n  }, [router, fetcherKey]);\r\n  let load = React10.useCallback(\r\n    async (href2, opts) => {\r\n      invariant(routeId, \"No routeId available for fetcher.load()\");\r\n      await router.fetch(fetcherKey, routeId, href2, opts);\r\n    },\r\n    [fetcherKey, routeId, router]\r\n  );\r\n  let submitImpl = useSubmit();\r\n  let submit = React10.useCallback(\r\n    async (target, opts) => {\r\n      await submitImpl(target, {\r\n        ...opts,\r\n        navigate: false,\r\n        fetcherKey\r\n      });\r\n    },\r\n    [fetcherKey, submitImpl]\r\n  );\r\n  let FetcherForm = React10.useMemo(() => {\r\n    let FetcherForm2 = React10.forwardRef(\r\n      (props, ref) => {\r\n        return /* @__PURE__ */ React10.createElement(Form, { ...props, navigate: false, fetcherKey, ref });\r\n      }\r\n    );\r\n    FetcherForm2.displayName = \"fetcher.Form\";\r\n    return FetcherForm2;\r\n  }, [fetcherKey]);\r\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\r\n  let data2 = fetcherData.get(fetcherKey);\r\n  let fetcherWithComponents = React10.useMemo(\r\n    () => ({\r\n      Form: FetcherForm,\r\n      submit,\r\n      load,\r\n      ...fetcher,\r\n      data: data2\r\n    }),\r\n    [FetcherForm, submit, load, fetcher, data2]\r\n  );\r\n  return fetcherWithComponents;\r\n}\r\nfunction useFetchers() {\r\n  let state = useDataRouterState2(\"useFetchers\" /* UseFetchers */);\r\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\r\n    ...fetcher,\r\n    key\r\n  }));\r\n}\r\nvar SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\r\nvar savedScrollPositions = {};\r\nfunction getScrollRestorationKey(location, matches, basename, getKey) {\r\n  let key = null;\r\n  if (getKey) {\r\n    if (basename !== \"/\") {\r\n      key = getKey(\r\n        {\r\n          ...location,\r\n          pathname: stripBasename(location.pathname, basename) || location.pathname\r\n        },\r\n        matches\r\n      );\r\n    } else {\r\n      key = getKey(location, matches);\r\n    }\r\n  }\r\n  if (key == null) {\r\n    key = location.key;\r\n  }\r\n  return key;\r\n}\r\nfunction useScrollRestoration({\r\n  getKey,\r\n  storageKey\r\n} = {}) {\r\n  let { router } = useDataRouterContext3(\"useScrollRestoration\" /* UseScrollRestoration */);\r\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState2(\r\n    \"useScrollRestoration\" /* UseScrollRestoration */\r\n  );\r\n  let { basename } = React10.useContext(NavigationContext);\r\n  let location = useLocation();\r\n  let matches = useMatches();\r\n  let navigation = useNavigation();\r\n  React10.useEffect(() => {\r\n    window.history.scrollRestoration = \"manual\";\r\n    return () => {\r\n      window.history.scrollRestoration = \"auto\";\r\n    };\r\n  }, []);\r\n  usePageHide(\r\n    React10.useCallback(() => {\r\n      if (navigation.state === \"idle\") {\r\n        let key = getScrollRestorationKey(location, matches, basename, getKey);\r\n        savedScrollPositions[key] = window.scrollY;\r\n      }\r\n      try {\r\n        sessionStorage.setItem(\r\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\r\n          JSON.stringify(savedScrollPositions)\r\n        );\r\n      } catch (error) {\r\n        warning(\r\n          false,\r\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\r\n        );\r\n      }\r\n      window.history.scrollRestoration = \"auto\";\r\n    }, [navigation.state, getKey, basename, location, matches, storageKey])\r\n  );\r\n  if (typeof document !== \"undefined\") {\r\n    React10.useLayoutEffect(() => {\r\n      try {\r\n        let sessionPositions = sessionStorage.getItem(\r\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\r\n        );\r\n        if (sessionPositions) {\r\n          savedScrollPositions = JSON.parse(sessionPositions);\r\n        }\r\n      } catch (e) {\r\n      }\r\n    }, [storageKey]);\r\n    React10.useLayoutEffect(() => {\r\n      let disableScrollRestoration = router?.enableScrollRestoration(\r\n        savedScrollPositions,\r\n        () => window.scrollY,\r\n        getKey ? (location2, matches2) => getScrollRestorationKey(location2, matches2, basename, getKey) : void 0\r\n      );\r\n      return () => disableScrollRestoration && disableScrollRestoration();\r\n    }, [router, basename, getKey]);\r\n    React10.useLayoutEffect(() => {\r\n      if (restoreScrollPosition === false) {\r\n        return;\r\n      }\r\n      if (typeof restoreScrollPosition === \"number\") {\r\n        window.scrollTo(0, restoreScrollPosition);\r\n        return;\r\n      }\r\n      if (location.hash) {\r\n        let el = document.getElementById(\r\n          decodeURIComponent(location.hash.slice(1))\r\n        );\r\n        if (el) {\r\n          el.scrollIntoView();\r\n          return;\r\n        }\r\n      }\r\n      if (preventScrollReset === true) {\r\n        return;\r\n      }\r\n      window.scrollTo(0, 0);\r\n    }, [location, restoreScrollPosition, preventScrollReset]);\r\n  }\r\n}\r\nfunction useBeforeUnload(callback, options) {\r\n  let { capture } = options || {};\r\n  React10.useEffect(() => {\r\n    let opts = capture != null ? { capture } : void 0;\r\n    window.addEventListener(\"beforeunload\", callback, opts);\r\n    return () => {\r\n      window.removeEventListener(\"beforeunload\", callback, opts);\r\n    };\r\n  }, [callback, capture]);\r\n}\r\nfunction usePageHide(callback, options) {\r\n  let { capture } = options || {};\r\n  React10.useEffect(() => {\r\n    let opts = capture != null ? { capture } : void 0;\r\n    window.addEventListener(\"pagehide\", callback, opts);\r\n    return () => {\r\n      window.removeEventListener(\"pagehide\", callback, opts);\r\n    };\r\n  }, [callback, capture]);\r\n}\r\nfunction usePrompt({\r\n  when,\r\n  message\r\n}) {\r\n  let blocker = useBlocker(when);\r\n  React10.useEffect(() => {\r\n    if (blocker.state === \"blocked\") {\r\n      let proceed = window.confirm(message);\r\n      if (proceed) {\r\n        setTimeout(blocker.proceed, 0);\r\n      } else {\r\n        blocker.reset();\r\n      }\r\n    }\r\n  }, [blocker, message]);\r\n  React10.useEffect(() => {\r\n    if (blocker.state === \"blocked\" && !when) {\r\n      blocker.reset();\r\n    }\r\n  }, [blocker, when]);\r\n}\r\nfunction useViewTransitionState(to, opts = {}) {\r\n  let vtContext = React10.useContext(ViewTransitionContext);\r\n  invariant(\r\n    vtContext != null,\r\n    \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?\"\r\n  );\r\n  let { basename } = useDataRouterContext3(\r\n    \"useViewTransitionState\" /* useViewTransitionState */\r\n  );\r\n  let path = useResolvedPath(to, { relative: opts.relative });\r\n  if (!vtContext.isTransitioning) {\r\n    return false;\r\n  }\r\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\r\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\r\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\r\n}\r\n\r\n// lib/dom/server.tsx\r\nimport * as React11 from \"react\";\r\nfunction StaticRouter({\r\n  basename,\r\n  children,\r\n  location: locationProp = \"/\"\r\n}) {\r\n  if (typeof locationProp === \"string\") {\r\n    locationProp = parsePath(locationProp);\r\n  }\r\n  let action = \"POP\" /* Pop */;\r\n  let location = {\r\n    pathname: locationProp.pathname || \"/\",\r\n    search: locationProp.search || \"\",\r\n    hash: locationProp.hash || \"\",\r\n    state: locationProp.state != null ? locationProp.state : null,\r\n    key: locationProp.key || \"default\"\r\n  };\r\n  let staticNavigator = getStatelessNavigator();\r\n  return /* @__PURE__ */ React11.createElement(\r\n    Router,\r\n    {\r\n      basename,\r\n      children,\r\n      location,\r\n      navigationType: action,\r\n      navigator: staticNavigator,\r\n      static: true\r\n    }\r\n  );\r\n}\r\nfunction StaticRouterProvider({\r\n  context,\r\n  router,\r\n  hydrate = true,\r\n  nonce\r\n}) {\r\n  invariant(\r\n    router && context,\r\n    \"You must provide `router` and `context` to <StaticRouterProvider>\"\r\n  );\r\n  let dataRouterContext = {\r\n    router,\r\n    navigator: getStatelessNavigator(),\r\n    static: true,\r\n    staticContext: context,\r\n    basename: context.basename || \"/\"\r\n  };\r\n  let fetchersContext = /* @__PURE__ */ new Map();\r\n  let hydrateScript = \"\";\r\n  if (hydrate !== false) {\r\n    let data2 = {\r\n      loaderData: context.loaderData,\r\n      actionData: context.actionData,\r\n      errors: serializeErrors(context.errors)\r\n    };\r\n    let json = htmlEscape(JSON.stringify(JSON.stringify(data2)));\r\n    hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${json});`;\r\n  }\r\n  let { state } = dataRouterContext.router;\r\n  return /* @__PURE__ */ React11.createElement(React11.Fragment, null, /* @__PURE__ */ React11.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React11.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React11.createElement(FetchersContext.Provider, { value: fetchersContext }, /* @__PURE__ */ React11.createElement(ViewTransitionContext.Provider, { value: { isTransitioning: false } }, /* @__PURE__ */ React11.createElement(\r\n    Router,\r\n    {\r\n      basename: dataRouterContext.basename,\r\n      location: state.location,\r\n      navigationType: state.historyAction,\r\n      navigator: dataRouterContext.navigator,\r\n      static: dataRouterContext.static\r\n    },\r\n    /* @__PURE__ */ React11.createElement(\r\n      DataRoutes2,\r\n      {\r\n        routes: router.routes,\r\n        future: router.future,\r\n        state\r\n      }\r\n    )\r\n  ))))), hydrateScript ? /* @__PURE__ */ React11.createElement(\r\n    \"script\",\r\n    {\r\n      suppressHydrationWarning: true,\r\n      nonce,\r\n      dangerouslySetInnerHTML: { __html: hydrateScript }\r\n    }\r\n  ) : null);\r\n}\r\nfunction DataRoutes2({\r\n  routes,\r\n  future,\r\n  state\r\n}) {\r\n  return useRoutesImpl(routes, void 0, state, future);\r\n}\r\nfunction serializeErrors(errors) {\r\n  if (!errors) return null;\r\n  let entries = Object.entries(errors);\r\n  let serialized = {};\r\n  for (let [key, val] of entries) {\r\n    if (isRouteErrorResponse(val)) {\r\n      serialized[key] = { ...val, __type: \"RouteErrorResponse\" };\r\n    } else if (val instanceof Error) {\r\n      serialized[key] = {\r\n        message: val.message,\r\n        __type: \"Error\",\r\n        // If this is a subclass (i.e., ReferenceError), send up the type so we\r\n        // can re-create the same type during hydration.\r\n        ...val.name !== \"Error\" ? {\r\n          __subType: val.name\r\n        } : {}\r\n      };\r\n    } else {\r\n      serialized[key] = val;\r\n    }\r\n  }\r\n  return serialized;\r\n}\r\nfunction getStatelessNavigator() {\r\n  return {\r\n    createHref,\r\n    encodeLocation,\r\n    push(to) {\r\n      throw new Error(\r\n        `You cannot use navigator.push() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${JSON.stringify(to)})\\` somewhere in your app.`\r\n      );\r\n    },\r\n    replace(to) {\r\n      throw new Error(\r\n        `You cannot use navigator.replace() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${JSON.stringify(to)}, { replace: true })\\` somewhere in your app.`\r\n      );\r\n    },\r\n    go(delta) {\r\n      throw new Error(\r\n        `You cannot use navigator.go() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${delta})\\` somewhere in your app.`\r\n      );\r\n    },\r\n    back() {\r\n      throw new Error(\r\n        `You cannot use navigator.back() on the server because it is a stateless environment.`\r\n      );\r\n    },\r\n    forward() {\r\n      throw new Error(\r\n        `You cannot use navigator.forward() on the server because it is a stateless environment.`\r\n      );\r\n    }\r\n  };\r\n}\r\nfunction createStaticHandler2(routes, opts) {\r\n  return createStaticHandler(routes, {\r\n    ...opts,\r\n    mapRouteProperties\r\n  });\r\n}\r\nfunction createStaticRouter(routes, context, opts = {}) {\r\n  let manifest = {};\r\n  let dataRoutes = convertRoutesToDataRoutes(\r\n    routes,\r\n    mapRouteProperties,\r\n    void 0,\r\n    manifest\r\n  );\r\n  let matches = context.matches.map((match) => {\r\n    let route = manifest[match.route.id] || match.route;\r\n    return {\r\n      ...match,\r\n      route\r\n    };\r\n  });\r\n  let msg = (method) => `You cannot use router.${method}() on the server because it is a stateless environment`;\r\n  return {\r\n    get basename() {\r\n      return context.basename;\r\n    },\r\n    get future() {\r\n      return {\r\n        ...opts?.future\r\n      };\r\n    },\r\n    get state() {\r\n      return {\r\n        historyAction: \"POP\" /* Pop */,\r\n        location: context.location,\r\n        matches,\r\n        loaderData: context.loaderData,\r\n        actionData: context.actionData,\r\n        errors: context.errors,\r\n        initialized: true,\r\n        navigation: IDLE_NAVIGATION,\r\n        restoreScrollPosition: null,\r\n        preventScrollReset: false,\r\n        revalidation: \"idle\",\r\n        fetchers: /* @__PURE__ */ new Map(),\r\n        blockers: /* @__PURE__ */ new Map()\r\n      };\r\n    },\r\n    get routes() {\r\n      return dataRoutes;\r\n    },\r\n    get window() {\r\n      return void 0;\r\n    },\r\n    initialize() {\r\n      throw msg(\"initialize\");\r\n    },\r\n    subscribe() {\r\n      throw msg(\"subscribe\");\r\n    },\r\n    enableScrollRestoration() {\r\n      throw msg(\"enableScrollRestoration\");\r\n    },\r\n    navigate() {\r\n      throw msg(\"navigate\");\r\n    },\r\n    fetch() {\r\n      throw msg(\"fetch\");\r\n    },\r\n    revalidate() {\r\n      throw msg(\"revalidate\");\r\n    },\r\n    createHref,\r\n    encodeLocation,\r\n    getFetcher() {\r\n      return IDLE_FETCHER;\r\n    },\r\n    deleteFetcher() {\r\n      throw msg(\"deleteFetcher\");\r\n    },\r\n    dispose() {\r\n      throw msg(\"dispose\");\r\n    },\r\n    getBlocker() {\r\n      return IDLE_BLOCKER;\r\n    },\r\n    deleteBlocker() {\r\n      throw msg(\"deleteBlocker\");\r\n    },\r\n    patchRoutes() {\r\n      throw msg(\"patchRoutes\");\r\n    },\r\n    _internalFetchControllers: /* @__PURE__ */ new Map(),\r\n    _internalSetRoutes() {\r\n      throw msg(\"_internalSetRoutes\");\r\n    }\r\n  };\r\n}\r\nfunction createHref(to) {\r\n  return typeof to === \"string\" ? to : createPath(to);\r\n}\r\nfunction encodeLocation(to) {\r\n  let href2 = typeof to === \"string\" ? to : createPath(to);\r\n  href2 = href2.replace(/ $/, \"%20\");\r\n  let encoded = ABSOLUTE_URL_REGEX3.test(href2) ? new URL(href2) : new URL(href2, \"http://localhost\");\r\n  return {\r\n    pathname: encoded.pathname,\r\n    search: encoded.search,\r\n    hash: encoded.hash\r\n  };\r\n}\r\nvar ABSOLUTE_URL_REGEX3 = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\r\nvar ESCAPE_LOOKUP2 = {\r\n  \"&\": \"\\\\u0026\",\r\n  \">\": \"\\\\u003e\",\r\n  \"<\": \"\\\\u003c\",\r\n  \"\\u2028\": \"\\\\u2028\",\r\n  \"\\u2029\": \"\\\\u2029\"\r\n};\r\nvar ESCAPE_REGEX2 = /[&><\\u2028\\u2029]/g;\r\nfunction htmlEscape(str) {\r\n  return str.replace(ESCAPE_REGEX2, (match) => ESCAPE_LOOKUP2[match]);\r\n}\r\n\r\n// lib/dom/ssr/server.tsx\r\nimport * as React12 from \"react\";\r\nfunction ServerRouter({\r\n  context,\r\n  url,\r\n  nonce\r\n}) {\r\n  if (typeof url === \"string\") {\r\n    url = new URL(url);\r\n  }\r\n  let { manifest, routeModules, criticalCss, serverHandoffString } = context;\r\n  let routes = createServerRoutes(\r\n    manifest.routes,\r\n    routeModules,\r\n    context.future,\r\n    context.isSpaMode\r\n  );\r\n  context.staticHandlerContext.loaderData = {\r\n    ...context.staticHandlerContext.loaderData\r\n  };\r\n  for (let match of context.staticHandlerContext.matches) {\r\n    let routeId = match.route.id;\r\n    let route = routeModules[routeId];\r\n    let manifestRoute = context.manifest.routes[routeId];\r\n    if (route && manifestRoute && shouldHydrateRouteLoader(manifestRoute, route, context.isSpaMode) && (route.HydrateFallback || !manifestRoute.hasLoader)) {\r\n      delete context.staticHandlerContext.loaderData[routeId];\r\n    }\r\n  }\r\n  let router = createStaticRouter(routes, context.staticHandlerContext);\r\n  return /* @__PURE__ */ React12.createElement(React12.Fragment, null, /* @__PURE__ */ React12.createElement(\r\n    FrameworkContext.Provider,\r\n    {\r\n      value: {\r\n        manifest,\r\n        routeModules,\r\n        criticalCss,\r\n        serverHandoffString,\r\n        future: context.future,\r\n        ssr: context.ssr,\r\n        isSpaMode: context.isSpaMode,\r\n        serializeError: context.serializeError,\r\n        renderMeta: context.renderMeta\r\n      }\r\n    },\r\n    /* @__PURE__ */ React12.createElement(RemixErrorBoundary, { location: router.state.location }, /* @__PURE__ */ React12.createElement(\r\n      StaticRouterProvider,\r\n      {\r\n        router,\r\n        context: context.staticHandlerContext,\r\n        hydrate: false\r\n      }\r\n    ))\r\n  ), context.serverHandoffStream ? /* @__PURE__ */ React12.createElement(React12.Suspense, null, /* @__PURE__ */ React12.createElement(\r\n    StreamTransfer,\r\n    {\r\n      context,\r\n      identifier: 0,\r\n      reader: context.serverHandoffStream.getReader(),\r\n      textDecoder: new TextDecoder(),\r\n      nonce\r\n    }\r\n  )) : null);\r\n}\r\n\r\n// lib/dom/ssr/routes-test-stub.tsx\r\nimport * as React13 from \"react\";\r\nfunction createRoutesStub(routes, context = {}) {\r\n  return function RoutesTestStub({\r\n    initialEntries,\r\n    initialIndex,\r\n    hydrationData,\r\n    future\r\n  }) {\r\n    let routerRef = React13.useRef();\r\n    let remixContextRef = React13.useRef();\r\n    if (routerRef.current == null) {\r\n      remixContextRef.current = {\r\n        future: {},\r\n        manifest: {\r\n          routes: {},\r\n          entry: { imports: [], module: \"\" },\r\n          url: \"\",\r\n          version: \"\"\r\n        },\r\n        routeModules: {},\r\n        ssr: false,\r\n        isSpaMode: false\r\n      };\r\n      let patched = processRoutes(\r\n        // @ts-expect-error loader/action context types don't match :/\r\n        convertRoutesToDataRoutes(routes, (r) => r),\r\n        context,\r\n        remixContextRef.current.manifest,\r\n        remixContextRef.current.routeModules\r\n      );\r\n      routerRef.current = createMemoryRouter(patched, {\r\n        initialEntries,\r\n        initialIndex,\r\n        hydrationData\r\n      });\r\n    }\r\n    return /* @__PURE__ */ React13.createElement(FrameworkContext.Provider, { value: remixContextRef.current }, /* @__PURE__ */ React13.createElement(RouterProvider, { router: routerRef.current }));\r\n  };\r\n}\r\nfunction processRoutes(routes, context, manifest, routeModules, parentId) {\r\n  return routes.map((route) => {\r\n    if (!route.id) {\r\n      throw new Error(\r\n        \"Expected a route.id in @remix-run/testing processRoutes() function\"\r\n      );\r\n    }\r\n    let { loader, action } = route;\r\n    let newRoute = {\r\n      id: route.id,\r\n      path: route.path,\r\n      index: route.index,\r\n      Component: route.Component,\r\n      HydrateFallback: route.HydrateFallback,\r\n      ErrorBoundary: route.ErrorBoundary,\r\n      action: action ? (args) => action({ ...args, context }) : void 0,\r\n      loader: loader ? (args) => loader({ ...args, context }) : void 0,\r\n      handle: route.handle,\r\n      shouldRevalidate: route.shouldRevalidate\r\n    };\r\n    let entryRoute = {\r\n      id: route.id,\r\n      path: route.path,\r\n      index: route.index,\r\n      parentId,\r\n      hasAction: route.action != null,\r\n      hasLoader: route.loader != null,\r\n      // When testing routes, you should just be stubbing loader/action, not\r\n      // trying to re-implement the full loader/clientLoader/SSR/hydration flow.\r\n      // That is better tested via E2E tests.\r\n      hasClientAction: false,\r\n      hasClientLoader: false,\r\n      hasErrorBoundary: route.ErrorBoundary != null,\r\n      // any need for these?\r\n      module: \"build/stub-path-to-module.js\",\r\n      clientActionModule: void 0,\r\n      clientLoaderModule: void 0,\r\n      hydrateFallbackModule: void 0\r\n    };\r\n    manifest.routes[newRoute.id] = entryRoute;\r\n    routeModules[route.id] = {\r\n      default: route.Component || Outlet,\r\n      ErrorBoundary: route.ErrorBoundary || void 0,\r\n      handle: route.handle,\r\n      links: route.links,\r\n      meta: route.meta,\r\n      shouldRevalidate: route.shouldRevalidate\r\n    };\r\n    if (route.children) {\r\n      newRoute.children = processRoutes(\r\n        route.children,\r\n        context,\r\n        manifest,\r\n        routeModules,\r\n        newRoute.id\r\n      );\r\n    }\r\n    return newRoute;\r\n  });\r\n}\r\n\r\n// lib/server-runtime/cookies.ts\r\nimport { parse, serialize } from \"cookie\";\r\n\r\n// lib/server-runtime/crypto.ts\r\nvar encoder = new TextEncoder();\r\nvar sign = async (value, secret) => {\r\n  let data2 = encoder.encode(value);\r\n  let key = await createKey2(secret, [\"sign\"]);\r\n  let signature = await crypto.subtle.sign(\"HMAC\", key, data2);\r\n  let hash = btoa(String.fromCharCode(...new Uint8Array(signature))).replace(\r\n    /=+$/,\r\n    \"\"\r\n  );\r\n  return value + \".\" + hash;\r\n};\r\nvar unsign = async (cookie, secret) => {\r\n  let index = cookie.lastIndexOf(\".\");\r\n  let value = cookie.slice(0, index);\r\n  let hash = cookie.slice(index + 1);\r\n  let data2 = encoder.encode(value);\r\n  let key = await createKey2(secret, [\"verify\"]);\r\n  let signature = byteStringToUint8Array(atob(hash));\r\n  let valid = await crypto.subtle.verify(\"HMAC\", key, signature, data2);\r\n  return valid ? value : false;\r\n};\r\nvar createKey2 = async (secret, usages) => crypto.subtle.importKey(\r\n  \"raw\",\r\n  encoder.encode(secret),\r\n  { name: \"HMAC\", hash: \"SHA-256\" },\r\n  false,\r\n  usages\r\n);\r\nfunction byteStringToUint8Array(byteString) {\r\n  let array = new Uint8Array(byteString.length);\r\n  for (let i = 0; i < byteString.length; i++) {\r\n    array[i] = byteString.charCodeAt(i);\r\n  }\r\n  return array;\r\n}\r\n\r\n// lib/server-runtime/cookies.ts\r\nvar createCookie = (name, cookieOptions = {}) => {\r\n  let { secrets = [], ...options } = {\r\n    path: \"/\",\r\n    sameSite: \"lax\",\r\n    ...cookieOptions\r\n  };\r\n  warnOnceAboutExpiresCookie(name, options.expires);\r\n  return {\r\n    get name() {\r\n      return name;\r\n    },\r\n    get isSigned() {\r\n      return secrets.length > 0;\r\n    },\r\n    get expires() {\r\n      return typeof options.maxAge !== \"undefined\" ? new Date(Date.now() + options.maxAge * 1e3) : options.expires;\r\n    },\r\n    async parse(cookieHeader, parseOptions) {\r\n      if (!cookieHeader) return null;\r\n      let cookies = parse(cookieHeader, { ...options, ...parseOptions });\r\n      if (name in cookies) {\r\n        let value = cookies[name];\r\n        if (typeof value === \"string\" && value !== \"\") {\r\n          let decoded = await decodeCookieValue(value, secrets);\r\n          return decoded;\r\n        } else {\r\n          return \"\";\r\n        }\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n    async serialize(value, serializeOptions) {\r\n      return serialize(\r\n        name,\r\n        value === \"\" ? \"\" : await encodeCookieValue(value, secrets),\r\n        {\r\n          ...options,\r\n          ...serializeOptions\r\n        }\r\n      );\r\n    }\r\n  };\r\n};\r\nvar isCookie = (object) => {\r\n  return object != null && typeof object.name === \"string\" && typeof object.isSigned === \"boolean\" && typeof object.parse === \"function\" && typeof object.serialize === \"function\";\r\n};\r\nasync function encodeCookieValue(value, secrets) {\r\n  let encoded = encodeData(value);\r\n  if (secrets.length > 0) {\r\n    encoded = await sign(encoded, secrets[0]);\r\n  }\r\n  return encoded;\r\n}\r\nasync function decodeCookieValue(value, secrets) {\r\n  if (secrets.length > 0) {\r\n    for (let secret of secrets) {\r\n      let unsignedValue = await unsign(value, secret);\r\n      if (unsignedValue !== false) {\r\n        return decodeData(unsignedValue);\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  return decodeData(value);\r\n}\r\nfunction encodeData(value) {\r\n  return btoa(myUnescape(encodeURIComponent(JSON.stringify(value))));\r\n}\r\nfunction decodeData(value) {\r\n  try {\r\n    return JSON.parse(decodeURIComponent(myEscape(atob(value))));\r\n  } catch (error) {\r\n    return {};\r\n  }\r\n}\r\nfunction myEscape(value) {\r\n  let str = value.toString();\r\n  let result = \"\";\r\n  let index = 0;\r\n  let chr, code;\r\n  while (index < str.length) {\r\n    chr = str.charAt(index++);\r\n    if (/[\\w*+\\-./@]/.exec(chr)) {\r\n      result += chr;\r\n    } else {\r\n      code = chr.charCodeAt(0);\r\n      if (code < 256) {\r\n        result += \"%\" + hex(code, 2);\r\n      } else {\r\n        result += \"%u\" + hex(code, 4).toUpperCase();\r\n      }\r\n    }\r\n  }\r\n  return result;\r\n}\r\nfunction hex(code, length) {\r\n  let result = code.toString(16);\r\n  while (result.length < length) result = \"0\" + result;\r\n  return result;\r\n}\r\nfunction myUnescape(value) {\r\n  let str = value.toString();\r\n  let result = \"\";\r\n  let index = 0;\r\n  let chr, part;\r\n  while (index < str.length) {\r\n    chr = str.charAt(index++);\r\n    if (chr === \"%\") {\r\n      if (str.charAt(index) === \"u\") {\r\n        part = str.slice(index + 1, index + 5);\r\n        if (/^[\\da-f]{4}$/i.exec(part)) {\r\n          result += String.fromCharCode(parseInt(part, 16));\r\n          index += 5;\r\n          continue;\r\n        }\r\n      } else {\r\n        part = str.slice(index, index + 2);\r\n        if (/^[\\da-f]{2}$/i.exec(part)) {\r\n          result += String.fromCharCode(parseInt(part, 16));\r\n          index += 2;\r\n          continue;\r\n        }\r\n      }\r\n    }\r\n    result += chr;\r\n  }\r\n  return result;\r\n}\r\nfunction warnOnceAboutExpiresCookie(name, expires) {\r\n  warnOnce(\r\n    !expires,\r\n    `The \"${name}\" cookie has an \"expires\" property set. This will cause the expires value to not be updated when the session is committed. Instead, you should set the expires value when serializing the cookie. You can use \\`commitSession(session, { expires })\\` if using a session storage object, or \\`cookie.serialize(\"value\", { expires })\\` if you're using the cookie directly.`\r\n  );\r\n}\r\n\r\n// lib/server-runtime/entry.ts\r\nfunction createEntryRouteModules(manifest) {\r\n  return Object.keys(manifest).reduce((memo2, routeId) => {\r\n    let route = manifest[routeId];\r\n    if (route) {\r\n      memo2[routeId] = route.module;\r\n    }\r\n    return memo2;\r\n  }, {});\r\n}\r\n\r\n// lib/server-runtime/mode.ts\r\nvar ServerMode = /* @__PURE__ */ ((ServerMode2) => {\r\n  ServerMode2[\"Development\"] = \"development\";\r\n  ServerMode2[\"Production\"] = \"production\";\r\n  ServerMode2[\"Test\"] = \"test\";\r\n  return ServerMode2;\r\n})(ServerMode || {});\r\nfunction isServerMode(value) {\r\n  return value === \"development\" /* Development */ || value === \"production\" /* Production */ || value === \"test\" /* Test */;\r\n}\r\n\r\n// lib/server-runtime/errors.ts\r\nfunction sanitizeError(error, serverMode) {\r\n  if (error instanceof Error && serverMode !== \"development\" /* Development */) {\r\n    let sanitized = new Error(\"Unexpected Server Error\");\r\n    sanitized.stack = void 0;\r\n    return sanitized;\r\n  }\r\n  return error;\r\n}\r\nfunction sanitizeErrors(errors, serverMode) {\r\n  return Object.entries(errors).reduce((acc, [routeId, error]) => {\r\n    return Object.assign(acc, { [routeId]: sanitizeError(error, serverMode) });\r\n  }, {});\r\n}\r\nfunction serializeError(error, serverMode) {\r\n  let sanitized = sanitizeError(error, serverMode);\r\n  return {\r\n    message: sanitized.message,\r\n    stack: sanitized.stack\r\n  };\r\n}\r\nfunction serializeErrors2(errors, serverMode) {\r\n  if (!errors) return null;\r\n  let entries = Object.entries(errors);\r\n  let serialized = {};\r\n  for (let [key, val] of entries) {\r\n    if (isRouteErrorResponse(val)) {\r\n      serialized[key] = { ...val, __type: \"RouteErrorResponse\" };\r\n    } else if (val instanceof Error) {\r\n      let sanitized = sanitizeError(val, serverMode);\r\n      serialized[key] = {\r\n        message: sanitized.message,\r\n        stack: sanitized.stack,\r\n        __type: \"Error\",\r\n        // If this is a subclass (i.e., ReferenceError), send up the type so we\r\n        // can re-create the same type during hydration.  This will only apply\r\n        // in dev mode since all production errors are sanitized to normal\r\n        // Error instances\r\n        ...sanitized.name !== \"Error\" ? {\r\n          __subType: sanitized.name\r\n        } : {}\r\n      };\r\n    } else {\r\n      serialized[key] = val;\r\n    }\r\n  }\r\n  return serialized;\r\n}\r\n\r\n// lib/server-runtime/routeMatching.ts\r\nfunction matchServerRoutes(routes, pathname, basename) {\r\n  let matches = matchRoutes(\r\n    routes,\r\n    pathname,\r\n    basename\r\n  );\r\n  if (!matches) return null;\r\n  return matches.map((match) => ({\r\n    params: match.params,\r\n    pathname: match.pathname,\r\n    route: match.route\r\n  }));\r\n}\r\n\r\n// lib/server-runtime/data.ts\r\nasync function callRouteHandler(handler, args) {\r\n  let result = await handler({\r\n    request: stripRoutesParam(stripIndexParam2(args.request)),\r\n    params: args.params,\r\n    context: args.context\r\n  });\r\n  if (isDataWithResponseInit(result) && result.init && result.init.status && isRedirectStatusCode(result.init.status)) {\r\n    throw new Response(null, result.init);\r\n  }\r\n  return result;\r\n}\r\nfunction stripIndexParam2(request) {\r\n  let url = new URL(request.url);\r\n  let indexValues = url.searchParams.getAll(\"index\");\r\n  url.searchParams.delete(\"index\");\r\n  let indexValuesToKeep = [];\r\n  for (let indexValue of indexValues) {\r\n    if (indexValue) {\r\n      indexValuesToKeep.push(indexValue);\r\n    }\r\n  }\r\n  for (let toKeep of indexValuesToKeep) {\r\n    url.searchParams.append(\"index\", toKeep);\r\n  }\r\n  let init = {\r\n    method: request.method,\r\n    body: request.body,\r\n    headers: request.headers,\r\n    signal: request.signal\r\n  };\r\n  if (init.body) {\r\n    init.duplex = \"half\";\r\n  }\r\n  return new Request(url.href, init);\r\n}\r\nfunction stripRoutesParam(request) {\r\n  let url = new URL(request.url);\r\n  url.searchParams.delete(\"_routes\");\r\n  let init = {\r\n    method: request.method,\r\n    body: request.body,\r\n    headers: request.headers,\r\n    signal: request.signal\r\n  };\r\n  if (init.body) {\r\n    init.duplex = \"half\";\r\n  }\r\n  return new Request(url.href, init);\r\n}\r\n\r\n// lib/server-runtime/invariant.ts\r\nfunction invariant3(value, message) {\r\n  if (value === false || value === null || typeof value === \"undefined\") {\r\n    console.error(\r\n      \"The following error is a bug in React Router; please open an issue! https://github.com/remix-run/react-router/issues/new/choose\"\r\n    );\r\n    throw new Error(message);\r\n  }\r\n}\r\n\r\n// lib/server-runtime/routes.ts\r\nfunction groupRoutesByParentId2(manifest) {\r\n  let routes = {};\r\n  Object.values(manifest).forEach((route) => {\r\n    if (route) {\r\n      let parentId = route.parentId || \"\";\r\n      if (!routes[parentId]) {\r\n        routes[parentId] = [];\r\n      }\r\n      routes[parentId].push(route);\r\n    }\r\n  });\r\n  return routes;\r\n}\r\nfunction createRoutes(manifest, parentId = \"\", routesByParentId = groupRoutesByParentId2(manifest)) {\r\n  return (routesByParentId[parentId] || []).map((route) => ({\r\n    ...route,\r\n    children: createRoutes(manifest, route.id, routesByParentId)\r\n  }));\r\n}\r\nfunction createStaticHandlerDataRoutes(manifest, future, parentId = \"\", routesByParentId = groupRoutesByParentId2(manifest)) {\r\n  return (routesByParentId[parentId] || []).map((route) => {\r\n    let commonRoute = {\r\n      // Always include root due to default boundaries\r\n      hasErrorBoundary: route.id === \"root\" || route.module.ErrorBoundary != null,\r\n      id: route.id,\r\n      path: route.path,\r\n      // Need to use RR's version in the param typed here to permit the optional\r\n      // context even though we know it'll always be provided in remix\r\n      loader: route.module.loader ? async (args) => {\r\n        if (args.request.headers.has(\"X-React-Router-Prerender-Data\")) {\r\n          const preRenderedData = args.request.headers.get(\r\n            \"X-React-Router-Prerender-Data\"\r\n          );\r\n          let encoded = preRenderedData ? decodeURI(preRenderedData) : preRenderedData;\r\n          invariant3(encoded, \"Missing prerendered data for route\");\r\n          let uint8array = new TextEncoder().encode(encoded);\r\n          let stream = new ReadableStream({\r\n            start(controller) {\r\n              controller.enqueue(uint8array);\r\n              controller.close();\r\n            }\r\n          });\r\n          let decoded = await decodeViaTurboStream(stream, global);\r\n          let data2 = decoded.value;\r\n          invariant3(\r\n            data2 && route.id in data2,\r\n            \"Unable to decode prerendered data\"\r\n          );\r\n          let result = data2[route.id];\r\n          invariant3(\"data\" in result, \"Unable to process prerendered data\");\r\n          return result.data;\r\n        }\r\n        let val = await callRouteHandler(route.module.loader, args);\r\n        return val;\r\n      } : void 0,\r\n      action: route.module.action ? (args) => callRouteHandler(route.module.action, args) : void 0,\r\n      handle: route.module.handle\r\n    };\r\n    return route.index ? {\r\n      index: true,\r\n      ...commonRoute\r\n    } : {\r\n      caseSensitive: route.caseSensitive,\r\n      children: createStaticHandlerDataRoutes(\r\n        manifest,\r\n        future,\r\n        route.id,\r\n        routesByParentId\r\n      ),\r\n      ...commonRoute\r\n    };\r\n  });\r\n}\r\n\r\n// lib/server-runtime/markup.ts\r\nvar ESCAPE_LOOKUP3 = {\r\n  \"&\": \"\\\\u0026\",\r\n  \">\": \"\\\\u003e\",\r\n  \"<\": \"\\\\u003c\",\r\n  \"\\u2028\": \"\\\\u2028\",\r\n  \"\\u2029\": \"\\\\u2029\"\r\n};\r\nvar ESCAPE_REGEX3 = /[&><\\u2028\\u2029]/g;\r\nfunction escapeHtml2(html) {\r\n  return html.replace(ESCAPE_REGEX3, (match) => ESCAPE_LOOKUP3[match]);\r\n}\r\n\r\n// lib/server-runtime/serverHandoff.ts\r\nfunction createServerHandoffString(serverHandoff) {\r\n  return escapeHtml2(JSON.stringify(serverHandoff));\r\n}\r\n\r\n// lib/server-runtime/dev.ts\r\nvar globalDevServerHooksKey = \"__reactRouterDevServerHooks\";\r\nfunction setDevServerHooks(devServerHooks) {\r\n  globalThis[globalDevServerHooksKey] = devServerHooks;\r\n}\r\nfunction getDevServerHooks() {\r\n  return globalThis[globalDevServerHooksKey];\r\n}\r\n\r\n// lib/server-runtime/single-fetch.ts\r\nimport { encode } from \"turbo-stream\";\r\n\r\n// lib/server-runtime/headers.ts\r\nimport { splitCookiesString } from \"set-cookie-parser\";\r\nfunction getDocumentHeaders(build, context) {\r\n  let boundaryIdx = context.errors ? context.matches.findIndex((m) => context.errors[m.route.id]) : -1;\r\n  let matches = boundaryIdx >= 0 ? context.matches.slice(0, boundaryIdx + 1) : context.matches;\r\n  let errorHeaders;\r\n  if (boundaryIdx >= 0) {\r\n    let { actionHeaders, actionData, loaderHeaders, loaderData } = context;\r\n    context.matches.slice(boundaryIdx).some((match) => {\r\n      let id = match.route.id;\r\n      if (actionHeaders[id] && (!actionData || !actionData.hasOwnProperty(id))) {\r\n        errorHeaders = actionHeaders[id];\r\n      } else if (loaderHeaders[id] && !loaderData.hasOwnProperty(id)) {\r\n        errorHeaders = loaderHeaders[id];\r\n      }\r\n      return errorHeaders != null;\r\n    });\r\n  }\r\n  return matches.reduce((parentHeaders, match, idx) => {\r\n    let { id } = match.route;\r\n    let route = build.routes[id];\r\n    invariant3(route, `Route with id \"${id}\" not found in build`);\r\n    let routeModule = route.module;\r\n    let loaderHeaders = context.loaderHeaders[id] || new Headers();\r\n    let actionHeaders = context.actionHeaders[id] || new Headers();\r\n    let includeErrorHeaders = errorHeaders != null && idx === matches.length - 1;\r\n    let includeErrorCookies = includeErrorHeaders && errorHeaders !== loaderHeaders && errorHeaders !== actionHeaders;\r\n    if (routeModule.headers == null) {\r\n      let headers2 = new Headers(parentHeaders);\r\n      if (includeErrorCookies) {\r\n        prependCookies(errorHeaders, headers2);\r\n      }\r\n      prependCookies(actionHeaders, headers2);\r\n      prependCookies(loaderHeaders, headers2);\r\n      return headers2;\r\n    }\r\n    let headers = new Headers(\r\n      routeModule.headers ? typeof routeModule.headers === \"function\" ? routeModule.headers({\r\n        loaderHeaders,\r\n        parentHeaders,\r\n        actionHeaders,\r\n        errorHeaders: includeErrorHeaders ? errorHeaders : void 0\r\n      }) : routeModule.headers : void 0\r\n    );\r\n    if (includeErrorCookies) {\r\n      prependCookies(errorHeaders, headers);\r\n    }\r\n    prependCookies(actionHeaders, headers);\r\n    prependCookies(loaderHeaders, headers);\r\n    prependCookies(parentHeaders, headers);\r\n    return headers;\r\n  }, new Headers());\r\n}\r\nfunction prependCookies(parentHeaders, childHeaders) {\r\n  let parentSetCookieString = parentHeaders.get(\"Set-Cookie\");\r\n  if (parentSetCookieString) {\r\n    let cookies = splitCookiesString(parentSetCookieString);\r\n    let childCookies = new Set(childHeaders.getSetCookie());\r\n    cookies.forEach((cookie) => {\r\n      if (!childCookies.has(cookie)) {\r\n        childHeaders.append(\"Set-Cookie\", cookie);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// lib/server-runtime/single-fetch.ts\r\nvar SINGLE_FETCH_REDIRECT_STATUS = 202;\r\nfunction getSingleFetchDataStrategy2({\r\n  isActionDataRequest,\r\n  loadRouteIds\r\n} = {}) {\r\n  return async ({ request, matches }) => {\r\n    if (isActionDataRequest && request.method === \"GET\") {\r\n      return {};\r\n    }\r\n    let matchesToLoad = loadRouteIds ? matches.filter((m) => loadRouteIds.includes(m.route.id)) : matches;\r\n    let results = await Promise.all(\r\n      matchesToLoad.map((match) => match.resolve())\r\n    );\r\n    return results.reduce(\r\n      (acc, result, i) => Object.assign(acc, { [matchesToLoad[i].route.id]: result }),\r\n      {}\r\n    );\r\n  };\r\n}\r\nasync function singleFetchAction(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {\r\n  try {\r\n    let handlerRequest = new Request(handlerUrl, {\r\n      method: request.method,\r\n      body: request.body,\r\n      headers: request.headers,\r\n      signal: request.signal,\r\n      ...request.body ? { duplex: \"half\" } : void 0\r\n    });\r\n    let result = await staticHandler.query(handlerRequest, {\r\n      requestContext: loadContext,\r\n      skipLoaderErrorBubbling: true,\r\n      dataStrategy: getSingleFetchDataStrategy2({\r\n        isActionDataRequest: true\r\n      })\r\n    });\r\n    if (isResponse(result)) {\r\n      return {\r\n        result: getSingleFetchRedirect(\r\n          result.status,\r\n          result.headers,\r\n          build.basename\r\n        ),\r\n        headers: result.headers,\r\n        status: SINGLE_FETCH_REDIRECT_STATUS\r\n      };\r\n    }\r\n    let context = result;\r\n    let headers = getDocumentHeaders(build, context);\r\n    if (isRedirectStatusCode(context.statusCode) && headers.has(\"Location\")) {\r\n      return {\r\n        result: getSingleFetchRedirect(\r\n          context.statusCode,\r\n          headers,\r\n          build.basename\r\n        ),\r\n        headers,\r\n        status: SINGLE_FETCH_REDIRECT_STATUS\r\n      };\r\n    }\r\n    if (context.errors) {\r\n      Object.values(context.errors).forEach((err) => {\r\n        if (!isRouteErrorResponse(err) || err.error) {\r\n          handleError(err);\r\n        }\r\n      });\r\n      context.errors = sanitizeErrors(context.errors, serverMode);\r\n    }\r\n    let singleFetchResult;\r\n    if (context.errors) {\r\n      singleFetchResult = { error: Object.values(context.errors)[0] };\r\n    } else {\r\n      singleFetchResult = { data: Object.values(context.actionData || {})[0] };\r\n    }\r\n    return {\r\n      result: singleFetchResult,\r\n      headers,\r\n      status: context.statusCode\r\n    };\r\n  } catch (error) {\r\n    handleError(error);\r\n    return {\r\n      result: { error },\r\n      headers: new Headers(),\r\n      status: 500\r\n    };\r\n  }\r\n}\r\nasync function singleFetchLoaders(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {\r\n  try {\r\n    let handlerRequest = new Request(handlerUrl, {\r\n      headers: request.headers,\r\n      signal: request.signal\r\n    });\r\n    let loadRouteIds = new URL(request.url).searchParams.get(\"_routes\")?.split(\",\") || void 0;\r\n    let result = await staticHandler.query(handlerRequest, {\r\n      requestContext: loadContext,\r\n      skipLoaderErrorBubbling: true,\r\n      dataStrategy: getSingleFetchDataStrategy2({\r\n        loadRouteIds\r\n      })\r\n    });\r\n    if (isResponse(result)) {\r\n      return {\r\n        result: {\r\n          [SingleFetchRedirectSymbol]: getSingleFetchRedirect(\r\n            result.status,\r\n            result.headers,\r\n            build.basename\r\n          )\r\n        },\r\n        headers: result.headers,\r\n        status: SINGLE_FETCH_REDIRECT_STATUS\r\n      };\r\n    }\r\n    let context = result;\r\n    let headers = getDocumentHeaders(build, context);\r\n    if (isRedirectStatusCode(context.statusCode) && headers.has(\"Location\")) {\r\n      return {\r\n        result: {\r\n          [SingleFetchRedirectSymbol]: getSingleFetchRedirect(\r\n            context.statusCode,\r\n            headers,\r\n            build.basename\r\n          )\r\n        },\r\n        headers,\r\n        status: SINGLE_FETCH_REDIRECT_STATUS\r\n      };\r\n    }\r\n    if (context.errors) {\r\n      Object.values(context.errors).forEach((err) => {\r\n        if (!isRouteErrorResponse(err) || err.error) {\r\n          handleError(err);\r\n        }\r\n      });\r\n      context.errors = sanitizeErrors(context.errors, serverMode);\r\n    }\r\n    let results = {};\r\n    let loadedMatches = loadRouteIds ? context.matches.filter(\r\n      (m) => m.route.loader && loadRouteIds.includes(m.route.id)\r\n    ) : context.matches;\r\n    loadedMatches.forEach((m) => {\r\n      let { id } = m.route;\r\n      if (context.errors && context.errors.hasOwnProperty(id)) {\r\n        results[id] = { error: context.errors[id] };\r\n      } else if (context.loaderData.hasOwnProperty(id)) {\r\n        results[id] = { data: context.loaderData[id] };\r\n      }\r\n    });\r\n    return {\r\n      result: results,\r\n      headers,\r\n      status: context.statusCode\r\n    };\r\n  } catch (error) {\r\n    handleError(error);\r\n    return {\r\n      result: { root: { error } },\r\n      headers: new Headers(),\r\n      status: 500\r\n    };\r\n  }\r\n}\r\nfunction getSingleFetchRedirect(status, headers, basename) {\r\n  let redirect2 = headers.get(\"Location\");\r\n  if (basename) {\r\n    redirect2 = stripBasename(redirect2, basename) || redirect2;\r\n  }\r\n  return {\r\n    redirect: redirect2,\r\n    status,\r\n    revalidate: (\r\n      // Technically X-Remix-Revalidate isn't needed here - that was an implementation\r\n      // detail of ?_data requests as our way to tell the front end to revalidate when\r\n      // we didn't have a response body to include that information in.\r\n      // With single fetch, we tell the front end via this revalidate boolean field.\r\n      // However, we're respecting it for now because it may be something folks have\r\n      // used in their own responses\r\n      // TODO(v3): Consider removing or making this official public API\r\n      headers.has(\"X-Remix-Revalidate\") || headers.has(\"Set-Cookie\")\r\n    ),\r\n    reload: headers.has(\"X-Remix-Reload-Document\"),\r\n    replace: headers.has(\"X-Remix-Replace\")\r\n  };\r\n}\r\nfunction encodeViaTurboStream(data2, requestSignal, streamTimeout, serverMode) {\r\n  let controller = new AbortController();\r\n  let timeoutId = setTimeout(\r\n    () => controller.abort(new Error(\"Server Timeout\")),\r\n    typeof streamTimeout === \"number\" ? streamTimeout : 4950\r\n  );\r\n  requestSignal.addEventListener(\"abort\", () => clearTimeout(timeoutId));\r\n  return encode(data2, {\r\n    signal: controller.signal,\r\n    plugins: [\r\n      (value) => {\r\n        if (value instanceof Error) {\r\n          let { name, message, stack } = serverMode === \"production\" /* Production */ ? sanitizeError(value, serverMode) : value;\r\n          return [\"SanitizedError\", name, message, stack];\r\n        }\r\n        if (value instanceof ErrorResponseImpl) {\r\n          let { data: data3, status, statusText } = value;\r\n          return [\"ErrorResponse\", data3, status, statusText];\r\n        }\r\n        if (value && typeof value === \"object\" && SingleFetchRedirectSymbol in value) {\r\n          return [\"SingleFetchRedirect\", value[SingleFetchRedirectSymbol]];\r\n        }\r\n      }\r\n    ],\r\n    postPlugins: [\r\n      (value) => {\r\n        if (!value) return;\r\n        if (typeof value !== \"object\") return;\r\n        return [\r\n          \"SingleFetchClassInstance\",\r\n          Object.fromEntries(Object.entries(value))\r\n        ];\r\n      },\r\n      () => [\"SingleFetchFallback\"]\r\n    ]\r\n  });\r\n}\r\n\r\n// lib/server-runtime/server.ts\r\nvar NO_BODY_STATUS_CODES = /* @__PURE__ */ new Set([100, 101, 204, 205, 304]);\r\nfunction derive(build, mode) {\r\n  let routes = createRoutes(build.routes);\r\n  let dataRoutes = createStaticHandlerDataRoutes(build.routes, build.future);\r\n  let serverMode = isServerMode(mode) ? mode : \"production\" /* Production */;\r\n  let staticHandler = createStaticHandler(dataRoutes, {\r\n    basename: build.basename\r\n  });\r\n  let errorHandler = build.entry.module.handleError || ((error, { request }) => {\r\n    if (serverMode !== \"test\" /* Test */ && !request.signal.aborted) {\r\n      console.error(\r\n        // @ts-expect-error This is \"private\" from users but intended for internal use\r\n        isRouteErrorResponse(error) && error.error ? error.error : error\r\n      );\r\n    }\r\n  });\r\n  return {\r\n    routes,\r\n    dataRoutes,\r\n    serverMode,\r\n    staticHandler,\r\n    errorHandler\r\n  };\r\n}\r\nvar createRequestHandler = (build, mode) => {\r\n  let _build;\r\n  let routes;\r\n  let serverMode;\r\n  let staticHandler;\r\n  let errorHandler;\r\n  return async function requestHandler(request, loadContext = {}) {\r\n    _build = typeof build === \"function\" ? await build() : build;\r\n    if (typeof build === \"function\") {\r\n      let derived = derive(_build, mode);\r\n      routes = derived.routes;\r\n      serverMode = derived.serverMode;\r\n      staticHandler = derived.staticHandler;\r\n      errorHandler = derived.errorHandler;\r\n    } else if (!routes || !serverMode || !staticHandler || !errorHandler) {\r\n      let derived = derive(_build, mode);\r\n      routes = derived.routes;\r\n      serverMode = derived.serverMode;\r\n      staticHandler = derived.staticHandler;\r\n      errorHandler = derived.errorHandler;\r\n    }\r\n    let url = new URL(request.url);\r\n    let normalizedPath = url.pathname.replace(/\\.data$/, \"\").replace(/^\\/_root$/, \"/\");\r\n    if (normalizedPath !== \"/\" && normalizedPath.endsWith(\"/\")) {\r\n      normalizedPath = normalizedPath.slice(0, -1);\r\n    }\r\n    let params = {};\r\n    let handleError = (error) => {\r\n      if (mode === \"development\" /* Development */) {\r\n        getDevServerHooks()?.processRequestError?.(error);\r\n      }\r\n      errorHandler(error, {\r\n        context: loadContext,\r\n        params,\r\n        request\r\n      });\r\n    };\r\n    if (!_build.ssr) {\r\n      if (_build.prerender.length === 0) {\r\n        request.headers.set(\"X-React-Router-SPA-Mode\", \"yes\");\r\n      } else if (!_build.prerender.includes(normalizedPath) && !_build.prerender.includes(normalizedPath + \"/\")) {\r\n        if (url.pathname.endsWith(\".data\")) {\r\n          errorHandler(\r\n            new ErrorResponseImpl(\r\n              404,\r\n              \"Not Found\",\r\n              `Refusing to SSR the path \\`${normalizedPath}\\` because \\`ssr:false\\` is set and the path is not included in the \\`prerender\\` config, so in production the path will be a 404.`\r\n            ),\r\n            {\r\n              context: loadContext,\r\n              params,\r\n              request\r\n            }\r\n          );\r\n          return new Response(\"Not Found\", {\r\n            status: 404,\r\n            statusText: \"Not Found\"\r\n          });\r\n        } else {\r\n          request.headers.set(\"X-React-Router-SPA-Mode\", \"yes\");\r\n        }\r\n      }\r\n    }\r\n    let manifestUrl = `${_build.basename ?? \"/\"}/__manifest`.replace(\r\n      /\\/+/g,\r\n      \"/\"\r\n    );\r\n    if (url.pathname === manifestUrl) {\r\n      try {\r\n        let res = await handleManifestRequest(_build, routes, url);\r\n        return res;\r\n      } catch (e) {\r\n        handleError(e);\r\n        return new Response(\"Unknown Server Error\", { status: 500 });\r\n      }\r\n    }\r\n    let matches = matchServerRoutes(routes, url.pathname, _build.basename);\r\n    if (matches && matches.length > 0) {\r\n      Object.assign(params, matches[0].params);\r\n    }\r\n    let response;\r\n    if (url.pathname.endsWith(\".data\")) {\r\n      let handlerUrl = new URL(request.url);\r\n      handlerUrl.pathname = normalizedPath;\r\n      let singleFetchMatches = matchServerRoutes(\r\n        routes,\r\n        handlerUrl.pathname,\r\n        _build.basename\r\n      );\r\n      response = await handleSingleFetchRequest(\r\n        serverMode,\r\n        _build,\r\n        staticHandler,\r\n        request,\r\n        handlerUrl,\r\n        loadContext,\r\n        handleError\r\n      );\r\n      if (_build.entry.module.handleDataRequest) {\r\n        response = await _build.entry.module.handleDataRequest(response, {\r\n          context: loadContext,\r\n          params: singleFetchMatches ? singleFetchMatches[0].params : {},\r\n          request\r\n        });\r\n        if (isRedirectResponse(response)) {\r\n          let result = getSingleFetchRedirect(\r\n            response.status,\r\n            response.headers,\r\n            _build.basename\r\n          );\r\n          if (request.method === \"GET\") {\r\n            result = {\r\n              [SingleFetchRedirectSymbol]: result\r\n            };\r\n          }\r\n          let headers = new Headers(response.headers);\r\n          headers.set(\"Content-Type\", \"text/x-script\");\r\n          return new Response(\r\n            encodeViaTurboStream(\r\n              result,\r\n              request.signal,\r\n              _build.entry.module.streamTimeout,\r\n              serverMode\r\n            ),\r\n            {\r\n              status: SINGLE_FETCH_REDIRECT_STATUS,\r\n              headers\r\n            }\r\n          );\r\n        }\r\n      }\r\n    } else if (matches && matches[matches.length - 1].route.module.default == null && matches[matches.length - 1].route.module.ErrorBoundary == null) {\r\n      response = await handleResourceRequest(\r\n        serverMode,\r\n        staticHandler,\r\n        matches.slice(-1)[0].route.id,\r\n        request,\r\n        loadContext,\r\n        handleError\r\n      );\r\n    } else {\r\n      let criticalCss = mode === \"development\" /* Development */ ? await getDevServerHooks()?.getCriticalCss?.(_build, url.pathname) : void 0;\r\n      response = await handleDocumentRequest(\r\n        serverMode,\r\n        _build,\r\n        staticHandler,\r\n        request,\r\n        loadContext,\r\n        handleError,\r\n        criticalCss\r\n      );\r\n    }\r\n    if (request.method === \"HEAD\") {\r\n      return new Response(null, {\r\n        headers: response.headers,\r\n        status: response.status,\r\n        statusText: response.statusText\r\n      });\r\n    }\r\n    return response;\r\n  };\r\n};\r\nasync function handleManifestRequest(build, routes, url) {\r\n  let patches = {};\r\n  if (url.searchParams.has(\"p\")) {\r\n    for (let path of url.searchParams.getAll(\"p\")) {\r\n      let matches = matchServerRoutes(routes, path, build.basename);\r\n      if (matches) {\r\n        for (let match of matches) {\r\n          let routeId = match.route.id;\r\n          let route = build.assets.routes[routeId];\r\n          if (route) {\r\n            patches[routeId] = route;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return Response.json(patches, {\r\n      headers: {\r\n        \"Cache-Control\": \"public, max-age=31536000, immutable\"\r\n      }\r\n    });\r\n  }\r\n  return new Response(\"Invalid Request\", { status: 400 });\r\n}\r\nasync function handleSingleFetchRequest(serverMode, build, staticHandler, request, handlerUrl, loadContext, handleError) {\r\n  let { result, headers, status } = request.method !== \"GET\" ? await singleFetchAction(\r\n    build,\r\n    serverMode,\r\n    staticHandler,\r\n    request,\r\n    handlerUrl,\r\n    loadContext,\r\n    handleError\r\n  ) : await singleFetchLoaders(\r\n    build,\r\n    serverMode,\r\n    staticHandler,\r\n    request,\r\n    handlerUrl,\r\n    loadContext,\r\n    handleError\r\n  );\r\n  let resultHeaders = new Headers(headers);\r\n  resultHeaders.set(\"X-Remix-Response\", \"yes\");\r\n  if (NO_BODY_STATUS_CODES.has(status)) {\r\n    return new Response(null, { status, headers: resultHeaders });\r\n  }\r\n  resultHeaders.set(\"Content-Type\", \"text/x-script\");\r\n  return new Response(\r\n    encodeViaTurboStream(\r\n      result,\r\n      request.signal,\r\n      build.entry.module.streamTimeout,\r\n      serverMode\r\n    ),\r\n    {\r\n      status: status || 200,\r\n      headers: resultHeaders\r\n    }\r\n  );\r\n}\r\nasync function handleDocumentRequest(serverMode, build, staticHandler, request, loadContext, handleError, criticalCss) {\r\n  let isSpaMode = request.headers.has(\"X-React-Router-SPA-Mode\");\r\n  let context;\r\n  try {\r\n    context = await staticHandler.query(request, {\r\n      requestContext: loadContext\r\n    });\r\n  } catch (error) {\r\n    handleError(error);\r\n    return new Response(null, { status: 500 });\r\n  }\r\n  if (isResponse(context)) {\r\n    return context;\r\n  }\r\n  let headers = getDocumentHeaders(build, context);\r\n  if (NO_BODY_STATUS_CODES.has(context.statusCode)) {\r\n    return new Response(null, { status: context.statusCode, headers });\r\n  }\r\n  if (context.errors) {\r\n    Object.values(context.errors).forEach((err) => {\r\n      if (!isRouteErrorResponse(err) || err.error) {\r\n        handleError(err);\r\n      }\r\n    });\r\n    context.errors = sanitizeErrors(context.errors, serverMode);\r\n  }\r\n  let state = {\r\n    loaderData: context.loaderData,\r\n    actionData: context.actionData,\r\n    errors: serializeErrors2(context.errors, serverMode)\r\n  };\r\n  let entryContext = {\r\n    manifest: build.assets,\r\n    routeModules: createEntryRouteModules(build.routes),\r\n    staticHandlerContext: context,\r\n    criticalCss,\r\n    serverHandoffString: createServerHandoffString({\r\n      basename: build.basename,\r\n      criticalCss,\r\n      future: build.future,\r\n      ssr: build.ssr,\r\n      isSpaMode\r\n    }),\r\n    serverHandoffStream: encodeViaTurboStream(\r\n      state,\r\n      request.signal,\r\n      build.entry.module.streamTimeout,\r\n      serverMode\r\n    ),\r\n    renderMeta: {},\r\n    future: build.future,\r\n    ssr: build.ssr,\r\n    isSpaMode,\r\n    serializeError: (err) => serializeError(err, serverMode)\r\n  };\r\n  let handleDocumentRequestFunction = build.entry.module.default;\r\n  try {\r\n    return await handleDocumentRequestFunction(\r\n      request,\r\n      context.statusCode,\r\n      headers,\r\n      entryContext,\r\n      loadContext\r\n    );\r\n  } catch (error) {\r\n    handleError(error);\r\n    let errorForSecondRender = error;\r\n    if (isResponse(error)) {\r\n      try {\r\n        let data2 = await unwrapResponse(error);\r\n        errorForSecondRender = new ErrorResponseImpl(\r\n          error.status,\r\n          error.statusText,\r\n          data2\r\n        );\r\n      } catch (e) {\r\n      }\r\n    }\r\n    context = getStaticContextFromError(\r\n      staticHandler.dataRoutes,\r\n      context,\r\n      errorForSecondRender\r\n    );\r\n    if (context.errors) {\r\n      context.errors = sanitizeErrors(context.errors, serverMode);\r\n    }\r\n    let state2 = {\r\n      loaderData: context.loaderData,\r\n      actionData: context.actionData,\r\n      errors: serializeErrors2(context.errors, serverMode)\r\n    };\r\n    entryContext = {\r\n      ...entryContext,\r\n      staticHandlerContext: context,\r\n      serverHandoffString: createServerHandoffString({\r\n        basename: build.basename,\r\n        future: build.future,\r\n        ssr: build.ssr,\r\n        isSpaMode\r\n      }),\r\n      serverHandoffStream: encodeViaTurboStream(\r\n        state2,\r\n        request.signal,\r\n        build.entry.module.streamTimeout,\r\n        serverMode\r\n      ),\r\n      renderMeta: {}\r\n    };\r\n    try {\r\n      return await handleDocumentRequestFunction(\r\n        request,\r\n        context.statusCode,\r\n        headers,\r\n        entryContext,\r\n        loadContext\r\n      );\r\n    } catch (error2) {\r\n      handleError(error2);\r\n      return returnLastResortErrorResponse(error2, serverMode);\r\n    }\r\n  }\r\n}\r\nasync function handleResourceRequest(serverMode, staticHandler, routeId, request, loadContext, handleError) {\r\n  try {\r\n    let response = await staticHandler.queryRoute(request, {\r\n      routeId,\r\n      requestContext: loadContext\r\n    });\r\n    if (isResponse(response)) {\r\n      return response;\r\n    }\r\n    if (typeof response === \"string\") {\r\n      return new Response(response);\r\n    }\r\n    return Response.json(response);\r\n  } catch (error) {\r\n    if (isResponse(error)) {\r\n      error.headers.set(\"X-Remix-Catch\", \"yes\");\r\n      return error;\r\n    }\r\n    if (isRouteErrorResponse(error)) {\r\n      if (error) {\r\n        handleError(error);\r\n      }\r\n      return errorResponseToJson(error, serverMode);\r\n    }\r\n    handleError(error);\r\n    return returnLastResortErrorResponse(error, serverMode);\r\n  }\r\n}\r\nfunction errorResponseToJson(errorResponse, serverMode) {\r\n  return Response.json(\r\n    serializeError(\r\n      // @ts-expect-error This is \"private\" from users but intended for internal use\r\n      errorResponse.error || new Error(\"Unexpected Server Error\"),\r\n      serverMode\r\n    ),\r\n    {\r\n      status: errorResponse.status,\r\n      statusText: errorResponse.statusText,\r\n      headers: {\r\n        \"X-Remix-Error\": \"yes\"\r\n      }\r\n    }\r\n  );\r\n}\r\nfunction returnLastResortErrorResponse(error, serverMode) {\r\n  let message = \"Unexpected Server Error\";\r\n  if (serverMode !== \"production\" /* Production */) {\r\n    message += `\r\n\r\n${String(error)}`;\r\n  }\r\n  return new Response(message, {\r\n    status: 500,\r\n    headers: {\r\n      \"Content-Type\": \"text/plain\"\r\n    }\r\n  });\r\n}\r\nfunction unwrapResponse(response) {\r\n  let contentType = response.headers.get(\"Content-Type\");\r\n  return contentType && /\\bapplication\\/json\\b/.test(contentType) ? response.body == null ? null : response.json() : response.text();\r\n}\r\n\r\n// lib/server-runtime/sessions.ts\r\nfunction flash(name) {\r\n  return `__flash_${name}__`;\r\n}\r\nvar createSession = (initialData = {}, id = \"\") => {\r\n  let map = new Map(Object.entries(initialData));\r\n  return {\r\n    get id() {\r\n      return id;\r\n    },\r\n    get data() {\r\n      return Object.fromEntries(map);\r\n    },\r\n    has(name) {\r\n      return map.has(name) || map.has(flash(name));\r\n    },\r\n    get(name) {\r\n      if (map.has(name)) return map.get(name);\r\n      let flashName = flash(name);\r\n      if (map.has(flashName)) {\r\n        let value = map.get(flashName);\r\n        map.delete(flashName);\r\n        return value;\r\n      }\r\n      return void 0;\r\n    },\r\n    set(name, value) {\r\n      map.set(name, value);\r\n    },\r\n    flash(name, value) {\r\n      map.set(flash(name), value);\r\n    },\r\n    unset(name) {\r\n      map.delete(name);\r\n    }\r\n  };\r\n};\r\nvar isSession = (object) => {\r\n  return object != null && typeof object.id === \"string\" && typeof object.data !== \"undefined\" && typeof object.has === \"function\" && typeof object.get === \"function\" && typeof object.set === \"function\" && typeof object.flash === \"function\" && typeof object.unset === \"function\";\r\n};\r\nfunction createSessionStorage({\r\n  cookie: cookieArg,\r\n  createData,\r\n  readData,\r\n  updateData,\r\n  deleteData\r\n}) {\r\n  let cookie = isCookie(cookieArg) ? cookieArg : createCookie(cookieArg?.name || \"__session\", cookieArg);\r\n  warnOnceAboutSigningSessionCookie(cookie);\r\n  return {\r\n    async getSession(cookieHeader, options) {\r\n      let id = cookieHeader && await cookie.parse(cookieHeader, options);\r\n      let data2 = id && await readData(id);\r\n      return createSession(data2 || {}, id || \"\");\r\n    },\r\n    async commitSession(session, options) {\r\n      let { id, data: data2 } = session;\r\n      let expires = options?.maxAge != null ? new Date(Date.now() + options.maxAge * 1e3) : options?.expires != null ? options.expires : cookie.expires;\r\n      if (id) {\r\n        await updateData(id, data2, expires);\r\n      } else {\r\n        id = await createData(data2, expires);\r\n      }\r\n      return cookie.serialize(id, options);\r\n    },\r\n    async destroySession(session, options) {\r\n      await deleteData(session.id);\r\n      return cookie.serialize(\"\", {\r\n        ...options,\r\n        maxAge: void 0,\r\n        expires: /* @__PURE__ */ new Date(0)\r\n      });\r\n    }\r\n  };\r\n}\r\nfunction warnOnceAboutSigningSessionCookie(cookie) {\r\n  warnOnce(\r\n    cookie.isSigned,\r\n    `The \"${cookie.name}\" cookie is not signed, but session cookies should be signed to prevent tampering on the client before they are sent back to the server. See https://remix.run/utils/cookies#signing-cookies for more information.`\r\n  );\r\n}\r\n\r\n// lib/server-runtime/sessions/cookieStorage.ts\r\nfunction createCookieSessionStorage({ cookie: cookieArg } = {}) {\r\n  let cookie = isCookie(cookieArg) ? cookieArg : createCookie(cookieArg?.name || \"__session\", cookieArg);\r\n  warnOnceAboutSigningSessionCookie(cookie);\r\n  return {\r\n    async getSession(cookieHeader, options) {\r\n      return createSession(\r\n        cookieHeader && await cookie.parse(cookieHeader, options) || {}\r\n      );\r\n    },\r\n    async commitSession(session, options) {\r\n      let serializedCookie = await cookie.serialize(session.data, options);\r\n      if (serializedCookie.length > 4096) {\r\n        throw new Error(\r\n          \"Cookie length will exceed browser maximum. Length: \" + serializedCookie.length\r\n        );\r\n      }\r\n      return serializedCookie;\r\n    },\r\n    async destroySession(_session, options) {\r\n      return cookie.serialize(\"\", {\r\n        ...options,\r\n        maxAge: void 0,\r\n        expires: /* @__PURE__ */ new Date(0)\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n// lib/server-runtime/sessions/memoryStorage.ts\r\nfunction createMemorySessionStorage({ cookie } = {}) {\r\n  let map = /* @__PURE__ */ new Map();\r\n  return createSessionStorage({\r\n    cookie,\r\n    async createData(data2, expires) {\r\n      let id = Math.random().toString(36).substring(2, 10);\r\n      map.set(id, { data: data2, expires });\r\n      return id;\r\n    },\r\n    async readData(id) {\r\n      if (map.has(id)) {\r\n        let { data: data2, expires } = map.get(id);\r\n        if (!expires || expires > /* @__PURE__ */ new Date()) {\r\n          return data2;\r\n        }\r\n        if (expires) map.delete(id);\r\n      }\r\n      return null;\r\n    },\r\n    async updateData(id, data2, expires) {\r\n      map.set(id, { data: data2, expires });\r\n    },\r\n    async deleteData(id) {\r\n      map.delete(id);\r\n    }\r\n  });\r\n}\r\n\r\n// lib/href.ts\r\nfunction href(path, ...args) {\r\n  let params = args[0];\r\n  return path.split(\"/\").map((segment) => {\r\n    const match = segment.match(/^:([\\w-]+)(\\?)?/);\r\n    if (!match) return segment;\r\n    const param = match[1];\r\n    const value = params ? params[param] : void 0;\r\n    const isRequired = match[2] === void 0;\r\n    if (isRequired && value === void 0) {\r\n      throw Error(\r\n        `Path '${path}' requires param '${param}' but it was not provided`\r\n      );\r\n    }\r\n    return value;\r\n  }).filter((segment) => segment !== void 0).join(\"/\");\r\n}\r\n\r\n// lib/dom/ssr/errors.ts\r\nfunction deserializeErrors2(errors) {\r\n  if (!errors) return null;\r\n  let entries = Object.entries(errors);\r\n  let serialized = {};\r\n  for (let [key, val] of entries) {\r\n    if (val && val.__type === \"RouteErrorResponse\") {\r\n      serialized[key] = new ErrorResponseImpl(\r\n        val.status,\r\n        val.statusText,\r\n        val.data,\r\n        val.internal === true\r\n      );\r\n    } else if (val && val.__type === \"Error\") {\r\n      if (val.__subType) {\r\n        let ErrorConstructor = window[val.__subType];\r\n        if (typeof ErrorConstructor === \"function\") {\r\n          try {\r\n            let error = new ErrorConstructor(val.message);\r\n            error.stack = val.stack;\r\n            serialized[key] = error;\r\n          } catch (e) {\r\n          }\r\n        }\r\n      }\r\n      if (serialized[key] == null) {\r\n        let error = new Error(val.message);\r\n        error.stack = val.stack;\r\n        serialized[key] = error;\r\n      }\r\n    } else {\r\n      serialized[key] = val;\r\n    }\r\n  }\r\n  return serialized;\r\n}\r\n\r\nexport {\r\n  Action,\r\n  createBrowserHistory,\r\n  invariant,\r\n  createPath,\r\n  parsePath,\r\n  matchRoutes,\r\n  generatePath,\r\n  matchPath,\r\n  resolvePath,\r\n  data,\r\n  redirect,\r\n  redirectDocument,\r\n  replace,\r\n  ErrorResponseImpl,\r\n  isRouteErrorResponse,\r\n  IDLE_NAVIGATION,\r\n  IDLE_FETCHER,\r\n  IDLE_BLOCKER,\r\n  createRouter,\r\n  DataRouterContext,\r\n  DataRouterStateContext,\r\n  ViewTransitionContext,\r\n  FetchersContext,\r\n  NavigationContext,\r\n  LocationContext,\r\n  RouteContext,\r\n  useHref,\r\n  useInRouterContext,\r\n  useLocation,\r\n  useNavigationType,\r\n  useMatch,\r\n  useNavigate,\r\n  useOutletContext,\r\n  useOutlet,\r\n  useParams,\r\n  useResolvedPath,\r\n  useRoutes,\r\n  useNavigation,\r\n  useRevalidator,\r\n  useMatches,\r\n  useLoaderData,\r\n  useRouteLoaderData,\r\n  useActionData,\r\n  useRouteError,\r\n  useAsyncValue,\r\n  useAsyncError,\r\n  useBlocker,\r\n  mapRouteProperties,\r\n  createMemoryRouter,\r\n  RouterProvider,\r\n  MemoryRouter,\r\n  Navigate,\r\n  Outlet,\r\n  Route,\r\n  Router,\r\n  Routes,\r\n  Await,\r\n  createRoutesFromChildren,\r\n  createRoutesFromElements,\r\n  renderMatches,\r\n  createSearchParams,\r\n  SingleFetchRedirectSymbol,\r\n  getSingleFetchDataStrategy,\r\n  decodeViaTurboStream,\r\n  RemixErrorBoundary,\r\n  createClientRoutesWithHMRRevalidationOptOut,\r\n  createClientRoutes,\r\n  shouldHydrateRouteLoader,\r\n  getPatchRoutesOnNavigationFunction,\r\n  useFogOFWarDiscovery,\r\n  FrameworkContext,\r\n  Links,\r\n  PrefetchPageLinks,\r\n  Meta,\r\n  Scripts,\r\n  createBrowserRouter,\r\n  createHashRouter,\r\n  BrowserRouter,\r\n  HashRouter,\r\n  HistoryRouter,\r\n  Link,\r\n  NavLink,\r\n  Form,\r\n  ScrollRestoration,\r\n  useLinkClickHandler,\r\n  useSearchParams,\r\n  useSubmit,\r\n  useFormAction,\r\n  useFetcher,\r\n  useFetchers,\r\n  useScrollRestoration,\r\n  useBeforeUnload,\r\n  usePrompt,\r\n  useViewTransitionState,\r\n  StaticRouter,\r\n  StaticRouterProvider,\r\n  createStaticHandler2 as createStaticHandler,\r\n  createStaticRouter,\r\n  ServerRouter,\r\n  createRoutesStub,\r\n  createCookie,\r\n  isCookie,\r\n  ServerMode,\r\n  setDevServerHooks,\r\n  createRequestHandler,\r\n  createSession,\r\n  isSession,\r\n  createSessionStorage,\r\n  createCookieSessionStorage,\r\n  createMemorySessionStorage,\r\n  href,\r\n  deserializeErrors2 as deserializeErrors\r\n};\r\n","'use strict';\r\n\r\nexport default function bind(fn, thisArg) {\r\n  return function wrap() {\r\n    return fn.apply(thisArg, arguments);\r\n  };\r\n}\r\n","'use strict';\r\n\r\nimport bind from './helpers/bind.js';\r\n\r\n// utils is a library of generic helper functions non-specific to axios\r\n\r\nconst {toString} = Object.prototype;\r\nconst {getPrototypeOf} = Object;\r\n\r\nconst kindOf = (cache => thing => {\r\n    const str = toString.call(thing);\r\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\r\n})(Object.create(null));\r\n\r\nconst kindOfTest = (type) => {\r\n  type = type.toLowerCase();\r\n  return (thing) => kindOf(thing) === type\r\n}\r\n\r\nconst typeOfTest = type => thing => typeof thing === type;\r\n\r\n/**\r\n * Determine if a value is an Array\r\n *\r\n * @param {Object} val The value to test\r\n *\r\n * @returns {boolean} True if value is an Array, otherwise false\r\n */\r\nconst {isArray} = Array;\r\n\r\n/**\r\n * Determine if a value is undefined\r\n *\r\n * @param {*} val The value to test\r\n *\r\n * @returns {boolean} True if the value is undefined, otherwise false\r\n */\r\nconst isUndefined = typeOfTest('undefined');\r\n\r\n/**\r\n * Determine if a value is a Buffer\r\n *\r\n * @param {*} val The value to test\r\n *\r\n * @returns {boolean} True if value is a Buffer, otherwise false\r\n */\r\nfunction isBuffer(val) {\r\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\r\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\r\n}\r\n\r\n/**\r\n * Determine if a value is an ArrayBuffer\r\n *\r\n * @param {*} val The value to test\r\n *\r\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\r\n */\r\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\r\n\r\n\r\n/**\r\n * Determine if a value is a view on an ArrayBuffer\r\n *\r\n * @param {*} val The value to test\r\n *\r\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBufferView(val) {\r\n  let result;\r\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\r\n    result = ArrayBuffer.isView(val);\r\n  } else {\r\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Determine if a value is a String\r\n *\r\n * @param {*} val The value to test\r\n *\r\n * @returns {boolean} True if value is a String, otherwise false\r\n */\r\nconst isString = typeOfTest('string');\r\n\r\n/**\r\n * Determine if a value is a Function\r\n *\r\n * @param {*} val The value to test\r\n * @returns {boolean} True if value is a Function, otherwise false\r\n */\r\nconst isFunction = typeOfTest('function');\r\n\r\n/**\r\n * Determine if a value is a Number\r\n *\r\n * @param {*} val The value to test\r\n *\r\n * @returns {boolean} True if value is a Number, otherwise false\r\n */\r\nconst isNumber = typeOfTest('number');\r\n\r\n/**\r\n * Determine if a value is an Object\r\n *\r\n * @param {*} thing The value to test\r\n *\r\n * @returns {boolean} True if value is an Object, otherwise false\r\n */\r\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\r\n\r\n/**\r\n * Determine if a value is a Boolean\r\n *\r\n * @param {*} thing The value to test\r\n * @returns {boolean} True if value is a Boolean, otherwise false\r\n */\r\nconst isBoolean = thing => thing === true || thing === false;\r\n\r\n/**\r\n * Determine if a value is a plain Object\r\n *\r\n * @param {*} val The value to test\r\n *\r\n * @returns {boolean} True if value is a plain Object, otherwise false\r\n */\r\nconst isPlainObject = (val) => {\r\n  if (kindOf(val) !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  const prototype = getPrototypeOf(val);\r\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\r\n}\r\n\r\n/**\r\n * Determine if a value is a Date\r\n *\r\n * @param {*} val The value to test\r\n *\r\n * @returns {boolean} True if value is a Date, otherwise false\r\n */\r\nconst isDate = kindOfTest('Date');\r\n\r\n/**\r\n * Determine if a value is a File\r\n *\r\n * @param {*} val The value to test\r\n *\r\n * @returns {boolean} True if value is a File, otherwise false\r\n */\r\nconst isFile = kindOfTest('File');\r\n\r\n/**\r\n * Determine if a value is a Blob\r\n *\r\n * @param {*} val The value to test\r\n *\r\n * @returns {boolean} True if value is a Blob, otherwise false\r\n */\r\nconst isBlob = kindOfTest('Blob');\r\n\r\n/**\r\n * Determine if a value is a FileList\r\n *\r\n * @param {*} val The value to test\r\n *\r\n * @returns {boolean} True if value is a File, otherwise false\r\n */\r\nconst isFileList = kindOfTest('FileList');\r\n\r\n/**\r\n * Determine if a value is a Stream\r\n *\r\n * @param {*} val The value to test\r\n *\r\n * @returns {boolean} True if value is a Stream, otherwise false\r\n */\r\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\r\n\r\n/**\r\n * Determine if a value is a FormData\r\n *\r\n * @param {*} thing The value to test\r\n *\r\n * @returns {boolean} True if value is an FormData, otherwise false\r\n */\r\nconst isFormData = (thing) => {\r\n  let kind;\r\n  return thing && (\r\n    (typeof FormData === 'function' && thing instanceof FormData) || (\r\n      isFunction(thing.append) && (\r\n        (kind = kindOf(thing)) === 'formdata' ||\r\n        // detect form-data instance\r\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\r\n      )\r\n    )\r\n  )\r\n}\r\n\r\n/**\r\n * Determine if a value is a URLSearchParams object\r\n *\r\n * @param {*} val The value to test\r\n *\r\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\r\n */\r\nconst isURLSearchParams = kindOfTest('URLSearchParams');\r\n\r\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\r\n\r\n/**\r\n * Trim excess whitespace off the beginning and end of a string\r\n *\r\n * @param {String} str The String to trim\r\n *\r\n * @returns {String} The String freed of excess whitespace\r\n */\r\nconst trim = (str) => str.trim ?\r\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n\r\n/**\r\n * Iterate over an Array or an Object invoking a function for each item.\r\n *\r\n * If `obj` is an Array callback will be called passing\r\n * the value, index, and complete array for each item.\r\n *\r\n * If 'obj' is an Object callback will be called passing\r\n * the value, key, and complete object for each property.\r\n *\r\n * @param {Object|Array} obj The object to iterate\r\n * @param {Function} fn The callback to invoke for each item\r\n *\r\n * @param {Boolean} [allOwnKeys = false]\r\n * @returns {any}\r\n */\r\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\r\n  // Don't bother if no value provided\r\n  if (obj === null || typeof obj === 'undefined') {\r\n    return;\r\n  }\r\n\r\n  let i;\r\n  let l;\r\n\r\n  // Force an array if not already something iterable\r\n  if (typeof obj !== 'object') {\r\n    /*eslint no-param-reassign:0*/\r\n    obj = [obj];\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    // Iterate over array values\r\n    for (i = 0, l = obj.length; i < l; i++) {\r\n      fn.call(null, obj[i], i, obj);\r\n    }\r\n  } else {\r\n    // Iterate over object keys\r\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\r\n    const len = keys.length;\r\n    let key;\r\n\r\n    for (i = 0; i < len; i++) {\r\n      key = keys[i];\r\n      fn.call(null, obj[key], key, obj);\r\n    }\r\n  }\r\n}\r\n\r\nfunction findKey(obj, key) {\r\n  key = key.toLowerCase();\r\n  const keys = Object.keys(obj);\r\n  let i = keys.length;\r\n  let _key;\r\n  while (i-- > 0) {\r\n    _key = keys[i];\r\n    if (key === _key.toLowerCase()) {\r\n      return _key;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nconst _global = (() => {\r\n  /*eslint no-undef:0*/\r\n  if (typeof globalThis !== \"undefined\") return globalThis;\r\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\r\n})();\r\n\r\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\r\n\r\n/**\r\n * Accepts varargs expecting each argument to be an object, then\r\n * immutably merges the properties of each object and returns result.\r\n *\r\n * When multiple objects contain the same key the later object in\r\n * the arguments list will take precedence.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * var result = merge({foo: 123}, {foo: 456});\r\n * console.log(result.foo); // outputs 456\r\n * ```\r\n *\r\n * @param {Object} obj1 Object to merge\r\n *\r\n * @returns {Object} Result of all merge properties\r\n */\r\nfunction merge(/* obj1, obj2, obj3, ... */) {\r\n  const {caseless} = isContextDefined(this) && this || {};\r\n  const result = {};\r\n  const assignValue = (val, key) => {\r\n    const targetKey = caseless && findKey(result, key) || key;\r\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\r\n      result[targetKey] = merge(result[targetKey], val);\r\n    } else if (isPlainObject(val)) {\r\n      result[targetKey] = merge({}, val);\r\n    } else if (isArray(val)) {\r\n      result[targetKey] = val.slice();\r\n    } else {\r\n      result[targetKey] = val;\r\n    }\r\n  }\r\n\r\n  for (let i = 0, l = arguments.length; i < l; i++) {\r\n    arguments[i] && forEach(arguments[i], assignValue);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Extends object a by mutably adding to it the properties of object b.\r\n *\r\n * @param {Object} a The object to be extended\r\n * @param {Object} b The object to copy properties from\r\n * @param {Object} thisArg The object to bind function to\r\n *\r\n * @param {Boolean} [allOwnKeys]\r\n * @returns {Object} The resulting value of object a\r\n */\r\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\r\n  forEach(b, (val, key) => {\r\n    if (thisArg && isFunction(val)) {\r\n      a[key] = bind(val, thisArg);\r\n    } else {\r\n      a[key] = val;\r\n    }\r\n  }, {allOwnKeys});\r\n  return a;\r\n}\r\n\r\n/**\r\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\r\n *\r\n * @param {string} content with BOM\r\n *\r\n * @returns {string} content value without BOM\r\n */\r\nconst stripBOM = (content) => {\r\n  if (content.charCodeAt(0) === 0xFEFF) {\r\n    content = content.slice(1);\r\n  }\r\n  return content;\r\n}\r\n\r\n/**\r\n * Inherit the prototype methods from one constructor into another\r\n * @param {function} constructor\r\n * @param {function} superConstructor\r\n * @param {object} [props]\r\n * @param {object} [descriptors]\r\n *\r\n * @returns {void}\r\n */\r\nconst inherits = (constructor, superConstructor, props, descriptors) => {\r\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\r\n  constructor.prototype.constructor = constructor;\r\n  Object.defineProperty(constructor, 'super', {\r\n    value: superConstructor.prototype\r\n  });\r\n  props && Object.assign(constructor.prototype, props);\r\n}\r\n\r\n/**\r\n * Resolve object with deep prototype chain to a flat object\r\n * @param {Object} sourceObj source object\r\n * @param {Object} [destObj]\r\n * @param {Function|Boolean} [filter]\r\n * @param {Function} [propFilter]\r\n *\r\n * @returns {Object}\r\n */\r\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\r\n  let props;\r\n  let i;\r\n  let prop;\r\n  const merged = {};\r\n\r\n  destObj = destObj || {};\r\n  // eslint-disable-next-line no-eq-null,eqeqeq\r\n  if (sourceObj == null) return destObj;\r\n\r\n  do {\r\n    props = Object.getOwnPropertyNames(sourceObj);\r\n    i = props.length;\r\n    while (i-- > 0) {\r\n      prop = props[i];\r\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\r\n        destObj[prop] = sourceObj[prop];\r\n        merged[prop] = true;\r\n      }\r\n    }\r\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\r\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\r\n\r\n  return destObj;\r\n}\r\n\r\n/**\r\n * Determines whether a string ends with the characters of a specified string\r\n *\r\n * @param {String} str\r\n * @param {String} searchString\r\n * @param {Number} [position= 0]\r\n *\r\n * @returns {boolean}\r\n */\r\nconst endsWith = (str, searchString, position) => {\r\n  str = String(str);\r\n  if (position === undefined || position > str.length) {\r\n    position = str.length;\r\n  }\r\n  position -= searchString.length;\r\n  const lastIndex = str.indexOf(searchString, position);\r\n  return lastIndex !== -1 && lastIndex === position;\r\n}\r\n\r\n\r\n/**\r\n * Returns new array from array like object or null if failed\r\n *\r\n * @param {*} [thing]\r\n *\r\n * @returns {?Array}\r\n */\r\nconst toArray = (thing) => {\r\n  if (!thing) return null;\r\n  if (isArray(thing)) return thing;\r\n  let i = thing.length;\r\n  if (!isNumber(i)) return null;\r\n  const arr = new Array(i);\r\n  while (i-- > 0) {\r\n    arr[i] = thing[i];\r\n  }\r\n  return arr;\r\n}\r\n\r\n/**\r\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\r\n * thing passed in is an instance of Uint8Array\r\n *\r\n * @param {TypedArray}\r\n *\r\n * @returns {Array}\r\n */\r\n// eslint-disable-next-line func-names\r\nconst isTypedArray = (TypedArray => {\r\n  // eslint-disable-next-line func-names\r\n  return thing => {\r\n    return TypedArray && thing instanceof TypedArray;\r\n  };\r\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\r\n\r\n/**\r\n * For each entry in the object, call the function with the key and value.\r\n *\r\n * @param {Object<any, any>} obj - The object to iterate over.\r\n * @param {Function} fn - The function to call for each entry.\r\n *\r\n * @returns {void}\r\n */\r\nconst forEachEntry = (obj, fn) => {\r\n  const generator = obj && obj[Symbol.iterator];\r\n\r\n  const iterator = generator.call(obj);\r\n\r\n  let result;\r\n\r\n  while ((result = iterator.next()) && !result.done) {\r\n    const pair = result.value;\r\n    fn.call(obj, pair[0], pair[1]);\r\n  }\r\n}\r\n\r\n/**\r\n * It takes a regular expression and a string, and returns an array of all the matches\r\n *\r\n * @param {string} regExp - The regular expression to match against.\r\n * @param {string} str - The string to search.\r\n *\r\n * @returns {Array<boolean>}\r\n */\r\nconst matchAll = (regExp, str) => {\r\n  let matches;\r\n  const arr = [];\r\n\r\n  while ((matches = regExp.exec(str)) !== null) {\r\n    arr.push(matches);\r\n  }\r\n\r\n  return arr;\r\n}\r\n\r\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\r\nconst isHTMLForm = kindOfTest('HTMLFormElement');\r\n\r\nconst toCamelCase = str => {\r\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\r\n    function replacer(m, p1, p2) {\r\n      return p1.toUpperCase() + p2;\r\n    }\r\n  );\r\n};\r\n\r\n/* Creating a function that will check if an object has a property. */\r\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\r\n\r\n/**\r\n * Determine if a value is a RegExp object\r\n *\r\n * @param {*} val The value to test\r\n *\r\n * @returns {boolean} True if value is a RegExp object, otherwise false\r\n */\r\nconst isRegExp = kindOfTest('RegExp');\r\n\r\nconst reduceDescriptors = (obj, reducer) => {\r\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\r\n  const reducedDescriptors = {};\r\n\r\n  forEach(descriptors, (descriptor, name) => {\r\n    let ret;\r\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\r\n      reducedDescriptors[name] = ret || descriptor;\r\n    }\r\n  });\r\n\r\n  Object.defineProperties(obj, reducedDescriptors);\r\n}\r\n\r\n/**\r\n * Makes all methods read-only\r\n * @param {Object} obj\r\n */\r\n\r\nconst freezeMethods = (obj) => {\r\n  reduceDescriptors(obj, (descriptor, name) => {\r\n    // skip restricted props in strict mode\r\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\r\n      return false;\r\n    }\r\n\r\n    const value = obj[name];\r\n\r\n    if (!isFunction(value)) return;\r\n\r\n    descriptor.enumerable = false;\r\n\r\n    if ('writable' in descriptor) {\r\n      descriptor.writable = false;\r\n      return;\r\n    }\r\n\r\n    if (!descriptor.set) {\r\n      descriptor.set = () => {\r\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\r\n      };\r\n    }\r\n  });\r\n}\r\n\r\nconst toObjectSet = (arrayOrString, delimiter) => {\r\n  const obj = {};\r\n\r\n  const define = (arr) => {\r\n    arr.forEach(value => {\r\n      obj[value] = true;\r\n    });\r\n  }\r\n\r\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\r\n\r\n  return obj;\r\n}\r\n\r\nconst noop = () => {}\r\n\r\nconst toFiniteNumber = (value, defaultValue) => {\r\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\r\n}\r\n\r\n/**\r\n * If the thing is a FormData object, return true, otherwise return false.\r\n *\r\n * @param {unknown} thing - The thing to check.\r\n *\r\n * @returns {boolean}\r\n */\r\nfunction isSpecCompliantForm(thing) {\r\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\r\n}\r\n\r\nconst toJSONObject = (obj) => {\r\n  const stack = new Array(10);\r\n\r\n  const visit = (source, i) => {\r\n\r\n    if (isObject(source)) {\r\n      if (stack.indexOf(source) >= 0) {\r\n        return;\r\n      }\r\n\r\n      if(!('toJSON' in source)) {\r\n        stack[i] = source;\r\n        const target = isArray(source) ? [] : {};\r\n\r\n        forEach(source, (value, key) => {\r\n          const reducedValue = visit(value, i + 1);\r\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\r\n        });\r\n\r\n        stack[i] = undefined;\r\n\r\n        return target;\r\n      }\r\n    }\r\n\r\n    return source;\r\n  }\r\n\r\n  return visit(obj, 0);\r\n}\r\n\r\nconst isAsyncFn = kindOfTest('AsyncFunction');\r\n\r\nconst isThenable = (thing) =>\r\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\r\n\r\n// original code\r\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\r\n\r\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\r\n  if (setImmediateSupported) {\r\n    return setImmediate;\r\n  }\r\n\r\n  return postMessageSupported ? ((token, callbacks) => {\r\n    _global.addEventListener(\"message\", ({source, data}) => {\r\n      if (source === _global && data === token) {\r\n        callbacks.length && callbacks.shift()();\r\n      }\r\n    }, false);\r\n\r\n    return (cb) => {\r\n      callbacks.push(cb);\r\n      _global.postMessage(token, \"*\");\r\n    }\r\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\r\n})(\r\n  typeof setImmediate === 'function',\r\n  isFunction(_global.postMessage)\r\n);\r\n\r\nconst asap = typeof queueMicrotask !== 'undefined' ?\r\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\r\n\r\n// *********************\r\n\r\nexport default {\r\n  isArray,\r\n  isArrayBuffer,\r\n  isBuffer,\r\n  isFormData,\r\n  isArrayBufferView,\r\n  isString,\r\n  isNumber,\r\n  isBoolean,\r\n  isObject,\r\n  isPlainObject,\r\n  isReadableStream,\r\n  isRequest,\r\n  isResponse,\r\n  isHeaders,\r\n  isUndefined,\r\n  isDate,\r\n  isFile,\r\n  isBlob,\r\n  isRegExp,\r\n  isFunction,\r\n  isStream,\r\n  isURLSearchParams,\r\n  isTypedArray,\r\n  isFileList,\r\n  forEach,\r\n  merge,\r\n  extend,\r\n  trim,\r\n  stripBOM,\r\n  inherits,\r\n  toFlatObject,\r\n  kindOf,\r\n  kindOfTest,\r\n  endsWith,\r\n  toArray,\r\n  forEachEntry,\r\n  matchAll,\r\n  isHTMLForm,\r\n  hasOwnProperty,\r\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\r\n  reduceDescriptors,\r\n  freezeMethods,\r\n  toObjectSet,\r\n  toCamelCase,\r\n  noop,\r\n  toFiniteNumber,\r\n  findKey,\r\n  global: _global,\r\n  isContextDefined,\r\n  isSpecCompliantForm,\r\n  toJSONObject,\r\n  isAsyncFn,\r\n  isThenable,\r\n  setImmediate: _setImmediate,\r\n  asap\r\n};\r\n","'use strict';\r\n\r\nimport utils from '../utils.js';\r\n\r\n/**\r\n * Create an Error with the specified message, config, error code, request and response.\r\n *\r\n * @param {string} message The error message.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [config] The config.\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n *\r\n * @returns {Error} The created error.\r\n */\r\nfunction AxiosError(message, code, config, request, response) {\r\n  Error.call(this);\r\n\r\n  if (Error.captureStackTrace) {\r\n    Error.captureStackTrace(this, this.constructor);\r\n  } else {\r\n    this.stack = (new Error()).stack;\r\n  }\r\n\r\n  this.message = message;\r\n  this.name = 'AxiosError';\r\n  code && (this.code = code);\r\n  config && (this.config = config);\r\n  request && (this.request = request);\r\n  if (response) {\r\n    this.response = response;\r\n    this.status = response.status ? response.status : null;\r\n  }\r\n}\r\n\r\nutils.inherits(AxiosError, Error, {\r\n  toJSON: function toJSON() {\r\n    return {\r\n      // Standard\r\n      message: this.message,\r\n      name: this.name,\r\n      // Microsoft\r\n      description: this.description,\r\n      number: this.number,\r\n      // Mozilla\r\n      fileName: this.fileName,\r\n      lineNumber: this.lineNumber,\r\n      columnNumber: this.columnNumber,\r\n      stack: this.stack,\r\n      // Axios\r\n      config: utils.toJSONObject(this.config),\r\n      code: this.code,\r\n      status: this.status\r\n    };\r\n  }\r\n});\r\n\r\nconst prototype = AxiosError.prototype;\r\nconst descriptors = {};\r\n\r\n[\r\n  'ERR_BAD_OPTION_VALUE',\r\n  'ERR_BAD_OPTION',\r\n  'ECONNABORTED',\r\n  'ETIMEDOUT',\r\n  'ERR_NETWORK',\r\n  'ERR_FR_TOO_MANY_REDIRECTS',\r\n  'ERR_DEPRECATED',\r\n  'ERR_BAD_RESPONSE',\r\n  'ERR_BAD_REQUEST',\r\n  'ERR_CANCELED',\r\n  'ERR_NOT_SUPPORT',\r\n  'ERR_INVALID_URL'\r\n// eslint-disable-next-line func-names\r\n].forEach(code => {\r\n  descriptors[code] = {value: code};\r\n});\r\n\r\nObject.defineProperties(AxiosError, descriptors);\r\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\r\n\r\n// eslint-disable-next-line func-names\r\nAxiosError.from = (error, code, config, request, response, customProps) => {\r\n  const axiosError = Object.create(prototype);\r\n\r\n  utils.toFlatObject(error, axiosError, function filter(obj) {\r\n    return obj !== Error.prototype;\r\n  }, prop => {\r\n    return prop !== 'isAxiosError';\r\n  });\r\n\r\n  AxiosError.call(axiosError, error.message, code, config, request, response);\r\n\r\n  axiosError.cause = error;\r\n\r\n  axiosError.name = error.name;\r\n\r\n  customProps && Object.assign(axiosError, customProps);\r\n\r\n  return axiosError;\r\n};\r\n\r\nexport default AxiosError;\r\n","'use strict';\r\n\r\nimport utils from '../utils.js';\r\nimport AxiosError from '../core/AxiosError.js';\r\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\r\nimport PlatformFormData from '../platform/node/classes/FormData.js';\r\n\r\n/**\r\n * Determines if the given thing is a array or js object.\r\n *\r\n * @param {string} thing - The object or array to be visited.\r\n *\r\n * @returns {boolean}\r\n */\r\nfunction isVisitable(thing) {\r\n  return utils.isPlainObject(thing) || utils.isArray(thing);\r\n}\r\n\r\n/**\r\n * It removes the brackets from the end of a string\r\n *\r\n * @param {string} key - The key of the parameter.\r\n *\r\n * @returns {string} the key without the brackets.\r\n */\r\nfunction removeBrackets(key) {\r\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\r\n}\r\n\r\n/**\r\n * It takes a path, a key, and a boolean, and returns a string\r\n *\r\n * @param {string} path - The path to the current key.\r\n * @param {string} key - The key of the current object being iterated over.\r\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\r\n *\r\n * @returns {string} The path to the current key.\r\n */\r\nfunction renderKey(path, key, dots) {\r\n  if (!path) return key;\r\n  return path.concat(key).map(function each(token, i) {\r\n    // eslint-disable-next-line no-param-reassign\r\n    token = removeBrackets(token);\r\n    return !dots && i ? '[' + token + ']' : token;\r\n  }).join(dots ? '.' : '');\r\n}\r\n\r\n/**\r\n * If the array is an array and none of its elements are visitable, then it's a flat array.\r\n *\r\n * @param {Array<any>} arr - The array to check\r\n *\r\n * @returns {boolean}\r\n */\r\nfunction isFlatArray(arr) {\r\n  return utils.isArray(arr) && !arr.some(isVisitable);\r\n}\r\n\r\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\r\n  return /^is[A-Z]/.test(prop);\r\n});\r\n\r\n/**\r\n * Convert a data object to FormData\r\n *\r\n * @param {Object} obj\r\n * @param {?Object} [formData]\r\n * @param {?Object} [options]\r\n * @param {Function} [options.visitor]\r\n * @param {Boolean} [options.metaTokens = true]\r\n * @param {Boolean} [options.dots = false]\r\n * @param {?Boolean} [options.indexes = false]\r\n *\r\n * @returns {Object}\r\n **/\r\n\r\n/**\r\n * It converts an object into a FormData object\r\n *\r\n * @param {Object<any, any>} obj - The object to convert to form data.\r\n * @param {string} formData - The FormData object to append to.\r\n * @param {Object<string, any>} options\r\n *\r\n * @returns\r\n */\r\nfunction toFormData(obj, formData, options) {\r\n  if (!utils.isObject(obj)) {\r\n    throw new TypeError('target must be an object');\r\n  }\r\n\r\n  // eslint-disable-next-line no-param-reassign\r\n  formData = formData || new (PlatformFormData || FormData)();\r\n\r\n  // eslint-disable-next-line no-param-reassign\r\n  options = utils.toFlatObject(options, {\r\n    metaTokens: true,\r\n    dots: false,\r\n    indexes: false\r\n  }, false, function defined(option, source) {\r\n    // eslint-disable-next-line no-eq-null,eqeqeq\r\n    return !utils.isUndefined(source[option]);\r\n  });\r\n\r\n  const metaTokens = options.metaTokens;\r\n  // eslint-disable-next-line no-use-before-define\r\n  const visitor = options.visitor || defaultVisitor;\r\n  const dots = options.dots;\r\n  const indexes = options.indexes;\r\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\r\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\r\n\r\n  if (!utils.isFunction(visitor)) {\r\n    throw new TypeError('visitor must be a function');\r\n  }\r\n\r\n  function convertValue(value) {\r\n    if (value === null) return '';\r\n\r\n    if (utils.isDate(value)) {\r\n      return value.toISOString();\r\n    }\r\n\r\n    if (!useBlob && utils.isBlob(value)) {\r\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\r\n    }\r\n\r\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\r\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Default visitor.\r\n   *\r\n   * @param {*} value\r\n   * @param {String|Number} key\r\n   * @param {Array<String|Number>} path\r\n   * @this {FormData}\r\n   *\r\n   * @returns {boolean} return true to visit the each prop of the value recursively\r\n   */\r\n  function defaultVisitor(value, key, path) {\r\n    let arr = value;\r\n\r\n    if (value && !path && typeof value === 'object') {\r\n      if (utils.endsWith(key, '{}')) {\r\n        // eslint-disable-next-line no-param-reassign\r\n        key = metaTokens ? key : key.slice(0, -2);\r\n        // eslint-disable-next-line no-param-reassign\r\n        value = JSON.stringify(value);\r\n      } else if (\r\n        (utils.isArray(value) && isFlatArray(value)) ||\r\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\r\n        )) {\r\n        // eslint-disable-next-line no-param-reassign\r\n        key = removeBrackets(key);\r\n\r\n        arr.forEach(function each(el, index) {\r\n          !(utils.isUndefined(el) || el === null) && formData.append(\r\n            // eslint-disable-next-line no-nested-ternary\r\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\r\n            convertValue(el)\r\n          );\r\n        });\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (isVisitable(value)) {\r\n      return true;\r\n    }\r\n\r\n    formData.append(renderKey(path, key, dots), convertValue(value));\r\n\r\n    return false;\r\n  }\r\n\r\n  const stack = [];\r\n\r\n  const exposedHelpers = Object.assign(predicates, {\r\n    defaultVisitor,\r\n    convertValue,\r\n    isVisitable\r\n  });\r\n\r\n  function build(value, path) {\r\n    if (utils.isUndefined(value)) return;\r\n\r\n    if (stack.indexOf(value) !== -1) {\r\n      throw Error('Circular reference detected in ' + path.join('.'));\r\n    }\r\n\r\n    stack.push(value);\r\n\r\n    utils.forEach(value, function each(el, key) {\r\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\r\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\r\n      );\r\n\r\n      if (result === true) {\r\n        build(el, path ? path.concat(key) : [key]);\r\n      }\r\n    });\r\n\r\n    stack.pop();\r\n  }\r\n\r\n  if (!utils.isObject(obj)) {\r\n    throw new TypeError('data must be an object');\r\n  }\r\n\r\n  build(obj);\r\n\r\n  return formData;\r\n}\r\n\r\nexport default toFormData;\r\n","'use strict';\r\n\r\nimport toFormData from './toFormData.js';\r\n\r\n/**\r\n * It encodes a string by replacing all characters that are not in the unreserved set with\r\n * their percent-encoded equivalents\r\n *\r\n * @param {string} str - The string to encode.\r\n *\r\n * @returns {string} The encoded string.\r\n */\r\nfunction encode(str) {\r\n  const charMap = {\r\n    '!': '%21',\r\n    \"'\": '%27',\r\n    '(': '%28',\r\n    ')': '%29',\r\n    '~': '%7E',\r\n    '%20': '+',\r\n    '%00': '\\x00'\r\n  };\r\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\r\n    return charMap[match];\r\n  });\r\n}\r\n\r\n/**\r\n * It takes a params object and converts it to a FormData object\r\n *\r\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\r\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\r\n *\r\n * @returns {void}\r\n */\r\nfunction AxiosURLSearchParams(params, options) {\r\n  this._pairs = [];\r\n\r\n  params && toFormData(params, this, options);\r\n}\r\n\r\nconst prototype = AxiosURLSearchParams.prototype;\r\n\r\nprototype.append = function append(name, value) {\r\n  this._pairs.push([name, value]);\r\n};\r\n\r\nprototype.toString = function toString(encoder) {\r\n  const _encode = encoder ? function(value) {\r\n    return encoder.call(this, value, encode);\r\n  } : encode;\r\n\r\n  return this._pairs.map(function each(pair) {\r\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\r\n  }, '').join('&');\r\n};\r\n\r\nexport default AxiosURLSearchParams;\r\n","'use strict';\r\n\r\nimport utils from '../utils.js';\r\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\r\n\r\n/**\r\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\r\n * URI encoded counterparts\r\n *\r\n * @param {string} val The value to be encoded.\r\n *\r\n * @returns {string} The encoded value.\r\n */\r\nfunction encode(val) {\r\n  return encodeURIComponent(val).\r\n    replace(/%3A/gi, ':').\r\n    replace(/%24/g, '$').\r\n    replace(/%2C/gi, ',').\r\n    replace(/%20/g, '+').\r\n    replace(/%5B/gi, '[').\r\n    replace(/%5D/gi, ']');\r\n}\r\n\r\n/**\r\n * Build a URL by appending params to the end\r\n *\r\n * @param {string} url The base of the url (e.g., http://www.google.com)\r\n * @param {object} [params] The params to be appended\r\n * @param {?(object|Function)} options\r\n *\r\n * @returns {string} The formatted url\r\n */\r\nexport default function buildURL(url, params, options) {\r\n  /*eslint no-param-reassign:0*/\r\n  if (!params) {\r\n    return url;\r\n  }\r\n  \r\n  const _encode = options && options.encode || encode;\r\n\r\n  if (utils.isFunction(options)) {\r\n    options = {\r\n      serialize: options\r\n    };\r\n  } \r\n\r\n  const serializeFn = options && options.serialize;\r\n\r\n  let serializedParams;\r\n\r\n  if (serializeFn) {\r\n    serializedParams = serializeFn(params, options);\r\n  } else {\r\n    serializedParams = utils.isURLSearchParams(params) ?\r\n      params.toString() :\r\n      new AxiosURLSearchParams(params, options).toString(_encode);\r\n  }\r\n\r\n  if (serializedParams) {\r\n    const hashmarkIndex = url.indexOf(\"#\");\r\n\r\n    if (hashmarkIndex !== -1) {\r\n      url = url.slice(0, hashmarkIndex);\r\n    }\r\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\r\n  }\r\n\r\n  return url;\r\n}\r\n","'use strict';\r\n\r\nimport utils from './../utils.js';\r\n\r\nclass InterceptorManager {\r\n  constructor() {\r\n    this.handlers = [];\r\n  }\r\n\r\n  /**\r\n   * Add a new interceptor to the stack\r\n   *\r\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\r\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\r\n   *\r\n   * @return {Number} An ID used to remove interceptor later\r\n   */\r\n  use(fulfilled, rejected, options) {\r\n    this.handlers.push({\r\n      fulfilled,\r\n      rejected,\r\n      synchronous: options ? options.synchronous : false,\r\n      runWhen: options ? options.runWhen : null\r\n    });\r\n    return this.handlers.length - 1;\r\n  }\r\n\r\n  /**\r\n   * Remove an interceptor from the stack\r\n   *\r\n   * @param {Number} id The ID that was returned by `use`\r\n   *\r\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\r\n   */\r\n  eject(id) {\r\n    if (this.handlers[id]) {\r\n      this.handlers[id] = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear all interceptors from the stack\r\n   *\r\n   * @returns {void}\r\n   */\r\n  clear() {\r\n    if (this.handlers) {\r\n      this.handlers = [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Iterate over all the registered interceptors\r\n   *\r\n   * This method is particularly useful for skipping over any\r\n   * interceptors that may have become `null` calling `eject`.\r\n   *\r\n   * @param {Function} fn The function to call for each interceptor\r\n   *\r\n   * @returns {void}\r\n   */\r\n  forEach(fn) {\r\n    utils.forEach(this.handlers, function forEachHandler(h) {\r\n      if (h !== null) {\r\n        fn(h);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default InterceptorManager;\r\n","'use strict';\r\n\r\nexport default {\r\n  silentJSONParsing: true,\r\n  forcedJSONParsing: true,\r\n  clarifyTimeoutError: false\r\n};\r\n","import URLSearchParams from './classes/URLSearchParams.js'\r\nimport FormData from './classes/FormData.js'\r\nimport Blob from './classes/Blob.js'\r\n\r\nexport default {\r\n  isBrowser: true,\r\n  classes: {\r\n    URLSearchParams,\r\n    FormData,\r\n    Blob\r\n  },\r\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\r\n};\r\n","'use strict';\r\n\r\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\r\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\r\n","'use strict';\r\n\r\nexport default typeof FormData !== 'undefined' ? FormData : null;\r\n","'use strict'\r\n\r\nexport default typeof Blob !== 'undefined' ? Blob : null\r\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\r\n\r\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\r\n\r\n/**\r\n * Determine if we're running in a standard browser environment\r\n *\r\n * This allows axios to run in a web worker, and react-native.\r\n * Both environments support XMLHttpRequest, but not fully standard globals.\r\n *\r\n * web workers:\r\n *  typeof window -> undefined\r\n *  typeof document -> undefined\r\n *\r\n * react-native:\r\n *  navigator.product -> 'ReactNative'\r\n * nativescript\r\n *  navigator.product -> 'NativeScript' or 'NS'\r\n *\r\n * @returns {boolean}\r\n */\r\nconst hasStandardBrowserEnv = hasBrowserEnv &&\r\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\r\n\r\n/**\r\n * Determine if we're running in a standard browser webWorker environment\r\n *\r\n * Although the `isStandardBrowserEnv` method indicates that\r\n * `allows axios to run in a web worker`, the WebWorker will still be\r\n * filtered out due to its judgment standard\r\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\r\n * This leads to a problem when axios post `FormData` in webWorker\r\n */\r\nconst hasStandardBrowserWebWorkerEnv = (() => {\r\n  return (\r\n    typeof WorkerGlobalScope !== 'undefined' &&\r\n    // eslint-disable-next-line no-undef\r\n    self instanceof WorkerGlobalScope &&\r\n    typeof self.importScripts === 'function'\r\n  );\r\n})();\r\n\r\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\r\n\r\nexport {\r\n  hasBrowserEnv,\r\n  hasStandardBrowserWebWorkerEnv,\r\n  hasStandardBrowserEnv,\r\n  _navigator as navigator,\r\n  origin\r\n}\r\n","import platform from './node/index.js';\r\nimport * as utils from './common/utils.js';\r\n\r\nexport default {\r\n  ...utils,\r\n  ...platform\r\n}\r\n","'use strict';\r\n\r\nimport utils from '../utils.js';\r\n\r\n/**\r\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\r\n *\r\n * @param {string} name - The name of the property to get.\r\n *\r\n * @returns An array of strings.\r\n */\r\nfunction parsePropPath(name) {\r\n  // foo[x][y][z]\r\n  // foo.x.y.z\r\n  // foo-x-y-z\r\n  // foo x y z\r\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\r\n    return match[0] === '[]' ? '' : match[1] || match[0];\r\n  });\r\n}\r\n\r\n/**\r\n * Convert an array to an object.\r\n *\r\n * @param {Array<any>} arr - The array to convert to an object.\r\n *\r\n * @returns An object with the same keys and values as the array.\r\n */\r\nfunction arrayToObject(arr) {\r\n  const obj = {};\r\n  const keys = Object.keys(arr);\r\n  let i;\r\n  const len = keys.length;\r\n  let key;\r\n  for (i = 0; i < len; i++) {\r\n    key = keys[i];\r\n    obj[key] = arr[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * It takes a FormData object and returns a JavaScript object\r\n *\r\n * @param {string} formData The FormData object to convert to JSON.\r\n *\r\n * @returns {Object<string, any> | null} The converted object.\r\n */\r\nfunction formDataToJSON(formData) {\r\n  function buildPath(path, value, target, index) {\r\n    let name = path[index++];\r\n\r\n    if (name === '__proto__') return true;\r\n\r\n    const isNumericKey = Number.isFinite(+name);\r\n    const isLast = index >= path.length;\r\n    name = !name && utils.isArray(target) ? target.length : name;\r\n\r\n    if (isLast) {\r\n      if (utils.hasOwnProp(target, name)) {\r\n        target[name] = [target[name], value];\r\n      } else {\r\n        target[name] = value;\r\n      }\r\n\r\n      return !isNumericKey;\r\n    }\r\n\r\n    if (!target[name] || !utils.isObject(target[name])) {\r\n      target[name] = [];\r\n    }\r\n\r\n    const result = buildPath(path, value, target[name], index);\r\n\r\n    if (result && utils.isArray(target[name])) {\r\n      target[name] = arrayToObject(target[name]);\r\n    }\r\n\r\n    return !isNumericKey;\r\n  }\r\n\r\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\r\n    const obj = {};\r\n\r\n    utils.forEachEntry(formData, (name, value) => {\r\n      buildPath(parsePropPath(name), value, obj, 0);\r\n    });\r\n\r\n    return obj;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport default formDataToJSON;\r\n","'use strict';\r\n\r\nimport utils from '../utils.js';\r\nimport AxiosError from '../core/AxiosError.js';\r\nimport transitionalDefaults from './transitional.js';\r\nimport toFormData from '../helpers/toFormData.js';\r\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\r\nimport platform from '../platform/index.js';\r\nimport formDataToJSON from '../helpers/formDataToJSON.js';\r\n\r\n/**\r\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\r\n * of the input\r\n *\r\n * @param {any} rawValue - The value to be stringified.\r\n * @param {Function} parser - A function that parses a string into a JavaScript object.\r\n * @param {Function} encoder - A function that takes a value and returns a string.\r\n *\r\n * @returns {string} A stringified version of the rawValue.\r\n */\r\nfunction stringifySafely(rawValue, parser, encoder) {\r\n  if (utils.isString(rawValue)) {\r\n    try {\r\n      (parser || JSON.parse)(rawValue);\r\n      return utils.trim(rawValue);\r\n    } catch (e) {\r\n      if (e.name !== 'SyntaxError') {\r\n        throw e;\r\n      }\r\n    }\r\n  }\r\n\r\n  return (encoder || JSON.stringify)(rawValue);\r\n}\r\n\r\nconst defaults = {\r\n\r\n  transitional: transitionalDefaults,\r\n\r\n  adapter: ['xhr', 'http', 'fetch'],\r\n\r\n  transformRequest: [function transformRequest(data, headers) {\r\n    const contentType = headers.getContentType() || '';\r\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\r\n    const isObjectPayload = utils.isObject(data);\r\n\r\n    if (isObjectPayload && utils.isHTMLForm(data)) {\r\n      data = new FormData(data);\r\n    }\r\n\r\n    const isFormData = utils.isFormData(data);\r\n\r\n    if (isFormData) {\r\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\r\n    }\r\n\r\n    if (utils.isArrayBuffer(data) ||\r\n      utils.isBuffer(data) ||\r\n      utils.isStream(data) ||\r\n      utils.isFile(data) ||\r\n      utils.isBlob(data) ||\r\n      utils.isReadableStream(data)\r\n    ) {\r\n      return data;\r\n    }\r\n    if (utils.isArrayBufferView(data)) {\r\n      return data.buffer;\r\n    }\r\n    if (utils.isURLSearchParams(data)) {\r\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\r\n      return data.toString();\r\n    }\r\n\r\n    let isFileList;\r\n\r\n    if (isObjectPayload) {\r\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\r\n        return toURLEncodedForm(data, this.formSerializer).toString();\r\n      }\r\n\r\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\r\n        const _FormData = this.env && this.env.FormData;\r\n\r\n        return toFormData(\r\n          isFileList ? {'files[]': data} : data,\r\n          _FormData && new _FormData(),\r\n          this.formSerializer\r\n        );\r\n      }\r\n    }\r\n\r\n    if (isObjectPayload || hasJSONContentType ) {\r\n      headers.setContentType('application/json', false);\r\n      return stringifySafely(data);\r\n    }\r\n\r\n    return data;\r\n  }],\r\n\r\n  transformResponse: [function transformResponse(data) {\r\n    const transitional = this.transitional || defaults.transitional;\r\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\r\n    const JSONRequested = this.responseType === 'json';\r\n\r\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\r\n      return data;\r\n    }\r\n\r\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\r\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\r\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\r\n\r\n      try {\r\n        return JSON.parse(data);\r\n      } catch (e) {\r\n        if (strictJSONParsing) {\r\n          if (e.name === 'SyntaxError') {\r\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\r\n          }\r\n          throw e;\r\n        }\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }],\r\n\r\n  /**\r\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\r\n   * timeout is not created.\r\n   */\r\n  timeout: 0,\r\n\r\n  xsrfCookieName: 'XSRF-TOKEN',\r\n  xsrfHeaderName: 'X-XSRF-TOKEN',\r\n\r\n  maxContentLength: -1,\r\n  maxBodyLength: -1,\r\n\r\n  env: {\r\n    FormData: platform.classes.FormData,\r\n    Blob: platform.classes.Blob\r\n  },\r\n\r\n  validateStatus: function validateStatus(status) {\r\n    return status >= 200 && status < 300;\r\n  },\r\n\r\n  headers: {\r\n    common: {\r\n      'Accept': 'application/json, text/plain, */*',\r\n      'Content-Type': undefined\r\n    }\r\n  }\r\n};\r\n\r\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\r\n  defaults.headers[method] = {};\r\n});\r\n\r\nexport default defaults;\r\n","'use strict';\r\n\r\nimport utils from '../utils.js';\r\nimport toFormData from './toFormData.js';\r\nimport platform from '../platform/index.js';\r\n\r\nexport default function toURLEncodedForm(data, options) {\r\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\r\n    visitor: function(value, key, path, helpers) {\r\n      if (platform.isNode && utils.isBuffer(value)) {\r\n        this.append(key, value.toString('base64'));\r\n        return false;\r\n      }\r\n\r\n      return helpers.defaultVisitor.apply(this, arguments);\r\n    }\r\n  }, options));\r\n}\r\n","'use strict';\r\n\r\nimport utils from './../utils.js';\r\n\r\n// RawAxiosHeaders whose duplicates are ignored by node\r\n// c.f. https://nodejs.org/api/http.html#http_message_headers\r\nconst ignoreDuplicateOf = utils.toObjectSet([\r\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\r\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\r\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\r\n  'referer', 'retry-after', 'user-agent'\r\n]);\r\n\r\n/**\r\n * Parse headers into an object\r\n *\r\n * ```\r\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\r\n * Content-Type: application/json\r\n * Connection: keep-alive\r\n * Transfer-Encoding: chunked\r\n * ```\r\n *\r\n * @param {String} rawHeaders Headers needing to be parsed\r\n *\r\n * @returns {Object} Headers parsed into an object\r\n */\r\nexport default rawHeaders => {\r\n  const parsed = {};\r\n  let key;\r\n  let val;\r\n  let i;\r\n\r\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\r\n    i = line.indexOf(':');\r\n    key = line.substring(0, i).trim().toLowerCase();\r\n    val = line.substring(i + 1).trim();\r\n\r\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\r\n      return;\r\n    }\r\n\r\n    if (key === 'set-cookie') {\r\n      if (parsed[key]) {\r\n        parsed[key].push(val);\r\n      } else {\r\n        parsed[key] = [val];\r\n      }\r\n    } else {\r\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\r\n    }\r\n  });\r\n\r\n  return parsed;\r\n};\r\n","'use strict';\r\n\r\nimport utils from '../utils.js';\r\nimport parseHeaders from '../helpers/parseHeaders.js';\r\n\r\nconst $internals = Symbol('internals');\r\n\r\nfunction normalizeHeader(header) {\r\n  return header && String(header).trim().toLowerCase();\r\n}\r\n\r\nfunction normalizeValue(value) {\r\n  if (value === false || value == null) {\r\n    return value;\r\n  }\r\n\r\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\r\n}\r\n\r\nfunction parseTokens(str) {\r\n  const tokens = Object.create(null);\r\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\r\n  let match;\r\n\r\n  while ((match = tokensRE.exec(str))) {\r\n    tokens[match[1]] = match[2];\r\n  }\r\n\r\n  return tokens;\r\n}\r\n\r\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\r\n\r\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\r\n  if (utils.isFunction(filter)) {\r\n    return filter.call(this, value, header);\r\n  }\r\n\r\n  if (isHeaderNameFilter) {\r\n    value = header;\r\n  }\r\n\r\n  if (!utils.isString(value)) return;\r\n\r\n  if (utils.isString(filter)) {\r\n    return value.indexOf(filter) !== -1;\r\n  }\r\n\r\n  if (utils.isRegExp(filter)) {\r\n    return filter.test(value);\r\n  }\r\n}\r\n\r\nfunction formatHeader(header) {\r\n  return header.trim()\r\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\r\n      return char.toUpperCase() + str;\r\n    });\r\n}\r\n\r\nfunction buildAccessors(obj, header) {\r\n  const accessorName = utils.toCamelCase(' ' + header);\r\n\r\n  ['get', 'set', 'has'].forEach(methodName => {\r\n    Object.defineProperty(obj, methodName + accessorName, {\r\n      value: function(arg1, arg2, arg3) {\r\n        return this[methodName].call(this, header, arg1, arg2, arg3);\r\n      },\r\n      configurable: true\r\n    });\r\n  });\r\n}\r\n\r\nclass AxiosHeaders {\r\n  constructor(headers) {\r\n    headers && this.set(headers);\r\n  }\r\n\r\n  set(header, valueOrRewrite, rewrite) {\r\n    const self = this;\r\n\r\n    function setHeader(_value, _header, _rewrite) {\r\n      const lHeader = normalizeHeader(_header);\r\n\r\n      if (!lHeader) {\r\n        throw new Error('header name must be a non-empty string');\r\n      }\r\n\r\n      const key = utils.findKey(self, lHeader);\r\n\r\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\r\n        self[key || _header] = normalizeValue(_value);\r\n      }\r\n    }\r\n\r\n    const setHeaders = (headers, _rewrite) =>\r\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\r\n\r\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\r\n      setHeaders(header, valueOrRewrite)\r\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\r\n      setHeaders(parseHeaders(header), valueOrRewrite);\r\n    } else if (utils.isHeaders(header)) {\r\n      for (const [key, value] of header.entries()) {\r\n        setHeader(value, key, rewrite);\r\n      }\r\n    } else {\r\n      header != null && setHeader(valueOrRewrite, header, rewrite);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  get(header, parser) {\r\n    header = normalizeHeader(header);\r\n\r\n    if (header) {\r\n      const key = utils.findKey(this, header);\r\n\r\n      if (key) {\r\n        const value = this[key];\r\n\r\n        if (!parser) {\r\n          return value;\r\n        }\r\n\r\n        if (parser === true) {\r\n          return parseTokens(value);\r\n        }\r\n\r\n        if (utils.isFunction(parser)) {\r\n          return parser.call(this, value, key);\r\n        }\r\n\r\n        if (utils.isRegExp(parser)) {\r\n          return parser.exec(value);\r\n        }\r\n\r\n        throw new TypeError('parser must be boolean|regexp|function');\r\n      }\r\n    }\r\n  }\r\n\r\n  has(header, matcher) {\r\n    header = normalizeHeader(header);\r\n\r\n    if (header) {\r\n      const key = utils.findKey(this, header);\r\n\r\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  delete(header, matcher) {\r\n    const self = this;\r\n    let deleted = false;\r\n\r\n    function deleteHeader(_header) {\r\n      _header = normalizeHeader(_header);\r\n\r\n      if (_header) {\r\n        const key = utils.findKey(self, _header);\r\n\r\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\r\n          delete self[key];\r\n\r\n          deleted = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (utils.isArray(header)) {\r\n      header.forEach(deleteHeader);\r\n    } else {\r\n      deleteHeader(header);\r\n    }\r\n\r\n    return deleted;\r\n  }\r\n\r\n  clear(matcher) {\r\n    const keys = Object.keys(this);\r\n    let i = keys.length;\r\n    let deleted = false;\r\n\r\n    while (i--) {\r\n      const key = keys[i];\r\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\r\n        delete this[key];\r\n        deleted = true;\r\n      }\r\n    }\r\n\r\n    return deleted;\r\n  }\r\n\r\n  normalize(format) {\r\n    const self = this;\r\n    const headers = {};\r\n\r\n    utils.forEach(this, (value, header) => {\r\n      const key = utils.findKey(headers, header);\r\n\r\n      if (key) {\r\n        self[key] = normalizeValue(value);\r\n        delete self[header];\r\n        return;\r\n      }\r\n\r\n      const normalized = format ? formatHeader(header) : String(header).trim();\r\n\r\n      if (normalized !== header) {\r\n        delete self[header];\r\n      }\r\n\r\n      self[normalized] = normalizeValue(value);\r\n\r\n      headers[normalized] = true;\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  concat(...targets) {\r\n    return this.constructor.concat(this, ...targets);\r\n  }\r\n\r\n  toJSON(asStrings) {\r\n    const obj = Object.create(null);\r\n\r\n    utils.forEach(this, (value, header) => {\r\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\r\n    });\r\n\r\n    return obj;\r\n  }\r\n\r\n  [Symbol.iterator]() {\r\n    return Object.entries(this.toJSON())[Symbol.iterator]();\r\n  }\r\n\r\n  toString() {\r\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\r\n  }\r\n\r\n  get [Symbol.toStringTag]() {\r\n    return 'AxiosHeaders';\r\n  }\r\n\r\n  static from(thing) {\r\n    return thing instanceof this ? thing : new this(thing);\r\n  }\r\n\r\n  static concat(first, ...targets) {\r\n    const computed = new this(first);\r\n\r\n    targets.forEach((target) => computed.set(target));\r\n\r\n    return computed;\r\n  }\r\n\r\n  static accessor(header) {\r\n    const internals = this[$internals] = (this[$internals] = {\r\n      accessors: {}\r\n    });\r\n\r\n    const accessors = internals.accessors;\r\n    const prototype = this.prototype;\r\n\r\n    function defineAccessor(_header) {\r\n      const lHeader = normalizeHeader(_header);\r\n\r\n      if (!accessors[lHeader]) {\r\n        buildAccessors(prototype, _header);\r\n        accessors[lHeader] = true;\r\n      }\r\n    }\r\n\r\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\r\n\r\n    return this;\r\n  }\r\n}\r\n\r\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\r\n\r\n// reserved names hotfix\r\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\r\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\r\n  return {\r\n    get: () => value,\r\n    set(headerValue) {\r\n      this[mapped] = headerValue;\r\n    }\r\n  }\r\n});\r\n\r\nutils.freezeMethods(AxiosHeaders);\r\n\r\nexport default AxiosHeaders;\r\n","'use strict';\r\n\r\nimport utils from './../utils.js';\r\nimport defaults from '../defaults/index.js';\r\nimport AxiosHeaders from '../core/AxiosHeaders.js';\r\n\r\n/**\r\n * Transform the data for a request or a response\r\n *\r\n * @param {Array|Function} fns A single function or Array of functions\r\n * @param {?Object} response The response object\r\n *\r\n * @returns {*} The resulting transformed data\r\n */\r\nexport default function transformData(fns, response) {\r\n  const config = this || defaults;\r\n  const context = response || config;\r\n  const headers = AxiosHeaders.from(context.headers);\r\n  let data = context.data;\r\n\r\n  utils.forEach(fns, function transform(fn) {\r\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\r\n  });\r\n\r\n  headers.normalize();\r\n\r\n  return data;\r\n}\r\n","'use strict';\r\n\r\nexport default function isCancel(value) {\r\n  return !!(value && value.__CANCEL__);\r\n}\r\n","'use strict';\r\n\r\nimport AxiosError from '../core/AxiosError.js';\r\nimport utils from '../utils.js';\r\n\r\n/**\r\n * A `CanceledError` is an object that is thrown when an operation is canceled.\r\n *\r\n * @param {string=} message The message.\r\n * @param {Object=} config The config.\r\n * @param {Object=} request The request.\r\n *\r\n * @returns {CanceledError} The created error.\r\n */\r\nfunction CanceledError(message, config, request) {\r\n  // eslint-disable-next-line no-eq-null,eqeqeq\r\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\r\n  this.name = 'CanceledError';\r\n}\r\n\r\nutils.inherits(CanceledError, AxiosError, {\r\n  __CANCEL__: true\r\n});\r\n\r\nexport default CanceledError;\r\n","'use strict';\r\n\r\nimport AxiosError from './AxiosError.js';\r\n\r\n/**\r\n * Resolve or reject a Promise based on response status.\r\n *\r\n * @param {Function} resolve A function that resolves the promise.\r\n * @param {Function} reject A function that rejects the promise.\r\n * @param {object} response The response.\r\n *\r\n * @returns {object} The response.\r\n */\r\nexport default function settle(resolve, reject, response) {\r\n  const validateStatus = response.config.validateStatus;\r\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\r\n    resolve(response);\r\n  } else {\r\n    reject(new AxiosError(\r\n      'Request failed with status code ' + response.status,\r\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\r\n      response.config,\r\n      response.request,\r\n      response\r\n    ));\r\n  }\r\n}\r\n","'use strict';\r\n\r\n/**\r\n * Calculate data maxRate\r\n * @param {Number} [samplesCount= 10]\r\n * @param {Number} [min= 1000]\r\n * @returns {Function}\r\n */\r\nfunction speedometer(samplesCount, min) {\r\n  samplesCount = samplesCount || 10;\r\n  const bytes = new Array(samplesCount);\r\n  const timestamps = new Array(samplesCount);\r\n  let head = 0;\r\n  let tail = 0;\r\n  let firstSampleTS;\r\n\r\n  min = min !== undefined ? min : 1000;\r\n\r\n  return function push(chunkLength) {\r\n    const now = Date.now();\r\n\r\n    const startedAt = timestamps[tail];\r\n\r\n    if (!firstSampleTS) {\r\n      firstSampleTS = now;\r\n    }\r\n\r\n    bytes[head] = chunkLength;\r\n    timestamps[head] = now;\r\n\r\n    let i = tail;\r\n    let bytesCount = 0;\r\n\r\n    while (i !== head) {\r\n      bytesCount += bytes[i++];\r\n      i = i % samplesCount;\r\n    }\r\n\r\n    head = (head + 1) % samplesCount;\r\n\r\n    if (head === tail) {\r\n      tail = (tail + 1) % samplesCount;\r\n    }\r\n\r\n    if (now - firstSampleTS < min) {\r\n      return;\r\n    }\r\n\r\n    const passed = startedAt && now - startedAt;\r\n\r\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\r\n  };\r\n}\r\n\r\nexport default speedometer;\r\n","/**\r\n * Throttle decorator\r\n * @param {Function} fn\r\n * @param {Number} freq\r\n * @return {Function}\r\n */\r\nfunction throttle(fn, freq) {\r\n  let timestamp = 0;\r\n  let threshold = 1000 / freq;\r\n  let lastArgs;\r\n  let timer;\r\n\r\n  const invoke = (args, now = Date.now()) => {\r\n    timestamp = now;\r\n    lastArgs = null;\r\n    if (timer) {\r\n      clearTimeout(timer);\r\n      timer = null;\r\n    }\r\n    fn.apply(null, args);\r\n  }\r\n\r\n  const throttled = (...args) => {\r\n    const now = Date.now();\r\n    const passed = now - timestamp;\r\n    if ( passed >= threshold) {\r\n      invoke(args, now);\r\n    } else {\r\n      lastArgs = args;\r\n      if (!timer) {\r\n        timer = setTimeout(() => {\r\n          timer = null;\r\n          invoke(lastArgs)\r\n        }, threshold - passed);\r\n      }\r\n    }\r\n  }\r\n\r\n  const flush = () => lastArgs && invoke(lastArgs);\r\n\r\n  return [throttled, flush];\r\n}\r\n\r\nexport default throttle;\r\n","import speedometer from \"./speedometer.js\";\r\nimport throttle from \"./throttle.js\";\r\nimport utils from \"../utils.js\";\r\n\r\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\r\n  let bytesNotified = 0;\r\n  const _speedometer = speedometer(50, 250);\r\n\r\n  return throttle(e => {\r\n    const loaded = e.loaded;\r\n    const total = e.lengthComputable ? e.total : undefined;\r\n    const progressBytes = loaded - bytesNotified;\r\n    const rate = _speedometer(progressBytes);\r\n    const inRange = loaded <= total;\r\n\r\n    bytesNotified = loaded;\r\n\r\n    const data = {\r\n      loaded,\r\n      total,\r\n      progress: total ? (loaded / total) : undefined,\r\n      bytes: progressBytes,\r\n      rate: rate ? rate : undefined,\r\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\r\n      event: e,\r\n      lengthComputable: total != null,\r\n      [isDownloadStream ? 'download' : 'upload']: true\r\n    };\r\n\r\n    listener(data);\r\n  }, freq);\r\n}\r\n\r\nexport const progressEventDecorator = (total, throttled) => {\r\n  const lengthComputable = total != null;\r\n\r\n  return [(loaded) => throttled[0]({\r\n    lengthComputable,\r\n    total,\r\n    loaded\r\n  }), throttled[1]];\r\n}\r\n\r\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\r\n","import platform from '../platform/index.js';\r\n\r\nexport default platform.hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {\r\n  url = new URL(url, platform.origin);\r\n\r\n  return (\r\n    origin.protocol === url.protocol &&\r\n    origin.host === url.host &&\r\n    (isMSIE || origin.port === url.port)\r\n  );\r\n})(\r\n  new URL(platform.origin),\r\n  platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)\r\n) : () => true;\r\n","import utils from './../utils.js';\r\nimport platform from '../platform/index.js';\r\n\r\nexport default platform.hasStandardBrowserEnv ?\r\n\r\n  // Standard browser envs support document.cookie\r\n  {\r\n    write(name, value, expires, path, domain, secure) {\r\n      const cookie = [name + '=' + encodeURIComponent(value)];\r\n\r\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\r\n\r\n      utils.isString(path) && cookie.push('path=' + path);\r\n\r\n      utils.isString(domain) && cookie.push('domain=' + domain);\r\n\r\n      secure === true && cookie.push('secure');\r\n\r\n      document.cookie = cookie.join('; ');\r\n    },\r\n\r\n    read(name) {\r\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\r\n      return (match ? decodeURIComponent(match[3]) : null);\r\n    },\r\n\r\n    remove(name) {\r\n      this.write(name, '', Date.now() - 86400000);\r\n    }\r\n  }\r\n\r\n  :\r\n\r\n  // Non-standard browser env (web workers, react-native) lack needed support.\r\n  {\r\n    write() {},\r\n    read() {\r\n      return null;\r\n    },\r\n    remove() {}\r\n  };\r\n\r\n","'use strict';\r\n\r\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\r\nimport combineURLs from '../helpers/combineURLs.js';\r\n\r\n/**\r\n * Creates a new URL by combining the baseURL with the requestedURL,\r\n * only when the requestedURL is not already an absolute URL.\r\n * If the requestURL is absolute, this function returns the requestedURL untouched.\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} requestedURL Absolute or relative URL to combine\r\n *\r\n * @returns {string} The combined full path\r\n */\r\nexport default function buildFullPath(baseURL, requestedURL, allowAbsoluteUrls) {\r\n  let isRelativeUrl = !isAbsoluteURL(requestedURL);\r\n  if (baseURL && isRelativeUrl || allowAbsoluteUrls == false) {\r\n    return combineURLs(baseURL, requestedURL);\r\n  }\r\n  return requestedURL;\r\n}\r\n","'use strict';\r\n\r\n/**\r\n * Determines whether the specified URL is absolute\r\n *\r\n * @param {string} url The URL to test\r\n *\r\n * @returns {boolean} True if the specified URL is absolute, otherwise false\r\n */\r\nexport default function isAbsoluteURL(url) {\r\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\r\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\r\n  // by any combination of letters, digits, plus, period, or hyphen.\r\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\r\n}\r\n","'use strict';\r\n\r\n/**\r\n * Creates a new URL by combining the specified URLs\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} relativeURL The relative URL\r\n *\r\n * @returns {string} The combined URL\r\n */\r\nexport default function combineURLs(baseURL, relativeURL) {\r\n  return relativeURL\r\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\r\n    : baseURL;\r\n}\r\n","'use strict';\r\n\r\nimport utils from '../utils.js';\r\nimport AxiosHeaders from \"./AxiosHeaders.js\";\r\n\r\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\r\n\r\n/**\r\n * Config-specific merge-function which creates a new config-object\r\n * by merging two configuration objects together.\r\n *\r\n * @param {Object} config1\r\n * @param {Object} config2\r\n *\r\n * @returns {Object} New object resulting from merging config2 to config1\r\n */\r\nexport default function mergeConfig(config1, config2) {\r\n  // eslint-disable-next-line no-param-reassign\r\n  config2 = config2 || {};\r\n  const config = {};\r\n\r\n  function getMergedValue(target, source, prop, caseless) {\r\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\r\n      return utils.merge.call({caseless}, target, source);\r\n    } else if (utils.isPlainObject(source)) {\r\n      return utils.merge({}, source);\r\n    } else if (utils.isArray(source)) {\r\n      return source.slice();\r\n    }\r\n    return source;\r\n  }\r\n\r\n  // eslint-disable-next-line consistent-return\r\n  function mergeDeepProperties(a, b, prop , caseless) {\r\n    if (!utils.isUndefined(b)) {\r\n      return getMergedValue(a, b, prop , caseless);\r\n    } else if (!utils.isUndefined(a)) {\r\n      return getMergedValue(undefined, a, prop , caseless);\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line consistent-return\r\n  function valueFromConfig2(a, b) {\r\n    if (!utils.isUndefined(b)) {\r\n      return getMergedValue(undefined, b);\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line consistent-return\r\n  function defaultToConfig2(a, b) {\r\n    if (!utils.isUndefined(b)) {\r\n      return getMergedValue(undefined, b);\r\n    } else if (!utils.isUndefined(a)) {\r\n      return getMergedValue(undefined, a);\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line consistent-return\r\n  function mergeDirectKeys(a, b, prop) {\r\n    if (prop in config2) {\r\n      return getMergedValue(a, b);\r\n    } else if (prop in config1) {\r\n      return getMergedValue(undefined, a);\r\n    }\r\n  }\r\n\r\n  const mergeMap = {\r\n    url: valueFromConfig2,\r\n    method: valueFromConfig2,\r\n    data: valueFromConfig2,\r\n    baseURL: defaultToConfig2,\r\n    transformRequest: defaultToConfig2,\r\n    transformResponse: defaultToConfig2,\r\n    paramsSerializer: defaultToConfig2,\r\n    timeout: defaultToConfig2,\r\n    timeoutMessage: defaultToConfig2,\r\n    withCredentials: defaultToConfig2,\r\n    withXSRFToken: defaultToConfig2,\r\n    adapter: defaultToConfig2,\r\n    responseType: defaultToConfig2,\r\n    xsrfCookieName: defaultToConfig2,\r\n    xsrfHeaderName: defaultToConfig2,\r\n    onUploadProgress: defaultToConfig2,\r\n    onDownloadProgress: defaultToConfig2,\r\n    decompress: defaultToConfig2,\r\n    maxContentLength: defaultToConfig2,\r\n    maxBodyLength: defaultToConfig2,\r\n    beforeRedirect: defaultToConfig2,\r\n    transport: defaultToConfig2,\r\n    httpAgent: defaultToConfig2,\r\n    httpsAgent: defaultToConfig2,\r\n    cancelToken: defaultToConfig2,\r\n    socketPath: defaultToConfig2,\r\n    responseEncoding: defaultToConfig2,\r\n    validateStatus: mergeDirectKeys,\r\n    headers: (a, b , prop) => mergeDeepProperties(headersToObject(a), headersToObject(b),prop, true)\r\n  };\r\n\r\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\r\n    const merge = mergeMap[prop] || mergeDeepProperties;\r\n    const configValue = merge(config1[prop], config2[prop], prop);\r\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\r\n  });\r\n\r\n  return config;\r\n}\r\n","import platform from \"../platform/index.js\";\r\nimport utils from \"../utils.js\";\r\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\r\nimport cookies from \"./cookies.js\";\r\nimport buildFullPath from \"../core/buildFullPath.js\";\r\nimport mergeConfig from \"../core/mergeConfig.js\";\r\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\r\nimport buildURL from \"./buildURL.js\";\r\n\r\nexport default (config) => {\r\n  const newConfig = mergeConfig({}, config);\r\n\r\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\r\n\r\n  newConfig.headers = headers = AxiosHeaders.from(headers);\r\n\r\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);\r\n\r\n  // HTTP basic authentication\r\n  if (auth) {\r\n    headers.set('Authorization', 'Basic ' +\r\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\r\n    );\r\n  }\r\n\r\n  let contentType;\r\n\r\n  if (utils.isFormData(data)) {\r\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\r\n      headers.setContentType(undefined); // Let the browser set it\r\n    } else if ((contentType = headers.getContentType()) !== false) {\r\n      // fix semicolon duplication issue for ReactNative FormData implementation\r\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\r\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\r\n    }\r\n  }\r\n\r\n  // Add xsrf header\r\n  // This is only done if running in a standard browser environment.\r\n  // Specifically not if we're in a web worker, or react-native.\r\n\r\n  if (platform.hasStandardBrowserEnv) {\r\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\r\n\r\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\r\n      // Add xsrf header\r\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\r\n\r\n      if (xsrfValue) {\r\n        headers.set(xsrfHeaderName, xsrfValue);\r\n      }\r\n    }\r\n  }\r\n\r\n  return newConfig;\r\n}\r\n\r\n","import utils from './../utils.js';\r\nimport settle from './../core/settle.js';\r\nimport transitionalDefaults from '../defaults/transitional.js';\r\nimport AxiosError from '../core/AxiosError.js';\r\nimport CanceledError from '../cancel/CanceledError.js';\r\nimport parseProtocol from '../helpers/parseProtocol.js';\r\nimport platform from '../platform/index.js';\r\nimport AxiosHeaders from '../core/AxiosHeaders.js';\r\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\r\nimport resolveConfig from \"../helpers/resolveConfig.js\";\r\n\r\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\r\n\r\nexport default isXHRAdapterSupported && function (config) {\r\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\r\n    const _config = resolveConfig(config);\r\n    let requestData = _config.data;\r\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\r\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\r\n    let onCanceled;\r\n    let uploadThrottled, downloadThrottled;\r\n    let flushUpload, flushDownload;\r\n\r\n    function done() {\r\n      flushUpload && flushUpload(); // flush events\r\n      flushDownload && flushDownload(); // flush events\r\n\r\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\r\n\r\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\r\n    }\r\n\r\n    let request = new XMLHttpRequest();\r\n\r\n    request.open(_config.method.toUpperCase(), _config.url, true);\r\n\r\n    // Set the request timeout in MS\r\n    request.timeout = _config.timeout;\r\n\r\n    function onloadend() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n      // Prepare the response\r\n      const responseHeaders = AxiosHeaders.from(\r\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\r\n      );\r\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\r\n        request.responseText : request.response;\r\n      const response = {\r\n        data: responseData,\r\n        status: request.status,\r\n        statusText: request.statusText,\r\n        headers: responseHeaders,\r\n        config,\r\n        request\r\n      };\r\n\r\n      settle(function _resolve(value) {\r\n        resolve(value);\r\n        done();\r\n      }, function _reject(err) {\r\n        reject(err);\r\n        done();\r\n      }, response);\r\n\r\n      // Clean up request\r\n      request = null;\r\n    }\r\n\r\n    if ('onloadend' in request) {\r\n      // Use onloadend if available\r\n      request.onloadend = onloadend;\r\n    } else {\r\n      // Listen for ready state to emulate onloadend\r\n      request.onreadystatechange = function handleLoad() {\r\n        if (!request || request.readyState !== 4) {\r\n          return;\r\n        }\r\n\r\n        // The request errored out and we didn't get a response, this will be\r\n        // handled by onerror instead\r\n        // With one exception: request that using file: protocol, most browsers\r\n        // will return status as 0 even though it's a successful request\r\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\r\n          return;\r\n        }\r\n        // readystate handler is calling before onerror or ontimeout handlers,\r\n        // so we should call onloadend on the next 'tick'\r\n        setTimeout(onloadend);\r\n      };\r\n    }\r\n\r\n    // Handle browser request cancellation (as opposed to a manual cancellation)\r\n    request.onabort = function handleAbort() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n\r\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle low level network errors\r\n    request.onerror = function handleError() {\r\n      // Real errors are hidden from us by the browser\r\n      // onerror should only fire if it's a network error\r\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle timeout\r\n    request.ontimeout = function handleTimeout() {\r\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\r\n      const transitional = _config.transitional || transitionalDefaults;\r\n      if (_config.timeoutErrorMessage) {\r\n        timeoutErrorMessage = _config.timeoutErrorMessage;\r\n      }\r\n      reject(new AxiosError(\r\n        timeoutErrorMessage,\r\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\r\n        config,\r\n        request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Remove Content-Type if data is undefined\r\n    requestData === undefined && requestHeaders.setContentType(null);\r\n\r\n    // Add headers to the request\r\n    if ('setRequestHeader' in request) {\r\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\r\n        request.setRequestHeader(key, val);\r\n      });\r\n    }\r\n\r\n    // Add withCredentials to request if needed\r\n    if (!utils.isUndefined(_config.withCredentials)) {\r\n      request.withCredentials = !!_config.withCredentials;\r\n    }\r\n\r\n    // Add responseType to request if needed\r\n    if (responseType && responseType !== 'json') {\r\n      request.responseType = _config.responseType;\r\n    }\r\n\r\n    // Handle progress if needed\r\n    if (onDownloadProgress) {\r\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\r\n      request.addEventListener('progress', downloadThrottled);\r\n    }\r\n\r\n    // Not all browsers support upload events\r\n    if (onUploadProgress && request.upload) {\r\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\r\n\r\n      request.upload.addEventListener('progress', uploadThrottled);\r\n\r\n      request.upload.addEventListener('loadend', flushUpload);\r\n    }\r\n\r\n    if (_config.cancelToken || _config.signal) {\r\n      // Handle cancellation\r\n      // eslint-disable-next-line func-names\r\n      onCanceled = cancel => {\r\n        if (!request) {\r\n          return;\r\n        }\r\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\r\n        request.abort();\r\n        request = null;\r\n      };\r\n\r\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\r\n      if (_config.signal) {\r\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\r\n      }\r\n    }\r\n\r\n    const protocol = parseProtocol(_config.url);\r\n\r\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\r\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\r\n      return;\r\n    }\r\n\r\n\r\n    // Send the request\r\n    request.send(requestData || null);\r\n  });\r\n}\r\n","'use strict';\r\n\r\nexport default function parseProtocol(url) {\r\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\r\n  return match && match[1] || '';\r\n}\r\n","import CanceledError from \"../cancel/CanceledError.js\";\r\nimport AxiosError from \"../core/AxiosError.js\";\r\nimport utils from '../utils.js';\r\n\r\nconst composeSignals = (signals, timeout) => {\r\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\r\n\r\n  if (timeout || length) {\r\n    let controller = new AbortController();\r\n\r\n    let aborted;\r\n\r\n    const onabort = function (reason) {\r\n      if (!aborted) {\r\n        aborted = true;\r\n        unsubscribe();\r\n        const err = reason instanceof Error ? reason : this.reason;\r\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\r\n      }\r\n    }\r\n\r\n    let timer = timeout && setTimeout(() => {\r\n      timer = null;\r\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\r\n    }, timeout)\r\n\r\n    const unsubscribe = () => {\r\n      if (signals) {\r\n        timer && clearTimeout(timer);\r\n        timer = null;\r\n        signals.forEach(signal => {\r\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\r\n        });\r\n        signals = null;\r\n      }\r\n    }\r\n\r\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\r\n\r\n    const {signal} = controller;\r\n\r\n    signal.unsubscribe = () => utils.asap(unsubscribe);\r\n\r\n    return signal;\r\n  }\r\n}\r\n\r\nexport default composeSignals;\r\n","\r\nexport const streamChunk = function* (chunk, chunkSize) {\r\n  let len = chunk.byteLength;\r\n\r\n  if (!chunkSize || len < chunkSize) {\r\n    yield chunk;\r\n    return;\r\n  }\r\n\r\n  let pos = 0;\r\n  let end;\r\n\r\n  while (pos < len) {\r\n    end = pos + chunkSize;\r\n    yield chunk.slice(pos, end);\r\n    pos = end;\r\n  }\r\n}\r\n\r\nexport const readBytes = async function* (iterable, chunkSize) {\r\n  for await (const chunk of readStream(iterable)) {\r\n    yield* streamChunk(chunk, chunkSize);\r\n  }\r\n}\r\n\r\nconst readStream = async function* (stream) {\r\n  if (stream[Symbol.asyncIterator]) {\r\n    yield* stream;\r\n    return;\r\n  }\r\n\r\n  const reader = stream.getReader();\r\n  try {\r\n    for (;;) {\r\n      const {done, value} = await reader.read();\r\n      if (done) {\r\n        break;\r\n      }\r\n      yield value;\r\n    }\r\n  } finally {\r\n    await reader.cancel();\r\n  }\r\n}\r\n\r\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\r\n  const iterator = readBytes(stream, chunkSize);\r\n\r\n  let bytes = 0;\r\n  let done;\r\n  let _onFinish = (e) => {\r\n    if (!done) {\r\n      done = true;\r\n      onFinish && onFinish(e);\r\n    }\r\n  }\r\n\r\n  return new ReadableStream({\r\n    async pull(controller) {\r\n      try {\r\n        const {done, value} = await iterator.next();\r\n\r\n        if (done) {\r\n         _onFinish();\r\n          controller.close();\r\n          return;\r\n        }\r\n\r\n        let len = value.byteLength;\r\n        if (onProgress) {\r\n          let loadedBytes = bytes += len;\r\n          onProgress(loadedBytes);\r\n        }\r\n        controller.enqueue(new Uint8Array(value));\r\n      } catch (err) {\r\n        _onFinish(err);\r\n        throw err;\r\n      }\r\n    },\r\n    cancel(reason) {\r\n      _onFinish(reason);\r\n      return iterator.return();\r\n    }\r\n  }, {\r\n    highWaterMark: 2\r\n  })\r\n}\r\n","import platform from \"../platform/index.js\";\r\nimport utils from \"../utils.js\";\r\nimport AxiosError from \"../core/AxiosError.js\";\r\nimport composeSignals from \"../helpers/composeSignals.js\";\r\nimport {trackStream} from \"../helpers/trackStream.js\";\r\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\r\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\r\nimport resolveConfig from \"../helpers/resolveConfig.js\";\r\nimport settle from \"../core/settle.js\";\r\n\r\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\r\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\r\n\r\n// used only inside the fetch adapter\r\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\r\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\r\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\r\n);\r\n\r\nconst test = (fn, ...args) => {\r\n  try {\r\n    return !!fn(...args);\r\n  } catch (e) {\r\n    return false\r\n  }\r\n}\r\n\r\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\r\n  let duplexAccessed = false;\r\n\r\n  const hasContentType = new Request(platform.origin, {\r\n    body: new ReadableStream(),\r\n    method: 'POST',\r\n    get duplex() {\r\n      duplexAccessed = true;\r\n      return 'half';\r\n    },\r\n  }).headers.has('Content-Type');\r\n\r\n  return duplexAccessed && !hasContentType;\r\n});\r\n\r\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\r\n\r\nconst supportsResponseStream = isReadableStreamSupported &&\r\n  test(() => utils.isReadableStream(new Response('').body));\r\n\r\n\r\nconst resolvers = {\r\n  stream: supportsResponseStream && ((res) => res.body)\r\n};\r\n\r\nisFetchSupported && (((res) => {\r\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\r\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\r\n      (_, config) => {\r\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\r\n      })\r\n  });\r\n})(new Response));\r\n\r\nconst getBodyLength = async (body) => {\r\n  if (body == null) {\r\n    return 0;\r\n  }\r\n\r\n  if(utils.isBlob(body)) {\r\n    return body.size;\r\n  }\r\n\r\n  if(utils.isSpecCompliantForm(body)) {\r\n    const _request = new Request(platform.origin, {\r\n      method: 'POST',\r\n      body,\r\n    });\r\n    return (await _request.arrayBuffer()).byteLength;\r\n  }\r\n\r\n  if(utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\r\n    return body.byteLength;\r\n  }\r\n\r\n  if(utils.isURLSearchParams(body)) {\r\n    body = body + '';\r\n  }\r\n\r\n  if(utils.isString(body)) {\r\n    return (await encodeText(body)).byteLength;\r\n  }\r\n}\r\n\r\nconst resolveBodyLength = async (headers, body) => {\r\n  const length = utils.toFiniteNumber(headers.getContentLength());\r\n\r\n  return length == null ? getBodyLength(body) : length;\r\n}\r\n\r\nexport default isFetchSupported && (async (config) => {\r\n  let {\r\n    url,\r\n    method,\r\n    data,\r\n    signal,\r\n    cancelToken,\r\n    timeout,\r\n    onDownloadProgress,\r\n    onUploadProgress,\r\n    responseType,\r\n    headers,\r\n    withCredentials = 'same-origin',\r\n    fetchOptions\r\n  } = resolveConfig(config);\r\n\r\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\r\n\r\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\r\n\r\n  let request;\r\n\r\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\r\n      composedSignal.unsubscribe();\r\n  });\r\n\r\n  let requestContentLength;\r\n\r\n  try {\r\n    if (\r\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\r\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\r\n    ) {\r\n      let _request = new Request(url, {\r\n        method: 'POST',\r\n        body: data,\r\n        duplex: \"half\"\r\n      });\r\n\r\n      let contentTypeHeader;\r\n\r\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\r\n        headers.setContentType(contentTypeHeader)\r\n      }\r\n\r\n      if (_request.body) {\r\n        const [onProgress, flush] = progressEventDecorator(\r\n          requestContentLength,\r\n          progressEventReducer(asyncDecorator(onUploadProgress))\r\n        );\r\n\r\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\r\n      }\r\n    }\r\n\r\n    if (!utils.isString(withCredentials)) {\r\n      withCredentials = withCredentials ? 'include' : 'omit';\r\n    }\r\n\r\n    // Cloudflare Workers throws when credentials are defined\r\n    // see https://github.com/cloudflare/workerd/issues/902\r\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\r\n    request = new Request(url, {\r\n      ...fetchOptions,\r\n      signal: composedSignal,\r\n      method: method.toUpperCase(),\r\n      headers: headers.normalize().toJSON(),\r\n      body: data,\r\n      duplex: \"half\",\r\n      credentials: isCredentialsSupported ? withCredentials : undefined\r\n    });\r\n\r\n    let response = await fetch(request);\r\n\r\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\r\n\r\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\r\n      const options = {};\r\n\r\n      ['status', 'statusText', 'headers'].forEach(prop => {\r\n        options[prop] = response[prop];\r\n      });\r\n\r\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\r\n\r\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\r\n        responseContentLength,\r\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\r\n      ) || [];\r\n\r\n      response = new Response(\r\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\r\n          flush && flush();\r\n          unsubscribe && unsubscribe();\r\n        }),\r\n        options\r\n      );\r\n    }\r\n\r\n    responseType = responseType || 'text';\r\n\r\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\r\n\r\n    !isStreamResponse && unsubscribe && unsubscribe();\r\n\r\n    return await new Promise((resolve, reject) => {\r\n      settle(resolve, reject, {\r\n        data: responseData,\r\n        headers: AxiosHeaders.from(response.headers),\r\n        status: response.status,\r\n        statusText: response.statusText,\r\n        config,\r\n        request\r\n      })\r\n    })\r\n  } catch (err) {\r\n    unsubscribe && unsubscribe();\r\n\r\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\r\n      throw Object.assign(\r\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\r\n        {\r\n          cause: err.cause || err\r\n        }\r\n      )\r\n    }\r\n\r\n    throw AxiosError.from(err, err && err.code, config, request);\r\n  }\r\n});\r\n\r\n\r\n","import utils from '../utils.js';\r\nimport httpAdapter from './http.js';\r\nimport xhrAdapter from './xhr.js';\r\nimport fetchAdapter from './fetch.js';\r\nimport AxiosError from \"../core/AxiosError.js\";\r\n\r\nconst knownAdapters = {\r\n  http: httpAdapter,\r\n  xhr: xhrAdapter,\r\n  fetch: fetchAdapter\r\n}\r\n\r\nutils.forEach(knownAdapters, (fn, value) => {\r\n  if (fn) {\r\n    try {\r\n      Object.defineProperty(fn, 'name', {value});\r\n    } catch (e) {\r\n      // eslint-disable-next-line no-empty\r\n    }\r\n    Object.defineProperty(fn, 'adapterName', {value});\r\n  }\r\n});\r\n\r\nconst renderReason = (reason) => `- ${reason}`;\r\n\r\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\r\n\r\nexport default {\r\n  getAdapter: (adapters) => {\r\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\r\n\r\n    const {length} = adapters;\r\n    let nameOrAdapter;\r\n    let adapter;\r\n\r\n    const rejectedReasons = {};\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      nameOrAdapter = adapters[i];\r\n      let id;\r\n\r\n      adapter = nameOrAdapter;\r\n\r\n      if (!isResolvedHandle(nameOrAdapter)) {\r\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\r\n\r\n        if (adapter === undefined) {\r\n          throw new AxiosError(`Unknown adapter '${id}'`);\r\n        }\r\n      }\r\n\r\n      if (adapter) {\r\n        break;\r\n      }\r\n\r\n      rejectedReasons[id || '#' + i] = adapter;\r\n    }\r\n\r\n    if (!adapter) {\r\n\r\n      const reasons = Object.entries(rejectedReasons)\r\n        .map(([id, state]) => `adapter ${id} ` +\r\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\r\n        );\r\n\r\n      let s = length ?\r\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\r\n        'as no adapter specified';\r\n\r\n      throw new AxiosError(\r\n        `There is no suitable adapter to dispatch the request ` + s,\r\n        'ERR_NOT_SUPPORT'\r\n      );\r\n    }\r\n\r\n    return adapter;\r\n  },\r\n  adapters: knownAdapters\r\n}\r\n","// eslint-disable-next-line strict\r\nexport default null;\r\n","'use strict';\r\n\r\nimport transformData from './transformData.js';\r\nimport isCancel from '../cancel/isCancel.js';\r\nimport defaults from '../defaults/index.js';\r\nimport CanceledError from '../cancel/CanceledError.js';\r\nimport AxiosHeaders from '../core/AxiosHeaders.js';\r\nimport adapters from \"../adapters/adapters.js\";\r\n\r\n/**\r\n * Throws a `CanceledError` if cancellation has been requested.\r\n *\r\n * @param {Object} config The config that is to be used for the request\r\n *\r\n * @returns {void}\r\n */\r\nfunction throwIfCancellationRequested(config) {\r\n  if (config.cancelToken) {\r\n    config.cancelToken.throwIfRequested();\r\n  }\r\n\r\n  if (config.signal && config.signal.aborted) {\r\n    throw new CanceledError(null, config);\r\n  }\r\n}\r\n\r\n/**\r\n * Dispatch a request to the server using the configured adapter.\r\n *\r\n * @param {object} config The config that is to be used for the request\r\n *\r\n * @returns {Promise} The Promise to be fulfilled\r\n */\r\nexport default function dispatchRequest(config) {\r\n  throwIfCancellationRequested(config);\r\n\r\n  config.headers = AxiosHeaders.from(config.headers);\r\n\r\n  // Transform request data\r\n  config.data = transformData.call(\r\n    config,\r\n    config.transformRequest\r\n  );\r\n\r\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\r\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\r\n  }\r\n\r\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\r\n\r\n  return adapter(config).then(function onAdapterResolution(response) {\r\n    throwIfCancellationRequested(config);\r\n\r\n    // Transform response data\r\n    response.data = transformData.call(\r\n      config,\r\n      config.transformResponse,\r\n      response\r\n    );\r\n\r\n    response.headers = AxiosHeaders.from(response.headers);\r\n\r\n    return response;\r\n  }, function onAdapterRejection(reason) {\r\n    if (!isCancel(reason)) {\r\n      throwIfCancellationRequested(config);\r\n\r\n      // Transform response data\r\n      if (reason && reason.response) {\r\n        reason.response.data = transformData.call(\r\n          config,\r\n          config.transformResponse,\r\n          reason.response\r\n        );\r\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\r\n      }\r\n    }\r\n\r\n    return Promise.reject(reason);\r\n  });\r\n}\r\n","export const VERSION = \"1.8.1\";","'use strict';\r\n\r\nimport {VERSION} from '../env/data.js';\r\nimport AxiosError from '../core/AxiosError.js';\r\n\r\nconst validators = {};\r\n\r\n// eslint-disable-next-line func-names\r\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\r\n  validators[type] = function validator(thing) {\r\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\r\n  };\r\n});\r\n\r\nconst deprecatedWarnings = {};\r\n\r\n/**\r\n * Transitional option validator\r\n *\r\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\r\n * @param {string?} version - deprecated version / removed since version\r\n * @param {string?} message - some message with additional info\r\n *\r\n * @returns {function}\r\n */\r\nvalidators.transitional = function transitional(validator, version, message) {\r\n  function formatMessage(opt, desc) {\r\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\r\n  }\r\n\r\n  // eslint-disable-next-line func-names\r\n  return (value, opt, opts) => {\r\n    if (validator === false) {\r\n      throw new AxiosError(\r\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\r\n        AxiosError.ERR_DEPRECATED\r\n      );\r\n    }\r\n\r\n    if (version && !deprecatedWarnings[opt]) {\r\n      deprecatedWarnings[opt] = true;\r\n      // eslint-disable-next-line no-console\r\n      console.warn(\r\n        formatMessage(\r\n          opt,\r\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\r\n        )\r\n      );\r\n    }\r\n\r\n    return validator ? validator(value, opt, opts) : true;\r\n  };\r\n};\r\n\r\nvalidators.spelling = function spelling(correctSpelling) {\r\n  return (value, opt) => {\r\n    // eslint-disable-next-line no-console\r\n    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\r\n    return true;\r\n  }\r\n};\r\n\r\n/**\r\n * Assert object's properties type\r\n *\r\n * @param {object} options\r\n * @param {object} schema\r\n * @param {boolean?} allowUnknown\r\n *\r\n * @returns {object}\r\n */\r\n\r\nfunction assertOptions(options, schema, allowUnknown) {\r\n  if (typeof options !== 'object') {\r\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\r\n  }\r\n  const keys = Object.keys(options);\r\n  let i = keys.length;\r\n  while (i-- > 0) {\r\n    const opt = keys[i];\r\n    const validator = schema[opt];\r\n    if (validator) {\r\n      const value = options[opt];\r\n      const result = value === undefined || validator(value, opt, options);\r\n      if (result !== true) {\r\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\r\n      }\r\n      continue;\r\n    }\r\n    if (allowUnknown !== true) {\r\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\r\n    }\r\n  }\r\n}\r\n\r\nexport default {\r\n  assertOptions,\r\n  validators\r\n};\r\n","'use strict';\r\n\r\nimport utils from './../utils.js';\r\nimport buildURL from '../helpers/buildURL.js';\r\nimport InterceptorManager from './InterceptorManager.js';\r\nimport dispatchRequest from './dispatchRequest.js';\r\nimport mergeConfig from './mergeConfig.js';\r\nimport buildFullPath from './buildFullPath.js';\r\nimport validator from '../helpers/validator.js';\r\nimport AxiosHeaders from './AxiosHeaders.js';\r\n\r\nconst validators = validator.validators;\r\n\r\n/**\r\n * Create a new instance of Axios\r\n *\r\n * @param {Object} instanceConfig The default config for the instance\r\n *\r\n * @return {Axios} A new instance of Axios\r\n */\r\nclass Axios {\r\n  constructor(instanceConfig) {\r\n    this.defaults = instanceConfig;\r\n    this.interceptors = {\r\n      request: new InterceptorManager(),\r\n      response: new InterceptorManager()\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Dispatch a request\r\n   *\r\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\r\n   * @param {?Object} config\r\n   *\r\n   * @returns {Promise} The Promise to be fulfilled\r\n   */\r\n  async request(configOrUrl, config) {\r\n    try {\r\n      return await this._request(configOrUrl, config);\r\n    } catch (err) {\r\n      if (err instanceof Error) {\r\n        let dummy = {};\r\n\r\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());\r\n\r\n        // slice off the Error: ... line\r\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\r\n        try {\r\n          if (!err.stack) {\r\n            err.stack = stack;\r\n            // match without the 2 top stack lines\r\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\r\n            err.stack += '\\n' + stack\r\n          }\r\n        } catch (e) {\r\n          // ignore the case where \"stack\" is an un-writable property\r\n        }\r\n      }\r\n\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  _request(configOrUrl, config) {\r\n    /*eslint no-param-reassign:0*/\r\n    // Allow for axios('example/url'[, config]) a la fetch API\r\n    if (typeof configOrUrl === 'string') {\r\n      config = config || {};\r\n      config.url = configOrUrl;\r\n    } else {\r\n      config = configOrUrl || {};\r\n    }\r\n\r\n    config = mergeConfig(this.defaults, config);\r\n\r\n    const {transitional, paramsSerializer, headers} = config;\r\n\r\n    if (transitional !== undefined) {\r\n      validator.assertOptions(transitional, {\r\n        silentJSONParsing: validators.transitional(validators.boolean),\r\n        forcedJSONParsing: validators.transitional(validators.boolean),\r\n        clarifyTimeoutError: validators.transitional(validators.boolean)\r\n      }, false);\r\n    }\r\n\r\n    if (paramsSerializer != null) {\r\n      if (utils.isFunction(paramsSerializer)) {\r\n        config.paramsSerializer = {\r\n          serialize: paramsSerializer\r\n        }\r\n      } else {\r\n        validator.assertOptions(paramsSerializer, {\r\n          encode: validators.function,\r\n          serialize: validators.function\r\n        }, true);\r\n      }\r\n    }\r\n\r\n    // Set config.allowAbsoluteUrls\r\n    if (config.allowAbsoluteUrls !== undefined) {\r\n      // do nothing\r\n    } else if (this.defaults.allowAbsoluteUrls !== undefined) {\r\n      config.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;\r\n    } else {\r\n      config.allowAbsoluteUrls = true;\r\n    }\r\n\r\n    validator.assertOptions(config, {\r\n      baseUrl: validators.spelling('baseURL'),\r\n      withXsrfToken: validators.spelling('withXSRFToken')\r\n    }, true);\r\n\r\n    // Set config.method\r\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\r\n\r\n    // Flatten headers\r\n    let contextHeaders = headers && utils.merge(\r\n      headers.common,\r\n      headers[config.method]\r\n    );\r\n\r\n    headers && utils.forEach(\r\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\r\n      (method) => {\r\n        delete headers[method];\r\n      }\r\n    );\r\n\r\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\r\n\r\n    // filter out skipped interceptors\r\n    const requestInterceptorChain = [];\r\n    let synchronousRequestInterceptors = true;\r\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\r\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\r\n        return;\r\n      }\r\n\r\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\r\n\r\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\r\n    });\r\n\r\n    const responseInterceptorChain = [];\r\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\r\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\r\n    });\r\n\r\n    let promise;\r\n    let i = 0;\r\n    let len;\r\n\r\n    if (!synchronousRequestInterceptors) {\r\n      const chain = [dispatchRequest.bind(this), undefined];\r\n      chain.unshift.apply(chain, requestInterceptorChain);\r\n      chain.push.apply(chain, responseInterceptorChain);\r\n      len = chain.length;\r\n\r\n      promise = Promise.resolve(config);\r\n\r\n      while (i < len) {\r\n        promise = promise.then(chain[i++], chain[i++]);\r\n      }\r\n\r\n      return promise;\r\n    }\r\n\r\n    len = requestInterceptorChain.length;\r\n\r\n    let newConfig = config;\r\n\r\n    i = 0;\r\n\r\n    while (i < len) {\r\n      const onFulfilled = requestInterceptorChain[i++];\r\n      const onRejected = requestInterceptorChain[i++];\r\n      try {\r\n        newConfig = onFulfilled(newConfig);\r\n      } catch (error) {\r\n        onRejected.call(this, error);\r\n        break;\r\n      }\r\n    }\r\n\r\n    try {\r\n      promise = dispatchRequest.call(this, newConfig);\r\n    } catch (error) {\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    i = 0;\r\n    len = responseInterceptorChain.length;\r\n\r\n    while (i < len) {\r\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  getUri(config) {\r\n    config = mergeConfig(this.defaults, config);\r\n    const fullPath = buildFullPath(config.baseURL, config.url, config.allowAbsoluteUrls);\r\n    return buildURL(fullPath, config.params, config.paramsSerializer);\r\n  }\r\n}\r\n\r\n// Provide aliases for supported request methods\r\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, config) {\r\n    return this.request(mergeConfig(config || {}, {\r\n      method,\r\n      url,\r\n      data: (config || {}).data\r\n    }));\r\n  };\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  /*eslint func-names:0*/\r\n\r\n  function generateHTTPMethod(isForm) {\r\n    return function httpMethod(url, data, config) {\r\n      return this.request(mergeConfig(config || {}, {\r\n        method,\r\n        headers: isForm ? {\r\n          'Content-Type': 'multipart/form-data'\r\n        } : {},\r\n        url,\r\n        data\r\n      }));\r\n    };\r\n  }\r\n\r\n  Axios.prototype[method] = generateHTTPMethod();\r\n\r\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\r\n});\r\n\r\nexport default Axios;\r\n","'use strict';\r\n\r\nimport CanceledError from './CanceledError.js';\r\n\r\n/**\r\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\r\n *\r\n * @param {Function} executor The executor function.\r\n *\r\n * @returns {CancelToken}\r\n */\r\nclass CancelToken {\r\n  constructor(executor) {\r\n    if (typeof executor !== 'function') {\r\n      throw new TypeError('executor must be a function.');\r\n    }\r\n\r\n    let resolvePromise;\r\n\r\n    this.promise = new Promise(function promiseExecutor(resolve) {\r\n      resolvePromise = resolve;\r\n    });\r\n\r\n    const token = this;\r\n\r\n    // eslint-disable-next-line func-names\r\n    this.promise.then(cancel => {\r\n      if (!token._listeners) return;\r\n\r\n      let i = token._listeners.length;\r\n\r\n      while (i-- > 0) {\r\n        token._listeners[i](cancel);\r\n      }\r\n      token._listeners = null;\r\n    });\r\n\r\n    // eslint-disable-next-line func-names\r\n    this.promise.then = onfulfilled => {\r\n      let _resolve;\r\n      // eslint-disable-next-line func-names\r\n      const promise = new Promise(resolve => {\r\n        token.subscribe(resolve);\r\n        _resolve = resolve;\r\n      }).then(onfulfilled);\r\n\r\n      promise.cancel = function reject() {\r\n        token.unsubscribe(_resolve);\r\n      };\r\n\r\n      return promise;\r\n    };\r\n\r\n    executor(function cancel(message, config, request) {\r\n      if (token.reason) {\r\n        // Cancellation has already been requested\r\n        return;\r\n      }\r\n\r\n      token.reason = new CanceledError(message, config, request);\r\n      resolvePromise(token.reason);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Throws a `CanceledError` if cancellation has been requested.\r\n   */\r\n  throwIfRequested() {\r\n    if (this.reason) {\r\n      throw this.reason;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Subscribe to the cancel signal\r\n   */\r\n\r\n  subscribe(listener) {\r\n    if (this.reason) {\r\n      listener(this.reason);\r\n      return;\r\n    }\r\n\r\n    if (this._listeners) {\r\n      this._listeners.push(listener);\r\n    } else {\r\n      this._listeners = [listener];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe from the cancel signal\r\n   */\r\n\r\n  unsubscribe(listener) {\r\n    if (!this._listeners) {\r\n      return;\r\n    }\r\n    const index = this._listeners.indexOf(listener);\r\n    if (index !== -1) {\r\n      this._listeners.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  toAbortSignal() {\r\n    const controller = new AbortController();\r\n\r\n    const abort = (err) => {\r\n      controller.abort(err);\r\n    };\r\n\r\n    this.subscribe(abort);\r\n\r\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\r\n\r\n    return controller.signal;\r\n  }\r\n\r\n  /**\r\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\r\n   * cancels the `CancelToken`.\r\n   */\r\n  static source() {\r\n    let cancel;\r\n    const token = new CancelToken(function executor(c) {\r\n      cancel = c;\r\n    });\r\n    return {\r\n      token,\r\n      cancel\r\n    };\r\n  }\r\n}\r\n\r\nexport default CancelToken;\r\n","const HttpStatusCode = {\r\n  Continue: 100,\r\n  SwitchingProtocols: 101,\r\n  Processing: 102,\r\n  EarlyHints: 103,\r\n  Ok: 200,\r\n  Created: 201,\r\n  Accepted: 202,\r\n  NonAuthoritativeInformation: 203,\r\n  NoContent: 204,\r\n  ResetContent: 205,\r\n  PartialContent: 206,\r\n  MultiStatus: 207,\r\n  AlreadyReported: 208,\r\n  ImUsed: 226,\r\n  MultipleChoices: 300,\r\n  MovedPermanently: 301,\r\n  Found: 302,\r\n  SeeOther: 303,\r\n  NotModified: 304,\r\n  UseProxy: 305,\r\n  Unused: 306,\r\n  TemporaryRedirect: 307,\r\n  PermanentRedirect: 308,\r\n  BadRequest: 400,\r\n  Unauthorized: 401,\r\n  PaymentRequired: 402,\r\n  Forbidden: 403,\r\n  NotFound: 404,\r\n  MethodNotAllowed: 405,\r\n  NotAcceptable: 406,\r\n  ProxyAuthenticationRequired: 407,\r\n  RequestTimeout: 408,\r\n  Conflict: 409,\r\n  Gone: 410,\r\n  LengthRequired: 411,\r\n  PreconditionFailed: 412,\r\n  PayloadTooLarge: 413,\r\n  UriTooLong: 414,\r\n  UnsupportedMediaType: 415,\r\n  RangeNotSatisfiable: 416,\r\n  ExpectationFailed: 417,\r\n  ImATeapot: 418,\r\n  MisdirectedRequest: 421,\r\n  UnprocessableEntity: 422,\r\n  Locked: 423,\r\n  FailedDependency: 424,\r\n  TooEarly: 425,\r\n  UpgradeRequired: 426,\r\n  PreconditionRequired: 428,\r\n  TooManyRequests: 429,\r\n  RequestHeaderFieldsTooLarge: 431,\r\n  UnavailableForLegalReasons: 451,\r\n  InternalServerError: 500,\r\n  NotImplemented: 501,\r\n  BadGateway: 502,\r\n  ServiceUnavailable: 503,\r\n  GatewayTimeout: 504,\r\n  HttpVersionNotSupported: 505,\r\n  VariantAlsoNegotiates: 506,\r\n  InsufficientStorage: 507,\r\n  LoopDetected: 508,\r\n  NotExtended: 510,\r\n  NetworkAuthenticationRequired: 511,\r\n};\r\n\r\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\r\n  HttpStatusCode[value] = key;\r\n});\r\n\r\nexport default HttpStatusCode;\r\n","'use strict';\r\n\r\nimport utils from './utils.js';\r\nimport bind from './helpers/bind.js';\r\nimport Axios from './core/Axios.js';\r\nimport mergeConfig from './core/mergeConfig.js';\r\nimport defaults from './defaults/index.js';\r\nimport formDataToJSON from './helpers/formDataToJSON.js';\r\nimport CanceledError from './cancel/CanceledError.js';\r\nimport CancelToken from './cancel/CancelToken.js';\r\nimport isCancel from './cancel/isCancel.js';\r\nimport {VERSION} from './env/data.js';\r\nimport toFormData from './helpers/toFormData.js';\r\nimport AxiosError from './core/AxiosError.js';\r\nimport spread from './helpers/spread.js';\r\nimport isAxiosError from './helpers/isAxiosError.js';\r\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\r\nimport adapters from './adapters/adapters.js';\r\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\r\n\r\n/**\r\n * Create an instance of Axios\r\n *\r\n * @param {Object} defaultConfig The default config for the instance\r\n *\r\n * @returns {Axios} A new instance of Axios\r\n */\r\nfunction createInstance(defaultConfig) {\r\n  const context = new Axios(defaultConfig);\r\n  const instance = bind(Axios.prototype.request, context);\r\n\r\n  // Copy axios.prototype to instance\r\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\r\n\r\n  // Copy context to instance\r\n  utils.extend(instance, context, null, {allOwnKeys: true});\r\n\r\n  // Factory for creating new instances\r\n  instance.create = function create(instanceConfig) {\r\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\r\n  };\r\n\r\n  return instance;\r\n}\r\n\r\n// Create the default instance to be exported\r\nconst axios = createInstance(defaults);\r\n\r\n// Expose Axios class to allow class inheritance\r\naxios.Axios = Axios;\r\n\r\n// Expose Cancel & CancelToken\r\naxios.CanceledError = CanceledError;\r\naxios.CancelToken = CancelToken;\r\naxios.isCancel = isCancel;\r\naxios.VERSION = VERSION;\r\naxios.toFormData = toFormData;\r\n\r\n// Expose AxiosError class\r\naxios.AxiosError = AxiosError;\r\n\r\n// alias for CanceledError for backward compatibility\r\naxios.Cancel = axios.CanceledError;\r\n\r\n// Expose all/spread\r\naxios.all = function all(promises) {\r\n  return Promise.all(promises);\r\n};\r\n\r\naxios.spread = spread;\r\n\r\n// Expose isAxiosError\r\naxios.isAxiosError = isAxiosError;\r\n\r\n// Expose mergeConfig\r\naxios.mergeConfig = mergeConfig;\r\n\r\naxios.AxiosHeaders = AxiosHeaders;\r\n\r\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\r\n\r\naxios.getAdapter = adapters.getAdapter;\r\n\r\naxios.HttpStatusCode = HttpStatusCode;\r\n\r\naxios.default = axios;\r\n\r\n// this module should only have a default export\r\nexport default axios\r\n","'use strict';\r\n\r\n/**\r\n * Syntactic sugar for invoking a function and expanding an array for arguments.\r\n *\r\n * Common use case would be to use `Function.prototype.apply`.\r\n *\r\n *  ```js\r\n *  function f(x, y, z) {}\r\n *  var args = [1, 2, 3];\r\n *  f.apply(null, args);\r\n *  ```\r\n *\r\n * With `spread` this example can be re-written.\r\n *\r\n *  ```js\r\n *  spread(function(x, y, z) {})([1, 2, 3]);\r\n *  ```\r\n *\r\n * @param {Function} callback\r\n *\r\n * @returns {Function}\r\n */\r\nexport default function spread(callback) {\r\n  return function wrap(arr) {\r\n    return callback.apply(null, arr);\r\n  };\r\n}\r\n","'use strict';\r\n\r\nimport utils from './../utils.js';\r\n\r\n/**\r\n * Determines whether the payload is an error thrown by Axios\r\n *\r\n * @param {*} payload The value to test\r\n *\r\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\r\n */\r\nexport default function isAxiosError(payload) {\r\n  return utils.isObject(payload) && (payload.isAxiosError === true);\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nexport const Constants = {\r\n    LIBRARY_NAME: \"MSAL.JS\",\r\n    SKU: \"msal.js.common\",\r\n    // Prefix for all library cache entries\r\n    CACHE_PREFIX: \"msal\",\r\n    // default authority\r\n    DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common/\",\r\n    DEFAULT_AUTHORITY_HOST: \"login.microsoftonline.com\",\r\n    DEFAULT_COMMON_TENANT: \"common\",\r\n    // ADFS String\r\n    ADFS: \"adfs\",\r\n    DSTS: \"dstsv2\",\r\n    // Default AAD Instance Discovery Endpoint\r\n    AAD_INSTANCE_DISCOVERY_ENDPT:\r\n        \"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=\",\r\n    // CIAM URL\r\n    CIAM_AUTH_URL: \".ciamlogin.com\",\r\n    AAD_TENANT_DOMAIN_SUFFIX: \".onmicrosoft.com\",\r\n    // Resource delimiter - used for certain cache entries\r\n    RESOURCE_DELIM: \"|\",\r\n    // Placeholder for non-existent account ids/objects\r\n    NO_ACCOUNT: \"NO_ACCOUNT\",\r\n    // Claims\r\n    CLAIMS: \"claims\",\r\n    // Consumer UTID\r\n    CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\r\n    // Default scopes\r\n    OPENID_SCOPE: \"openid\",\r\n    PROFILE_SCOPE: \"profile\",\r\n    OFFLINE_ACCESS_SCOPE: \"offline_access\",\r\n    EMAIL_SCOPE: \"email\",\r\n    // Default response type for authorization code flow\r\n    CODE_RESPONSE_TYPE: \"code\",\r\n    CODE_GRANT_TYPE: \"authorization_code\",\r\n    RT_GRANT_TYPE: \"refresh_token\",\r\n    FRAGMENT_RESPONSE_MODE: \"fragment\",\r\n    S256_CODE_CHALLENGE_METHOD: \"S256\",\r\n    URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded;charset=utf-8\",\r\n    AUTHORIZATION_PENDING: \"authorization_pending\",\r\n    NOT_DEFINED: \"not_defined\",\r\n    EMPTY_STRING: \"\",\r\n    NOT_APPLICABLE: \"N/A\",\r\n    NOT_AVAILABLE: \"Not Available\",\r\n    FORWARD_SLASH: \"/\",\r\n    IMDS_ENDPOINT: \"http://169.254.169.254/metadata/instance/compute/location\",\r\n    IMDS_VERSION: \"2020-06-01\",\r\n    IMDS_TIMEOUT: 2000,\r\n    AZURE_REGION_AUTO_DISCOVER_FLAG: \"TryAutoDetect\",\r\n    REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX: \"login.microsoft.com\",\r\n    KNOWN_PUBLIC_CLOUDS: [\r\n        \"login.microsoftonline.com\",\r\n        \"login.windows.net\",\r\n        \"login.microsoft.com\",\r\n        \"sts.windows.net\",\r\n    ],\r\n    TOKEN_RESPONSE_TYPE: \"token\",\r\n    ID_TOKEN_RESPONSE_TYPE: \"id_token\",\r\n    SHR_NONCE_VALIDITY: 240,\r\n    INVALID_INSTANCE: \"invalid_instance\",\r\n};\r\n\r\nexport const HttpStatus = {\r\n    SUCCESS: 200,\r\n    SUCCESS_RANGE_START: 200,\r\n    SUCCESS_RANGE_END: 299,\r\n    REDIRECT: 302,\r\n    CLIENT_ERROR: 400,\r\n    CLIENT_ERROR_RANGE_START: 400,\r\n    BAD_REQUEST: 400,\r\n    UNAUTHORIZED: 401,\r\n    NOT_FOUND: 404,\r\n    REQUEST_TIMEOUT: 408,\r\n    TOO_MANY_REQUESTS: 429,\r\n    CLIENT_ERROR_RANGE_END: 499,\r\n    SERVER_ERROR: 500,\r\n    SERVER_ERROR_RANGE_START: 500,\r\n    SERVICE_UNAVAILABLE: 503,\r\n    GATEWAY_TIMEOUT: 504,\r\n    SERVER_ERROR_RANGE_END: 599,\r\n    MULTI_SIDED_ERROR: 600,\r\n} as const;\r\nexport type HttpStatus = (typeof HttpStatus)[keyof typeof HttpStatus];\r\n\r\nexport const OIDC_DEFAULT_SCOPES = [\r\n    Constants.OPENID_SCOPE,\r\n    Constants.PROFILE_SCOPE,\r\n    Constants.OFFLINE_ACCESS_SCOPE,\r\n];\r\n\r\nexport const OIDC_SCOPES = [...OIDC_DEFAULT_SCOPES, Constants.EMAIL_SCOPE];\r\n\r\n/**\r\n * Request header names\r\n */\r\nexport const HeaderNames = {\r\n    CONTENT_TYPE: \"Content-Type\",\r\n    CONTENT_LENGTH: \"Content-Length\",\r\n    RETRY_AFTER: \"Retry-After\",\r\n    CCS_HEADER: \"X-AnchorMailbox\",\r\n    WWWAuthenticate: \"WWW-Authenticate\",\r\n    AuthenticationInfo: \"Authentication-Info\",\r\n    X_MS_REQUEST_ID: \"x-ms-request-id\",\r\n    X_MS_HTTP_VERSION: \"x-ms-httpver\",\r\n} as const;\r\nexport type HeaderNames = (typeof HeaderNames)[keyof typeof HeaderNames];\r\n\r\n/**\r\n * Persistent cache keys MSAL which stay while user is logged in.\r\n */\r\nexport const PersistentCacheKeys = {\r\n    ACTIVE_ACCOUNT_FILTERS: \"active-account-filters\", // new cache entry for active_account for a more robust version for browser\r\n} as const;\r\nexport type PersistentCacheKeys =\r\n    (typeof PersistentCacheKeys)[keyof typeof PersistentCacheKeys];\r\n\r\n/**\r\n * String constants related to AAD Authority\r\n */\r\nexport const AADAuthorityConstants = {\r\n    COMMON: \"common\",\r\n    ORGANIZATIONS: \"organizations\",\r\n    CONSUMERS: \"consumers\",\r\n} as const;\r\nexport type AADAuthorityConstants =\r\n    (typeof AADAuthorityConstants)[keyof typeof AADAuthorityConstants];\r\n\r\n/**\r\n * Claims request keys\r\n */\r\nexport const ClaimsRequestKeys = {\r\n    ACCESS_TOKEN: \"access_token\",\r\n    XMS_CC: \"xms_cc\",\r\n} as const;\r\nexport type ClaimsRequestKeys =\r\n    (typeof ClaimsRequestKeys)[keyof typeof ClaimsRequestKeys];\r\n\r\n/**\r\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\r\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\r\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\r\n */\r\nexport const PromptValue = {\r\n    LOGIN: \"login\",\r\n    SELECT_ACCOUNT: \"select_account\",\r\n    CONSENT: \"consent\",\r\n    NONE: \"none\",\r\n    CREATE: \"create\",\r\n    NO_SESSION: \"no_session\",\r\n};\r\n\r\n/**\r\n * allowed values for codeVerifier\r\n */\r\nexport const CodeChallengeMethodValues = {\r\n    PLAIN: \"plain\",\r\n    S256: \"S256\",\r\n};\r\n\r\n/**\r\n * allowed values for server response type\r\n */\r\nexport const ServerResponseType = {\r\n    QUERY: \"query\",\r\n    FRAGMENT: \"fragment\",\r\n} as const;\r\nexport type ServerResponseType =\r\n    (typeof ServerResponseType)[keyof typeof ServerResponseType];\r\n\r\n/**\r\n * allowed values for response_mode\r\n */\r\nexport const ResponseMode = {\r\n    ...ServerResponseType,\r\n    FORM_POST: \"form_post\",\r\n} as const;\r\nexport type ResponseMode = (typeof ResponseMode)[keyof typeof ResponseMode];\r\n\r\n/**\r\n * allowed grant_type\r\n */\r\nexport const GrantType = {\r\n    IMPLICIT_GRANT: \"implicit\",\r\n    AUTHORIZATION_CODE_GRANT: \"authorization_code\",\r\n    CLIENT_CREDENTIALS_GRANT: \"client_credentials\",\r\n    RESOURCE_OWNER_PASSWORD_GRANT: \"password\",\r\n    REFRESH_TOKEN_GRANT: \"refresh_token\",\r\n    DEVICE_CODE_GRANT: \"device_code\",\r\n    JWT_BEARER: \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\r\n} as const;\r\nexport type GrantType = (typeof GrantType)[keyof typeof GrantType];\r\n\r\n/**\r\n * Account types in Cache\r\n */\r\nexport const CacheAccountType = {\r\n    MSSTS_ACCOUNT_TYPE: \"MSSTS\",\r\n    ADFS_ACCOUNT_TYPE: \"ADFS\",\r\n    MSAV1_ACCOUNT_TYPE: \"MSA\",\r\n    GENERIC_ACCOUNT_TYPE: \"Generic\", // NTLM, Kerberos, FBA, Basic etc\r\n} as const;\r\nexport type CacheAccountType =\r\n    (typeof CacheAccountType)[keyof typeof CacheAccountType];\r\n\r\n/**\r\n * Separators used in cache\r\n */\r\nexport const Separators = {\r\n    CACHE_KEY_SEPARATOR: \"-\",\r\n    CLIENT_INFO_SEPARATOR: \".\",\r\n} as const;\r\nexport type Separators = (typeof Separators)[keyof typeof Separators];\r\n\r\n/**\r\n * Credential Type stored in the cache\r\n */\r\nexport const CredentialType = {\r\n    ID_TOKEN: \"IdToken\",\r\n    ACCESS_TOKEN: \"AccessToken\",\r\n    ACCESS_TOKEN_WITH_AUTH_SCHEME: \"AccessToken_With_AuthScheme\",\r\n    REFRESH_TOKEN: \"RefreshToken\",\r\n} as const;\r\nexport type CredentialType =\r\n    (typeof CredentialType)[keyof typeof CredentialType];\r\n\r\n/**\r\n * Combine all cache types\r\n */\r\nexport const CacheType = {\r\n    ADFS: 1001,\r\n    MSA: 1002,\r\n    MSSTS: 1003,\r\n    GENERIC: 1004,\r\n    ACCESS_TOKEN: 2001,\r\n    REFRESH_TOKEN: 2002,\r\n    ID_TOKEN: 2003,\r\n    APP_METADATA: 3001,\r\n    UNDEFINED: 9999,\r\n} as const;\r\nexport type CacheType = (typeof CacheType)[keyof typeof CacheType];\r\n\r\n/**\r\n * More Cache related constants\r\n */\r\nexport const APP_METADATA = \"appmetadata\";\r\nexport const CLIENT_INFO = \"client_info\";\r\nexport const THE_FAMILY_ID = \"1\";\r\n\r\nexport const AUTHORITY_METADATA_CONSTANTS = {\r\n    CACHE_KEY: \"authority-metadata\",\r\n    REFRESH_TIME_SECONDS: 3600 * 24, // 24 Hours\r\n};\r\n\r\nexport const AuthorityMetadataSource = {\r\n    CONFIG: \"config\",\r\n    CACHE: \"cache\",\r\n    NETWORK: \"network\",\r\n    HARDCODED_VALUES: \"hardcoded_values\",\r\n} as const;\r\nexport type AuthorityMetadataSource =\r\n    (typeof AuthorityMetadataSource)[keyof typeof AuthorityMetadataSource];\r\n\r\nexport const SERVER_TELEM_CONSTANTS = {\r\n    SCHEMA_VERSION: 5,\r\n    MAX_CUR_HEADER_BYTES: 80, // ESTS limit is 100B, set to 80 to provide a 20B buffer\r\n    MAX_LAST_HEADER_BYTES: 330, // ESTS limit is 350B, set to 330 to provide a 20B buffer,\r\n    MAX_CACHED_ERRORS: 50, // Limit the number of errors that can be stored to prevent uncontrolled size gains\r\n    CACHE_KEY: \"server-telemetry\",\r\n    CATEGORY_SEPARATOR: \"|\",\r\n    VALUE_SEPARATOR: \",\",\r\n    OVERFLOW_TRUE: \"1\",\r\n    OVERFLOW_FALSE: \"0\",\r\n    UNKNOWN_ERROR: \"unknown_error\",\r\n};\r\n\r\n/**\r\n * Type of the authentication request\r\n */\r\nexport const AuthenticationScheme = {\r\n    BEARER: \"Bearer\",\r\n    POP: \"pop\",\r\n    SSH: \"ssh-cert\",\r\n} as const;\r\nexport type AuthenticationScheme =\r\n    (typeof AuthenticationScheme)[keyof typeof AuthenticationScheme];\r\n\r\n/**\r\n * Constants related to throttling\r\n */\r\nexport const ThrottlingConstants = {\r\n    // Default time to throttle RequestThumbprint in seconds\r\n    DEFAULT_THROTTLE_TIME_SECONDS: 60,\r\n    // Default maximum time to throttle in seconds, overrides what the server sends back\r\n    DEFAULT_MAX_THROTTLE_TIME_SECONDS: 3600,\r\n    // Prefix for storing throttling entries\r\n    THROTTLING_PREFIX: \"throttling\",\r\n    // Value assigned to the x-ms-lib-capability header to indicate to the server the library supports throttling\r\n    X_MS_LIB_CAPABILITY_VALUE: \"retry-after, h429\",\r\n};\r\n\r\nexport const Errors = {\r\n    INVALID_GRANT_ERROR: \"invalid_grant\",\r\n    CLIENT_MISMATCH_ERROR: \"client_mismatch\",\r\n};\r\n\r\n/**\r\n * Password grant parameters\r\n */\r\nexport const PasswordGrantConstants = {\r\n    username: \"username\",\r\n    password: \"password\",\r\n} as const;\r\nexport type PasswordGrantConstants =\r\n    (typeof PasswordGrantConstants)[keyof typeof PasswordGrantConstants];\r\n\r\n/**\r\n * Response codes\r\n */\r\nexport const ResponseCodes = {\r\n    httpSuccess: 200,\r\n    httpBadRequest: 400,\r\n} as const;\r\nexport type ResponseCodes = (typeof ResponseCodes)[keyof typeof ResponseCodes];\r\n\r\n/**\r\n * Region Discovery Sources\r\n */\r\nexport const RegionDiscoverySources = {\r\n    FAILED_AUTO_DETECTION: \"1\",\r\n    INTERNAL_CACHE: \"2\",\r\n    ENVIRONMENT_VARIABLE: \"3\",\r\n    IMDS: \"4\",\r\n} as const;\r\nexport type RegionDiscoverySources =\r\n    (typeof RegionDiscoverySources)[keyof typeof RegionDiscoverySources];\r\n\r\n/**\r\n * Region Discovery Outcomes\r\n */\r\nexport const RegionDiscoveryOutcomes = {\r\n    CONFIGURED_MATCHES_DETECTED: \"1\",\r\n    CONFIGURED_NO_AUTO_DETECTION: \"2\",\r\n    CONFIGURED_NOT_DETECTED: \"3\",\r\n    AUTO_DETECTION_REQUESTED_SUCCESSFUL: \"4\",\r\n    AUTO_DETECTION_REQUESTED_FAILED: \"5\",\r\n} as const;\r\nexport type RegionDiscoveryOutcomes =\r\n    (typeof RegionDiscoveryOutcomes)[keyof typeof RegionDiscoveryOutcomes];\r\n\r\n/**\r\n * Specifies the reason for fetching the access token from the identity provider\r\n */\r\nexport const CacheOutcome = {\r\n    // When a token is found in the cache or the cache is not supposed to be hit when making the request\r\n    NOT_APPLICABLE: \"0\",\r\n    // When the token request goes to the identity provider because force_refresh was set to true. Also occurs if claims were requested\r\n    FORCE_REFRESH_OR_CLAIMS: \"1\",\r\n    // When the token request goes to the identity provider because no cached access token exists\r\n    NO_CACHED_ACCESS_TOKEN: \"2\",\r\n    // When the token request goes to the identity provider because cached access token expired\r\n    CACHED_ACCESS_TOKEN_EXPIRED: \"3\",\r\n    // When the token request goes to the identity provider because refresh_in was used and the existing token needs to be refreshed\r\n    PROACTIVELY_REFRESHED: \"4\",\r\n} as const;\r\nexport type CacheOutcome = (typeof CacheOutcome)[keyof typeof CacheOutcome];\r\n\r\nexport const JsonWebTokenTypes = {\r\n    Jwt: \"JWT\",\r\n    Jwk: \"JWK\",\r\n    Pop: \"pop\",\r\n} as const;\r\nexport type JsonWebTokenTypes =\r\n    (typeof JsonWebTokenTypes)[keyof typeof JsonWebTokenTypes];\r\n\r\nexport const ONE_DAY_IN_MS = 86400000;\r\n\r\n// Token renewal offset default in seconds\r\nexport const DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { LoggerOptions } from \"../config/ClientConfiguration.js\";\r\nimport { Constants } from \"../utils/Constants.js\";\r\n\r\n/**\r\n * Options for logger messages.\r\n */\r\nexport type LoggerMessageOptions = {\r\n    logLevel: LogLevel;\r\n    containsPii?: boolean;\r\n    context?: string;\r\n    correlationId?: string;\r\n};\r\n\r\n/**\r\n * Log message level.\r\n */\r\nexport enum LogLevel {\r\n    Error,\r\n    Warning,\r\n    Info,\r\n    Verbose,\r\n    Trace,\r\n}\r\n\r\n/**\r\n * Callback to send the messages to.\r\n */\r\nexport interface ILoggerCallback {\r\n    (level: LogLevel, message: string, containsPii: boolean): void;\r\n}\r\n\r\n/**\r\n * Class which facilitates logging of messages to a specific place.\r\n */\r\nexport class Logger {\r\n    // Correlation ID for request, usually set by user.\r\n    private correlationId: string;\r\n\r\n    // Current log level, defaults to info.\r\n    private level: LogLevel = LogLevel.Info;\r\n\r\n    // Boolean describing whether PII logging is allowed.\r\n    private piiLoggingEnabled: boolean;\r\n\r\n    // Callback to send messages to.\r\n    private localCallback: ILoggerCallback;\r\n\r\n    // Package name implementing this logger\r\n    private packageName: string;\r\n\r\n    // Package version implementing this logger\r\n    private packageVersion: string;\r\n\r\n    constructor(\r\n        loggerOptions: LoggerOptions,\r\n        packageName?: string,\r\n        packageVersion?: string\r\n    ) {\r\n        const defaultLoggerCallback = () => {\r\n            return;\r\n        };\r\n        const setLoggerOptions =\r\n            loggerOptions || Logger.createDefaultLoggerOptions();\r\n        this.localCallback =\r\n            setLoggerOptions.loggerCallback || defaultLoggerCallback;\r\n        this.piiLoggingEnabled = setLoggerOptions.piiLoggingEnabled || false;\r\n        this.level =\r\n            typeof setLoggerOptions.logLevel === \"number\"\r\n                ? setLoggerOptions.logLevel\r\n                : LogLevel.Info;\r\n        this.correlationId =\r\n            setLoggerOptions.correlationId || Constants.EMPTY_STRING;\r\n        this.packageName = packageName || Constants.EMPTY_STRING;\r\n        this.packageVersion = packageVersion || Constants.EMPTY_STRING;\r\n    }\r\n\r\n    private static createDefaultLoggerOptions(): LoggerOptions {\r\n        return {\r\n            loggerCallback: () => {\r\n                // allow users to not set loggerCallback\r\n            },\r\n            piiLoggingEnabled: false,\r\n            logLevel: LogLevel.Info,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Create new Logger with existing configurations.\r\n     */\r\n    public clone(\r\n        packageName: string,\r\n        packageVersion: string,\r\n        correlationId?: string\r\n    ): Logger {\r\n        return new Logger(\r\n            {\r\n                loggerCallback: this.localCallback,\r\n                piiLoggingEnabled: this.piiLoggingEnabled,\r\n                logLevel: this.level,\r\n                correlationId: correlationId || this.correlationId,\r\n            },\r\n            packageName,\r\n            packageVersion\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Log message with required options.\r\n     */\r\n    private logMessage(\r\n        logMessage: string,\r\n        options: LoggerMessageOptions\r\n    ): void {\r\n        if (\r\n            options.logLevel > this.level ||\r\n            (!this.piiLoggingEnabled && options.containsPii)\r\n        ) {\r\n            return;\r\n        }\r\n        const timestamp = new Date().toUTCString();\r\n\r\n        // Add correlationId to logs if set, correlationId provided on log messages take precedence\r\n        const logHeader = `[${timestamp}] : [${\r\n            options.correlationId || this.correlationId || \"\"\r\n        }]`;\r\n\r\n        const log = `${logHeader} : ${this.packageName}@${\r\n            this.packageVersion\r\n        } : ${LogLevel[options.logLevel]} - ${logMessage}`;\r\n        // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": Constants.EMPTY_STRING}${options.context ? `:${options.context}` : Constants.EMPTY_STRING}`)(logMessage);\r\n        this.executeCallback(\r\n            options.logLevel,\r\n            log,\r\n            options.containsPii || false\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Execute callback with message.\r\n     */\r\n    executeCallback(\r\n        level: LogLevel,\r\n        message: string,\r\n        containsPii: boolean\r\n    ): void {\r\n        if (this.localCallback) {\r\n            this.localCallback(level, message, containsPii);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Logs error messages.\r\n     */\r\n    error(message: string, correlationId?: string): void {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: false,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Logs error messages with PII.\r\n     */\r\n    errorPii(message: string, correlationId?: string): void {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: true,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Logs warning messages.\r\n     */\r\n    warning(message: string, correlationId?: string): void {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: false,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Logs warning messages with PII.\r\n     */\r\n    warningPii(message: string, correlationId?: string): void {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: true,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Logs info messages.\r\n     */\r\n    info(message: string, correlationId?: string): void {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: false,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Logs info messages with PII.\r\n     */\r\n    infoPii(message: string, correlationId?: string): void {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: true,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Logs verbose messages.\r\n     */\r\n    verbose(message: string, correlationId?: string): void {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: false,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Logs verbose messages with PII.\r\n     */\r\n    verbosePii(message: string, correlationId?: string): void {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: true,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Logs trace messages.\r\n     */\r\n    trace(message: string, correlationId?: string): void {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Trace,\r\n            containsPii: false,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Logs trace messages with PII.\r\n     */\r\n    tracePii(message: string, correlationId?: string): void {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Trace,\r\n            containsPii: true,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Returns whether PII Logging is enabled or not.\r\n     */\r\n    isPiiLoggingEnabled(): boolean {\r\n        return this.piiLoggingEnabled || false;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n/**\r\n * Protocol modes supported by MSAL.\r\n */\r\nexport const ProtocolMode = {\r\n    AAD: \"AAD\",\r\n    OIDC: \"OIDC\",\r\n} as const;\r\nexport type ProtocolMode = (typeof ProtocolMode)[keyof typeof ProtocolMode];\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { ProtocolMode } from \"./ProtocolMode.js\";\r\nimport { OIDCOptions } from \"./OIDCOptions.js\";\r\nimport { AzureRegionConfiguration } from \"./AzureRegionConfiguration.js\";\r\nimport { CloudInstanceDiscoveryResponse } from \"./CloudInstanceDiscoveryResponse.js\";\r\n\r\nexport type AuthorityOptions = {\r\n    protocolMode: ProtocolMode;\r\n    OIDCOptions?: OIDCOptions | null;\r\n    knownAuthorities: Array<string>;\r\n    cloudDiscoveryMetadata: string;\r\n    authorityMetadata: string;\r\n    skipAuthorityMetadataCache?: boolean;\r\n    azureRegionConfiguration?: AzureRegionConfiguration;\r\n    authority?: string;\r\n};\r\n\r\nexport type StaticAuthorityOptions = Partial<\r\n    Pick<AuthorityOptions, \"knownAuthorities\">\r\n> & {\r\n    canonicalAuthority?: string;\r\n    cloudDiscoveryMetadata?: CloudInstanceDiscoveryResponse;\r\n};\r\n\r\nexport const AzureCloudInstance = {\r\n    // AzureCloudInstance is not specified.\r\n    None: \"none\",\r\n\r\n    // Microsoft Azure public cloud\r\n    AzurePublic: \"https://login.microsoftonline.com\",\r\n\r\n    // Microsoft PPE\r\n    AzurePpe: \"https://login.windows-ppe.net\",\r\n\r\n    // Microsoft Chinese national/regional cloud\r\n    AzureChina: \"https://login.chinacloudapi.cn\",\r\n\r\n    // Microsoft German national/regional cloud (\"Black Forest\")\r\n    AzureGermany: \"https://login.microsoftonline.de\",\r\n\r\n    // US Government cloud\r\n    AzureUsGovernment: \"https://login.microsoftonline.us\",\r\n} as const;\r\nexport type AzureCloudInstance =\r\n    (typeof AzureCloudInstance)[keyof typeof AzureCloudInstance];\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n/**\r\n * AuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nexport const unexpectedError = \"unexpected_error\";\r\nexport const postRequestFailed = \"post_request_failed\";\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Constants } from \"../utils/Constants.js\";\r\nimport * as AuthErrorCodes from \"./AuthErrorCodes.js\";\r\nexport { AuthErrorCodes };\r\n\r\nexport const AuthErrorMessages = {\r\n    [AuthErrorCodes.unexpectedError]: \"Unexpected error in authentication.\",\r\n    [AuthErrorCodes.postRequestFailed]:\r\n        \"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details.\",\r\n};\r\n\r\n/**\r\n * AuthErrorMessage class containing string constants used by error codes and messages.\r\n * @deprecated Use AuthErrorCodes instead\r\n */\r\nexport const AuthErrorMessage = {\r\n    unexpectedError: {\r\n        code: AuthErrorCodes.unexpectedError,\r\n        desc: AuthErrorMessages[AuthErrorCodes.unexpectedError],\r\n    },\r\n    postRequestFailed: {\r\n        code: AuthErrorCodes.postRequestFailed,\r\n        desc: AuthErrorMessages[AuthErrorCodes.postRequestFailed],\r\n    },\r\n};\r\n\r\n/**\r\n * General error class thrown by the MSAL.js library.\r\n */\r\nexport class AuthError extends Error {\r\n    /**\r\n     * Short string denoting error\r\n     */\r\n    errorCode: string;\r\n\r\n    /**\r\n     * Detailed description of error\r\n     */\r\n    errorMessage: string;\r\n\r\n    /**\r\n     * Describes the subclass of an error\r\n     */\r\n    subError: string;\r\n\r\n    /**\r\n     * CorrelationId associated with the error\r\n     */\r\n    correlationId: string;\r\n\r\n    constructor(errorCode?: string, errorMessage?: string, suberror?: string) {\r\n        const errorString = errorMessage\r\n            ? `${errorCode}: ${errorMessage}`\r\n            : errorCode;\r\n        super(errorString);\r\n        Object.setPrototypeOf(this, AuthError.prototype);\r\n\r\n        this.errorCode = errorCode || Constants.EMPTY_STRING;\r\n        this.errorMessage = errorMessage || Constants.EMPTY_STRING;\r\n        this.subError = suberror || Constants.EMPTY_STRING;\r\n        this.name = \"AuthError\";\r\n    }\r\n\r\n    setCorrelationId(correlationId: string): void {\r\n        this.correlationId = correlationId;\r\n    }\r\n}\r\n\r\nexport function createAuthError(\r\n    code: string,\r\n    additionalMessage?: string\r\n): AuthError {\r\n    return new AuthError(\r\n        code,\r\n        additionalMessage\r\n            ? `${AuthErrorMessages[code]} ${additionalMessage}`\r\n            : AuthErrorMessages[code]\r\n    );\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nexport const clientInfoDecodingError = \"client_info_decoding_error\";\r\nexport const clientInfoEmptyError = \"client_info_empty_error\";\r\nexport const tokenParsingError = \"token_parsing_error\";\r\nexport const nullOrEmptyToken = \"null_or_empty_token\";\r\nexport const endpointResolutionError = \"endpoints_resolution_error\";\r\nexport const networkError = \"network_error\";\r\nexport const openIdConfigError = \"openid_config_error\";\r\nexport const hashNotDeserialized = \"hash_not_deserialized\";\r\nexport const invalidState = \"invalid_state\";\r\nexport const stateMismatch = \"state_mismatch\";\r\nexport const stateNotFound = \"state_not_found\";\r\nexport const nonceMismatch = \"nonce_mismatch\";\r\nexport const authTimeNotFound = \"auth_time_not_found\";\r\nexport const maxAgeTranspired = \"max_age_transpired\";\r\nexport const multipleMatchingTokens = \"multiple_matching_tokens\";\r\nexport const multipleMatchingAccounts = \"multiple_matching_accounts\";\r\nexport const multipleMatchingAppMetadata = \"multiple_matching_appMetadata\";\r\nexport const requestCannotBeMade = \"request_cannot_be_made\";\r\nexport const cannotRemoveEmptyScope = \"cannot_remove_empty_scope\";\r\nexport const cannotAppendScopeSet = \"cannot_append_scopeset\";\r\nexport const emptyInputScopeSet = \"empty_input_scopeset\";\r\nexport const deviceCodePollingCancelled = \"device_code_polling_cancelled\";\r\nexport const deviceCodeExpired = \"device_code_expired\";\r\nexport const deviceCodeUnknownError = \"device_code_unknown_error\";\r\nexport const noAccountInSilentRequest = \"no_account_in_silent_request\";\r\nexport const invalidCacheRecord = \"invalid_cache_record\";\r\nexport const invalidCacheEnvironment = \"invalid_cache_environment\";\r\nexport const noAccountFound = \"no_account_found\";\r\nexport const noCryptoObject = \"no_crypto_object\";\r\nexport const unexpectedCredentialType = \"unexpected_credential_type\";\r\nexport const invalidAssertion = \"invalid_assertion\";\r\nexport const invalidClientCredential = \"invalid_client_credential\";\r\nexport const tokenRefreshRequired = \"token_refresh_required\";\r\nexport const userTimeoutReached = \"user_timeout_reached\";\r\nexport const tokenClaimsCnfRequiredForSignedJwt =\r\n    \"token_claims_cnf_required_for_signedjwt\";\r\nexport const authorizationCodeMissingFromServerResponse =\r\n    \"authorization_code_missing_from_server_response\";\r\nexport const bindingKeyNotRemoved = \"binding_key_not_removed\";\r\nexport const endSessionEndpointNotSupported =\r\n    \"end_session_endpoint_not_supported\";\r\nexport const keyIdMissing = \"key_id_missing\";\r\nexport const noNetworkConnectivity = \"no_network_connectivity\";\r\nexport const userCanceled = \"user_canceled\";\r\nexport const missingTenantIdError = \"missing_tenant_id_error\";\r\nexport const methodNotImplemented = \"method_not_implemented\";\r\nexport const nestedAppAuthBridgeDisabled = \"nested_app_auth_bridge_disabled\";\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AuthError } from \"./AuthError.js\";\r\nimport * as ClientAuthErrorCodes from \"./ClientAuthErrorCodes.js\";\r\nexport { ClientAuthErrorCodes }; // Allow importing as \"ClientAuthErrorCodes\";\r\n\r\n/**\r\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\n\r\nexport const ClientAuthErrorMessages = {\r\n    [ClientAuthErrorCodes.clientInfoDecodingError]:\r\n        \"The client info could not be parsed/decoded correctly\",\r\n    [ClientAuthErrorCodes.clientInfoEmptyError]: \"The client info was empty\",\r\n    [ClientAuthErrorCodes.tokenParsingError]: \"Token cannot be parsed\",\r\n    [ClientAuthErrorCodes.nullOrEmptyToken]: \"The token is null or empty\",\r\n    [ClientAuthErrorCodes.endpointResolutionError]:\r\n        \"Endpoints cannot be resolved\",\r\n    [ClientAuthErrorCodes.networkError]: \"Network request failed\",\r\n    [ClientAuthErrorCodes.openIdConfigError]:\r\n        \"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.\",\r\n    [ClientAuthErrorCodes.hashNotDeserialized]:\r\n        \"The hash parameters could not be deserialized\",\r\n    [ClientAuthErrorCodes.invalidState]: \"State was not the expected format\",\r\n    [ClientAuthErrorCodes.stateMismatch]: \"State mismatch error\",\r\n    [ClientAuthErrorCodes.stateNotFound]: \"State not found\",\r\n    [ClientAuthErrorCodes.nonceMismatch]: \"Nonce mismatch error\",\r\n    [ClientAuthErrorCodes.authTimeNotFound]:\r\n        \"Max Age was requested and the ID token is missing the auth_time variable.\" +\r\n        \" auth_time is an optional claim and is not enabled by default - it must be enabled.\" +\r\n        \" See https://aka.ms/msaljs/optional-claims for more information.\",\r\n    [ClientAuthErrorCodes.maxAgeTranspired]:\r\n        \"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.\",\r\n    [ClientAuthErrorCodes.multipleMatchingTokens]:\r\n        \"The cache contains multiple tokens satisfying the requirements. \" +\r\n        \"Call AcquireToken again providing more requirements such as authority or account.\",\r\n    [ClientAuthErrorCodes.multipleMatchingAccounts]:\r\n        \"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account\",\r\n    [ClientAuthErrorCodes.multipleMatchingAppMetadata]:\r\n        \"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata\",\r\n    [ClientAuthErrorCodes.requestCannotBeMade]:\r\n        \"Token request cannot be made without authorization code or refresh token.\",\r\n    [ClientAuthErrorCodes.cannotRemoveEmptyScope]:\r\n        \"Cannot remove null or empty scope from ScopeSet\",\r\n    [ClientAuthErrorCodes.cannotAppendScopeSet]: \"Cannot append ScopeSet\",\r\n    [ClientAuthErrorCodes.emptyInputScopeSet]:\r\n        \"Empty input ScopeSet cannot be processed\",\r\n    [ClientAuthErrorCodes.deviceCodePollingCancelled]:\r\n        \"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.\",\r\n    [ClientAuthErrorCodes.deviceCodeExpired]: \"Device code is expired.\",\r\n    [ClientAuthErrorCodes.deviceCodeUnknownError]:\r\n        \"Device code stopped polling for unknown reasons.\",\r\n    [ClientAuthErrorCodes.noAccountInSilentRequest]:\r\n        \"Please pass an account object, silent flow is not supported without account information\",\r\n    [ClientAuthErrorCodes.invalidCacheRecord]:\r\n        \"Cache record object was null or undefined.\",\r\n    [ClientAuthErrorCodes.invalidCacheEnvironment]:\r\n        \"Invalid environment when attempting to create cache entry\",\r\n    [ClientAuthErrorCodes.noAccountFound]:\r\n        \"No account found in cache for given key.\",\r\n    [ClientAuthErrorCodes.noCryptoObject]: \"No crypto object detected.\",\r\n    [ClientAuthErrorCodes.unexpectedCredentialType]:\r\n        \"Unexpected credential type.\",\r\n    [ClientAuthErrorCodes.invalidAssertion]:\r\n        \"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515\",\r\n    [ClientAuthErrorCodes.invalidClientCredential]:\r\n        \"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential\",\r\n    [ClientAuthErrorCodes.tokenRefreshRequired]:\r\n        \"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.\",\r\n    [ClientAuthErrorCodes.userTimeoutReached]:\r\n        \"User defined timeout for device code polling reached\",\r\n    [ClientAuthErrorCodes.tokenClaimsCnfRequiredForSignedJwt]:\r\n        \"Cannot generate a POP jwt if the token_claims are not populated\",\r\n    [ClientAuthErrorCodes.authorizationCodeMissingFromServerResponse]:\r\n        \"Server response does not contain an authorization code to proceed\",\r\n    [ClientAuthErrorCodes.bindingKeyNotRemoved]:\r\n        \"Could not remove the credential's binding key from storage.\",\r\n    [ClientAuthErrorCodes.endSessionEndpointNotSupported]:\r\n        \"The provided authority does not support logout\",\r\n    [ClientAuthErrorCodes.keyIdMissing]:\r\n        \"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.\",\r\n    [ClientAuthErrorCodes.noNetworkConnectivity]:\r\n        \"No network connectivity. Check your internet connection.\",\r\n    [ClientAuthErrorCodes.userCanceled]: \"User cancelled the flow.\",\r\n    [ClientAuthErrorCodes.missingTenantIdError]:\r\n        \"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.\",\r\n    [ClientAuthErrorCodes.methodNotImplemented]:\r\n        \"This method has not been implemented\",\r\n    [ClientAuthErrorCodes.nestedAppAuthBridgeDisabled]:\r\n        \"The nested app auth bridge is disabled\",\r\n};\r\n\r\n/**\r\n * String constants used by error codes and messages.\r\n * @deprecated Use ClientAuthErrorCodes instead\r\n */\r\nexport const ClientAuthErrorMessage = {\r\n    clientInfoDecodingError: {\r\n        code: ClientAuthErrorCodes.clientInfoDecodingError,\r\n        desc: ClientAuthErrorMessages[\r\n            ClientAuthErrorCodes.clientInfoDecodingError\r\n        ],\r\n    },\r\n    clientInfoEmptyError: {\r\n        code: ClientAuthErrorCodes.clientInfoEmptyError,\r\n        desc: ClientAuthErrorMessages[\r\n            ClientAuthErrorCodes.clientInfoEmptyError\r\n        ],\r\n    },\r\n    tokenParsingError: {\r\n        code: ClientAuthErrorCodes.tokenParsingError,\r\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.tokenParsingError],\r\n    },\r\n    nullOrEmptyToken: {\r\n        code: ClientAuthErrorCodes.nullOrEmptyToken,\r\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.nullOrEmptyToken],\r\n    },\r\n    endpointResolutionError: {\r\n        code: ClientAuthErrorCodes.endpointResolutionError,\r\n        desc: ClientAuthErrorMessages[\r\n            ClientAuthErrorCodes.endpointResolutionError\r\n        ],\r\n    },\r\n    networkError: {\r\n        code: ClientAuthErrorCodes.networkError,\r\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.networkError],\r\n    },\r\n    unableToGetOpenidConfigError: {\r\n        code: ClientAuthErrorCodes.openIdConfigError,\r\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.openIdConfigError],\r\n    },\r\n    hashNotDeserialized: {\r\n        code: ClientAuthErrorCodes.hashNotDeserialized,\r\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.hashNotDeserialized],\r\n    },\r\n    invalidStateError: {\r\n        code: ClientAuthErrorCodes.invalidState,\r\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.invalidState],\r\n    },\r\n    stateMismatchError: {\r\n        code: ClientAuthErrorCodes.stateMismatch,\r\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.stateMismatch],\r\n    },\r\n    stateNotFoundError: {\r\n        code: ClientAuthErrorCodes.stateNotFound,\r\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.stateNotFound],\r\n    },\r\n    nonceMismatchError: {\r\n        code: ClientAuthErrorCodes.nonceMismatch,\r\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.nonceMismatch],\r\n    },\r\n    authTimeNotFoundError: {\r\n        code: ClientAuthErrorCodes.authTimeNotFound,\r\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.authTimeNotFound],\r\n    },\r\n    maxAgeTranspired: {\r\n        code: ClientAuthErrorCodes.maxAgeTranspired,\r\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.maxAgeTranspired],\r\n    },\r\n    multipleMatchingTokens: {\r\n        code: ClientAuthErrorCodes.multipleMatchingTokens,\r\n        desc: ClientAuthErrorMessages[\r\n            ClientAuthErrorCodes.multipleMatchingTokens\r\n        ],\r\n    },\r\n    multipleMatchingAccounts: {\r\n        code: ClientAuthErrorCodes.multipleMatchingAccounts,\r\n        desc: ClientAuthErrorMessages[\r\n            ClientAuthErrorCodes.multipleMatchingAccounts\r\n        ],\r\n    },\r\n    multipleMatchingAppMetadata: {\r\n        code: ClientAuthErrorCodes.multipleMatchingAppMetadata,\r\n        desc: ClientAuthErrorMessages[\r\n            ClientAuthErrorCodes.multipleMatchingAppMetadata\r\n        ],\r\n    },\r\n    tokenRequestCannotBeMade: {\r\n        code: ClientAuthErrorCodes.requestCannotBeMade,\r\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.requestCannotBeMade],\r\n    },\r\n    removeEmptyScopeError: {\r\n        code: ClientAuthErrorCodes.cannotRemoveEmptyScope,\r\n        desc: ClientAuthErrorMessages[\r\n            ClientAuthErrorCodes.cannotRemoveEmptyScope\r\n        ],\r\n    },\r\n    appendScopeSetError: {\r\n        code: ClientAuthErrorCodes.cannotAppendScopeSet,\r\n        desc: ClientAuthErrorMessages[\r\n            ClientAuthErrorCodes.cannotAppendScopeSet\r\n        ],\r\n    },\r\n    emptyInputScopeSetError: {\r\n        code: ClientAuthErrorCodes.emptyInputScopeSet,\r\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.emptyInputScopeSet],\r\n    },\r\n    DeviceCodePollingCancelled: {\r\n        code: ClientAuthErrorCodes.deviceCodePollingCancelled,\r\n        desc: ClientAuthErrorMessages[\r\n            ClientAuthErrorCodes.deviceCodePollingCancelled\r\n        ],\r\n    },\r\n    DeviceCodeExpired: {\r\n        code: ClientAuthErrorCodes.deviceCodeExpired,\r\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.deviceCodeExpired],\r\n    },\r\n    DeviceCodeUnknownError: {\r\n        code: ClientAuthErrorCodes.deviceCodeUnknownError,\r\n        desc: ClientAuthErrorMessages[\r\n            ClientAuthErrorCodes.deviceCodeUnknownError\r\n        ],\r\n    },\r\n    NoAccountInSilentRequest: {\r\n        code: ClientAuthErrorCodes.noAccountInSilentRequest,\r\n        desc: ClientAuthErrorMessages[\r\n            ClientAuthErrorCodes.noAccountInSilentRequest\r\n        ],\r\n    },\r\n    invalidCacheRecord: {\r\n        code: ClientAuthErrorCodes.invalidCacheRecord,\r\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.invalidCacheRecord],\r\n    },\r\n    invalidCacheEnvironment: {\r\n        code: ClientAuthErrorCodes.invalidCacheEnvironment,\r\n        desc: ClientAuthErrorMessages[\r\n            ClientAuthErrorCodes.invalidCacheEnvironment\r\n        ],\r\n    },\r\n    noAccountFound: {\r\n        code: ClientAuthErrorCodes.noAccountFound,\r\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.noAccountFound],\r\n    },\r\n    noCryptoObj: {\r\n        code: ClientAuthErrorCodes.noCryptoObject,\r\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.noCryptoObject],\r\n    },\r\n    unexpectedCredentialType: {\r\n        code: ClientAuthErrorCodes.unexpectedCredentialType,\r\n        desc: ClientAuthErrorMessages[\r\n            ClientAuthErrorCodes.unexpectedCredentialType\r\n        ],\r\n    },\r\n    invalidAssertion: {\r\n        code: ClientAuthErrorCodes.invalidAssertion,\r\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.invalidAssertion],\r\n    },\r\n    invalidClientCredential: {\r\n        code: ClientAuthErrorCodes.invalidClientCredential,\r\n        desc: ClientAuthErrorMessages[\r\n            ClientAuthErrorCodes.invalidClientCredential\r\n        ],\r\n    },\r\n    tokenRefreshRequired: {\r\n        code: ClientAuthErrorCodes.tokenRefreshRequired,\r\n        desc: ClientAuthErrorMessages[\r\n            ClientAuthErrorCodes.tokenRefreshRequired\r\n        ],\r\n    },\r\n    userTimeoutReached: {\r\n        code: ClientAuthErrorCodes.userTimeoutReached,\r\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.userTimeoutReached],\r\n    },\r\n    tokenClaimsRequired: {\r\n        code: ClientAuthErrorCodes.tokenClaimsCnfRequiredForSignedJwt,\r\n        desc: ClientAuthErrorMessages[\r\n            ClientAuthErrorCodes.tokenClaimsCnfRequiredForSignedJwt\r\n        ],\r\n    },\r\n    noAuthorizationCodeFromServer: {\r\n        code: ClientAuthErrorCodes.authorizationCodeMissingFromServerResponse,\r\n        desc: ClientAuthErrorMessages[\r\n            ClientAuthErrorCodes.authorizationCodeMissingFromServerResponse\r\n        ],\r\n    },\r\n    bindingKeyNotRemovedError: {\r\n        code: ClientAuthErrorCodes.bindingKeyNotRemoved,\r\n        desc: ClientAuthErrorMessages[\r\n            ClientAuthErrorCodes.bindingKeyNotRemoved\r\n        ],\r\n    },\r\n    logoutNotSupported: {\r\n        code: ClientAuthErrorCodes.endSessionEndpointNotSupported,\r\n        desc: ClientAuthErrorMessages[\r\n            ClientAuthErrorCodes.endSessionEndpointNotSupported\r\n        ],\r\n    },\r\n    keyIdMissing: {\r\n        code: ClientAuthErrorCodes.keyIdMissing,\r\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.keyIdMissing],\r\n    },\r\n    noNetworkConnectivity: {\r\n        code: ClientAuthErrorCodes.noNetworkConnectivity,\r\n        desc: ClientAuthErrorMessages[\r\n            ClientAuthErrorCodes.noNetworkConnectivity\r\n        ],\r\n    },\r\n    userCanceledError: {\r\n        code: ClientAuthErrorCodes.userCanceled,\r\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.userCanceled],\r\n    },\r\n    missingTenantIdError: {\r\n        code: ClientAuthErrorCodes.missingTenantIdError,\r\n        desc: ClientAuthErrorMessages[\r\n            ClientAuthErrorCodes.missingTenantIdError\r\n        ],\r\n    },\r\n    nestedAppAuthBridgeDisabled: {\r\n        code: ClientAuthErrorCodes.nestedAppAuthBridgeDisabled,\r\n        desc: ClientAuthErrorMessages[\r\n            ClientAuthErrorCodes.nestedAppAuthBridgeDisabled\r\n        ],\r\n    },\r\n};\r\n\r\n/**\r\n * Error thrown when there is an error in the client code running on the browser.\r\n */\r\nexport class ClientAuthError extends AuthError {\r\n    constructor(errorCode: string, additionalMessage?: string) {\r\n        super(\r\n            errorCode,\r\n            additionalMessage\r\n                ? `${ClientAuthErrorMessages[errorCode]}: ${additionalMessage}`\r\n                : ClientAuthErrorMessages[errorCode]\r\n        );\r\n        this.name = \"ClientAuthError\";\r\n\r\n        Object.setPrototypeOf(this, ClientAuthError.prototype);\r\n    }\r\n}\r\n\r\nexport function createClientAuthError(\r\n    errorCode: string,\r\n    additionalMessage?: string\r\n): ClientAuthError {\r\n    return new ClientAuthError(errorCode, additionalMessage);\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    ClientAuthErrorCodes,\r\n    createClientAuthError,\r\n} from \"../error/ClientAuthError.js\";\r\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest.js\";\r\nimport { ShrOptions, SignedHttpRequest } from \"./SignedHttpRequest.js\";\r\n\r\n/**\r\n * The PkceCodes type describes the structure\r\n * of objects that contain PKCE code\r\n * challenge and verifier pairs\r\n */\r\nexport type PkceCodes = {\r\n    verifier: string;\r\n    challenge: string;\r\n};\r\n\r\nexport type SignedHttpRequestParameters = Pick<\r\n    BaseAuthRequest,\r\n    | \"resourceRequestMethod\"\r\n    | \"resourceRequestUri\"\r\n    | \"shrClaims\"\r\n    | \"shrNonce\"\r\n    | \"shrOptions\"\r\n> & {\r\n    correlationId?: string;\r\n};\r\n\r\n/**\r\n * Interface for crypto functions used by library\r\n */\r\nexport interface ICrypto {\r\n    /**\r\n     * Creates a guid randomly.\r\n     */\r\n    createNewGuid(): string;\r\n    /**\r\n     * base64 Encode string\r\n     * @param input\r\n     */\r\n    base64Encode(input: string): string;\r\n    /**\r\n     * base64 decode string\r\n     * @param input\r\n     */\r\n    base64Decode(input: string): string;\r\n    /**\r\n     * base64 URL safe encoded string\r\n     */\r\n    base64UrlEncode(input: string): string;\r\n    /**\r\n     * Stringifies and base64Url encodes input public key\r\n     * @param inputKid\r\n     * @returns Base64Url encoded public key\r\n     */\r\n    encodeKid(inputKid: string): string;\r\n    /**\r\n     * Generates an JWK RSA S256 Thumbprint\r\n     * @param request\r\n     */\r\n    getPublicKeyThumbprint(\r\n        request: SignedHttpRequestParameters\r\n    ): Promise<string>;\r\n    /**\r\n     * Removes cryptographic keypair from key store matching the keyId passed in\r\n     * @param kid\r\n     */\r\n    removeTokenBindingKey(kid: string): Promise<boolean>;\r\n    /**\r\n     * Removes all cryptographic keys from IndexedDB storage\r\n     */\r\n    clearKeystore(): Promise<boolean>;\r\n    /**\r\n     * Returns a signed proof-of-possession token with a given acces token that contains a cnf claim with the required kid.\r\n     * @param accessToken\r\n     */\r\n    signJwt(\r\n        payload: SignedHttpRequest,\r\n        kid: string,\r\n        shrOptions?: ShrOptions,\r\n        correlationId?: string\r\n    ): Promise<string>;\r\n    /**\r\n     * Returns the SHA-256 hash of an input string\r\n     * @param plainText\r\n     */\r\n    hashString(plainText: string): Promise<string>;\r\n}\r\n\r\nexport const DEFAULT_CRYPTO_IMPLEMENTATION: ICrypto = {\r\n    createNewGuid: (): string => {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    },\r\n    base64Decode: (): string => {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    },\r\n    base64Encode: (): string => {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    },\r\n    base64UrlEncode: (): string => {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    },\r\n    encodeKid: (): string => {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    },\r\n    async getPublicKeyThumbprint(): Promise<string> {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    },\r\n    async removeTokenBindingKey(): Promise<boolean> {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    },\r\n    async clearKeystore(): Promise<boolean> {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    },\r\n    async signJwt(): Promise<string> {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    },\r\n    async hashString(): Promise<string> {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    },\r\n};\r\n","/* eslint-disable header/header */\r\nexport const name = \"@azure/msal-common\";\r\nexport const version = \"15.2.0\";\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { TokenClaims } from \"./TokenClaims.js\";\r\nimport {\r\n    createClientAuthError,\r\n    ClientAuthErrorCodes,\r\n} from \"../error/ClientAuthError.js\";\r\n\r\n/**\r\n * Extract token by decoding the rawToken\r\n *\r\n * @param encodedToken\r\n */\r\nexport function extractTokenClaims(\r\n    encodedToken: string,\r\n    base64Decode: (input: string) => string\r\n): TokenClaims {\r\n    const jswPayload = getJWSPayload(encodedToken);\r\n\r\n    // token will be decoded to get the username\r\n    try {\r\n        // base64Decode() should throw an error if there is an issue\r\n        const base64Decoded = base64Decode(jswPayload);\r\n        return JSON.parse(base64Decoded) as TokenClaims;\r\n    } catch (err) {\r\n        throw createClientAuthError(ClientAuthErrorCodes.tokenParsingError);\r\n    }\r\n}\r\n\r\n/**\r\n * decode a JWT\r\n *\r\n * @param authToken\r\n */\r\nexport function getJWSPayload(authToken: string): string {\r\n    if (!authToken) {\r\n        throw createClientAuthError(ClientAuthErrorCodes.nullOrEmptyToken);\r\n    }\r\n    const tokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\r\n    const matches = tokenPartsRegex.exec(authToken);\r\n    if (!matches || matches.length < 4) {\r\n        throw createClientAuthError(ClientAuthErrorCodes.tokenParsingError);\r\n    }\r\n    /**\r\n     * const crackedToken = {\r\n     *  header: matches[1],\r\n     *  JWSPayload: matches[2],\r\n     *  JWSSig: matches[3],\r\n     * };\r\n     */\r\n\r\n    return matches[2];\r\n}\r\n\r\n/**\r\n * Determine if the token's max_age has transpired\r\n */\r\nexport function checkMaxAge(authTime: number, maxAge: number): void {\r\n    /*\r\n     * per https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest\r\n     * To force an immediate re-authentication: If an app requires that a user re-authenticate prior to access,\r\n     * provide a value of 0 for the max_age parameter and the AS will force a fresh login.\r\n     */\r\n    const fiveMinuteSkew = 300000; // five minutes in milliseconds\r\n    if (maxAge === 0 || Date.now() - fiveMinuteSkew > authTime + maxAge) {\r\n        throw createClientAuthError(ClientAuthErrorCodes.maxAgeTranspired);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n/**\r\n * Utility functions for managing date and time operations.\r\n */\r\n\r\n/**\r\n * return the current time in Unix time (seconds).\r\n */\r\nexport function nowSeconds(): number {\r\n    // Date.getTime() returns in milliseconds.\r\n    return Math.round(new Date().getTime() / 1000.0);\r\n}\r\n\r\n/**\r\n * check if a token is expired based on given UTC time in seconds.\r\n * @param expiresOn\r\n */\r\nexport function isTokenExpired(expiresOn: string, offset: number): boolean {\r\n    // check for access token expiry\r\n    const expirationSec = Number(expiresOn) || 0;\r\n    const offsetCurrentTimeSec = nowSeconds() + offset;\r\n\r\n    // If current time + offset is greater than token expiration time, then token is expired.\r\n    return offsetCurrentTimeSec > expirationSec;\r\n}\r\n\r\n/**\r\n * If the current time is earlier than the time that a token was cached at, we must discard the token\r\n * i.e. The system clock was turned back after acquiring the cached token\r\n * @param cachedAt\r\n * @param offset\r\n */\r\nexport function wasClockTurnedBack(cachedAt: string): boolean {\r\n    const cachedAtSec = Number(cachedAt);\r\n\r\n    return cachedAtSec > nowSeconds();\r\n}\r\n\r\n/**\r\n * Waits for t number of milliseconds\r\n * @param t number\r\n * @param value T\r\n */\r\nexport function delay<T>(t: number, value?: T): Promise<T | void> {\r\n    return new Promise((resolve) => setTimeout(() => resolve(value), t));\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { extractTokenClaims } from \"../../account/AuthToken.js\";\r\nimport { TokenClaims } from \"../../account/TokenClaims.js\";\r\nimport { CloudDiscoveryMetadata } from \"../../authority/CloudDiscoveryMetadata.js\";\r\nimport { OpenIdConfigResponse } from \"../../authority/OpenIdConfigResponse.js\";\r\nimport {\r\n    ClientAuthErrorCodes,\r\n    createClientAuthError,\r\n} from \"../../error/ClientAuthError.js\";\r\nimport {\r\n    APP_METADATA,\r\n    AUTHORITY_METADATA_CONSTANTS,\r\n    AuthenticationScheme,\r\n    CredentialType,\r\n    SERVER_TELEM_CONSTANTS,\r\n    Separators,\r\n    ThrottlingConstants,\r\n} from \"../../utils/Constants.js\";\r\nimport * as TimeUtils from \"../../utils/TimeUtils.js\";\r\nimport { AccessTokenEntity } from \"../entities/AccessTokenEntity.js\";\r\nimport { AppMetadataEntity } from \"../entities/AppMetadataEntity.js\";\r\nimport { AuthorityMetadataEntity } from \"../entities/AuthorityMetadataEntity.js\";\r\nimport { CredentialEntity } from \"../entities/CredentialEntity.js\";\r\nimport { IdTokenEntity } from \"../entities/IdTokenEntity.js\";\r\nimport { RefreshTokenEntity } from \"../entities/RefreshTokenEntity.js\";\r\n\r\n/**\r\n * Cache Key: <home_account_id>-<environment>-<credential_type>-<client_id or familyId>-<realm>-<scopes>-<claims hash>-<scheme>\r\n * IdToken Example: uid.utid-login.microsoftonline.com-idtoken-app_client_id-contoso.com\r\n * AccessToken Example: uid.utid-login.microsoftonline.com-accesstoken-app_client_id-contoso.com-scope1 scope2--pop\r\n * RefreshToken Example: uid.utid-login.microsoftonline.com-refreshtoken-1-contoso.com\r\n * @param credentialEntity\r\n * @returns\r\n */\r\nexport function generateCredentialKey(\r\n    credentialEntity: CredentialEntity\r\n): string {\r\n    const credentialKey = [\r\n        generateAccountId(credentialEntity),\r\n        generateCredentialId(credentialEntity),\r\n        generateTarget(credentialEntity),\r\n        generateClaimsHash(credentialEntity),\r\n        generateScheme(credentialEntity),\r\n    ];\r\n\r\n    return credentialKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n}\r\n\r\n/**\r\n * Create IdTokenEntity\r\n * @param homeAccountId\r\n * @param authenticationResult\r\n * @param clientId\r\n * @param authority\r\n */\r\nexport function createIdTokenEntity(\r\n    homeAccountId: string,\r\n    environment: string,\r\n    idToken: string,\r\n    clientId: string,\r\n    tenantId: string\r\n): IdTokenEntity {\r\n    const idTokenEntity: IdTokenEntity = {\r\n        credentialType: CredentialType.ID_TOKEN,\r\n        homeAccountId: homeAccountId,\r\n        environment: environment,\r\n        clientId: clientId,\r\n        secret: idToken,\r\n        realm: tenantId,\r\n    };\r\n\r\n    return idTokenEntity;\r\n}\r\n\r\n/**\r\n * Create AccessTokenEntity\r\n * @param homeAccountId\r\n * @param environment\r\n * @param accessToken\r\n * @param clientId\r\n * @param tenantId\r\n * @param scopes\r\n * @param expiresOn\r\n * @param extExpiresOn\r\n */\r\nexport function createAccessTokenEntity(\r\n    homeAccountId: string,\r\n    environment: string,\r\n    accessToken: string,\r\n    clientId: string,\r\n    tenantId: string,\r\n    scopes: string,\r\n    expiresOn: number,\r\n    extExpiresOn: number,\r\n    base64Decode: (input: string) => string,\r\n    refreshOn?: number,\r\n    tokenType?: AuthenticationScheme,\r\n    userAssertionHash?: string,\r\n    keyId?: string,\r\n    requestedClaims?: string,\r\n    requestedClaimsHash?: string\r\n): AccessTokenEntity {\r\n    const atEntity: AccessTokenEntity = {\r\n        homeAccountId: homeAccountId,\r\n        credentialType: CredentialType.ACCESS_TOKEN,\r\n        secret: accessToken,\r\n        cachedAt: TimeUtils.nowSeconds().toString(),\r\n        expiresOn: expiresOn.toString(),\r\n        extendedExpiresOn: extExpiresOn.toString(),\r\n        environment: environment,\r\n        clientId: clientId,\r\n        realm: tenantId,\r\n        target: scopes,\r\n        tokenType: tokenType || AuthenticationScheme.BEARER,\r\n    };\r\n\r\n    if (userAssertionHash) {\r\n        atEntity.userAssertionHash = userAssertionHash;\r\n    }\r\n\r\n    if (refreshOn) {\r\n        atEntity.refreshOn = refreshOn.toString();\r\n    }\r\n\r\n    if (requestedClaims) {\r\n        atEntity.requestedClaims = requestedClaims;\r\n        atEntity.requestedClaimsHash = requestedClaimsHash;\r\n    }\r\n\r\n    /*\r\n     * Create Access Token With Auth Scheme instead of regular access token\r\n     * Cast to lower to handle \"bearer\" from ADFS\r\n     */\r\n    if (\r\n        atEntity.tokenType?.toLowerCase() !==\r\n        AuthenticationScheme.BEARER.toLowerCase()\r\n    ) {\r\n        atEntity.credentialType = CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\r\n        switch (atEntity.tokenType) {\r\n            case AuthenticationScheme.POP:\r\n                // Make sure keyId is present and add it to credential\r\n                const tokenClaims: TokenClaims | null = extractTokenClaims(\r\n                    accessToken,\r\n                    base64Decode\r\n                );\r\n                if (!tokenClaims?.cnf?.kid) {\r\n                    throw createClientAuthError(\r\n                        ClientAuthErrorCodes.tokenClaimsCnfRequiredForSignedJwt\r\n                    );\r\n                }\r\n                atEntity.keyId = tokenClaims.cnf.kid;\r\n                break;\r\n            case AuthenticationScheme.SSH:\r\n                atEntity.keyId = keyId;\r\n        }\r\n    }\r\n\r\n    return atEntity;\r\n}\r\n\r\n/**\r\n * Create RefreshTokenEntity\r\n * @param homeAccountId\r\n * @param authenticationResult\r\n * @param clientId\r\n * @param authority\r\n */\r\nexport function createRefreshTokenEntity(\r\n    homeAccountId: string,\r\n    environment: string,\r\n    refreshToken: string,\r\n    clientId: string,\r\n    familyId?: string,\r\n    userAssertionHash?: string,\r\n    expiresOn?: number\r\n): RefreshTokenEntity {\r\n    const rtEntity: RefreshTokenEntity = {\r\n        credentialType: CredentialType.REFRESH_TOKEN,\r\n        homeAccountId: homeAccountId,\r\n        environment: environment,\r\n        clientId: clientId,\r\n        secret: refreshToken,\r\n    };\r\n\r\n    if (userAssertionHash) {\r\n        rtEntity.userAssertionHash = userAssertionHash;\r\n    }\r\n\r\n    if (familyId) {\r\n        rtEntity.familyId = familyId;\r\n    }\r\n\r\n    if (expiresOn) {\r\n        rtEntity.expiresOn = expiresOn.toString();\r\n    }\r\n\r\n    return rtEntity;\r\n}\r\n\r\nexport function isCredentialEntity(entity: object): boolean {\r\n    return (\r\n        entity.hasOwnProperty(\"homeAccountId\") &&\r\n        entity.hasOwnProperty(\"environment\") &&\r\n        entity.hasOwnProperty(\"credentialType\") &&\r\n        entity.hasOwnProperty(\"clientId\") &&\r\n        entity.hasOwnProperty(\"secret\")\r\n    );\r\n}\r\n\r\n/**\r\n * Validates an entity: checks for all expected params\r\n * @param entity\r\n */\r\nexport function isAccessTokenEntity(entity: object): boolean {\r\n    if (!entity) {\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        isCredentialEntity(entity) &&\r\n        entity.hasOwnProperty(\"realm\") &&\r\n        entity.hasOwnProperty(\"target\") &&\r\n        (entity[\"credentialType\"] === CredentialType.ACCESS_TOKEN ||\r\n            entity[\"credentialType\"] ===\r\n                CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME)\r\n    );\r\n}\r\n\r\n/**\r\n * Validates an entity: checks for all expected params\r\n * @param entity\r\n */\r\nexport function isIdTokenEntity(entity: object): boolean {\r\n    if (!entity) {\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        isCredentialEntity(entity) &&\r\n        entity.hasOwnProperty(\"realm\") &&\r\n        entity[\"credentialType\"] === CredentialType.ID_TOKEN\r\n    );\r\n}\r\n\r\n/**\r\n * Validates an entity: checks for all expected params\r\n * @param entity\r\n */\r\nexport function isRefreshTokenEntity(entity: object): boolean {\r\n    if (!entity) {\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        isCredentialEntity(entity) &&\r\n        entity[\"credentialType\"] === CredentialType.REFRESH_TOKEN\r\n    );\r\n}\r\n\r\n/**\r\n * Generate Account Id key component as per the schema: <home_account_id>-<environment>\r\n */\r\nfunction generateAccountId(credentialEntity: CredentialEntity): string {\r\n    const accountId: Array<string> = [\r\n        credentialEntity.homeAccountId,\r\n        credentialEntity.environment,\r\n    ];\r\n    return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n}\r\n\r\n/**\r\n * Generate Credential Id key component as per the schema: <credential_type>-<client_id>-<realm>\r\n */\r\nfunction generateCredentialId(credentialEntity: CredentialEntity): string {\r\n    const clientOrFamilyId =\r\n        credentialEntity.credentialType === CredentialType.REFRESH_TOKEN\r\n            ? credentialEntity.familyId || credentialEntity.clientId\r\n            : credentialEntity.clientId;\r\n    const credentialId: Array<string> = [\r\n        credentialEntity.credentialType,\r\n        clientOrFamilyId,\r\n        credentialEntity.realm || \"\",\r\n    ];\r\n\r\n    return credentialId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n}\r\n\r\n/**\r\n * Generate target key component as per schema: <target>\r\n */\r\nfunction generateTarget(credentialEntity: CredentialEntity): string {\r\n    return (credentialEntity.target || \"\").toLowerCase();\r\n}\r\n\r\n/**\r\n * Generate requested claims key component as per schema: <requestedClaims>\r\n */\r\nfunction generateClaimsHash(credentialEntity: CredentialEntity): string {\r\n    return (credentialEntity.requestedClaimsHash || \"\").toLowerCase();\r\n}\r\n\r\n/**\r\n * Generate scheme key componenet as per schema: <scheme>\r\n */\r\nfunction generateScheme(credentialEntity: CredentialEntity): string {\r\n    /*\r\n     * PoP Tokens and SSH certs include scheme in cache key\r\n     * Cast to lowercase to handle \"bearer\" from ADFS\r\n     */\r\n    return credentialEntity.tokenType &&\r\n        credentialEntity.tokenType.toLowerCase() !==\r\n            AuthenticationScheme.BEARER.toLowerCase()\r\n        ? credentialEntity.tokenType.toLowerCase()\r\n        : \"\";\r\n}\r\n\r\n/**\r\n * validates if a given cache entry is \"Telemetry\", parses <key,value>\r\n * @param key\r\n * @param entity\r\n */\r\nexport function isServerTelemetryEntity(key: string, entity?: object): boolean {\r\n    const validateKey: boolean =\r\n        key.indexOf(SERVER_TELEM_CONSTANTS.CACHE_KEY) === 0;\r\n    let validateEntity: boolean = true;\r\n\r\n    if (entity) {\r\n        validateEntity =\r\n            entity.hasOwnProperty(\"failedRequests\") &&\r\n            entity.hasOwnProperty(\"errors\") &&\r\n            entity.hasOwnProperty(\"cacheHits\");\r\n    }\r\n\r\n    return validateKey && validateEntity;\r\n}\r\n\r\n/**\r\n * validates if a given cache entry is \"Throttling\", parses <key,value>\r\n * @param key\r\n * @param entity\r\n */\r\nexport function isThrottlingEntity(key: string, entity?: object): boolean {\r\n    let validateKey: boolean = false;\r\n    if (key) {\r\n        validateKey = key.indexOf(ThrottlingConstants.THROTTLING_PREFIX) === 0;\r\n    }\r\n\r\n    let validateEntity: boolean = true;\r\n    if (entity) {\r\n        validateEntity = entity.hasOwnProperty(\"throttleTime\");\r\n    }\r\n\r\n    return validateKey && validateEntity;\r\n}\r\n\r\n/**\r\n * Generate AppMetadata Cache Key as per the schema: appmetadata-<environment>-<client_id>\r\n */\r\nexport function generateAppMetadataKey({\r\n    environment,\r\n    clientId,\r\n}: AppMetadataEntity): string {\r\n    const appMetaDataKeyArray: Array<string> = [\r\n        APP_METADATA,\r\n        environment,\r\n        clientId,\r\n    ];\r\n    return appMetaDataKeyArray\r\n        .join(Separators.CACHE_KEY_SEPARATOR)\r\n        .toLowerCase();\r\n}\r\n\r\n/*\r\n * Validates an entity: checks for all expected params\r\n * @param entity\r\n */\r\nexport function isAppMetadataEntity(key: string, entity: object): boolean {\r\n    if (!entity) {\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        key.indexOf(APP_METADATA) === 0 &&\r\n        entity.hasOwnProperty(\"clientId\") &&\r\n        entity.hasOwnProperty(\"environment\")\r\n    );\r\n}\r\n\r\n/**\r\n * Validates an entity: checks for all expected params\r\n * @param entity\r\n */\r\nexport function isAuthorityMetadataEntity(\r\n    key: string,\r\n    entity: object\r\n): boolean {\r\n    if (!entity) {\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) === 0 &&\r\n        entity.hasOwnProperty(\"aliases\") &&\r\n        entity.hasOwnProperty(\"preferred_cache\") &&\r\n        entity.hasOwnProperty(\"preferred_network\") &&\r\n        entity.hasOwnProperty(\"canonical_authority\") &&\r\n        entity.hasOwnProperty(\"authorization_endpoint\") &&\r\n        entity.hasOwnProperty(\"token_endpoint\") &&\r\n        entity.hasOwnProperty(\"issuer\") &&\r\n        entity.hasOwnProperty(\"aliasesFromNetwork\") &&\r\n        entity.hasOwnProperty(\"endpointsFromNetwork\") &&\r\n        entity.hasOwnProperty(\"expiresAt\") &&\r\n        entity.hasOwnProperty(\"jwks_uri\")\r\n    );\r\n}\r\n\r\n/**\r\n * Reset the exiresAt value\r\n */\r\nexport function generateAuthorityMetadataExpiresAt(): number {\r\n    return (\r\n        TimeUtils.nowSeconds() +\r\n        AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS\r\n    );\r\n}\r\n\r\nexport function updateAuthorityEndpointMetadata(\r\n    authorityMetadata: AuthorityMetadataEntity,\r\n    updatedValues: OpenIdConfigResponse,\r\n    fromNetwork: boolean\r\n): void {\r\n    authorityMetadata.authorization_endpoint =\r\n        updatedValues.authorization_endpoint;\r\n    authorityMetadata.token_endpoint = updatedValues.token_endpoint;\r\n    authorityMetadata.end_session_endpoint = updatedValues.end_session_endpoint;\r\n    authorityMetadata.issuer = updatedValues.issuer;\r\n    authorityMetadata.endpointsFromNetwork = fromNetwork;\r\n    authorityMetadata.jwks_uri = updatedValues.jwks_uri;\r\n}\r\n\r\nexport function updateCloudDiscoveryMetadata(\r\n    authorityMetadata: AuthorityMetadataEntity,\r\n    updatedValues: CloudDiscoveryMetadata,\r\n    fromNetwork: boolean\r\n): void {\r\n    authorityMetadata.aliases = updatedValues.aliases;\r\n    authorityMetadata.preferred_cache = updatedValues.preferred_cache;\r\n    authorityMetadata.preferred_network = updatedValues.preferred_network;\r\n    authorityMetadata.aliasesFromNetwork = fromNetwork;\r\n}\r\n\r\n/**\r\n * Returns whether or not the data needs to be refreshed\r\n */\r\nexport function isAuthorityMetadataExpired(\r\n    metadata: AuthorityMetadataEntity\r\n): boolean {\r\n    return metadata.expiresAt <= TimeUtils.nowSeconds();\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nexport const redirectUriEmpty = \"redirect_uri_empty\";\r\nexport const claimsRequestParsingError = \"claims_request_parsing_error\";\r\nexport const authorityUriInsecure = \"authority_uri_insecure\";\r\nexport const urlParseError = \"url_parse_error\";\r\nexport const urlEmptyError = \"empty_url_error\";\r\nexport const emptyInputScopesError = \"empty_input_scopes_error\";\r\nexport const invalidPromptValue = \"invalid_prompt_value\";\r\nexport const invalidClaims = \"invalid_claims\";\r\nexport const tokenRequestEmpty = \"token_request_empty\";\r\nexport const logoutRequestEmpty = \"logout_request_empty\";\r\nexport const invalidCodeChallengeMethod = \"invalid_code_challenge_method\";\r\nexport const pkceParamsMissing = \"pkce_params_missing\";\r\nexport const invalidCloudDiscoveryMetadata = \"invalid_cloud_discovery_metadata\";\r\nexport const invalidAuthorityMetadata = \"invalid_authority_metadata\";\r\nexport const untrustedAuthority = \"untrusted_authority\";\r\nexport const missingSshJwk = \"missing_ssh_jwk\";\r\nexport const missingSshKid = \"missing_ssh_kid\";\r\nexport const missingNonceAuthenticationHeader =\r\n    \"missing_nonce_authentication_header\";\r\nexport const invalidAuthenticationHeader = \"invalid_authentication_header\";\r\nexport const cannotSetOIDCOptions = \"cannot_set_OIDCOptions\";\r\nexport const cannotAllowPlatformBroker = \"cannot_allow_platform_broker\";\r\nexport const authorityMismatch = \"authority_mismatch\";\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AuthError } from \"./AuthError.js\";\r\nimport * as ClientConfigurationErrorCodes from \"./ClientConfigurationErrorCodes.js\";\r\nexport { ClientConfigurationErrorCodes };\r\n\r\nexport const ClientConfigurationErrorMessages = {\r\n    [ClientConfigurationErrorCodes.redirectUriEmpty]:\r\n        \"A redirect URI is required for all calls, and none has been set.\",\r\n    [ClientConfigurationErrorCodes.claimsRequestParsingError]:\r\n        \"Could not parse the given claims request object.\",\r\n    [ClientConfigurationErrorCodes.authorityUriInsecure]:\r\n        \"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\",\r\n    [ClientConfigurationErrorCodes.urlParseError]:\r\n        \"URL could not be parsed into appropriate segments.\",\r\n    [ClientConfigurationErrorCodes.urlEmptyError]: \"URL was empty or null.\",\r\n    [ClientConfigurationErrorCodes.emptyInputScopesError]:\r\n        \"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.\",\r\n    [ClientConfigurationErrorCodes.invalidPromptValue]:\r\n        \"Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest\",\r\n    [ClientConfigurationErrorCodes.invalidClaims]:\r\n        \"Given claims parameter must be a stringified JSON object.\",\r\n    [ClientConfigurationErrorCodes.tokenRequestEmpty]:\r\n        \"Token request was empty and not found in cache.\",\r\n    [ClientConfigurationErrorCodes.logoutRequestEmpty]:\r\n        \"The logout request was null or undefined.\",\r\n    [ClientConfigurationErrorCodes.invalidCodeChallengeMethod]:\r\n        'code_challenge_method passed is invalid. Valid values are \"plain\" and \"S256\".',\r\n    [ClientConfigurationErrorCodes.pkceParamsMissing]:\r\n        \"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request\",\r\n    [ClientConfigurationErrorCodes.invalidCloudDiscoveryMetadata]:\r\n        \"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields\",\r\n    [ClientConfigurationErrorCodes.invalidAuthorityMetadata]:\r\n        \"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.\",\r\n    [ClientConfigurationErrorCodes.untrustedAuthority]:\r\n        \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.\",\r\n    [ClientConfigurationErrorCodes.missingSshJwk]:\r\n        \"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.\",\r\n    [ClientConfigurationErrorCodes.missingSshKid]:\r\n        \"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.\",\r\n    [ClientConfigurationErrorCodes.missingNonceAuthenticationHeader]:\r\n        \"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.\",\r\n    [ClientConfigurationErrorCodes.invalidAuthenticationHeader]:\r\n        \"Invalid authentication header provided\",\r\n    [ClientConfigurationErrorCodes.cannotSetOIDCOptions]:\r\n        \"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.\",\r\n    [ClientConfigurationErrorCodes.cannotAllowPlatformBroker]:\r\n        \"Cannot set allowPlatformBroker parameter to true when not in AAD protocol mode.\",\r\n    [ClientConfigurationErrorCodes.authorityMismatch]:\r\n        \"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority.\",\r\n};\r\n\r\n/**\r\n * ClientConfigurationErrorMessage class containing string constants used by error codes and messages.\r\n * @deprecated Use ClientConfigurationErrorCodes instead\r\n */\r\nexport const ClientConfigurationErrorMessage = {\r\n    redirectUriNotSet: {\r\n        code: ClientConfigurationErrorCodes.redirectUriEmpty,\r\n        desc: ClientConfigurationErrorMessages[\r\n            ClientConfigurationErrorCodes.redirectUriEmpty\r\n        ],\r\n    },\r\n    claimsRequestParsingError: {\r\n        code: ClientConfigurationErrorCodes.claimsRequestParsingError,\r\n        desc: ClientConfigurationErrorMessages[\r\n            ClientConfigurationErrorCodes.claimsRequestParsingError\r\n        ],\r\n    },\r\n    authorityUriInsecure: {\r\n        code: ClientConfigurationErrorCodes.authorityUriInsecure,\r\n        desc: ClientConfigurationErrorMessages[\r\n            ClientConfigurationErrorCodes.authorityUriInsecure\r\n        ],\r\n    },\r\n    urlParseError: {\r\n        code: ClientConfigurationErrorCodes.urlParseError,\r\n        desc: ClientConfigurationErrorMessages[\r\n            ClientConfigurationErrorCodes.urlParseError\r\n        ],\r\n    },\r\n    urlEmptyError: {\r\n        code: ClientConfigurationErrorCodes.urlEmptyError,\r\n        desc: ClientConfigurationErrorMessages[\r\n            ClientConfigurationErrorCodes.urlEmptyError\r\n        ],\r\n    },\r\n    emptyScopesError: {\r\n        code: ClientConfigurationErrorCodes.emptyInputScopesError,\r\n        desc: ClientConfigurationErrorMessages[\r\n            ClientConfigurationErrorCodes.emptyInputScopesError\r\n        ],\r\n    },\r\n    invalidPrompt: {\r\n        code: ClientConfigurationErrorCodes.invalidPromptValue,\r\n        desc: ClientConfigurationErrorMessages[\r\n            ClientConfigurationErrorCodes.invalidPromptValue\r\n        ],\r\n    },\r\n    invalidClaimsRequest: {\r\n        code: ClientConfigurationErrorCodes.invalidClaims,\r\n        desc: ClientConfigurationErrorMessages[\r\n            ClientConfigurationErrorCodes.invalidClaims\r\n        ],\r\n    },\r\n    tokenRequestEmptyError: {\r\n        code: ClientConfigurationErrorCodes.tokenRequestEmpty,\r\n        desc: ClientConfigurationErrorMessages[\r\n            ClientConfigurationErrorCodes.tokenRequestEmpty\r\n        ],\r\n    },\r\n    logoutRequestEmptyError: {\r\n        code: ClientConfigurationErrorCodes.logoutRequestEmpty,\r\n        desc: ClientConfigurationErrorMessages[\r\n            ClientConfigurationErrorCodes.logoutRequestEmpty\r\n        ],\r\n    },\r\n    invalidCodeChallengeMethod: {\r\n        code: ClientConfigurationErrorCodes.invalidCodeChallengeMethod,\r\n        desc: ClientConfigurationErrorMessages[\r\n            ClientConfigurationErrorCodes.invalidCodeChallengeMethod\r\n        ],\r\n    },\r\n    invalidCodeChallengeParams: {\r\n        code: ClientConfigurationErrorCodes.pkceParamsMissing,\r\n        desc: ClientConfigurationErrorMessages[\r\n            ClientConfigurationErrorCodes.pkceParamsMissing\r\n        ],\r\n    },\r\n    invalidCloudDiscoveryMetadata: {\r\n        code: ClientConfigurationErrorCodes.invalidCloudDiscoveryMetadata,\r\n        desc: ClientConfigurationErrorMessages[\r\n            ClientConfigurationErrorCodes.invalidCloudDiscoveryMetadata\r\n        ],\r\n    },\r\n    invalidAuthorityMetadata: {\r\n        code: ClientConfigurationErrorCodes.invalidAuthorityMetadata,\r\n        desc: ClientConfigurationErrorMessages[\r\n            ClientConfigurationErrorCodes.invalidAuthorityMetadata\r\n        ],\r\n    },\r\n    untrustedAuthority: {\r\n        code: ClientConfigurationErrorCodes.untrustedAuthority,\r\n        desc: ClientConfigurationErrorMessages[\r\n            ClientConfigurationErrorCodes.untrustedAuthority\r\n        ],\r\n    },\r\n    missingSshJwk: {\r\n        code: ClientConfigurationErrorCodes.missingSshJwk,\r\n        desc: ClientConfigurationErrorMessages[\r\n            ClientConfigurationErrorCodes.missingSshJwk\r\n        ],\r\n    },\r\n    missingSshKid: {\r\n        code: ClientConfigurationErrorCodes.missingSshKid,\r\n        desc: ClientConfigurationErrorMessages[\r\n            ClientConfigurationErrorCodes.missingSshKid\r\n        ],\r\n    },\r\n    missingNonceAuthenticationHeader: {\r\n        code: ClientConfigurationErrorCodes.missingNonceAuthenticationHeader,\r\n        desc: ClientConfigurationErrorMessages[\r\n            ClientConfigurationErrorCodes.missingNonceAuthenticationHeader\r\n        ],\r\n    },\r\n    invalidAuthenticationHeader: {\r\n        code: ClientConfigurationErrorCodes.invalidAuthenticationHeader,\r\n        desc: ClientConfigurationErrorMessages[\r\n            ClientConfigurationErrorCodes.invalidAuthenticationHeader\r\n        ],\r\n    },\r\n    cannotSetOIDCOptions: {\r\n        code: ClientConfigurationErrorCodes.cannotSetOIDCOptions,\r\n        desc: ClientConfigurationErrorMessages[\r\n            ClientConfigurationErrorCodes.cannotSetOIDCOptions\r\n        ],\r\n    },\r\n    cannotAllowPlatformBroker: {\r\n        code: ClientConfigurationErrorCodes.cannotAllowPlatformBroker,\r\n        desc: ClientConfigurationErrorMessages[\r\n            ClientConfigurationErrorCodes.cannotAllowPlatformBroker\r\n        ],\r\n    },\r\n    authorityMismatch: {\r\n        code: ClientConfigurationErrorCodes.authorityMismatch,\r\n        desc: ClientConfigurationErrorMessages[\r\n            ClientConfigurationErrorCodes.authorityMismatch\r\n        ],\r\n    },\r\n};\r\n\r\n/**\r\n * Error thrown when there is an error in configuration of the MSAL.js library.\r\n */\r\nexport class ClientConfigurationError extends AuthError {\r\n    constructor(errorCode: string) {\r\n        super(errorCode, ClientConfigurationErrorMessages[errorCode]);\r\n        this.name = \"ClientConfigurationError\";\r\n        Object.setPrototypeOf(this, ClientConfigurationError.prototype);\r\n    }\r\n}\r\n\r\nexport function createClientConfigurationError(\r\n    errorCode: string\r\n): ClientConfigurationError {\r\n    return new ClientConfigurationError(errorCode);\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class StringUtils {\r\n    /**\r\n     * Check if stringified object is empty\r\n     * @param strObj\r\n     */\r\n    static isEmptyObj(strObj?: string): boolean {\r\n        if (strObj) {\r\n            try {\r\n                const obj = JSON.parse(strObj);\r\n                return Object.keys(obj).length === 0;\r\n            } catch (e) {}\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static startsWith(str: string, search: string): boolean {\r\n        return str.indexOf(search) === 0;\r\n    }\r\n\r\n    static endsWith(str: string, search: string): boolean {\r\n        return (\r\n            str.length >= search.length &&\r\n            str.lastIndexOf(search) === str.length - search.length\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Parses string into an object.\r\n     *\r\n     * @param query\r\n     */\r\n    static queryStringToObject<T>(query: string): T {\r\n        const obj: {} = {};\r\n        const params = query.split(\"&\");\r\n        const decode = (s: string) => decodeURIComponent(s.replace(/\\+/g, \" \"));\r\n        params.forEach((pair) => {\r\n            if (pair.trim()) {\r\n                const [key, value] = pair.split(/=(.+)/g, 2); // Split on the first occurence of the '=' character\r\n                if (key && value) {\r\n                    obj[decode(key)] = decode(value);\r\n                }\r\n            }\r\n        });\r\n        return obj as T;\r\n    }\r\n\r\n    /**\r\n     * Trims entries in an array.\r\n     *\r\n     * @param arr\r\n     */\r\n    static trimArrayEntries(arr: Array<string>): Array<string> {\r\n        return arr.map((entry) => entry.trim());\r\n    }\r\n\r\n    /**\r\n     * Removes empty strings from array\r\n     * @param arr\r\n     */\r\n    static removeEmptyStringsFromArray(arr: Array<string>): Array<string> {\r\n        return arr.filter((entry) => {\r\n            return !!entry;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Attempts to parse a string into JSON\r\n     * @param str\r\n     */\r\n    static jsonParseHelper<T>(str: string): T | null {\r\n        try {\r\n            return JSON.parse(str) as T;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Tests if a given string matches a given pattern, with support for wildcards and queries.\r\n     * @param pattern Wildcard pattern to string match. Supports \"*\" for wildcards and \"?\" for queries\r\n     * @param input String to match against\r\n     */\r\n    static matchPattern(pattern: string, input: string): boolean {\r\n        /**\r\n         * Wildcard support: https://stackoverflow.com/a/3117248/4888559\r\n         * Queries: replaces \"?\" in string with escaped \"\\?\" for regex test\r\n         */\r\n        // eslint-disable-next-line security/detect-non-literal-regexp\r\n        const regex: RegExp = new RegExp(\r\n            pattern\r\n                .replace(/\\\\/g, \"\\\\\\\\\")\r\n                .replace(/\\*/g, \"[^ ]*\")\r\n                .replace(/\\?/g, \"\\\\?\")\r\n        );\r\n\r\n        return regex.test(input);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    createClientConfigurationError,\r\n    ClientConfigurationErrorCodes,\r\n} from \"../error/ClientConfigurationError.js\";\r\nimport { StringUtils } from \"../utils/StringUtils.js\";\r\nimport {\r\n    ClientAuthErrorCodes,\r\n    createClientAuthError,\r\n} from \"../error/ClientAuthError.js\";\r\nimport { Constants, OIDC_SCOPES } from \"../utils/Constants.js\";\r\n\r\n/**\r\n * The ScopeSet class creates a set of scopes. Scopes are case-insensitive, unique values, so the Set object in JS makes\r\n * the most sense to implement for this class. All scopes are trimmed and converted to lower case strings in intersection and union functions\r\n * to ensure uniqueness of strings.\r\n */\r\nexport class ScopeSet {\r\n    // Scopes as a Set of strings\r\n    private scopes: Set<string>;\r\n\r\n    constructor(inputScopes: Array<string>) {\r\n        // Filter empty string and null/undefined array items\r\n        const scopeArr = inputScopes\r\n            ? StringUtils.trimArrayEntries([...inputScopes])\r\n            : [];\r\n        const filteredInput = scopeArr\r\n            ? StringUtils.removeEmptyStringsFromArray(scopeArr)\r\n            : [];\r\n\r\n        // Check if scopes array has at least one member\r\n        if (!filteredInput || !filteredInput.length) {\r\n            throw createClientConfigurationError(\r\n                ClientConfigurationErrorCodes.emptyInputScopesError\r\n            );\r\n        }\r\n\r\n        this.scopes = new Set<string>(); // Iterator in constructor not supported by IE11\r\n        filteredInput.forEach((scope) => this.scopes.add(scope));\r\n    }\r\n\r\n    /**\r\n     * Factory method to create ScopeSet from space-delimited string\r\n     * @param inputScopeString\r\n     * @param appClientId\r\n     * @param scopesRequired\r\n     */\r\n    static fromString(inputScopeString: string): ScopeSet {\r\n        const scopeString = inputScopeString || Constants.EMPTY_STRING;\r\n        const inputScopes: Array<string> = scopeString.split(\" \");\r\n        return new ScopeSet(inputScopes);\r\n    }\r\n\r\n    /**\r\n     * Creates the set of scopes to search for in cache lookups\r\n     * @param inputScopeString\r\n     * @returns\r\n     */\r\n    static createSearchScopes(inputScopeString: Array<string>): ScopeSet {\r\n        const scopeSet = new ScopeSet(inputScopeString);\r\n        if (!scopeSet.containsOnlyOIDCScopes()) {\r\n            scopeSet.removeOIDCScopes();\r\n        } else {\r\n            scopeSet.removeScope(Constants.OFFLINE_ACCESS_SCOPE);\r\n        }\r\n\r\n        return scopeSet;\r\n    }\r\n\r\n    /**\r\n     * Check if a given scope is present in this set of scopes.\r\n     * @param scope\r\n     */\r\n    containsScope(scope: string): boolean {\r\n        const lowerCaseScopes = this.printScopesLowerCase().split(\" \");\r\n        const lowerCaseScopesSet = new ScopeSet(lowerCaseScopes);\r\n        // compare lowercase scopes\r\n        return scope\r\n            ? lowerCaseScopesSet.scopes.has(scope.toLowerCase())\r\n            : false;\r\n    }\r\n\r\n    /**\r\n     * Check if a set of scopes is present in this set of scopes.\r\n     * @param scopeSet\r\n     */\r\n    containsScopeSet(scopeSet: ScopeSet): boolean {\r\n        if (!scopeSet || scopeSet.scopes.size <= 0) {\r\n            return false;\r\n        }\r\n\r\n        return (\r\n            this.scopes.size >= scopeSet.scopes.size &&\r\n            scopeSet.asArray().every((scope) => this.containsScope(scope))\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Check if set of scopes contains only the defaults\r\n     */\r\n    containsOnlyOIDCScopes(): boolean {\r\n        let defaultScopeCount = 0;\r\n        OIDC_SCOPES.forEach((defaultScope: string) => {\r\n            if (this.containsScope(defaultScope)) {\r\n                defaultScopeCount += 1;\r\n            }\r\n        });\r\n\r\n        return this.scopes.size === defaultScopeCount;\r\n    }\r\n\r\n    /**\r\n     * Appends single scope if passed\r\n     * @param newScope\r\n     */\r\n    appendScope(newScope: string): void {\r\n        if (newScope) {\r\n            this.scopes.add(newScope.trim());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Appends multiple scopes if passed\r\n     * @param newScopes\r\n     */\r\n    appendScopes(newScopes: Array<string>): void {\r\n        try {\r\n            newScopes.forEach((newScope) => this.appendScope(newScope));\r\n        } catch (e) {\r\n            throw createClientAuthError(\r\n                ClientAuthErrorCodes.cannotAppendScopeSet\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes element from set of scopes.\r\n     * @param scope\r\n     */\r\n    removeScope(scope: string): void {\r\n        if (!scope) {\r\n            throw createClientAuthError(\r\n                ClientAuthErrorCodes.cannotRemoveEmptyScope\r\n            );\r\n        }\r\n        this.scopes.delete(scope.trim());\r\n    }\r\n\r\n    /**\r\n     * Removes default scopes from set of scopes\r\n     * Primarily used to prevent cache misses if the default scopes are not returned from the server\r\n     */\r\n    removeOIDCScopes(): void {\r\n        OIDC_SCOPES.forEach((defaultScope: string) => {\r\n            this.scopes.delete(defaultScope);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Combines an array of scopes with the current set of scopes.\r\n     * @param otherScopes\r\n     */\r\n    unionScopeSets(otherScopes: ScopeSet): Set<string> {\r\n        if (!otherScopes) {\r\n            throw createClientAuthError(\r\n                ClientAuthErrorCodes.emptyInputScopeSet\r\n            );\r\n        }\r\n        const unionScopes = new Set<string>(); // Iterator in constructor not supported in IE11\r\n        otherScopes.scopes.forEach((scope) =>\r\n            unionScopes.add(scope.toLowerCase())\r\n        );\r\n        this.scopes.forEach((scope) => unionScopes.add(scope.toLowerCase()));\r\n        return unionScopes;\r\n    }\r\n\r\n    /**\r\n     * Check if scopes intersect between this set and another.\r\n     * @param otherScopes\r\n     */\r\n    intersectingScopeSets(otherScopes: ScopeSet): boolean {\r\n        if (!otherScopes) {\r\n            throw createClientAuthError(\r\n                ClientAuthErrorCodes.emptyInputScopeSet\r\n            );\r\n        }\r\n\r\n        // Do not allow OIDC scopes to be the only intersecting scopes\r\n        if (!otherScopes.containsOnlyOIDCScopes()) {\r\n            otherScopes.removeOIDCScopes();\r\n        }\r\n        const unionScopes = this.unionScopeSets(otherScopes);\r\n        const sizeOtherScopes = otherScopes.getScopeCount();\r\n        const sizeThisScopes = this.getScopeCount();\r\n        const sizeUnionScopes = unionScopes.size;\r\n        return sizeUnionScopes < sizeThisScopes + sizeOtherScopes;\r\n    }\r\n\r\n    /**\r\n     * Returns size of set of scopes.\r\n     */\r\n    getScopeCount(): number {\r\n        return this.scopes.size;\r\n    }\r\n\r\n    /**\r\n     * Returns the scopes as an array of string values\r\n     */\r\n    asArray(): Array<string> {\r\n        const array: Array<string> = [];\r\n        this.scopes.forEach((val) => array.push(val));\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * Prints scopes into a space-delimited string\r\n     */\r\n    printScopes(): string {\r\n        if (this.scopes) {\r\n            const scopeArr = this.asArray();\r\n            return scopeArr.join(\" \");\r\n        }\r\n        return Constants.EMPTY_STRING;\r\n    }\r\n\r\n    /**\r\n     * Prints scopes into a space-delimited lower-case string (used for caching)\r\n     */\r\n    printScopesLowerCase(): string {\r\n        return this.printScopes().toLowerCase();\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    createClientAuthError,\r\n    ClientAuthErrorCodes,\r\n} from \"../error/ClientAuthError.js\";\r\nimport { Separators, Constants } from \"../utils/Constants.js\";\r\n\r\n/**\r\n * Client info object which consists of two IDs. Need to add more info here.\r\n */\r\nexport type ClientInfo = {\r\n    uid: string;\r\n    utid: string;\r\n};\r\n\r\n/**\r\n * Function to build a client info object from server clientInfo string\r\n * @param rawClientInfo\r\n * @param crypto\r\n */\r\nexport function buildClientInfo(\r\n    rawClientInfo: string,\r\n    base64Decode: (input: string) => string\r\n): ClientInfo {\r\n    if (!rawClientInfo) {\r\n        throw createClientAuthError(ClientAuthErrorCodes.clientInfoEmptyError);\r\n    }\r\n\r\n    try {\r\n        const decodedClientInfo: string = base64Decode(rawClientInfo);\r\n        return JSON.parse(decodedClientInfo) as ClientInfo;\r\n    } catch (e) {\r\n        throw createClientAuthError(\r\n            ClientAuthErrorCodes.clientInfoDecodingError\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * Function to build a client info object from cached homeAccountId string\r\n * @param homeAccountId\r\n */\r\nexport function buildClientInfoFromHomeAccountId(\r\n    homeAccountId: string\r\n): ClientInfo {\r\n    if (!homeAccountId) {\r\n        throw createClientAuthError(\r\n            ClientAuthErrorCodes.clientInfoDecodingError\r\n        );\r\n    }\r\n    const clientInfoParts: string[] = homeAccountId.split(\r\n        Separators.CLIENT_INFO_SEPARATOR,\r\n        2\r\n    );\r\n    return {\r\n        uid: clientInfoParts[0],\r\n        utid:\r\n            clientInfoParts.length < 2\r\n                ? Constants.EMPTY_STRING\r\n                : clientInfoParts[1],\r\n    };\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { TokenClaims } from \"./TokenClaims.js\";\r\n/**\r\n * Account object with the following signature:\r\n * - homeAccountId          - Home account identifier for this account object\r\n * - environment            - Entity which issued the token represented by the domain of the issuer (e.g. login.microsoftonline.com)\r\n * - tenantId               - Full tenant or organizational id that this account belongs to\r\n * - username               - preferred_username claim of the id_token that represents this account\r\n * - localAccountId         - Local, tenant-specific account identifer for this account object, usually used in legacy cases\r\n * - name                   - Full name for the account, including given name and family name\r\n * - idToken                - raw ID token\r\n * - idTokenClaims          - Object contains claims from ID token\r\n * - nativeAccountId        - The user's native account ID\r\n * - tenantProfiles         - Map of tenant profile objects for each tenant that the account has authenticated with in the browser\r\n */\r\nexport type AccountInfo = {\r\n    homeAccountId: string;\r\n    environment: string;\r\n    tenantId: string;\r\n    username: string;\r\n    localAccountId: string;\r\n    name?: string;\r\n    idToken?: string;\r\n    idTokenClaims?: TokenClaims & {\r\n        [key: string]:\r\n            | string\r\n            | number\r\n            | string[]\r\n            | object\r\n            | undefined\r\n            | unknown;\r\n    };\r\n    nativeAccountId?: string;\r\n    authorityType?: string;\r\n    tenantProfiles?: Map<string, TenantProfile>;\r\n};\r\n\r\n/**\r\n * Account details that vary across tenants for the same user\r\n */\r\nexport type TenantProfile = Pick<\r\n    AccountInfo,\r\n    \"tenantId\" | \"localAccountId\" | \"name\"\r\n> & {\r\n    /**\r\n     * - isHomeTenant           - True if this is the home tenant profile of the account, false if it's a guest tenant profile\r\n     */\r\n    isHomeTenant?: boolean;\r\n};\r\n\r\nexport type ActiveAccountFilters = {\r\n    homeAccountId: string;\r\n    localAccountId: string;\r\n    tenantId?: string;\r\n};\r\n\r\n/**\r\n * Returns true if tenantId matches the utid portion of homeAccountId\r\n * @param tenantId\r\n * @param homeAccountId\r\n * @returns\r\n */\r\nexport function tenantIdMatchesHomeTenant(\r\n    tenantId?: string,\r\n    homeAccountId?: string\r\n): boolean {\r\n    return (\r\n        !!tenantId &&\r\n        !!homeAccountId &&\r\n        tenantId === homeAccountId.split(\".\")[1]\r\n    );\r\n}\r\n\r\n/**\r\n * Build tenant profile\r\n * @param homeAccountId - Home account identifier for this account object\r\n * @param localAccountId - Local account identifer for this account object\r\n * @param tenantId - Full tenant or organizational id that this account belongs to\r\n * @param idTokenClaims - Claims from the ID token\r\n * @returns\r\n */\r\nexport function buildTenantProfile(\r\n    homeAccountId: string,\r\n    localAccountId: string,\r\n    tenantId: string,\r\n    idTokenClaims?: TokenClaims\r\n): TenantProfile {\r\n    if (idTokenClaims) {\r\n        const { oid, sub, tid, name, tfp, acr } = idTokenClaims;\r\n\r\n        /**\r\n         * Since there is no way to determine if the authority is AAD or B2C, we exhaust all the possible claims that can serve as tenant ID with the following precedence:\r\n         * tid - TenantID claim that identifies the tenant that issued the token in AAD. Expected in all AAD ID tokens, not present in B2C ID Tokens.\r\n         * tfp - Trust Framework Policy claim that identifies the policy that was used to authenticate the user. Functions as tenant for B2C scenarios.\r\n         * acr - Authentication Context Class Reference claim used only with older B2C policies. Fallback in case tfp is not present, but likely won't be present anyway.\r\n         */\r\n        const tenantId = tid || tfp || acr || \"\";\r\n\r\n        return {\r\n            tenantId: tenantId,\r\n            localAccountId: oid || sub || \"\",\r\n            name: name,\r\n            isHomeTenant: tenantIdMatchesHomeTenant(tenantId, homeAccountId),\r\n        };\r\n    } else {\r\n        return {\r\n            tenantId,\r\n            localAccountId,\r\n            isHomeTenant: tenantIdMatchesHomeTenant(tenantId, homeAccountId),\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * Replaces account info that varies by tenant profile sourced from the ID token claims passed in with the tenant-specific account info\r\n * @param baseAccountInfo\r\n * @param idTokenClaims\r\n * @returns\r\n */\r\nexport function updateAccountTenantProfileData(\r\n    baseAccountInfo: AccountInfo,\r\n    tenantProfile?: TenantProfile,\r\n    idTokenClaims?: TokenClaims,\r\n    idTokenSecret?: string\r\n): AccountInfo {\r\n    let updatedAccountInfo = baseAccountInfo;\r\n    // Tenant Profile overrides passed in account info\r\n    if (tenantProfile) {\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        const { isHomeTenant, ...tenantProfileOverride } = tenantProfile;\r\n        updatedAccountInfo = { ...baseAccountInfo, ...tenantProfileOverride };\r\n    }\r\n\r\n    // ID token claims override passed in account info and tenant profile\r\n    if (idTokenClaims) {\r\n        // Ignore isHomeTenant, loginHint, and sid which are part of tenant profile but not base account info\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        const { isHomeTenant, ...claimsSourcedTenantProfile } =\r\n            buildTenantProfile(\r\n                baseAccountInfo.homeAccountId,\r\n                baseAccountInfo.localAccountId,\r\n                baseAccountInfo.tenantId,\r\n                idTokenClaims\r\n            );\r\n\r\n        updatedAccountInfo = {\r\n            ...updatedAccountInfo,\r\n            ...claimsSourcedTenantProfile,\r\n            idTokenClaims: idTokenClaims,\r\n            idToken: idTokenSecret,\r\n        };\r\n\r\n        return updatedAccountInfo;\r\n    }\r\n\r\n    return updatedAccountInfo;\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n/**\r\n * Authority types supported by MSAL.\r\n */\r\nexport const AuthorityType = {\r\n    Default: 0,\r\n    Adfs: 1,\r\n    Dsts: 2,\r\n    Ciam: 3,\r\n} as const;\r\nexport type AuthorityType = (typeof AuthorityType)[keyof typeof AuthorityType];\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n/**\r\n * Type which describes Id Token claims known by MSAL.\r\n */\r\nexport type TokenClaims = {\r\n    /**\r\n     * Audience\r\n     */\r\n    aud?: string;\r\n    /**\r\n     * Issuer\r\n     */\r\n    iss?: string;\r\n    /**\r\n     * Issued at\r\n     */\r\n    iat?: number;\r\n    /**\r\n     * Not valid before\r\n     */\r\n    nbf?: number;\r\n    /**\r\n     * Immutable object identifier, this ID uniquely identifies the user across applications\r\n     */\r\n    oid?: string;\r\n    /**\r\n     * Immutable subject identifier, this is a pairwise identifier - it is unique to a particular application ID\r\n     */\r\n    sub?: string;\r\n    /**\r\n     * Users' tenant or '9188040d-6c67-4c5b-b112-36a304b66dad' for personal accounts.\r\n     */\r\n    tid?: string;\r\n    /**\r\n     * Trusted Framework Policy (B2C) The name of the policy that was used to acquire the ID token.\r\n     */\r\n    tfp?: string;\r\n    /**\r\n     * Authentication Context Class Reference (B2C) Used only with older policies.\r\n     */\r\n    acr?: string;\r\n    ver?: string;\r\n    upn?: string;\r\n    preferred_username?: string;\r\n    login_hint?: string;\r\n    emails?: string[];\r\n    name?: string;\r\n    nonce?: string;\r\n    /**\r\n     * Expiration\r\n     */\r\n    exp?: number;\r\n    home_oid?: string;\r\n    sid?: string;\r\n    cloud_instance_host_name?: string;\r\n    cnf?: {\r\n        kid: string;\r\n    };\r\n    x5c_ca?: string[];\r\n    ts?: number;\r\n    at?: string;\r\n    u?: string;\r\n    p?: string;\r\n    m?: string;\r\n    roles?: string[];\r\n    amr?: string[];\r\n    idp?: string;\r\n    auth_time?: number;\r\n    /**\r\n     * \tRegion of the resource tenant\r\n     */\r\n    tenant_region_scope?: string;\r\n    tenant_region_sub_scope?: string;\r\n};\r\n\r\n/**\r\n * Gets tenantId from available ID token claims to set as credential realm with the following precedence:\r\n * 1. tid - if the token is acquired from an Azure AD tenant tid will be present\r\n * 2. tfp - if the token is acquired from a modern B2C tenant tfp should be present\r\n * 3. acr - if the token is acquired from a legacy B2C tenant acr should be present\r\n * Downcased to match the realm case-insensitive comparison requirements\r\n * @param idTokenClaims\r\n * @returns\r\n */\r\nexport function getTenantIdFromIdTokenClaims(\r\n    idTokenClaims?: TokenClaims\r\n): string | null {\r\n    if (idTokenClaims) {\r\n        const tenantId =\r\n            idTokenClaims.tid || idTokenClaims.tfp || idTokenClaims.acr;\r\n        return tenantId || null;\r\n    }\r\n    return null;\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { CacheAccountType, Separators } from \"../../utils/Constants.js\";\r\nimport { Authority } from \"../../authority/Authority.js\";\r\nimport { ICrypto } from \"../../crypto/ICrypto.js\";\r\nimport { ClientInfo, buildClientInfo } from \"../../account/ClientInfo.js\";\r\nimport {\r\n    AccountInfo,\r\n    TenantProfile,\r\n    buildTenantProfile,\r\n} from \"../../account/AccountInfo.js\";\r\nimport {\r\n    createClientAuthError,\r\n    ClientAuthErrorCodes,\r\n} from \"../../error/ClientAuthError.js\";\r\nimport { AuthorityType } from \"../../authority/AuthorityType.js\";\r\nimport { Logger } from \"../../logger/Logger.js\";\r\nimport {\r\n    TokenClaims,\r\n    getTenantIdFromIdTokenClaims,\r\n} from \"../../account/TokenClaims.js\";\r\nimport { ProtocolMode } from \"../../authority/ProtocolMode.js\";\r\n\r\n/**\r\n * Type that defines required and optional parameters for an Account field (based on universal cache schema implemented by all MSALs).\r\n *\r\n * Key : Value Schema\r\n *\r\n * Key: <home_account_id>-<environment>-<realm*>\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      localAccountId: Original tenant-specific accountID, usually used for legacy cases\r\n *      username: primary username that represents the user, usually corresponds to preferred_username in the v2 endpt\r\n *      authorityType: Accounts authority type as a string\r\n *      name: Full name for the account, including given name and family name,\r\n *      lastModificationTime: last time this entity was modified in the cache\r\n *      lastModificationApp:\r\n *      nativeAccountId: Account identifier on the native device\r\n *      tenantProfiles: Array of tenant profile objects for each tenant that the account has authenticated with in the browser\r\n * }\r\n * @internal\r\n */\r\nexport class AccountEntity {\r\n    homeAccountId: string;\r\n    environment: string;\r\n    realm: string;\r\n    localAccountId: string;\r\n    username: string;\r\n    authorityType: string;\r\n    clientInfo?: string;\r\n    name?: string;\r\n    lastModificationTime?: string;\r\n    lastModificationApp?: string;\r\n    cloudGraphHostName?: string;\r\n    msGraphHost?: string;\r\n    nativeAccountId?: string;\r\n    tenantProfiles?: Array<TenantProfile>;\r\n\r\n    /**\r\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\r\n     */\r\n    generateAccountId(): string {\r\n        const accountId: Array<string> = [this.homeAccountId, this.environment];\r\n        return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    }\r\n\r\n    /**\r\n     * Generate Account Cache Key as per the schema: <home_account_id>-<environment>-<realm*>\r\n     */\r\n    generateAccountKey(): string {\r\n        return AccountEntity.generateAccountCacheKey({\r\n            homeAccountId: this.homeAccountId,\r\n            environment: this.environment,\r\n            tenantId: this.realm,\r\n            username: this.username,\r\n            localAccountId: this.localAccountId,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Returns the AccountInfo interface for this account.\r\n     */\r\n    getAccountInfo(): AccountInfo {\r\n        return {\r\n            homeAccountId: this.homeAccountId,\r\n            environment: this.environment,\r\n            tenantId: this.realm,\r\n            username: this.username,\r\n            localAccountId: this.localAccountId,\r\n            name: this.name,\r\n            nativeAccountId: this.nativeAccountId,\r\n            authorityType: this.authorityType,\r\n            // Deserialize tenant profiles array into a Map\r\n            tenantProfiles: new Map(\r\n                (this.tenantProfiles || []).map((tenantProfile) => {\r\n                    return [tenantProfile.tenantId, tenantProfile];\r\n                })\r\n            ),\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Returns true if the account entity is in single tenant format (outdated), false otherwise\r\n     */\r\n    isSingleTenant(): boolean {\r\n        return !this.tenantProfiles;\r\n    }\r\n\r\n    /**\r\n     * Generates account key from interface\r\n     * @param accountInterface\r\n     */\r\n    static generateAccountCacheKey(accountInterface: AccountInfo): string {\r\n        const homeTenantId = accountInterface.homeAccountId.split(\".\")[1];\r\n        const accountKey = [\r\n            accountInterface.homeAccountId,\r\n            accountInterface.environment || \"\",\r\n            homeTenantId || accountInterface.tenantId || \"\",\r\n        ];\r\n\r\n        return accountKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    }\r\n\r\n    /**\r\n     * Build Account cache from IdToken, clientInfo and authority/policy. Associated with AAD.\r\n     * @param accountDetails\r\n     */\r\n    static createAccount(\r\n        accountDetails: {\r\n            homeAccountId: string;\r\n            idTokenClaims?: TokenClaims;\r\n            clientInfo?: string;\r\n            cloudGraphHostName?: string;\r\n            msGraphHost?: string;\r\n            environment?: string;\r\n            nativeAccountId?: string;\r\n            tenantProfiles?: Array<TenantProfile>;\r\n        },\r\n        authority: Authority,\r\n        base64Decode?: (input: string) => string\r\n    ): AccountEntity {\r\n        const account: AccountEntity = new AccountEntity();\r\n\r\n        if (authority.authorityType === AuthorityType.Adfs) {\r\n            account.authorityType = CacheAccountType.ADFS_ACCOUNT_TYPE;\r\n        } else if (authority.protocolMode === ProtocolMode.AAD) {\r\n            account.authorityType = CacheAccountType.MSSTS_ACCOUNT_TYPE;\r\n        } else {\r\n            account.authorityType = CacheAccountType.GENERIC_ACCOUNT_TYPE;\r\n        }\r\n\r\n        let clientInfo: ClientInfo | undefined;\r\n\r\n        if (accountDetails.clientInfo && base64Decode) {\r\n            clientInfo = buildClientInfo(\r\n                accountDetails.clientInfo,\r\n                base64Decode\r\n            );\r\n        }\r\n\r\n        account.clientInfo = accountDetails.clientInfo;\r\n        account.homeAccountId = accountDetails.homeAccountId;\r\n        account.nativeAccountId = accountDetails.nativeAccountId;\r\n\r\n        const env =\r\n            accountDetails.environment ||\r\n            (authority && authority.getPreferredCache());\r\n\r\n        if (!env) {\r\n            throw createClientAuthError(\r\n                ClientAuthErrorCodes.invalidCacheEnvironment\r\n            );\r\n        }\r\n\r\n        account.environment = env;\r\n        // non AAD scenarios can have empty realm\r\n        account.realm =\r\n            clientInfo?.utid ||\r\n            getTenantIdFromIdTokenClaims(accountDetails.idTokenClaims) ||\r\n            \"\";\r\n\r\n        // How do you account for MSA CID here?\r\n        account.localAccountId =\r\n            clientInfo?.uid ||\r\n            accountDetails.idTokenClaims?.oid ||\r\n            accountDetails.idTokenClaims?.sub ||\r\n            \"\";\r\n\r\n        /*\r\n         * In B2C scenarios the emails claim is used instead of preferred_username and it is an array.\r\n         * In most cases it will contain a single email. This field should not be relied upon if a custom\r\n         * policy is configured to return more than 1 email.\r\n         */\r\n        const preferredUsername =\r\n            accountDetails.idTokenClaims?.preferred_username ||\r\n            accountDetails.idTokenClaims?.upn;\r\n        const email = accountDetails.idTokenClaims?.emails\r\n            ? accountDetails.idTokenClaims.emails[0]\r\n            : null;\r\n\r\n        account.username = preferredUsername || email || \"\";\r\n        account.name = accountDetails.idTokenClaims?.name || \"\";\r\n\r\n        account.cloudGraphHostName = accountDetails.cloudGraphHostName;\r\n        account.msGraphHost = accountDetails.msGraphHost;\r\n\r\n        if (accountDetails.tenantProfiles) {\r\n            account.tenantProfiles = accountDetails.tenantProfiles;\r\n        } else {\r\n            const tenantProfile = buildTenantProfile(\r\n                accountDetails.homeAccountId,\r\n                account.localAccountId,\r\n                account.realm,\r\n                accountDetails.idTokenClaims\r\n            );\r\n            account.tenantProfiles = [tenantProfile];\r\n        }\r\n\r\n        return account;\r\n    }\r\n\r\n    /**\r\n     * Creates an AccountEntity object from AccountInfo\r\n     * @param accountInfo\r\n     * @param cloudGraphHostName\r\n     * @param msGraphHost\r\n     * @returns\r\n     */\r\n    static createFromAccountInfo(\r\n        accountInfo: AccountInfo,\r\n        cloudGraphHostName?: string,\r\n        msGraphHost?: string\r\n    ): AccountEntity {\r\n        const account: AccountEntity = new AccountEntity();\r\n\r\n        account.authorityType =\r\n            accountInfo.authorityType || CacheAccountType.GENERIC_ACCOUNT_TYPE;\r\n        account.homeAccountId = accountInfo.homeAccountId;\r\n        account.localAccountId = accountInfo.localAccountId;\r\n        account.nativeAccountId = accountInfo.nativeAccountId;\r\n\r\n        account.realm = accountInfo.tenantId;\r\n        account.environment = accountInfo.environment;\r\n\r\n        account.username = accountInfo.username;\r\n        account.name = accountInfo.name;\r\n\r\n        account.cloudGraphHostName = cloudGraphHostName;\r\n        account.msGraphHost = msGraphHost;\r\n        // Serialize tenant profiles map into an array\r\n        account.tenantProfiles = Array.from(\r\n            accountInfo.tenantProfiles?.values() || []\r\n        );\r\n\r\n        return account;\r\n    }\r\n\r\n    /**\r\n     * Generate HomeAccountId from server response\r\n     * @param serverClientInfo\r\n     * @param authType\r\n     */\r\n    static generateHomeAccountId(\r\n        serverClientInfo: string,\r\n        authType: AuthorityType,\r\n        logger: Logger,\r\n        cryptoObj: ICrypto,\r\n        idTokenClaims?: TokenClaims\r\n    ): string {\r\n        // since ADFS/DSTS do not have tid and does not set client_info\r\n        if (\r\n            !(\r\n                authType === AuthorityType.Adfs ||\r\n                authType === AuthorityType.Dsts\r\n            )\r\n        ) {\r\n            // for cases where there is clientInfo\r\n            if (serverClientInfo) {\r\n                try {\r\n                    const clientInfo = buildClientInfo(\r\n                        serverClientInfo,\r\n                        cryptoObj.base64Decode\r\n                    );\r\n                    if (clientInfo.uid && clientInfo.utid) {\r\n                        return `${clientInfo.uid}.${clientInfo.utid}`;\r\n                    }\r\n                } catch (e) {}\r\n            }\r\n            logger.warning(\"No client info in response\");\r\n        }\r\n\r\n        // default to \"sub\" claim\r\n        return idTokenClaims?.sub || \"\";\r\n    }\r\n\r\n    /**\r\n     * Validates an entity: checks for all expected params\r\n     * @param entity\r\n     */\r\n    static isAccountEntity(entity: object): boolean {\r\n        if (!entity) {\r\n            return false;\r\n        }\r\n\r\n        return (\r\n            entity.hasOwnProperty(\"homeAccountId\") &&\r\n            entity.hasOwnProperty(\"environment\") &&\r\n            entity.hasOwnProperty(\"realm\") &&\r\n            entity.hasOwnProperty(\"localAccountId\") &&\r\n            entity.hasOwnProperty(\"username\") &&\r\n            entity.hasOwnProperty(\"authorityType\")\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Helper function to determine whether 2 accountInfo objects represent the same account\r\n     * @param accountA\r\n     * @param accountB\r\n     * @param compareClaims - If set to true idTokenClaims will also be compared to determine account equality\r\n     */\r\n    static accountInfoIsEqual(\r\n        accountA: AccountInfo | null,\r\n        accountB: AccountInfo | null,\r\n        compareClaims?: boolean\r\n    ): boolean {\r\n        if (!accountA || !accountB) {\r\n            return false;\r\n        }\r\n\r\n        let claimsMatch = true; // default to true so as to not fail comparison below if compareClaims: false\r\n        if (compareClaims) {\r\n            const accountAClaims = (accountA.idTokenClaims ||\r\n                {}) as TokenClaims;\r\n            const accountBClaims = (accountB.idTokenClaims ||\r\n                {}) as TokenClaims;\r\n\r\n            // issued at timestamp and nonce are expected to change each time a new id token is acquired\r\n            claimsMatch =\r\n                accountAClaims.iat === accountBClaims.iat &&\r\n                accountAClaims.nonce === accountBClaims.nonce;\r\n        }\r\n\r\n        return (\r\n            accountA.homeAccountId === accountB.homeAccountId &&\r\n            accountA.localAccountId === accountB.localAccountId &&\r\n            accountA.username === accountB.username &&\r\n            accountA.tenantId === accountB.tenantId &&\r\n            accountA.environment === accountB.environment &&\r\n            accountA.nativeAccountId === accountB.nativeAccountId &&\r\n            claimsMatch\r\n        );\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { ServerAuthorizationCodeResponse } from \"../response/ServerAuthorizationCodeResponse.js\";\r\nimport {\r\n    ClientAuthErrorCodes,\r\n    createClientAuthError,\r\n} from \"../error/ClientAuthError.js\";\r\n\r\n/**\r\n * Parses hash string from given string. Returns empty string if no hash symbol is found.\r\n * @param hashString\r\n */\r\nexport function stripLeadingHashOrQuery(responseString: string): string {\r\n    if (responseString.startsWith(\"#/\")) {\r\n        return responseString.substring(2);\r\n    } else if (\r\n        responseString.startsWith(\"#\") ||\r\n        responseString.startsWith(\"?\")\r\n    ) {\r\n        return responseString.substring(1);\r\n    }\r\n\r\n    return responseString;\r\n}\r\n\r\n/**\r\n * Returns URL hash as server auth code response object.\r\n */\r\nexport function getDeserializedResponse(\r\n    responseString: string\r\n): ServerAuthorizationCodeResponse | null {\r\n    // Check if given hash is empty\r\n    if (!responseString || responseString.indexOf(\"=\") < 0) {\r\n        return null;\r\n    }\r\n    try {\r\n        // Strip the # or ? symbol if present\r\n        const normalizedResponse = stripLeadingHashOrQuery(responseString);\r\n        // If # symbol was not present, above will return empty string, so give original hash value\r\n        const deserializedHash: ServerAuthorizationCodeResponse =\r\n            Object.fromEntries(new URLSearchParams(normalizedResponse));\r\n\r\n        // Check for known response properties\r\n        if (\r\n            deserializedHash.code ||\r\n            deserializedHash.error ||\r\n            deserializedHash.error_description ||\r\n            deserializedHash.state\r\n        ) {\r\n            return deserializedHash;\r\n        }\r\n    } catch (e) {\r\n        throw createClientAuthError(ClientAuthErrorCodes.hashNotDeserialized);\r\n    }\r\n\r\n    return null;\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    createClientConfigurationError,\r\n    ClientConfigurationErrorCodes,\r\n} from \"../error/ClientConfigurationError.js\";\r\nimport { StringUtils } from \"../utils/StringUtils.js\";\r\nimport { IUri } from \"./IUri.js\";\r\nimport { AADAuthorityConstants, Constants } from \"../utils/Constants.js\";\r\nimport * as UrlUtils from \"../utils/UrlUtils.js\";\r\n\r\n/**\r\n * Url object class which can perform various transformations on url strings.\r\n */\r\nexport class UrlString {\r\n    // internal url string field\r\n    private _urlString: string;\r\n    public get urlString(): string {\r\n        return this._urlString;\r\n    }\r\n\r\n    constructor(url: string) {\r\n        this._urlString = url;\r\n        if (!this._urlString) {\r\n            // Throws error if url is empty\r\n            throw createClientConfigurationError(\r\n                ClientConfigurationErrorCodes.urlEmptyError\r\n            );\r\n        }\r\n\r\n        if (!url.includes(\"#\")) {\r\n            this._urlString = UrlString.canonicalizeUri(url);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ensure urls are lower case and end with a / character.\r\n     * @param url\r\n     */\r\n    static canonicalizeUri(url: string): string {\r\n        if (url) {\r\n            let lowerCaseUrl = url.toLowerCase();\r\n\r\n            if (StringUtils.endsWith(lowerCaseUrl, \"?\")) {\r\n                lowerCaseUrl = lowerCaseUrl.slice(0, -1);\r\n            } else if (StringUtils.endsWith(lowerCaseUrl, \"?/\")) {\r\n                lowerCaseUrl = lowerCaseUrl.slice(0, -2);\r\n            }\r\n\r\n            if (!StringUtils.endsWith(lowerCaseUrl, \"/\")) {\r\n                lowerCaseUrl += \"/\";\r\n            }\r\n\r\n            return lowerCaseUrl;\r\n        }\r\n\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * Throws if urlString passed is not a valid authority URI string.\r\n     */\r\n    validateAsUri(): void {\r\n        // Attempts to parse url for uri components\r\n        let components;\r\n        try {\r\n            components = this.getUrlComponents();\r\n        } catch (e) {\r\n            throw createClientConfigurationError(\r\n                ClientConfigurationErrorCodes.urlParseError\r\n            );\r\n        }\r\n\r\n        // Throw error if URI or path segments are not parseable.\r\n        if (!components.HostNameAndPort || !components.PathSegments) {\r\n            throw createClientConfigurationError(\r\n                ClientConfigurationErrorCodes.urlParseError\r\n            );\r\n        }\r\n\r\n        // Throw error if uri is insecure.\r\n        if (\r\n            !components.Protocol ||\r\n            components.Protocol.toLowerCase() !== \"https:\"\r\n        ) {\r\n            throw createClientConfigurationError(\r\n                ClientConfigurationErrorCodes.authorityUriInsecure\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Given a url and a query string return the url with provided query string appended\r\n     * @param url\r\n     * @param queryString\r\n     */\r\n    static appendQueryString(url: string, queryString: string): string {\r\n        if (!queryString) {\r\n            return url;\r\n        }\r\n\r\n        return url.indexOf(\"?\") < 0\r\n            ? `${url}?${queryString}`\r\n            : `${url}&${queryString}`;\r\n    }\r\n\r\n    /**\r\n     * Returns a url with the hash removed\r\n     * @param url\r\n     */\r\n    static removeHashFromUrl(url: string): string {\r\n        return UrlString.canonicalizeUri(url.split(\"#\")[0]);\r\n    }\r\n\r\n    /**\r\n     * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\r\n     * @param href The url\r\n     * @param tenantId The tenant id to replace\r\n     */\r\n    replaceTenantPath(tenantId: string): UrlString {\r\n        const urlObject = this.getUrlComponents();\r\n        const pathArray = urlObject.PathSegments;\r\n        if (\r\n            tenantId &&\r\n            pathArray.length !== 0 &&\r\n            (pathArray[0] === AADAuthorityConstants.COMMON ||\r\n                pathArray[0] === AADAuthorityConstants.ORGANIZATIONS)\r\n        ) {\r\n            pathArray[0] = tenantId;\r\n        }\r\n        return UrlString.constructAuthorityUriFromObject(urlObject);\r\n    }\r\n\r\n    /**\r\n     * Parses out the components from a url string.\r\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\r\n     */\r\n    getUrlComponents(): IUri {\r\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\r\n        const regEx = RegExp(\r\n            \"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\"\r\n        );\r\n\r\n        // If url string does not match regEx, we throw an error\r\n        const match = this.urlString.match(regEx);\r\n        if (!match) {\r\n            throw createClientConfigurationError(\r\n                ClientConfigurationErrorCodes.urlParseError\r\n            );\r\n        }\r\n\r\n        // Url component object\r\n        const urlComponents = {\r\n            Protocol: match[1],\r\n            HostNameAndPort: match[4],\r\n            AbsolutePath: match[5],\r\n            QueryString: match[7],\r\n        } as IUri;\r\n\r\n        let pathSegments = urlComponents.AbsolutePath.split(\"/\");\r\n        pathSegments = pathSegments.filter((val) => val && val.length > 0); // remove empty elements\r\n        urlComponents.PathSegments = pathSegments;\r\n\r\n        if (\r\n            urlComponents.QueryString &&\r\n            urlComponents.QueryString.endsWith(\"/\")\r\n        ) {\r\n            urlComponents.QueryString = urlComponents.QueryString.substring(\r\n                0,\r\n                urlComponents.QueryString.length - 1\r\n            );\r\n        }\r\n        return urlComponents;\r\n    }\r\n\r\n    static getDomainFromUrl(url: string): string {\r\n        const regEx = RegExp(\"^([^:/?#]+://)?([^/?#]*)\");\r\n\r\n        const match = url.match(regEx);\r\n\r\n        if (!match) {\r\n            throw createClientConfigurationError(\r\n                ClientConfigurationErrorCodes.urlParseError\r\n            );\r\n        }\r\n\r\n        return match[2];\r\n    }\r\n\r\n    static getAbsoluteUrl(relativeUrl: string, baseUrl: string): string {\r\n        if (relativeUrl[0] === Constants.FORWARD_SLASH) {\r\n            const url = new UrlString(baseUrl);\r\n            const baseComponents = url.getUrlComponents();\r\n\r\n            return (\r\n                baseComponents.Protocol +\r\n                \"//\" +\r\n                baseComponents.HostNameAndPort +\r\n                relativeUrl\r\n            );\r\n        }\r\n\r\n        return relativeUrl;\r\n    }\r\n\r\n    static constructAuthorityUriFromObject(urlObject: IUri): UrlString {\r\n        return new UrlString(\r\n            urlObject.Protocol +\r\n                \"//\" +\r\n                urlObject.HostNameAndPort +\r\n                \"/\" +\r\n                urlObject.PathSegments.join(\"/\")\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Check if the hash of the URL string contains known properties\r\n     * @deprecated This API will be removed in a future version\r\n     */\r\n    static hashContainsKnownProperties(response: string): boolean {\r\n        return !!UrlUtils.getDeserializedResponse(response);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Logger } from \"../logger/Logger.js\";\r\nimport { UrlString } from \"../url/UrlString.js\";\r\nimport { AuthorityMetadataSource } from \"../utils/Constants.js\";\r\nimport { StaticAuthorityOptions } from \"./AuthorityOptions.js\";\r\nimport { CloudDiscoveryMetadata } from \"./CloudDiscoveryMetadata.js\";\r\nimport { CloudInstanceDiscoveryResponse } from \"./CloudInstanceDiscoveryResponse.js\";\r\nimport { OpenIdConfigResponse } from \"./OpenIdConfigResponse.js\";\r\n\r\ntype RawMetadata = {\r\n    endpointMetadata: { [key: string]: OpenIdConfigResponse };\r\n    instanceDiscoveryMetadata: CloudInstanceDiscoveryResponse;\r\n};\r\n\r\nexport const rawMetdataJSON: RawMetadata = {\r\n    endpointMetadata: {\r\n        \"login.microsoftonline.com\": {\r\n            token_endpoint:\r\n                \"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/token\",\r\n            jwks_uri:\r\n                \"https://login.microsoftonline.com/{tenantid}/discovery/v2.0/keys\",\r\n            issuer: \"https://login.microsoftonline.com/{tenantid}/v2.0\",\r\n            authorization_endpoint:\r\n                \"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/authorize\",\r\n            end_session_endpoint:\r\n                \"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/logout\",\r\n        },\r\n        \"login.chinacloudapi.cn\": {\r\n            token_endpoint:\r\n                \"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/token\",\r\n            jwks_uri:\r\n                \"https://login.chinacloudapi.cn/{tenantid}/discovery/v2.0/keys\",\r\n            issuer: \"https://login.partner.microsoftonline.cn/{tenantid}/v2.0\",\r\n            authorization_endpoint:\r\n                \"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/authorize\",\r\n            end_session_endpoint:\r\n                \"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/logout\",\r\n        },\r\n        \"login.microsoftonline.us\": {\r\n            token_endpoint:\r\n                \"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/token\",\r\n            jwks_uri:\r\n                \"https://login.microsoftonline.us/{tenantid}/discovery/v2.0/keys\",\r\n            issuer: \"https://login.microsoftonline.us/{tenantid}/v2.0\",\r\n            authorization_endpoint:\r\n                \"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/authorize\",\r\n            end_session_endpoint:\r\n                \"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/logout\",\r\n        },\r\n    },\r\n    instanceDiscoveryMetadata: {\r\n        tenant_discovery_endpoint:\r\n            \"https://{canonicalAuthority}/v2.0/.well-known/openid-configuration\",\r\n        metadata: [\r\n            {\r\n                preferred_network: \"login.microsoftonline.com\",\r\n                preferred_cache: \"login.windows.net\",\r\n                aliases: [\r\n                    \"login.microsoftonline.com\",\r\n                    \"login.windows.net\",\r\n                    \"login.microsoft.com\",\r\n                    \"sts.windows.net\",\r\n                ],\r\n            },\r\n            {\r\n                preferred_network: \"login.partner.microsoftonline.cn\",\r\n                preferred_cache: \"login.partner.microsoftonline.cn\",\r\n                aliases: [\r\n                    \"login.partner.microsoftonline.cn\",\r\n                    \"login.chinacloudapi.cn\",\r\n                ],\r\n            },\r\n            {\r\n                preferred_network: \"login.microsoftonline.de\",\r\n                preferred_cache: \"login.microsoftonline.de\",\r\n                aliases: [\"login.microsoftonline.de\"],\r\n            },\r\n            {\r\n                preferred_network: \"login.microsoftonline.us\",\r\n                preferred_cache: \"login.microsoftonline.us\",\r\n                aliases: [\r\n                    \"login.microsoftonline.us\",\r\n                    \"login.usgovcloudapi.net\",\r\n                ],\r\n            },\r\n            {\r\n                preferred_network: \"login-us.microsoftonline.com\",\r\n                preferred_cache: \"login-us.microsoftonline.com\",\r\n                aliases: [\"login-us.microsoftonline.com\"],\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nexport const EndpointMetadata = rawMetdataJSON.endpointMetadata;\r\nexport const InstanceDiscoveryMetadata =\r\n    rawMetdataJSON.instanceDiscoveryMetadata;\r\n\r\nexport const InstanceDiscoveryMetadataAliases: Set<String> = new Set();\r\nInstanceDiscoveryMetadata.metadata.forEach(\r\n    (metadataEntry: CloudDiscoveryMetadata) => {\r\n        metadataEntry.aliases.forEach((alias: string) => {\r\n            InstanceDiscoveryMetadataAliases.add(alias);\r\n        });\r\n    }\r\n);\r\n\r\n/**\r\n * Attempts to get an aliases array from the static authority metadata sources based on the canonical authority host\r\n * @param staticAuthorityOptions\r\n * @param logger\r\n * @returns\r\n */\r\nexport function getAliasesFromStaticSources(\r\n    staticAuthorityOptions: StaticAuthorityOptions,\r\n    logger?: Logger\r\n): string[] {\r\n    let staticAliases: string[] | undefined;\r\n    const canonicalAuthority = staticAuthorityOptions.canonicalAuthority;\r\n    if (canonicalAuthority) {\r\n        const authorityHost = new UrlString(\r\n            canonicalAuthority\r\n        ).getUrlComponents().HostNameAndPort;\r\n        staticAliases =\r\n            getAliasesFromMetadata(\r\n                authorityHost,\r\n                staticAuthorityOptions.cloudDiscoveryMetadata?.metadata,\r\n                AuthorityMetadataSource.CONFIG,\r\n                logger\r\n            ) ||\r\n            getAliasesFromMetadata(\r\n                authorityHost,\r\n                InstanceDiscoveryMetadata.metadata,\r\n                AuthorityMetadataSource.HARDCODED_VALUES,\r\n                logger\r\n            ) ||\r\n            staticAuthorityOptions.knownAuthorities;\r\n    }\r\n\r\n    return staticAliases || [];\r\n}\r\n\r\n/**\r\n * Returns aliases for from the raw cloud discovery metadata passed in\r\n * @param authorityHost\r\n * @param rawCloudDiscoveryMetadata\r\n * @returns\r\n */\r\nexport function getAliasesFromMetadata(\r\n    authorityHost?: string,\r\n    cloudDiscoveryMetadata?: CloudDiscoveryMetadata[],\r\n    source?: AuthorityMetadataSource,\r\n    logger?: Logger\r\n): string[] | null {\r\n    logger?.trace(`getAliasesFromMetadata called with source: ${source}`);\r\n    if (authorityHost && cloudDiscoveryMetadata) {\r\n        const metadata = getCloudDiscoveryMetadataFromNetworkResponse(\r\n            cloudDiscoveryMetadata,\r\n            authorityHost\r\n        );\r\n\r\n        if (metadata) {\r\n            logger?.trace(\r\n                `getAliasesFromMetadata: found cloud discovery metadata in ${source}, returning aliases`\r\n            );\r\n            return metadata.aliases;\r\n        } else {\r\n            logger?.trace(\r\n                `getAliasesFromMetadata: did not find cloud discovery metadata in ${source}`\r\n            );\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n/**\r\n * Get cloud discovery metadata for common authorities\r\n */\r\nexport function getCloudDiscoveryMetadataFromHardcodedValues(\r\n    authorityHost: string\r\n): CloudDiscoveryMetadata | null {\r\n    const metadata = getCloudDiscoveryMetadataFromNetworkResponse(\r\n        InstanceDiscoveryMetadata.metadata,\r\n        authorityHost\r\n    );\r\n    return metadata;\r\n}\r\n\r\n/**\r\n * Searches instance discovery network response for the entry that contains the host in the aliases list\r\n * @param response\r\n * @param authority\r\n */\r\nexport function getCloudDiscoveryMetadataFromNetworkResponse(\r\n    response: CloudDiscoveryMetadata[],\r\n    authorityHost: string\r\n): CloudDiscoveryMetadata | null {\r\n    for (let i = 0; i < response.length; i++) {\r\n        const metadata = response[i];\r\n        if (metadata.aliases.includes(authorityHost)) {\r\n            return metadata;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nexport const cacheQuotaExceededErrorCode = \"cache_quota_exceeded\";\r\nexport const cacheUnknownErrorCode = \"cache_error_unknown\";\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport * as CacheErrorCodes from \"./CacheErrorCodes.js\";\r\nexport { CacheErrorCodes };\r\n\r\nexport const CacheErrorMessages = {\r\n    [CacheErrorCodes.cacheQuotaExceededErrorCode]:\r\n        \"Exceeded cache storage capacity.\",\r\n    [CacheErrorCodes.cacheUnknownErrorCode]:\r\n        \"Unexpected error occurred when using cache storage.\",\r\n};\r\n\r\n/**\r\n * Error thrown when there is an error with the cache\r\n */\r\nexport class CacheError extends Error {\r\n    /**\r\n     * Short string denoting error\r\n     */\r\n    errorCode: string;\r\n\r\n    /**\r\n     * Detailed description of error\r\n     */\r\n    errorMessage: string;\r\n\r\n    constructor(errorCode: string, errorMessage?: string) {\r\n        const message =\r\n            errorMessage ||\r\n            (CacheErrorMessages[errorCode]\r\n                ? CacheErrorMessages[errorCode]\r\n                : CacheErrorMessages[CacheErrorCodes.cacheUnknownErrorCode]);\r\n\r\n        super(`${errorCode}: ${message}`);\r\n        Object.setPrototypeOf(this, CacheError.prototype);\r\n\r\n        this.name = \"CacheError\";\r\n        this.errorCode = errorCode;\r\n        this.errorMessage = message;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    AccountFilter,\r\n    CredentialFilter,\r\n    ValidCredentialType,\r\n    AppMetadataFilter,\r\n    AppMetadataCache,\r\n    TokenKeys,\r\n    TenantProfileFilter,\r\n} from \"./utils/CacheTypes.js\";\r\nimport { CacheRecord } from \"./entities/CacheRecord.js\";\r\nimport {\r\n    CredentialType,\r\n    APP_METADATA,\r\n    THE_FAMILY_ID,\r\n    AUTHORITY_METADATA_CONSTANTS,\r\n    AuthenticationScheme,\r\n    Separators,\r\n} from \"../utils/Constants.js\";\r\nimport { CredentialEntity } from \"./entities/CredentialEntity.js\";\r\nimport { generateCredentialKey } from \"./utils/CacheHelpers.js\";\r\nimport { ScopeSet } from \"../request/ScopeSet.js\";\r\nimport { AccountEntity } from \"./entities/AccountEntity.js\";\r\nimport { AccessTokenEntity } from \"./entities/AccessTokenEntity.js\";\r\nimport { IdTokenEntity } from \"./entities/IdTokenEntity.js\";\r\nimport { RefreshTokenEntity } from \"./entities/RefreshTokenEntity.js\";\r\nimport { ICacheManager } from \"./interface/ICacheManager.js\";\r\nimport {\r\n    createClientAuthError,\r\n    ClientAuthErrorCodes,\r\n} from \"../error/ClientAuthError.js\";\r\nimport {\r\n    AccountInfo,\r\n    TenantProfile,\r\n    updateAccountTenantProfileData,\r\n} from \"../account/AccountInfo.js\";\r\nimport { AppMetadataEntity } from \"./entities/AppMetadataEntity.js\";\r\nimport { ServerTelemetryEntity } from \"./entities/ServerTelemetryEntity.js\";\r\nimport { ThrottlingEntity } from \"./entities/ThrottlingEntity.js\";\r\nimport { extractTokenClaims } from \"../account/AuthToken.js\";\r\nimport { ICrypto } from \"../crypto/ICrypto.js\";\r\nimport { AuthorityMetadataEntity } from \"./entities/AuthorityMetadataEntity.js\";\r\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest.js\";\r\nimport { Logger } from \"../logger/Logger.js\";\r\nimport { name, version } from \"../packageMetadata.js\";\r\nimport { StoreInCache } from \"../request/StoreInCache.js\";\r\nimport { getAliasesFromStaticSources } from \"../authority/AuthorityMetadata.js\";\r\nimport { StaticAuthorityOptions } from \"../authority/AuthorityOptions.js\";\r\nimport { TokenClaims } from \"../account/TokenClaims.js\";\r\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient.js\";\r\nimport { CacheError, CacheErrorCodes } from \"../error/CacheError.js\";\r\n\r\n/**\r\n * Interface class which implement cache storage functions used by MSAL to perform validity checks, and store tokens.\r\n * @internal\r\n */\r\nexport abstract class CacheManager implements ICacheManager {\r\n    protected clientId: string;\r\n    protected cryptoImpl: ICrypto;\r\n    // Instance of logger for functions defined in the msal-common layer\r\n    private commonLogger: Logger;\r\n    private staticAuthorityOptions?: StaticAuthorityOptions;\r\n\r\n    constructor(\r\n        clientId: string,\r\n        cryptoImpl: ICrypto,\r\n        logger: Logger,\r\n        staticAuthorityOptions?: StaticAuthorityOptions\r\n    ) {\r\n        this.clientId = clientId;\r\n        this.cryptoImpl = cryptoImpl;\r\n        this.commonLogger = logger.clone(name, version);\r\n        this.staticAuthorityOptions = staticAuthorityOptions;\r\n    }\r\n\r\n    /**\r\n     * fetch the account entity from the platform cache\r\n     *  @param accountKey\r\n     */\r\n    abstract getAccount(\r\n        accountKey: string,\r\n        logger?: Logger\r\n    ): AccountEntity | null;\r\n\r\n    /**\r\n     * set account entity in the platform cache\r\n     * @param account\r\n     * @param correlationId\r\n     */\r\n    abstract setAccount(\r\n        account: AccountEntity,\r\n        correlationId: string\r\n    ): Promise<void>;\r\n\r\n    /**\r\n     * fetch the idToken entity from the platform cache\r\n     * @param idTokenKey\r\n     */\r\n    abstract getIdTokenCredential(idTokenKey: string): IdTokenEntity | null;\r\n\r\n    /**\r\n     * set idToken entity to the platform cache\r\n     * @param idToken\r\n     * @param correlationId\r\n     */\r\n    abstract setIdTokenCredential(\r\n        idToken: IdTokenEntity,\r\n        correlationId: string\r\n    ): Promise<void>;\r\n\r\n    /**\r\n     * fetch the idToken entity from the platform cache\r\n     * @param accessTokenKey\r\n     */\r\n    abstract getAccessTokenCredential(\r\n        accessTokenKey: string\r\n    ): AccessTokenEntity | null;\r\n\r\n    /**\r\n     * set accessToken entity to the platform cache\r\n     * @param accessToken\r\n     * @param correlationId\r\n     */\r\n    abstract setAccessTokenCredential(\r\n        accessToken: AccessTokenEntity,\r\n        correlationId: string\r\n    ): Promise<void>;\r\n\r\n    /**\r\n     * fetch the idToken entity from the platform cache\r\n     * @param refreshTokenKey\r\n     */\r\n    abstract getRefreshTokenCredential(\r\n        refreshTokenKey: string\r\n    ): RefreshTokenEntity | null;\r\n\r\n    /**\r\n     * set refreshToken entity to the platform cache\r\n     * @param refreshToken\r\n     * @param correlationId\r\n     */\r\n    abstract setRefreshTokenCredential(\r\n        refreshToken: RefreshTokenEntity,\r\n        correlationId: string\r\n    ): Promise<void>;\r\n\r\n    /**\r\n     * fetch appMetadata entity from the platform cache\r\n     * @param appMetadataKey\r\n     */\r\n    abstract getAppMetadata(appMetadataKey: string): AppMetadataEntity | null;\r\n\r\n    /**\r\n     * set appMetadata entity to the platform cache\r\n     * @param appMetadata\r\n     */\r\n    abstract setAppMetadata(appMetadata: AppMetadataEntity): void;\r\n\r\n    /**\r\n     * fetch server telemetry entity from the platform cache\r\n     * @param serverTelemetryKey\r\n     */\r\n    abstract getServerTelemetry(\r\n        serverTelemetryKey: string\r\n    ): ServerTelemetryEntity | null;\r\n\r\n    /**\r\n     * set server telemetry entity to the platform cache\r\n     * @param serverTelemetryKey\r\n     * @param serverTelemetry\r\n     */\r\n    abstract setServerTelemetry(\r\n        serverTelemetryKey: string,\r\n        serverTelemetry: ServerTelemetryEntity\r\n    ): void;\r\n\r\n    /**\r\n     * fetch cloud discovery metadata entity from the platform cache\r\n     * @param key\r\n     */\r\n    abstract getAuthorityMetadata(key: string): AuthorityMetadataEntity | null;\r\n\r\n    /**\r\n     *\r\n     */\r\n    abstract getAuthorityMetadataKeys(): Array<string>;\r\n\r\n    /**\r\n     * set cloud discovery metadata entity to the platform cache\r\n     * @param key\r\n     * @param value\r\n     */\r\n    abstract setAuthorityMetadata(\r\n        key: string,\r\n        value: AuthorityMetadataEntity\r\n    ): void;\r\n\r\n    /**\r\n     * fetch throttling entity from the platform cache\r\n     * @param throttlingCacheKey\r\n     */\r\n    abstract getThrottlingCache(\r\n        throttlingCacheKey: string\r\n    ): ThrottlingEntity | null;\r\n\r\n    /**\r\n     * set throttling entity to the platform cache\r\n     * @param throttlingCacheKey\r\n     * @param throttlingCache\r\n     */\r\n    abstract setThrottlingCache(\r\n        throttlingCacheKey: string,\r\n        throttlingCache: ThrottlingEntity\r\n    ): void;\r\n\r\n    /**\r\n     * Function to remove an item from cache given its key.\r\n     * @param key\r\n     */\r\n    abstract removeItem(key: string): void;\r\n\r\n    /**\r\n     * Function which retrieves all current keys from the cache.\r\n     */\r\n    abstract getKeys(): string[];\r\n\r\n    /**\r\n     * Function which retrieves all account keys from the cache\r\n     */\r\n    abstract getAccountKeys(): string[];\r\n\r\n    /**\r\n     * Function which retrieves all token keys from the cache\r\n     */\r\n    abstract getTokenKeys(): TokenKeys;\r\n\r\n    /**\r\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\r\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\r\n     * @returns Array of AccountInfo objects in cache\r\n     */\r\n    getAllAccounts(accountFilter?: AccountFilter): AccountInfo[] {\r\n        return this.buildTenantProfiles(\r\n            this.getAccountsFilteredBy(accountFilter || {}),\r\n            accountFilter\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Gets first tenanted AccountInfo object found based on provided filters\r\n     */\r\n    getAccountInfoFilteredBy(accountFilter: AccountFilter): AccountInfo | null {\r\n        const allAccounts = this.getAllAccounts(accountFilter);\r\n        if (allAccounts.length > 1) {\r\n            // If one or more accounts are found, prioritize accounts that have an ID token\r\n            const sortedAccounts = allAccounts.sort((account) => {\r\n                return account.idTokenClaims ? -1 : 1;\r\n            });\r\n            return sortedAccounts[0];\r\n        } else if (allAccounts.length === 1) {\r\n            // If only one account is found, return it regardless of whether a matching ID token was found\r\n            return allAccounts[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a single matching\r\n     * @param accountFilter\r\n     * @returns\r\n     */\r\n    getBaseAccountInfo(accountFilter: AccountFilter): AccountInfo | null {\r\n        const accountEntities = this.getAccountsFilteredBy(accountFilter);\r\n        if (accountEntities.length > 0) {\r\n            return accountEntities[0].getAccountInfo();\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Matches filtered account entities with cached ID tokens that match the tenant profile-specific account filters\r\n     * and builds the account info objects from the matching ID token's claims\r\n     * @param cachedAccounts\r\n     * @param accountFilter\r\n     * @returns Array of AccountInfo objects that match account and tenant profile filters\r\n     */\r\n    private buildTenantProfiles(\r\n        cachedAccounts: AccountEntity[],\r\n        accountFilter?: AccountFilter\r\n    ): AccountInfo[] {\r\n        return cachedAccounts.flatMap((accountEntity) => {\r\n            return this.getTenantProfilesFromAccountEntity(\r\n                accountEntity,\r\n                accountFilter?.tenantId,\r\n                accountFilter\r\n            );\r\n        });\r\n    }\r\n\r\n    private getTenantedAccountInfoByFilter(\r\n        accountInfo: AccountInfo,\r\n        tokenKeys: TokenKeys,\r\n        tenantProfile: TenantProfile,\r\n        tenantProfileFilter?: TenantProfileFilter\r\n    ): AccountInfo | null {\r\n        let tenantedAccountInfo: AccountInfo | null = null;\r\n        let idTokenClaims: TokenClaims | undefined;\r\n\r\n        if (tenantProfileFilter) {\r\n            if (\r\n                !this.tenantProfileMatchesFilter(\r\n                    tenantProfile,\r\n                    tenantProfileFilter\r\n                )\r\n            ) {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        const idToken = this.getIdToken(\r\n            accountInfo,\r\n            tokenKeys,\r\n            tenantProfile.tenantId\r\n        );\r\n\r\n        if (idToken) {\r\n            idTokenClaims = extractTokenClaims(\r\n                idToken.secret,\r\n                this.cryptoImpl.base64Decode\r\n            );\r\n\r\n            if (\r\n                !this.idTokenClaimsMatchTenantProfileFilter(\r\n                    idTokenClaims,\r\n                    tenantProfileFilter\r\n                )\r\n            ) {\r\n                // ID token sourced claims don't match so this tenant profile is not a match\r\n                return null;\r\n            }\r\n        }\r\n\r\n        // Expand tenant profile into account info based on matching tenant profile and if available matching ID token claims\r\n        tenantedAccountInfo = updateAccountTenantProfileData(\r\n            accountInfo,\r\n            tenantProfile,\r\n            idTokenClaims,\r\n            idToken?.secret\r\n        );\r\n\r\n        return tenantedAccountInfo;\r\n    }\r\n\r\n    private getTenantProfilesFromAccountEntity(\r\n        accountEntity: AccountEntity,\r\n        targetTenantId?: string,\r\n        tenantProfileFilter?: TenantProfileFilter\r\n    ): AccountInfo[] {\r\n        const accountInfo = accountEntity.getAccountInfo();\r\n        let searchTenantProfiles: Map<string, TenantProfile> =\r\n            accountInfo.tenantProfiles || new Map<string, TenantProfile>();\r\n        const tokenKeys = this.getTokenKeys();\r\n\r\n        // If a tenant ID was provided, only return the tenant profile for that tenant ID if it exists\r\n        if (targetTenantId) {\r\n            const tenantProfile = searchTenantProfiles.get(targetTenantId);\r\n            if (tenantProfile) {\r\n                // Reduce search field to just this tenant profile\r\n                searchTenantProfiles = new Map<string, TenantProfile>([\r\n                    [targetTenantId, tenantProfile],\r\n                ]);\r\n            } else {\r\n                // No tenant profile for search tenant ID, return empty array\r\n                return [];\r\n            }\r\n        }\r\n\r\n        const matchingTenantProfiles: AccountInfo[] = [];\r\n        searchTenantProfiles.forEach((tenantProfile: TenantProfile) => {\r\n            const tenantedAccountInfo = this.getTenantedAccountInfoByFilter(\r\n                accountInfo,\r\n                tokenKeys,\r\n                tenantProfile,\r\n                tenantProfileFilter\r\n            );\r\n            if (tenantedAccountInfo) {\r\n                matchingTenantProfiles.push(tenantedAccountInfo);\r\n            }\r\n        });\r\n\r\n        return matchingTenantProfiles;\r\n    }\r\n\r\n    private tenantProfileMatchesFilter(\r\n        tenantProfile: TenantProfile,\r\n        tenantProfileFilter: TenantProfileFilter\r\n    ): boolean {\r\n        if (\r\n            !!tenantProfileFilter.localAccountId &&\r\n            !this.matchLocalAccountIdFromTenantProfile(\r\n                tenantProfile,\r\n                tenantProfileFilter.localAccountId\r\n            )\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        if (\r\n            !!tenantProfileFilter.name &&\r\n            !(tenantProfile.name === tenantProfileFilter.name)\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        if (\r\n            tenantProfileFilter.isHomeTenant !== undefined &&\r\n            !(tenantProfile.isHomeTenant === tenantProfileFilter.isHomeTenant)\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private idTokenClaimsMatchTenantProfileFilter(\r\n        idTokenClaims: TokenClaims,\r\n        tenantProfileFilter?: TenantProfileFilter\r\n    ): boolean {\r\n        // Tenant Profile filtering\r\n        if (tenantProfileFilter) {\r\n            if (\r\n                !!tenantProfileFilter.localAccountId &&\r\n                !this.matchLocalAccountIdFromTokenClaims(\r\n                    idTokenClaims,\r\n                    tenantProfileFilter.localAccountId\r\n                )\r\n            ) {\r\n                return false;\r\n            }\r\n\r\n            if (\r\n                !!tenantProfileFilter.loginHint &&\r\n                !this.matchLoginHintFromTokenClaims(\r\n                    idTokenClaims,\r\n                    tenantProfileFilter.loginHint\r\n                )\r\n            ) {\r\n                return false;\r\n            }\r\n\r\n            if (\r\n                !!tenantProfileFilter.username &&\r\n                !this.matchUsername(\r\n                    idTokenClaims.preferred_username,\r\n                    tenantProfileFilter.username\r\n                )\r\n            ) {\r\n                return false;\r\n            }\r\n\r\n            if (\r\n                !!tenantProfileFilter.name &&\r\n                !this.matchName(idTokenClaims, tenantProfileFilter.name)\r\n            ) {\r\n                return false;\r\n            }\r\n\r\n            if (\r\n                !!tenantProfileFilter.sid &&\r\n                !this.matchSid(idTokenClaims, tenantProfileFilter.sid)\r\n            ) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * saves a cache record\r\n     * @param cacheRecord {CacheRecord}\r\n     * @param storeInCache {?StoreInCache}\r\n     * @param correlationId {?string} correlation id\r\n     */\r\n    async saveCacheRecord(\r\n        cacheRecord: CacheRecord,\r\n        correlationId: string,\r\n        storeInCache?: StoreInCache\r\n    ): Promise<void> {\r\n        if (!cacheRecord) {\r\n            throw createClientAuthError(\r\n                ClientAuthErrorCodes.invalidCacheRecord\r\n            );\r\n        }\r\n\r\n        try {\r\n            if (!!cacheRecord.account) {\r\n                await this.setAccount(cacheRecord.account, correlationId);\r\n            }\r\n\r\n            if (!!cacheRecord.idToken && storeInCache?.idToken !== false) {\r\n                await this.setIdTokenCredential(\r\n                    cacheRecord.idToken,\r\n                    correlationId\r\n                );\r\n            }\r\n\r\n            if (\r\n                !!cacheRecord.accessToken &&\r\n                storeInCache?.accessToken !== false\r\n            ) {\r\n                await this.saveAccessToken(\r\n                    cacheRecord.accessToken,\r\n                    correlationId\r\n                );\r\n            }\r\n\r\n            if (\r\n                !!cacheRecord.refreshToken &&\r\n                storeInCache?.refreshToken !== false\r\n            ) {\r\n                await this.setRefreshTokenCredential(\r\n                    cacheRecord.refreshToken,\r\n                    correlationId\r\n                );\r\n            }\r\n\r\n            if (!!cacheRecord.appMetadata) {\r\n                this.setAppMetadata(cacheRecord.appMetadata);\r\n            }\r\n        } catch (e: unknown) {\r\n            this.commonLogger?.error(`CacheManager.saveCacheRecord: failed`);\r\n            if (e instanceof Error) {\r\n                this.commonLogger?.errorPii(\r\n                    `CacheManager.saveCacheRecord: ${e.message}`,\r\n                    correlationId\r\n                );\r\n\r\n                if (\r\n                    e.name === \"QuotaExceededError\" ||\r\n                    e.name === \"NS_ERROR_DOM_QUOTA_REACHED\" ||\r\n                    e.message.includes(\"exceeded the quota\")\r\n                ) {\r\n                    this.commonLogger?.error(\r\n                        `CacheManager.saveCacheRecord: exceeded storage quota`,\r\n                        correlationId\r\n                    );\r\n                    throw new CacheError(\r\n                        CacheErrorCodes.cacheQuotaExceededErrorCode\r\n                    );\r\n                } else {\r\n                    throw new CacheError(e.name, e.message);\r\n                }\r\n            } else {\r\n                this.commonLogger?.errorPii(\r\n                    `CacheManager.saveCacheRecord: ${e}`,\r\n                    correlationId\r\n                );\r\n                throw new CacheError(CacheErrorCodes.cacheUnknownErrorCode);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * saves access token credential\r\n     * @param credential\r\n     */\r\n    private async saveAccessToken(\r\n        credential: AccessTokenEntity,\r\n        correlationId: string\r\n    ): Promise<void> {\r\n        const accessTokenFilter: CredentialFilter = {\r\n            clientId: credential.clientId,\r\n            credentialType: credential.credentialType,\r\n            environment: credential.environment,\r\n            homeAccountId: credential.homeAccountId,\r\n            realm: credential.realm,\r\n            tokenType: credential.tokenType,\r\n            requestedClaimsHash: credential.requestedClaimsHash,\r\n        };\r\n\r\n        const tokenKeys = this.getTokenKeys();\r\n        const currentScopes = ScopeSet.fromString(credential.target);\r\n\r\n        const removedAccessTokens: Array<Promise<void>> = [];\r\n        tokenKeys.accessToken.forEach((key) => {\r\n            if (\r\n                !this.accessTokenKeyMatchesFilter(key, accessTokenFilter, false)\r\n            ) {\r\n                return;\r\n            }\r\n\r\n            const tokenEntity = this.getAccessTokenCredential(key);\r\n\r\n            if (\r\n                tokenEntity &&\r\n                this.credentialMatchesFilter(tokenEntity, accessTokenFilter)\r\n            ) {\r\n                const tokenScopeSet = ScopeSet.fromString(tokenEntity.target);\r\n                if (tokenScopeSet.intersectingScopeSets(currentScopes)) {\r\n                    removedAccessTokens.push(this.removeAccessToken(key));\r\n                }\r\n            }\r\n        });\r\n        await Promise.all(removedAccessTokens);\r\n        await this.setAccessTokenCredential(credential, correlationId);\r\n    }\r\n\r\n    /**\r\n     * Retrieve account entities matching all provided tenant-agnostic filters; if no filter is set, get all account entities in the cache\r\n     * Not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\r\n     * @param accountFilter - An object containing Account properties to filter by\r\n     */\r\n    getAccountsFilteredBy(accountFilter: AccountFilter): AccountEntity[] {\r\n        const allAccountKeys = this.getAccountKeys();\r\n        const matchingAccounts: AccountEntity[] = [];\r\n        allAccountKeys.forEach((cacheKey) => {\r\n            if (!this.isAccountKey(cacheKey, accountFilter.homeAccountId)) {\r\n                // Don't parse value if the key doesn't match the account filters\r\n                return;\r\n            }\r\n\r\n            const entity: AccountEntity | null = this.getAccount(\r\n                cacheKey,\r\n                this.commonLogger\r\n            );\r\n\r\n            // Match base account fields\r\n\r\n            if (!entity) {\r\n                return;\r\n            }\r\n\r\n            if (\r\n                !!accountFilter.homeAccountId &&\r\n                !this.matchHomeAccountId(entity, accountFilter.homeAccountId)\r\n            ) {\r\n                return;\r\n            }\r\n\r\n            if (\r\n                !!accountFilter.username &&\r\n                !this.matchUsername(entity.username, accountFilter.username)\r\n            ) {\r\n                return;\r\n            }\r\n\r\n            if (\r\n                !!accountFilter.environment &&\r\n                !this.matchEnvironment(entity, accountFilter.environment)\r\n            ) {\r\n                return;\r\n            }\r\n\r\n            if (\r\n                !!accountFilter.realm &&\r\n                !this.matchRealm(entity, accountFilter.realm)\r\n            ) {\r\n                return;\r\n            }\r\n\r\n            if (\r\n                !!accountFilter.nativeAccountId &&\r\n                !this.matchNativeAccountId(\r\n                    entity,\r\n                    accountFilter.nativeAccountId\r\n                )\r\n            ) {\r\n                return;\r\n            }\r\n\r\n            if (\r\n                !!accountFilter.authorityType &&\r\n                !this.matchAuthorityType(entity, accountFilter.authorityType)\r\n            ) {\r\n                return;\r\n            }\r\n\r\n            // If at least one tenant profile matches the tenant profile filter, add the account to the list of matching accounts\r\n            const tenantProfileFilter: TenantProfileFilter = {\r\n                localAccountId: accountFilter?.localAccountId,\r\n                name: accountFilter?.name,\r\n            };\r\n\r\n            const matchingTenantProfiles = entity.tenantProfiles?.filter(\r\n                (tenantProfile: TenantProfile) => {\r\n                    return this.tenantProfileMatchesFilter(\r\n                        tenantProfile,\r\n                        tenantProfileFilter\r\n                    );\r\n                }\r\n            );\r\n\r\n            if (matchingTenantProfiles && matchingTenantProfiles.length === 0) {\r\n                // No tenant profile for this account matches filter, don't add to list of matching accounts\r\n                return;\r\n            }\r\n\r\n            matchingAccounts.push(entity);\r\n        });\r\n\r\n        return matchingAccounts;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the given key matches our account key schema. Also matches homeAccountId and/or tenantId if provided\r\n     * @param key\r\n     * @param homeAccountId\r\n     * @param tenantId\r\n     * @returns\r\n     */\r\n    isAccountKey(\r\n        key: string,\r\n        homeAccountId?: string,\r\n        tenantId?: string\r\n    ): boolean {\r\n        if (key.split(Separators.CACHE_KEY_SEPARATOR).length < 3) {\r\n            // Account cache keys contain 3 items separated by '-' (each item may also contain '-')\r\n            return false;\r\n        }\r\n\r\n        if (\r\n            homeAccountId &&\r\n            !key.toLowerCase().includes(homeAccountId.toLowerCase())\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        if (tenantId && !key.toLowerCase().includes(tenantId.toLowerCase())) {\r\n            return false;\r\n        }\r\n\r\n        // Do not check environment as aliasing can cause false negatives\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the given key matches our credential key schema.\r\n     * @param key\r\n     */\r\n    isCredentialKey(key: string): boolean {\r\n        if (key.split(Separators.CACHE_KEY_SEPARATOR).length < 6) {\r\n            // Credential cache keys contain 6 items separated by '-' (each item may also contain '-')\r\n            return false;\r\n        }\r\n\r\n        const lowerCaseKey = key.toLowerCase();\r\n        // Credential keys must indicate what credential type they represent\r\n        if (\r\n            lowerCaseKey.indexOf(CredentialType.ID_TOKEN.toLowerCase()) ===\r\n                -1 &&\r\n            lowerCaseKey.indexOf(CredentialType.ACCESS_TOKEN.toLowerCase()) ===\r\n                -1 &&\r\n            lowerCaseKey.indexOf(\r\n                CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()\r\n            ) === -1 &&\r\n            lowerCaseKey.indexOf(CredentialType.REFRESH_TOKEN.toLowerCase()) ===\r\n                -1\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        if (\r\n            lowerCaseKey.indexOf(CredentialType.REFRESH_TOKEN.toLowerCase()) >\r\n            -1\r\n        ) {\r\n            // Refresh tokens must contain the client id or family id\r\n            const clientIdValidation = `${CredentialType.REFRESH_TOKEN}${Separators.CACHE_KEY_SEPARATOR}${this.clientId}${Separators.CACHE_KEY_SEPARATOR}`;\r\n            const familyIdValidation = `${CredentialType.REFRESH_TOKEN}${Separators.CACHE_KEY_SEPARATOR}${THE_FAMILY_ID}${Separators.CACHE_KEY_SEPARATOR}`;\r\n            if (\r\n                lowerCaseKey.indexOf(clientIdValidation.toLowerCase()) === -1 &&\r\n                lowerCaseKey.indexOf(familyIdValidation.toLowerCase()) === -1\r\n            ) {\r\n                return false;\r\n            }\r\n        } else if (lowerCaseKey.indexOf(this.clientId.toLowerCase()) === -1) {\r\n            // Tokens must contain the clientId\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the given credential entity matches the filter\r\n     * @param entity\r\n     * @param filter\r\n     * @returns\r\n     */\r\n    credentialMatchesFilter(\r\n        entity: ValidCredentialType,\r\n        filter: CredentialFilter\r\n    ): boolean {\r\n        if (!!filter.clientId && !this.matchClientId(entity, filter.clientId)) {\r\n            return false;\r\n        }\r\n\r\n        if (\r\n            !!filter.userAssertionHash &&\r\n            !this.matchUserAssertionHash(entity, filter.userAssertionHash)\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        /*\r\n         * homeAccountId can be undefined, and we want to filter out cached items that have a homeAccountId of \"\"\r\n         * because we don't want a client_credential request to return a cached token that has a homeAccountId\r\n         */\r\n        if (\r\n            typeof filter.homeAccountId === \"string\" &&\r\n            !this.matchHomeAccountId(entity, filter.homeAccountId)\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        if (\r\n            !!filter.environment &&\r\n            !this.matchEnvironment(entity, filter.environment)\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        if (!!filter.realm && !this.matchRealm(entity, filter.realm)) {\r\n            return false;\r\n        }\r\n\r\n        if (\r\n            !!filter.credentialType &&\r\n            !this.matchCredentialType(entity, filter.credentialType)\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        if (!!filter.familyId && !this.matchFamilyId(entity, filter.familyId)) {\r\n            return false;\r\n        }\r\n\r\n        /*\r\n         * idTokens do not have \"target\", target specific refreshTokens do exist for some types of authentication\r\n         * Resource specific refresh tokens case will be added when the support is deemed necessary\r\n         */\r\n        if (!!filter.target && !this.matchTarget(entity, filter.target)) {\r\n            return false;\r\n        }\r\n\r\n        // If request OR cached entity has requested Claims Hash, check if they match\r\n        if (filter.requestedClaimsHash || entity.requestedClaimsHash) {\r\n            // Don't match if either is undefined or they are different\r\n            if (entity.requestedClaimsHash !== filter.requestedClaimsHash) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // Access Token with Auth Scheme specific matching\r\n        if (\r\n            entity.credentialType ===\r\n            CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME\r\n        ) {\r\n            if (\r\n                !!filter.tokenType &&\r\n                !this.matchTokenType(entity, filter.tokenType)\r\n            ) {\r\n                return false;\r\n            }\r\n\r\n            // KeyId (sshKid) in request must match cached SSH certificate keyId because SSH cert is bound to a specific key\r\n            if (filter.tokenType === AuthenticationScheme.SSH) {\r\n                if (filter.keyId && !this.matchKeyId(entity, filter.keyId)) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * retrieve appMetadata matching all provided filters; if no filter is set, get all appMetadata\r\n     * @param filter\r\n     */\r\n    getAppMetadataFilteredBy(filter: AppMetadataFilter): AppMetadataCache {\r\n        const allCacheKeys = this.getKeys();\r\n        const matchingAppMetadata: AppMetadataCache = {};\r\n\r\n        allCacheKeys.forEach((cacheKey) => {\r\n            // don't parse any non-appMetadata type cache entities\r\n            if (!this.isAppMetadata(cacheKey)) {\r\n                return;\r\n            }\r\n\r\n            // Attempt retrieval\r\n            const entity = this.getAppMetadata(cacheKey);\r\n\r\n            if (!entity) {\r\n                return;\r\n            }\r\n\r\n            if (\r\n                !!filter.environment &&\r\n                !this.matchEnvironment(entity, filter.environment)\r\n            ) {\r\n                return;\r\n            }\r\n\r\n            if (\r\n                !!filter.clientId &&\r\n                !this.matchClientId(entity, filter.clientId)\r\n            ) {\r\n                return;\r\n            }\r\n\r\n            matchingAppMetadata[cacheKey] = entity;\r\n        });\r\n\r\n        return matchingAppMetadata;\r\n    }\r\n\r\n    /**\r\n     * retrieve authorityMetadata that contains a matching alias\r\n     * @param filter\r\n     */\r\n    getAuthorityMetadataByAlias(host: string): AuthorityMetadataEntity | null {\r\n        const allCacheKeys = this.getAuthorityMetadataKeys();\r\n        let matchedEntity = null;\r\n\r\n        allCacheKeys.forEach((cacheKey) => {\r\n            // don't parse any non-authorityMetadata type cache entities\r\n            if (\r\n                !this.isAuthorityMetadata(cacheKey) ||\r\n                cacheKey.indexOf(this.clientId) === -1\r\n            ) {\r\n                return;\r\n            }\r\n\r\n            // Attempt retrieval\r\n            const entity = this.getAuthorityMetadata(cacheKey);\r\n\r\n            if (!entity) {\r\n                return;\r\n            }\r\n\r\n            if (entity.aliases.indexOf(host) === -1) {\r\n                return;\r\n            }\r\n\r\n            matchedEntity = entity;\r\n        });\r\n\r\n        return matchedEntity;\r\n    }\r\n\r\n    /**\r\n     * Removes all accounts and related tokens from cache.\r\n     */\r\n    async removeAllAccounts(): Promise<void> {\r\n        const allAccountKeys = this.getAccountKeys();\r\n        const removedAccounts: Array<Promise<void>> = [];\r\n\r\n        allAccountKeys.forEach((cacheKey) => {\r\n            removedAccounts.push(this.removeAccount(cacheKey));\r\n        });\r\n\r\n        await Promise.all(removedAccounts);\r\n    }\r\n\r\n    /**\r\n     * Removes the account and related tokens for a given account key\r\n     * @param account\r\n     */\r\n    async removeAccount(accountKey: string): Promise<void> {\r\n        const account = this.getAccount(accountKey, this.commonLogger);\r\n        if (!account) {\r\n            return;\r\n        }\r\n        await this.removeAccountContext(account);\r\n        this.removeItem(accountKey);\r\n    }\r\n\r\n    /**\r\n     * Removes credentials associated with the provided account\r\n     * @param account\r\n     */\r\n    async removeAccountContext(account: AccountEntity): Promise<void> {\r\n        const allTokenKeys = this.getTokenKeys();\r\n        const accountId = account.generateAccountId();\r\n        const removedCredentials: Array<Promise<void>> = [];\r\n\r\n        allTokenKeys.idToken.forEach((key) => {\r\n            if (key.indexOf(accountId) === 0) {\r\n                this.removeIdToken(key);\r\n            }\r\n        });\r\n\r\n        allTokenKeys.accessToken.forEach((key) => {\r\n            if (key.indexOf(accountId) === 0) {\r\n                removedCredentials.push(this.removeAccessToken(key));\r\n            }\r\n        });\r\n\r\n        allTokenKeys.refreshToken.forEach((key) => {\r\n            if (key.indexOf(accountId) === 0) {\r\n                this.removeRefreshToken(key);\r\n            }\r\n        });\r\n\r\n        await Promise.all(removedCredentials);\r\n    }\r\n\r\n    /**\r\n     * returns a boolean if the given credential is removed\r\n     * @param credential\r\n     */\r\n    async removeAccessToken(key: string): Promise<void> {\r\n        const credential = this.getAccessTokenCredential(key);\r\n        if (!credential) {\r\n            return;\r\n        }\r\n\r\n        // Remove Token Binding Key from key store for PoP Tokens Credentials\r\n        if (\r\n            credential.credentialType.toLowerCase() ===\r\n            CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()\r\n        ) {\r\n            if (credential.tokenType === AuthenticationScheme.POP) {\r\n                const accessTokenWithAuthSchemeEntity =\r\n                    credential as AccessTokenEntity;\r\n                const kid = accessTokenWithAuthSchemeEntity.keyId;\r\n\r\n                if (kid) {\r\n                    try {\r\n                        await this.cryptoImpl.removeTokenBindingKey(kid);\r\n                    } catch (error) {\r\n                        throw createClientAuthError(\r\n                            ClientAuthErrorCodes.bindingKeyNotRemoved\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.removeItem(key);\r\n    }\r\n\r\n    /**\r\n     * Removes all app metadata objects from cache.\r\n     */\r\n    removeAppMetadata(): boolean {\r\n        const allCacheKeys = this.getKeys();\r\n        allCacheKeys.forEach((cacheKey) => {\r\n            if (this.isAppMetadata(cacheKey)) {\r\n                this.removeItem(cacheKey);\r\n            }\r\n        });\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Retrieve AccountEntity from cache\r\n     * @param account\r\n     */\r\n    readAccountFromCache(account: AccountInfo): AccountEntity | null {\r\n        const accountKey: string =\r\n            AccountEntity.generateAccountCacheKey(account);\r\n        return this.getAccount(accountKey, this.commonLogger);\r\n    }\r\n\r\n    /**\r\n     * Retrieve IdTokenEntity from cache\r\n     * @param account {AccountInfo}\r\n     * @param tokenKeys {?TokenKeys}\r\n     * @param targetRealm {?string}\r\n     * @param performanceClient {?IPerformanceClient}\r\n     * @param correlationId {?string}\r\n     */\r\n    getIdToken(\r\n        account: AccountInfo,\r\n        tokenKeys?: TokenKeys,\r\n        targetRealm?: string,\r\n        performanceClient?: IPerformanceClient,\r\n        correlationId?: string\r\n    ): IdTokenEntity | null {\r\n        this.commonLogger.trace(\"CacheManager - getIdToken called\");\r\n        const idTokenFilter: CredentialFilter = {\r\n            homeAccountId: account.homeAccountId,\r\n            environment: account.environment,\r\n            credentialType: CredentialType.ID_TOKEN,\r\n            clientId: this.clientId,\r\n            realm: targetRealm,\r\n        };\r\n\r\n        const idTokenMap: Map<string, IdTokenEntity> = this.getIdTokensByFilter(\r\n            idTokenFilter,\r\n            tokenKeys\r\n        );\r\n\r\n        const numIdTokens = idTokenMap.size;\r\n\r\n        if (numIdTokens < 1) {\r\n            this.commonLogger.info(\"CacheManager:getIdToken - No token found\");\r\n            return null;\r\n        } else if (numIdTokens > 1) {\r\n            let tokensToBeRemoved: Map<string, IdTokenEntity> = idTokenMap;\r\n            // Multiple tenant profiles and no tenant specified, pick home account\r\n            if (!targetRealm) {\r\n                const homeIdTokenMap: Map<string, IdTokenEntity> = new Map<\r\n                    string,\r\n                    IdTokenEntity\r\n                >();\r\n                idTokenMap.forEach((idToken, key) => {\r\n                    if (idToken.realm === account.tenantId) {\r\n                        homeIdTokenMap.set(key, idToken);\r\n                    }\r\n                });\r\n                const numHomeIdTokens = homeIdTokenMap.size;\r\n                if (numHomeIdTokens < 1) {\r\n                    this.commonLogger.info(\r\n                        \"CacheManager:getIdToken - Multiple ID tokens found for account but none match account entity tenant id, returning first result\"\r\n                    );\r\n                    return idTokenMap.values().next().value;\r\n                } else if (numHomeIdTokens === 1) {\r\n                    this.commonLogger.info(\r\n                        \"CacheManager:getIdToken - Multiple ID tokens found for account, defaulting to home tenant profile\"\r\n                    );\r\n                    return homeIdTokenMap.values().next().value;\r\n                } else {\r\n                    // Multiple ID tokens for home tenant profile, remove all and return null\r\n                    tokensToBeRemoved = homeIdTokenMap;\r\n                }\r\n            }\r\n            // Multiple tokens for a single tenant profile, remove all and return null\r\n            this.commonLogger.info(\r\n                \"CacheManager:getIdToken - Multiple matching ID tokens found, clearing them\"\r\n            );\r\n            tokensToBeRemoved.forEach((idToken, key) => {\r\n                this.removeIdToken(key);\r\n            });\r\n            if (performanceClient && correlationId) {\r\n                performanceClient.addFields(\r\n                    { multiMatchedID: idTokenMap.size },\r\n                    correlationId\r\n                );\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.commonLogger.info(\"CacheManager:getIdToken - Returning ID token\");\r\n        return idTokenMap.values().next().value;\r\n    }\r\n\r\n    /**\r\n     * Gets all idTokens matching the given filter\r\n     * @param filter\r\n     * @returns\r\n     */\r\n    getIdTokensByFilter(\r\n        filter: CredentialFilter,\r\n        tokenKeys?: TokenKeys\r\n    ): Map<string, IdTokenEntity> {\r\n        const idTokenKeys =\r\n            (tokenKeys && tokenKeys.idToken) || this.getTokenKeys().idToken;\r\n\r\n        const idTokens: Map<string, IdTokenEntity> = new Map<\r\n            string,\r\n            IdTokenEntity\r\n        >();\r\n        idTokenKeys.forEach((key) => {\r\n            if (\r\n                !this.idTokenKeyMatchesFilter(key, {\r\n                    clientId: this.clientId,\r\n                    ...filter,\r\n                })\r\n            ) {\r\n                return;\r\n            }\r\n            const idToken = this.getIdTokenCredential(key);\r\n            if (idToken && this.credentialMatchesFilter(idToken, filter)) {\r\n                idTokens.set(key, idToken);\r\n            }\r\n        });\r\n\r\n        return idTokens;\r\n    }\r\n\r\n    /**\r\n     * Validate the cache key against filter before retrieving and parsing cache value\r\n     * @param key\r\n     * @param filter\r\n     * @returns\r\n     */\r\n    idTokenKeyMatchesFilter(\r\n        inputKey: string,\r\n        filter: CredentialFilter\r\n    ): boolean {\r\n        const key = inputKey.toLowerCase();\r\n        if (\r\n            filter.clientId &&\r\n            key.indexOf(filter.clientId.toLowerCase()) === -1\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        if (\r\n            filter.homeAccountId &&\r\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Removes idToken from the cache\r\n     * @param key\r\n     */\r\n    removeIdToken(key: string): void {\r\n        this.removeItem(key);\r\n    }\r\n\r\n    /**\r\n     * Removes refresh token from the cache\r\n     * @param key\r\n     */\r\n    removeRefreshToken(key: string): void {\r\n        this.removeItem(key);\r\n    }\r\n\r\n    /**\r\n     * Retrieve AccessTokenEntity from cache\r\n     * @param account {AccountInfo}\r\n     * @param request {BaseAuthRequest}\r\n     * @param tokenKeys {?TokenKeys}\r\n     * @param performanceClient {?IPerformanceClient}\r\n     * @param correlationId {?string}\r\n     */\r\n    getAccessToken(\r\n        account: AccountInfo,\r\n        request: BaseAuthRequest,\r\n        tokenKeys?: TokenKeys,\r\n        targetRealm?: string,\r\n        performanceClient?: IPerformanceClient,\r\n        correlationId?: string\r\n    ): AccessTokenEntity | null {\r\n        this.commonLogger.trace(\"CacheManager - getAccessToken called\");\r\n        const scopes = ScopeSet.createSearchScopes(request.scopes);\r\n        const authScheme =\r\n            request.authenticationScheme || AuthenticationScheme.BEARER;\r\n        /*\r\n         * Distinguish between Bearer and PoP/SSH token cache types\r\n         * Cast to lowercase to handle \"bearer\" from ADFS\r\n         */\r\n        const credentialType =\r\n            authScheme &&\r\n            authScheme.toLowerCase() !==\r\n                AuthenticationScheme.BEARER.toLowerCase()\r\n                ? CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME\r\n                : CredentialType.ACCESS_TOKEN;\r\n\r\n        const accessTokenFilter: CredentialFilter = {\r\n            homeAccountId: account.homeAccountId,\r\n            environment: account.environment,\r\n            credentialType: credentialType,\r\n            clientId: this.clientId,\r\n            realm: targetRealm || account.tenantId,\r\n            target: scopes,\r\n            tokenType: authScheme,\r\n            keyId: request.sshKid,\r\n            requestedClaimsHash: request.requestedClaimsHash,\r\n        };\r\n\r\n        const accessTokenKeys =\r\n            (tokenKeys && tokenKeys.accessToken) ||\r\n            this.getTokenKeys().accessToken;\r\n        const accessTokens: AccessTokenEntity[] = [];\r\n\r\n        accessTokenKeys.forEach((key) => {\r\n            // Validate key\r\n            if (\r\n                this.accessTokenKeyMatchesFilter(key, accessTokenFilter, true)\r\n            ) {\r\n                const accessToken = this.getAccessTokenCredential(key);\r\n\r\n                // Validate value\r\n                if (\r\n                    accessToken &&\r\n                    this.credentialMatchesFilter(accessToken, accessTokenFilter)\r\n                ) {\r\n                    accessTokens.push(accessToken);\r\n                }\r\n            }\r\n        });\r\n\r\n        const numAccessTokens = accessTokens.length;\r\n        if (numAccessTokens < 1) {\r\n            this.commonLogger.info(\r\n                \"CacheManager:getAccessToken - No token found\"\r\n            );\r\n            return null;\r\n        } else if (numAccessTokens > 1) {\r\n            this.commonLogger.info(\r\n                \"CacheManager:getAccessToken - Multiple access tokens found, clearing them\"\r\n            );\r\n            accessTokens.forEach((accessToken) => {\r\n                void this.removeAccessToken(generateCredentialKey(accessToken));\r\n            });\r\n            if (performanceClient && correlationId) {\r\n                performanceClient.addFields(\r\n                    { multiMatchedAT: accessTokens.length },\r\n                    correlationId\r\n                );\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.commonLogger.info(\r\n            \"CacheManager:getAccessToken - Returning access token\"\r\n        );\r\n        return accessTokens[0];\r\n    }\r\n\r\n    /**\r\n     * Validate the cache key against filter before retrieving and parsing cache value\r\n     * @param key\r\n     * @param filter\r\n     * @param keyMustContainAllScopes\r\n     * @returns\r\n     */\r\n    accessTokenKeyMatchesFilter(\r\n        inputKey: string,\r\n        filter: CredentialFilter,\r\n        keyMustContainAllScopes: boolean\r\n    ): boolean {\r\n        const key = inputKey.toLowerCase();\r\n        if (\r\n            filter.clientId &&\r\n            key.indexOf(filter.clientId.toLowerCase()) === -1\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        if (\r\n            filter.homeAccountId &&\r\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        if (filter.realm && key.indexOf(filter.realm.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n\r\n        if (\r\n            filter.requestedClaimsHash &&\r\n            key.indexOf(filter.requestedClaimsHash.toLowerCase()) === -1\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        if (filter.target) {\r\n            const scopes = filter.target.asArray();\r\n            for (let i = 0; i < scopes.length; i++) {\r\n                if (\r\n                    keyMustContainAllScopes &&\r\n                    !key.includes(scopes[i].toLowerCase())\r\n                ) {\r\n                    // When performing a cache lookup a missing scope would be a cache miss\r\n                    return false;\r\n                } else if (\r\n                    !keyMustContainAllScopes &&\r\n                    key.includes(scopes[i].toLowerCase())\r\n                ) {\r\n                    // When performing a cache write, any token with a subset of requested scopes should be replaced\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Gets all access tokens matching the filter\r\n     * @param filter\r\n     * @returns\r\n     */\r\n    getAccessTokensByFilter(filter: CredentialFilter): AccessTokenEntity[] {\r\n        const tokenKeys = this.getTokenKeys();\r\n\r\n        const accessTokens: AccessTokenEntity[] = [];\r\n        tokenKeys.accessToken.forEach((key) => {\r\n            if (!this.accessTokenKeyMatchesFilter(key, filter, true)) {\r\n                return;\r\n            }\r\n\r\n            const accessToken = this.getAccessTokenCredential(key);\r\n            if (\r\n                accessToken &&\r\n                this.credentialMatchesFilter(accessToken, filter)\r\n            ) {\r\n                accessTokens.push(accessToken);\r\n            }\r\n        });\r\n\r\n        return accessTokens;\r\n    }\r\n\r\n    /**\r\n     * Helper to retrieve the appropriate refresh token from cache\r\n     * @param account {AccountInfo}\r\n     * @param familyRT {boolean}\r\n     * @param tokenKeys {?TokenKeys}\r\n     * @param performanceClient {?IPerformanceClient}\r\n     * @param correlationId {?string}\r\n     */\r\n    getRefreshToken(\r\n        account: AccountInfo,\r\n        familyRT: boolean,\r\n        tokenKeys?: TokenKeys,\r\n        performanceClient?: IPerformanceClient,\r\n        correlationId?: string\r\n    ): RefreshTokenEntity | null {\r\n        this.commonLogger.trace(\"CacheManager - getRefreshToken called\");\r\n        const id = familyRT ? THE_FAMILY_ID : undefined;\r\n        const refreshTokenFilter: CredentialFilter = {\r\n            homeAccountId: account.homeAccountId,\r\n            environment: account.environment,\r\n            credentialType: CredentialType.REFRESH_TOKEN,\r\n            clientId: this.clientId,\r\n            familyId: id,\r\n        };\r\n\r\n        const refreshTokenKeys =\r\n            (tokenKeys && tokenKeys.refreshToken) ||\r\n            this.getTokenKeys().refreshToken;\r\n        const refreshTokens: RefreshTokenEntity[] = [];\r\n\r\n        refreshTokenKeys.forEach((key) => {\r\n            // Validate key\r\n            if (this.refreshTokenKeyMatchesFilter(key, refreshTokenFilter)) {\r\n                const refreshToken = this.getRefreshTokenCredential(key);\r\n                // Validate value\r\n                if (\r\n                    refreshToken &&\r\n                    this.credentialMatchesFilter(\r\n                        refreshToken,\r\n                        refreshTokenFilter\r\n                    )\r\n                ) {\r\n                    refreshTokens.push(refreshToken);\r\n                }\r\n            }\r\n        });\r\n\r\n        const numRefreshTokens = refreshTokens.length;\r\n        if (numRefreshTokens < 1) {\r\n            this.commonLogger.info(\r\n                \"CacheManager:getRefreshToken - No refresh token found.\"\r\n            );\r\n            return null;\r\n        }\r\n        // address the else case after remove functions address environment aliases\r\n\r\n        if (numRefreshTokens > 1 && performanceClient && correlationId) {\r\n            performanceClient.addFields(\r\n                { multiMatchedRT: numRefreshTokens },\r\n                correlationId\r\n            );\r\n        }\r\n\r\n        this.commonLogger.info(\r\n            \"CacheManager:getRefreshToken - returning refresh token\"\r\n        );\r\n        return refreshTokens[0] as RefreshTokenEntity;\r\n    }\r\n\r\n    /**\r\n     * Validate the cache key against filter before retrieving and parsing cache value\r\n     * @param key\r\n     * @param filter\r\n     */\r\n    refreshTokenKeyMatchesFilter(\r\n        inputKey: string,\r\n        filter: CredentialFilter\r\n    ): boolean {\r\n        const key = inputKey.toLowerCase();\r\n        if (\r\n            filter.familyId &&\r\n            key.indexOf(filter.familyId.toLowerCase()) === -1\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        // If familyId is used, clientId is not in the key\r\n        if (\r\n            !filter.familyId &&\r\n            filter.clientId &&\r\n            key.indexOf(filter.clientId.toLowerCase()) === -1\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        if (\r\n            filter.homeAccountId &&\r\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Retrieve AppMetadataEntity from cache\r\n     */\r\n    readAppMetadataFromCache(environment: string): AppMetadataEntity | null {\r\n        const appMetadataFilter: AppMetadataFilter = {\r\n            environment,\r\n            clientId: this.clientId,\r\n        };\r\n\r\n        const appMetadata: AppMetadataCache =\r\n            this.getAppMetadataFilteredBy(appMetadataFilter);\r\n        const appMetadataEntries: AppMetadataEntity[] = Object.keys(\r\n            appMetadata\r\n        ).map((key) => appMetadata[key]);\r\n\r\n        const numAppMetadata = appMetadataEntries.length;\r\n        if (numAppMetadata < 1) {\r\n            return null;\r\n        } else if (numAppMetadata > 1) {\r\n            throw createClientAuthError(\r\n                ClientAuthErrorCodes.multipleMatchingAppMetadata\r\n            );\r\n        }\r\n\r\n        return appMetadataEntries[0] as AppMetadataEntity;\r\n    }\r\n\r\n    /**\r\n     * Return the family_id value associated  with FOCI\r\n     * @param environment\r\n     * @param clientId\r\n     */\r\n    isAppMetadataFOCI(environment: string): boolean {\r\n        const appMetadata = this.readAppMetadataFromCache(environment);\r\n        return !!(appMetadata && appMetadata.familyId === THE_FAMILY_ID);\r\n    }\r\n\r\n    /**\r\n     * helper to match account ids\r\n     * @param value\r\n     * @param homeAccountId\r\n     */\r\n    private matchHomeAccountId(\r\n        entity: AccountEntity | CredentialEntity,\r\n        homeAccountId: string\r\n    ): boolean {\r\n        return !!(\r\n            typeof entity.homeAccountId === \"string\" &&\r\n            homeAccountId === entity.homeAccountId\r\n        );\r\n    }\r\n\r\n    /**\r\n     * helper to match account ids\r\n     * @param entity\r\n     * @param localAccountId\r\n     * @returns\r\n     */\r\n    private matchLocalAccountIdFromTokenClaims(\r\n        tokenClaims: TokenClaims,\r\n        localAccountId: string\r\n    ): boolean {\r\n        const idTokenLocalAccountId = tokenClaims.oid || tokenClaims.sub;\r\n        return localAccountId === idTokenLocalAccountId;\r\n    }\r\n\r\n    private matchLocalAccountIdFromTenantProfile(\r\n        tenantProfile: TenantProfile,\r\n        localAccountId: string\r\n    ): boolean {\r\n        return tenantProfile.localAccountId === localAccountId;\r\n    }\r\n\r\n    /**\r\n     * helper to match names\r\n     * @param entity\r\n     * @param name\r\n     * @returns true if the downcased name properties are present and match in the filter and the entity\r\n     */\r\n    private matchName(claims: TokenClaims, name: string): boolean {\r\n        return !!(name.toLowerCase() === claims.name?.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * helper to match usernames\r\n     * @param entity\r\n     * @param username\r\n     * @returns\r\n     */\r\n    private matchUsername(\r\n        cachedUsername?: string,\r\n        filterUsername?: string\r\n    ): boolean {\r\n        return !!(\r\n            cachedUsername &&\r\n            typeof cachedUsername === \"string\" &&\r\n            filterUsername?.toLowerCase() === cachedUsername.toLowerCase()\r\n        );\r\n    }\r\n\r\n    /**\r\n     * helper to match assertion\r\n     * @param value\r\n     * @param oboAssertion\r\n     */\r\n    private matchUserAssertionHash(\r\n        entity: CredentialEntity,\r\n        userAssertionHash: string\r\n    ): boolean {\r\n        return !!(\r\n            entity.userAssertionHash &&\r\n            userAssertionHash === entity.userAssertionHash\r\n        );\r\n    }\r\n\r\n    /**\r\n     * helper to match environment\r\n     * @param value\r\n     * @param environment\r\n     */\r\n    private matchEnvironment(\r\n        entity: AccountEntity | CredentialEntity | AppMetadataEntity,\r\n        environment: string\r\n    ): boolean {\r\n        // Check static authority options first for cases where authority metadata has not been resolved and cached yet\r\n        if (this.staticAuthorityOptions) {\r\n            const staticAliases = getAliasesFromStaticSources(\r\n                this.staticAuthorityOptions,\r\n                this.commonLogger\r\n            );\r\n            if (\r\n                staticAliases.includes(environment) &&\r\n                staticAliases.includes(entity.environment)\r\n            ) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // Query metadata cache if no static authority configuration has aliases that match enviroment\r\n        const cloudMetadata = this.getAuthorityMetadataByAlias(environment);\r\n        if (\r\n            cloudMetadata &&\r\n            cloudMetadata.aliases.indexOf(entity.environment) > -1\r\n        ) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * helper to match credential type\r\n     * @param entity\r\n     * @param credentialType\r\n     */\r\n    private matchCredentialType(\r\n        entity: CredentialEntity,\r\n        credentialType: string\r\n    ): boolean {\r\n        return (\r\n            entity.credentialType &&\r\n            credentialType.toLowerCase() === entity.credentialType.toLowerCase()\r\n        );\r\n    }\r\n\r\n    /**\r\n     * helper to match client ids\r\n     * @param entity\r\n     * @param clientId\r\n     */\r\n    private matchClientId(\r\n        entity: CredentialEntity | AppMetadataEntity,\r\n        clientId: string\r\n    ): boolean {\r\n        return !!(entity.clientId && clientId === entity.clientId);\r\n    }\r\n\r\n    /**\r\n     * helper to match family ids\r\n     * @param entity\r\n     * @param familyId\r\n     */\r\n    private matchFamilyId(\r\n        entity: CredentialEntity | AppMetadataEntity,\r\n        familyId: string\r\n    ): boolean {\r\n        return !!(entity.familyId && familyId === entity.familyId);\r\n    }\r\n\r\n    /**\r\n     * helper to match realm\r\n     * @param entity\r\n     * @param realm\r\n     */\r\n    private matchRealm(\r\n        entity: AccountEntity | CredentialEntity,\r\n        realm: string\r\n    ): boolean {\r\n        return !!(entity.realm?.toLowerCase() === realm.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * helper to match nativeAccountId\r\n     * @param entity\r\n     * @param nativeAccountId\r\n     * @returns boolean indicating the match result\r\n     */\r\n    private matchNativeAccountId(\r\n        entity: AccountEntity,\r\n        nativeAccountId: string\r\n    ): boolean {\r\n        return !!(\r\n            entity.nativeAccountId && nativeAccountId === entity.nativeAccountId\r\n        );\r\n    }\r\n\r\n    /**\r\n     * helper to match loginHint which can be either:\r\n     * 1. login_hint ID token claim\r\n     * 2. username in cached account object\r\n     * 3. upn in ID token claims\r\n     * @param entity\r\n     * @param loginHint\r\n     * @returns\r\n     */\r\n    private matchLoginHintFromTokenClaims(\r\n        tokenClaims: TokenClaims,\r\n        loginHint: string\r\n    ): boolean {\r\n        if (tokenClaims.login_hint === loginHint) {\r\n            return true;\r\n        }\r\n\r\n        if (tokenClaims.preferred_username === loginHint) {\r\n            return true;\r\n        }\r\n\r\n        if (tokenClaims.upn === loginHint) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Helper to match sid\r\n     * @param entity\r\n     * @param sid\r\n     * @returns true if the sid claim is present and matches the filter\r\n     */\r\n    private matchSid(idTokenClaims: TokenClaims, sid: string): boolean {\r\n        return idTokenClaims.sid === sid;\r\n    }\r\n\r\n    private matchAuthorityType(\r\n        entity: AccountEntity,\r\n        authorityType: string\r\n    ): boolean {\r\n        return !!(\r\n            entity.authorityType &&\r\n            authorityType.toLowerCase() === entity.authorityType.toLowerCase()\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns true if the target scopes are a subset of the current entity's scopes, false otherwise.\r\n     * @param entity\r\n     * @param target\r\n     */\r\n    private matchTarget(entity: CredentialEntity, target: ScopeSet): boolean {\r\n        const isNotAccessTokenCredential =\r\n            entity.credentialType !== CredentialType.ACCESS_TOKEN &&\r\n            entity.credentialType !==\r\n                CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\r\n\r\n        if (isNotAccessTokenCredential || !entity.target) {\r\n            return false;\r\n        }\r\n\r\n        const entityScopeSet: ScopeSet = ScopeSet.fromString(entity.target);\r\n\r\n        return entityScopeSet.containsScopeSet(target);\r\n    }\r\n\r\n    /**\r\n     * Returns true if the credential's tokenType or Authentication Scheme matches the one in the request, false otherwise\r\n     * @param entity\r\n     * @param tokenType\r\n     */\r\n    private matchTokenType(\r\n        entity: CredentialEntity,\r\n        tokenType: AuthenticationScheme\r\n    ): boolean {\r\n        return !!(entity.tokenType && entity.tokenType === tokenType);\r\n    }\r\n\r\n    /**\r\n     * Returns true if the credential's keyId matches the one in the request, false otherwise\r\n     * @param entity\r\n     * @param keyId\r\n     */\r\n    private matchKeyId(entity: CredentialEntity, keyId: string): boolean {\r\n        return !!(entity.keyId && entity.keyId === keyId);\r\n    }\r\n\r\n    /**\r\n     * returns if a given cache entity is of the type appmetadata\r\n     * @param key\r\n     */\r\n    private isAppMetadata(key: string): boolean {\r\n        return key.indexOf(APP_METADATA) !== -1;\r\n    }\r\n\r\n    /**\r\n     * returns if a given cache entity is of the type authoritymetadata\r\n     * @param key\r\n     */\r\n    protected isAuthorityMetadata(key: string): boolean {\r\n        return key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) !== -1;\r\n    }\r\n\r\n    /**\r\n     * returns cache key used for cloud instance metadata\r\n     */\r\n    generateAuthorityMetadataCacheKey(authority: string): string {\r\n        return `${AUTHORITY_METADATA_CONSTANTS.CACHE_KEY}-${this.clientId}-${authority}`;\r\n    }\r\n\r\n    /**\r\n     * Helper to convert serialized data to object\r\n     * @param obj\r\n     * @param json\r\n     */\r\n    static toObject<T>(obj: T, json: object): T {\r\n        for (const propertyName in json) {\r\n            obj[propertyName] = json[propertyName];\r\n        }\r\n        return obj;\r\n    }\r\n}\r\n\r\n/** @internal */\r\nexport class DefaultStorageClass extends CacheManager {\r\n    async setAccount(): Promise<void> {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    }\r\n    getAccount(): AccountEntity {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    }\r\n    async setIdTokenCredential(): Promise<void> {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    }\r\n    getIdTokenCredential(): IdTokenEntity {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    }\r\n    async setAccessTokenCredential(): Promise<void> {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    }\r\n    getAccessTokenCredential(): AccessTokenEntity {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    }\r\n    async setRefreshTokenCredential(): Promise<void> {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    }\r\n    getRefreshTokenCredential(): RefreshTokenEntity {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    }\r\n    setAppMetadata(): void {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    }\r\n    getAppMetadata(): AppMetadataEntity {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    }\r\n    setServerTelemetry(): void {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    }\r\n    getServerTelemetry(): ServerTelemetryEntity {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    }\r\n    setAuthorityMetadata(): void {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    }\r\n    getAuthorityMetadata(): AuthorityMetadataEntity | null {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    }\r\n    getAuthorityMetadataKeys(): Array<string> {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    }\r\n    setThrottlingCache(): void {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    }\r\n    getThrottlingCache(): ThrottlingEntity {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    }\r\n    removeItem(): boolean {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    }\r\n    getKeys(): string[] {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    }\r\n    getAccountKeys(): string[] {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    }\r\n    getTokenKeys(): TokenKeys {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { INetworkModule } from \"../network/INetworkModule.js\";\r\nimport { DEFAULT_CRYPTO_IMPLEMENTATION, ICrypto } from \"../crypto/ICrypto.js\";\r\nimport { ILoggerCallback, Logger, LogLevel } from \"../logger/Logger.js\";\r\nimport {\r\n    Constants,\r\n    DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\r\n} from \"../utils/Constants.js\";\r\nimport { version } from \"../packageMetadata.js\";\r\nimport { Authority } from \"../authority/Authority.js\";\r\nimport { AzureCloudInstance } from \"../authority/AuthorityOptions.js\";\r\nimport { CacheManager, DefaultStorageClass } from \"../cache/CacheManager.js\";\r\nimport { ServerTelemetryManager } from \"../telemetry/server/ServerTelemetryManager.js\";\r\nimport { ICachePlugin } from \"../cache/interface/ICachePlugin.js\";\r\nimport { ISerializableTokenCache } from \"../cache/interface/ISerializableTokenCache.js\";\r\nimport { ClientCredentials } from \"../account/ClientCredentials.js\";\r\nimport { ProtocolMode } from \"../authority/ProtocolMode.js\";\r\nimport {\r\n    ClientAuthErrorCodes,\r\n    createClientAuthError,\r\n} from \"../error/ClientAuthError.js\";\r\n\r\n/**\r\n * Use the configuration object to configure MSAL Modules and initialize the base interfaces for MSAL.\r\n *\r\n * This object allows you to configure important elements of MSAL functionality:\r\n * - authOptions                - Authentication for application\r\n * - cryptoInterface            - Implementation of crypto functions\r\n * - libraryInfo                - Library metadata\r\n * - telemetry                  - Telemetry options and data\r\n * - loggerOptions              - Logging for application\r\n * - networkInterface           - Network implementation\r\n * - storageInterface           - Storage implementation\r\n * - systemOptions              - Additional library options\r\n * - clientCredentials          - Credentials options for confidential clients\r\n * @internal\r\n */\r\nexport type ClientConfiguration = {\r\n    authOptions: AuthOptions;\r\n    systemOptions?: SystemOptions;\r\n    loggerOptions?: LoggerOptions;\r\n    cacheOptions?: CacheOptions;\r\n    storageInterface?: CacheManager;\r\n    networkInterface?: INetworkModule;\r\n    cryptoInterface?: ICrypto;\r\n    clientCredentials?: ClientCredentials;\r\n    libraryInfo?: LibraryInfo;\r\n    telemetry?: TelemetryOptions;\r\n    serverTelemetryManager?: ServerTelemetryManager | null;\r\n    persistencePlugin?: ICachePlugin | null;\r\n    serializableCache?: ISerializableTokenCache | null;\r\n};\r\n\r\nexport type CommonClientConfiguration = {\r\n    authOptions: Required<AuthOptions>;\r\n    systemOptions: Required<SystemOptions>;\r\n    loggerOptions: Required<LoggerOptions>;\r\n    cacheOptions: Required<CacheOptions>;\r\n    storageInterface: CacheManager;\r\n    networkInterface: INetworkModule;\r\n    cryptoInterface: Required<ICrypto>;\r\n    libraryInfo: LibraryInfo;\r\n    telemetry: Required<TelemetryOptions>;\r\n    serverTelemetryManager: ServerTelemetryManager | null;\r\n    clientCredentials: ClientCredentials;\r\n    persistencePlugin: ICachePlugin | null;\r\n    serializableCache: ISerializableTokenCache | null;\r\n};\r\n\r\n/**\r\n * Use this to configure the auth options in the ClientConfiguration object\r\n *\r\n * - clientId                    - Client ID of your app registered with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview in Microsoft Identity Platform\r\n * - authority                   - You can configure a specific authority, defaults to \" \" or \"https://login.microsoftonline.com/common\"\r\n * - knownAuthorities            - An array of URIs that are known to be valid. Used in B2C scenarios.\r\n * - cloudDiscoveryMetadata      - A string containing the cloud discovery response. Used in AAD scenarios.\r\n * - clientCapabilities          - Array of capabilities which will be added to the claims.access_token.xms_cc request property on every network request.\r\n * - protocolMode                - Enum that represents the protocol that msal follows. Used for configuring proper endpoints.\r\n * - skipAuthorityMetadataCache  - A flag to choose whether to use or not use the local metadata cache during authority initialization. Defaults to false.\r\n * - instanceAware               - A flag of whether the STS will send back additional parameters to specify where the tokens should be retrieved from.\r\n * - redirectUri                 - The redirect URI where authentication responses can be received by your application. It must exactly match one of the redirect URIs registered in the Azure portal.\r\n * @internal\r\n */\r\nexport type AuthOptions = {\r\n    clientId: string;\r\n    authority: Authority;\r\n    redirectUri: string;\r\n    clientCapabilities?: Array<string>;\r\n    azureCloudOptions?: AzureCloudOptions;\r\n    skipAuthorityMetadataCache?: boolean;\r\n    instanceAware?: boolean;\r\n};\r\n\r\n/**\r\n * Use this to configure token renewal info in the Configuration object\r\n *\r\n * - tokenRenewalOffsetSeconds    - Sets the window of offset needed to renew the token before expiry\r\n */\r\nexport type SystemOptions = {\r\n    tokenRenewalOffsetSeconds?: number;\r\n    preventCorsPreflight?: boolean;\r\n};\r\n\r\n/**\r\n *  Use this to configure the logging that MSAL does, by configuring logger options in the Configuration object\r\n *\r\n * - loggerCallback                - Callback for logger\r\n * - piiLoggingEnabled             - Sets whether pii logging is enabled\r\n * - logLevel                      - Sets the level at which logging happens\r\n * - correlationId                 - Sets the correlationId printed by the logger\r\n */\r\nexport type LoggerOptions = {\r\n    loggerCallback?: ILoggerCallback;\r\n    piiLoggingEnabled?: boolean;\r\n    logLevel?: LogLevel;\r\n    correlationId?: string;\r\n};\r\n\r\n/**\r\n *  Use this to configure credential cache preferences in the ClientConfiguration object\r\n *\r\n * - claimsBasedCachingEnabled   - Sets whether tokens should be cached based on the claims hash. Default is false.\r\n */\r\nexport type CacheOptions = {\r\n    claimsBasedCachingEnabled?: boolean;\r\n};\r\n\r\n/**\r\n * Library-specific options\r\n */\r\nexport type LibraryInfo = {\r\n    sku: string;\r\n    version: string;\r\n    cpu: string;\r\n    os: string;\r\n};\r\n\r\n/**\r\n * AzureCloudInstance specific options\r\n *\r\n * - azureCloudInstance             - string enum providing short notation for soverign and public cloud authorities\r\n * - tenant                         - provision to provide the tenant info\r\n */\r\nexport type AzureCloudOptions = {\r\n    azureCloudInstance: AzureCloudInstance;\r\n    tenant?: string;\r\n};\r\n\r\nexport type TelemetryOptions = {\r\n    application: ApplicationTelemetry;\r\n};\r\n\r\n/**\r\n * Telemetry information sent on request\r\n * - appName: Unique string name of an application\r\n * - appVersion: Version of the application using MSAL\r\n */\r\nexport type ApplicationTelemetry = {\r\n    appName: string;\r\n    appVersion: string;\r\n};\r\n\r\nexport const DEFAULT_SYSTEM_OPTIONS: Required<SystemOptions> = {\r\n    tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\r\n    preventCorsPreflight: false,\r\n};\r\n\r\nconst DEFAULT_LOGGER_IMPLEMENTATION: Required<LoggerOptions> = {\r\n    loggerCallback: () => {\r\n        // allow users to not set loggerCallback\r\n    },\r\n    piiLoggingEnabled: false,\r\n    logLevel: LogLevel.Info,\r\n    correlationId: Constants.EMPTY_STRING,\r\n};\r\n\r\nconst DEFAULT_CACHE_OPTIONS: Required<CacheOptions> = {\r\n    claimsBasedCachingEnabled: false,\r\n};\r\n\r\nconst DEFAULT_NETWORK_IMPLEMENTATION: INetworkModule = {\r\n    async sendGetRequestAsync<T>(): Promise<T> {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    },\r\n    async sendPostRequestAsync<T>(): Promise<T> {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    },\r\n};\r\n\r\nconst DEFAULT_LIBRARY_INFO: LibraryInfo = {\r\n    sku: Constants.SKU,\r\n    version: version,\r\n    cpu: Constants.EMPTY_STRING,\r\n    os: Constants.EMPTY_STRING,\r\n};\r\n\r\nconst DEFAULT_CLIENT_CREDENTIALS: ClientCredentials = {\r\n    clientSecret: Constants.EMPTY_STRING,\r\n    clientAssertion: undefined,\r\n};\r\n\r\nconst DEFAULT_AZURE_CLOUD_OPTIONS: AzureCloudOptions = {\r\n    azureCloudInstance: AzureCloudInstance.None,\r\n    tenant: `${Constants.DEFAULT_COMMON_TENANT}`,\r\n};\r\n\r\nconst DEFAULT_TELEMETRY_OPTIONS: Required<TelemetryOptions> = {\r\n    application: {\r\n        appName: \"\",\r\n        appVersion: \"\",\r\n    },\r\n};\r\n\r\n/**\r\n * Function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param Configuration\r\n *\r\n * @returns Configuration\r\n */\r\nexport function buildClientConfiguration({\r\n    authOptions: userAuthOptions,\r\n    systemOptions: userSystemOptions,\r\n    loggerOptions: userLoggerOption,\r\n    cacheOptions: userCacheOptions,\r\n    storageInterface: storageImplementation,\r\n    networkInterface: networkImplementation,\r\n    cryptoInterface: cryptoImplementation,\r\n    clientCredentials: clientCredentials,\r\n    libraryInfo: libraryInfo,\r\n    telemetry: telemetry,\r\n    serverTelemetryManager: serverTelemetryManager,\r\n    persistencePlugin: persistencePlugin,\r\n    serializableCache: serializableCache,\r\n}: ClientConfiguration): CommonClientConfiguration {\r\n    const loggerOptions = {\r\n        ...DEFAULT_LOGGER_IMPLEMENTATION,\r\n        ...userLoggerOption,\r\n    };\r\n\r\n    return {\r\n        authOptions: buildAuthOptions(userAuthOptions),\r\n        systemOptions: { ...DEFAULT_SYSTEM_OPTIONS, ...userSystemOptions },\r\n        loggerOptions: loggerOptions,\r\n        cacheOptions: { ...DEFAULT_CACHE_OPTIONS, ...userCacheOptions },\r\n        storageInterface:\r\n            storageImplementation ||\r\n            new DefaultStorageClass(\r\n                userAuthOptions.clientId,\r\n                DEFAULT_CRYPTO_IMPLEMENTATION,\r\n                new Logger(loggerOptions)\r\n            ),\r\n        networkInterface:\r\n            networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\r\n        cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION,\r\n        clientCredentials: clientCredentials || DEFAULT_CLIENT_CREDENTIALS,\r\n        libraryInfo: { ...DEFAULT_LIBRARY_INFO, ...libraryInfo },\r\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...telemetry },\r\n        serverTelemetryManager: serverTelemetryManager || null,\r\n        persistencePlugin: persistencePlugin || null,\r\n        serializableCache: serializableCache || null,\r\n    };\r\n}\r\n\r\n/**\r\n * Construct authoptions from the client and platform passed values\r\n * @param authOptions\r\n */\r\nfunction buildAuthOptions(authOptions: AuthOptions): Required<AuthOptions> {\r\n    return {\r\n        clientCapabilities: [],\r\n        azureCloudOptions: DEFAULT_AZURE_CLOUD_OPTIONS,\r\n        skipAuthorityMetadataCache: false,\r\n        instanceAware: false,\r\n        ...authOptions,\r\n    };\r\n}\r\n\r\n/**\r\n * Returns true if config has protocolMode set to ProtocolMode.OIDC, false otherwise\r\n * @param ClientConfiguration\r\n */\r\nexport function isOidcProtocolMode(config: ClientConfiguration): boolean {\r\n    return (\r\n        config.authOptions.authority.options.protocolMode === ProtocolMode.OIDC\r\n    );\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    ClientAuthErrorCodes,\r\n    createClientAuthError,\r\n} from \"../error/ClientAuthError.js\";\r\nimport { NetworkResponse } from \"./NetworkResponse.js\";\r\n\r\n/**\r\n * Options allowed by network request APIs.\r\n */\r\nexport type NetworkRequestOptions = {\r\n    headers?: Record<string, string>;\r\n    body?: string;\r\n};\r\n\r\n/**\r\n * Client network interface to send backend requests.\r\n * @interface\r\n */\r\nexport interface INetworkModule {\r\n    /**\r\n     * Interface function for async network \"GET\" requests. Based on the Fetch standard: https://fetch.spec.whatwg.org/\r\n     * @param url\r\n     * @param requestParams\r\n     * @param enableCaching\r\n     */\r\n    sendGetRequestAsync<T>(\r\n        url: string,\r\n        options?: NetworkRequestOptions,\r\n        timeout?: number\r\n    ): Promise<NetworkResponse<T>>;\r\n\r\n    /**\r\n     * Interface function for async network \"POST\" requests. Based on the Fetch standard: https://fetch.spec.whatwg.org/\r\n     * @param url\r\n     * @param requestParams\r\n     * @param enableCaching\r\n     */\r\n    sendPostRequestAsync<T>(\r\n        url: string,\r\n        options?: NetworkRequestOptions\r\n    ): Promise<NetworkResponse<T>>;\r\n}\r\n\r\nexport const StubbedNetworkModule: INetworkModule = {\r\n    sendGetRequestAsync: () => {\r\n        return Promise.reject(\r\n            createClientAuthError(ClientAuthErrorCodes.methodNotImplemented)\r\n        );\r\n    },\r\n    sendPostRequestAsync: () => {\r\n        return Promise.reject(\r\n            createClientAuthError(ClientAuthErrorCodes.methodNotImplemented)\r\n        );\r\n    },\r\n};\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n/**\r\n * Enumeration of operations that are instrumented by have their performance measured by the PerformanceClient.\r\n *\r\n * @export\r\n * @enum {number}\r\n */\r\nexport const PerformanceEvents = {\r\n    /**\r\n     * acquireTokenByCode API (msal-browser and msal-node).\r\n     * Used to acquire tokens by trading an authorization code against the token endpoint.\r\n     */\r\n    AcquireTokenByCode: \"acquireTokenByCode\",\r\n\r\n    /**\r\n     * acquireTokenByRefreshToken API (msal-browser and msal-node).\r\n     * Used to renew an access token using a refresh token against the token endpoint.\r\n     */\r\n    AcquireTokenByRefreshToken: \"acquireTokenByRefreshToken\",\r\n\r\n    /**\r\n     * acquireTokenSilent API (msal-browser and msal-node).\r\n     * Used to silently acquire a new access token (from the cache or the network).\r\n     */\r\n    AcquireTokenSilent: \"acquireTokenSilent\",\r\n\r\n    /**\r\n     * acquireTokenSilentAsync (msal-browser).\r\n     * Internal API for acquireTokenSilent.\r\n     */\r\n    AcquireTokenSilentAsync: \"acquireTokenSilentAsync\",\r\n\r\n    /**\r\n     * acquireTokenPopup (msal-browser).\r\n     * Used to acquire a new access token interactively through pop ups\r\n     */\r\n    AcquireTokenPopup: \"acquireTokenPopup\",\r\n\r\n    /**\r\n     * acquireTokenPreRedirect (msal-browser).\r\n     * First part of the redirect flow.\r\n     * Used to acquire a new access token interactively through redirects.\r\n     */\r\n    AcquireTokenPreRedirect: \"acquireTokenPreRedirect\",\r\n\r\n    /**\r\n     * acquireTokenRedirect (msal-browser).\r\n     * Second part of the redirect flow.\r\n     * Used to acquire a new access token interactively through redirects.\r\n     */\r\n    AcquireTokenRedirect: \"acquireTokenRedirect\",\r\n\r\n    /**\r\n     * getPublicKeyThumbprint API in CryptoOpts class (msal-browser).\r\n     * Used to generate a public/private keypair and generate a public key thumbprint for pop requests.\r\n     */\r\n    CryptoOptsGetPublicKeyThumbprint: \"cryptoOptsGetPublicKeyThumbprint\",\r\n\r\n    /**\r\n     * signJwt API in CryptoOpts class (msal-browser).\r\n     * Used to signed a pop token.\r\n     */\r\n    CryptoOptsSignJwt: \"cryptoOptsSignJwt\",\r\n\r\n    /**\r\n     * acquireToken API in the SilentCacheClient class (msal-browser).\r\n     * Used to read access tokens from the cache.\r\n     */\r\n    SilentCacheClientAcquireToken: \"silentCacheClientAcquireToken\",\r\n\r\n    /**\r\n     * acquireToken API in the SilentIframeClient class (msal-browser).\r\n     * Used to acquire a new set of tokens from the authorize endpoint in a hidden iframe.\r\n     */\r\n    SilentIframeClientAcquireToken: \"silentIframeClientAcquireToken\",\r\n    AwaitConcurrentIframe: \"awaitConcurrentIframe\", // Time spent waiting for a concurrent iframe to complete\r\n\r\n    /**\r\n     * acquireToken API in SilentRereshClient (msal-browser).\r\n     * Used to acquire a new set of tokens from the token endpoint using a refresh token.\r\n     */\r\n    SilentRefreshClientAcquireToken: \"silentRefreshClientAcquireToken\",\r\n\r\n    /**\r\n     * ssoSilent API (msal-browser).\r\n     * Used to silently acquire an authorization code and set of tokens using a hidden iframe.\r\n     */\r\n    SsoSilent: \"ssoSilent\",\r\n\r\n    /**\r\n     * getDiscoveredAuthority API in StandardInteractionClient class (msal-browser).\r\n     * Used to load authority metadata for a request.\r\n     */\r\n    StandardInteractionClientGetDiscoveredAuthority:\r\n        \"standardInteractionClientGetDiscoveredAuthority\",\r\n\r\n    /**\r\n     * acquireToken APIs in msal-browser.\r\n     * Used to make an /authorize endpoint call with native brokering enabled.\r\n     */\r\n    FetchAccountIdWithNativeBroker: \"fetchAccountIdWithNativeBroker\",\r\n\r\n    /**\r\n     * acquireToken API in NativeInteractionClient class (msal-browser).\r\n     * Used to acquire a token from Native component when native brokering is enabled.\r\n     */\r\n    NativeInteractionClientAcquireToken: \"nativeInteractionClientAcquireToken\",\r\n    /**\r\n     * Time spent creating default headers for requests to token endpoint\r\n     */\r\n    BaseClientCreateTokenRequestHeaders: \"baseClientCreateTokenRequestHeaders\",\r\n    /**\r\n     * Time spent sending/waiting for the response of a request to the token endpoint\r\n     */\r\n    NetworkClientSendPostRequestAsync: \"networkClientSendPostRequestAsync\",\r\n    RefreshTokenClientExecutePostToTokenEndpoint:\r\n        \"refreshTokenClientExecutePostToTokenEndpoint\",\r\n    AuthorizationCodeClientExecutePostToTokenEndpoint:\r\n        \"authorizationCodeClientExecutePostToTokenEndpoint\",\r\n    /**\r\n     * Used to measure the time taken for completing embedded-broker handshake (PW-Broker).\r\n     */\r\n    BrokerHandhshake: \"brokerHandshake\",\r\n    /**\r\n     * acquireTokenByRefreshToken API in BrokerClientApplication (PW-Broker) .\r\n     */\r\n    AcquireTokenByRefreshTokenInBroker: \"acquireTokenByRefreshTokenInBroker\",\r\n    /**\r\n     * Time taken for token acquisition by broker\r\n     */\r\n    AcquireTokenByBroker: \"acquireTokenByBroker\",\r\n\r\n    /**\r\n     * Time spent on the network for refresh token acquisition\r\n     */\r\n    RefreshTokenClientExecuteTokenRequest:\r\n        \"refreshTokenClientExecuteTokenRequest\",\r\n\r\n    /**\r\n     * Time taken for acquiring refresh token , records RT size\r\n     */\r\n    RefreshTokenClientAcquireToken: \"refreshTokenClientAcquireToken\",\r\n\r\n    /**\r\n     * Time taken for acquiring cached refresh token\r\n     */\r\n    RefreshTokenClientAcquireTokenWithCachedRefreshToken:\r\n        \"refreshTokenClientAcquireTokenWithCachedRefreshToken\",\r\n\r\n    /**\r\n     * acquireTokenByRefreshToken API in RefreshTokenClient (msal-common).\r\n     */\r\n    RefreshTokenClientAcquireTokenByRefreshToken:\r\n        \"refreshTokenClientAcquireTokenByRefreshToken\",\r\n\r\n    /**\r\n     * Helper function to create token request body in RefreshTokenClient (msal-common).\r\n     */\r\n    RefreshTokenClientCreateTokenRequestBody:\r\n        \"refreshTokenClientCreateTokenRequestBody\",\r\n\r\n    /**\r\n     * acquireTokenFromCache (msal-browser).\r\n     * Internal API for acquiring token from cache\r\n     */\r\n    AcquireTokenFromCache: \"acquireTokenFromCache\",\r\n    SilentFlowClientAcquireCachedToken: \"silentFlowClientAcquireCachedToken\",\r\n    SilentFlowClientGenerateResultFromCacheRecord:\r\n        \"silentFlowClientGenerateResultFromCacheRecord\",\r\n\r\n    /**\r\n     * acquireTokenBySilentIframe (msal-browser).\r\n     * Internal API for acquiring token by silent Iframe\r\n     */\r\n    AcquireTokenBySilentIframe: \"acquireTokenBySilentIframe\",\r\n\r\n    /**\r\n     * Internal API for initializing base request in BaseInteractionClient (msal-browser)\r\n     */\r\n    InitializeBaseRequest: \"initializeBaseRequest\",\r\n\r\n    /**\r\n     * Internal API for initializing silent request in SilentCacheClient (msal-browser)\r\n     */\r\n    InitializeSilentRequest: \"initializeSilentRequest\",\r\n\r\n    InitializeClientApplication: \"initializeClientApplication\",\r\n\r\n    InitializeCache: \"initializeCache\",\r\n\r\n    /**\r\n     * Helper function in SilentIframeClient class (msal-browser).\r\n     */\r\n    SilentIframeClientTokenHelper: \"silentIframeClientTokenHelper\",\r\n\r\n    /**\r\n     * SilentHandler\r\n     */\r\n    SilentHandlerInitiateAuthRequest: \"silentHandlerInitiateAuthRequest\",\r\n    SilentHandlerMonitorIframeForHash: \"silentHandlerMonitorIframeForHash\",\r\n    SilentHandlerLoadFrame: \"silentHandlerLoadFrame\",\r\n    SilentHandlerLoadFrameSync: \"silentHandlerLoadFrameSync\",\r\n\r\n    /**\r\n     * Helper functions in StandardInteractionClient class (msal-browser)\r\n     */\r\n    StandardInteractionClientCreateAuthCodeClient:\r\n        \"standardInteractionClientCreateAuthCodeClient\",\r\n    StandardInteractionClientGetClientConfiguration:\r\n        \"standardInteractionClientGetClientConfiguration\",\r\n    StandardInteractionClientInitializeAuthorizationRequest:\r\n        \"standardInteractionClientInitializeAuthorizationRequest\",\r\n    StandardInteractionClientInitializeAuthorizationCodeRequest:\r\n        \"standardInteractionClientInitializeAuthorizationCodeRequest\",\r\n\r\n    /**\r\n     * getAuthCodeUrl API (msal-browser and msal-node).\r\n     */\r\n    GetAuthCodeUrl: \"getAuthCodeUrl\",\r\n\r\n    /**\r\n     * Functions from InteractionHandler (msal-browser)\r\n     */\r\n    HandleCodeResponseFromServer: \"handleCodeResponseFromServer\",\r\n    HandleCodeResponse: \"handleCodeResponse\",\r\n    UpdateTokenEndpointAuthority: \"updateTokenEndpointAuthority\",\r\n\r\n    /**\r\n     * APIs in Authorization Code Client (msal-common)\r\n     */\r\n    AuthClientAcquireToken: \"authClientAcquireToken\",\r\n    AuthClientExecuteTokenRequest: \"authClientExecuteTokenRequest\",\r\n    AuthClientCreateTokenRequestBody: \"authClientCreateTokenRequestBody\",\r\n    AuthClientCreateQueryString: \"authClientCreateQueryString\",\r\n\r\n    /**\r\n     * Generate functions in PopTokenGenerator (msal-common)\r\n     */\r\n    PopTokenGenerateCnf: \"popTokenGenerateCnf\",\r\n    PopTokenGenerateKid: \"popTokenGenerateKid\",\r\n\r\n    /**\r\n     * handleServerTokenResponse API in ResponseHandler (msal-common)\r\n     */\r\n    HandleServerTokenResponse: \"handleServerTokenResponse\",\r\n    DeserializeResponse: \"deserializeResponse\",\r\n\r\n    /**\r\n     * Authority functions\r\n     */\r\n    AuthorityFactoryCreateDiscoveredInstance:\r\n        \"authorityFactoryCreateDiscoveredInstance\",\r\n    AuthorityResolveEndpointsAsync: \"authorityResolveEndpointsAsync\",\r\n    AuthorityResolveEndpointsFromLocalSources:\r\n        \"authorityResolveEndpointsFromLocalSources\",\r\n    AuthorityGetCloudDiscoveryMetadataFromNetwork:\r\n        \"authorityGetCloudDiscoveryMetadataFromNetwork\",\r\n    AuthorityUpdateCloudDiscoveryMetadata:\r\n        \"authorityUpdateCloudDiscoveryMetadata\",\r\n    AuthorityGetEndpointMetadataFromNetwork:\r\n        \"authorityGetEndpointMetadataFromNetwork\",\r\n    AuthorityUpdateEndpointMetadata: \"authorityUpdateEndpointMetadata\",\r\n    AuthorityUpdateMetadataWithRegionalInformation:\r\n        \"authorityUpdateMetadataWithRegionalInformation\",\r\n\r\n    /**\r\n     * Region Discovery functions\r\n     */\r\n    RegionDiscoveryDetectRegion: \"regionDiscoveryDetectRegion\",\r\n    RegionDiscoveryGetRegionFromIMDS: \"regionDiscoveryGetRegionFromIMDS\",\r\n    RegionDiscoveryGetCurrentVersion: \"regionDiscoveryGetCurrentVersion\",\r\n\r\n    AcquireTokenByCodeAsync: \"acquireTokenByCodeAsync\",\r\n\r\n    GetEndpointMetadataFromNetwork: \"getEndpointMetadataFromNetwork\",\r\n    GetCloudDiscoveryMetadataFromNetworkMeasurement:\r\n        \"getCloudDiscoveryMetadataFromNetworkMeasurement\",\r\n\r\n    HandleRedirectPromiseMeasurement: \"handleRedirectPromise\",\r\n    HandleNativeRedirectPromiseMeasurement: \"handleNativeRedirectPromise\",\r\n\r\n    UpdateCloudDiscoveryMetadataMeasurement:\r\n        \"updateCloudDiscoveryMetadataMeasurement\",\r\n\r\n    UsernamePasswordClientAcquireToken: \"usernamePasswordClientAcquireToken\",\r\n\r\n    NativeMessageHandlerHandshake: \"nativeMessageHandlerHandshake\",\r\n\r\n    NativeGenerateAuthResult: \"nativeGenerateAuthResult\",\r\n\r\n    RemoveHiddenIframe: \"removeHiddenIframe\",\r\n\r\n    /**\r\n     * Cache operations\r\n     */\r\n    ClearTokensAndKeysWithClaims: \"clearTokensAndKeysWithClaims\",\r\n    CacheManagerGetRefreshToken: \"cacheManagerGetRefreshToken\",\r\n    ImportExistingCache: \"importExistingCache\",\r\n    SetUserData: \"setUserData\",\r\n    LocalStorageUpdated: \"localStorageUpdated\",\r\n\r\n    /**\r\n     * Crypto Operations\r\n     */\r\n    GeneratePkceCodes: \"generatePkceCodes\",\r\n    GenerateCodeVerifier: \"generateCodeVerifier\",\r\n    GenerateCodeChallengeFromVerifier: \"generateCodeChallengeFromVerifier\",\r\n    Sha256Digest: \"sha256Digest\",\r\n    GetRandomValues: \"getRandomValues\",\r\n    GenerateHKDF: \"generateHKDF\",\r\n    GenerateBaseKey: \"generateBaseKey\",\r\n    Base64Decode: \"base64Decode\",\r\n    UrlEncodeArr: \"urlEncodeArr\",\r\n    Encrypt: \"encrypt\",\r\n    Decrypt: \"decrypt\",\r\n} as const;\r\nexport type PerformanceEvents =\r\n    (typeof PerformanceEvents)[keyof typeof PerformanceEvents];\r\n\r\nexport const PerformanceEventAbbreviations: ReadonlyMap<string, string> =\r\n    new Map([\r\n        [PerformanceEvents.AcquireTokenByCode, \"ATByCode\"],\r\n        [PerformanceEvents.AcquireTokenByRefreshToken, \"ATByRT\"],\r\n        [PerformanceEvents.AcquireTokenSilent, \"ATS\"],\r\n        [PerformanceEvents.AcquireTokenSilentAsync, \"ATSAsync\"],\r\n        [PerformanceEvents.AcquireTokenPopup, \"ATPopup\"],\r\n        [PerformanceEvents.AcquireTokenRedirect, \"ATRedirect\"],\r\n        [\r\n            PerformanceEvents.CryptoOptsGetPublicKeyThumbprint,\r\n            \"CryptoGetPKThumb\",\r\n        ],\r\n        [PerformanceEvents.CryptoOptsSignJwt, \"CryptoSignJwt\"],\r\n        [PerformanceEvents.SilentCacheClientAcquireToken, \"SltCacheClientAT\"],\r\n        [PerformanceEvents.SilentIframeClientAcquireToken, \"SltIframeClientAT\"],\r\n        [PerformanceEvents.SilentRefreshClientAcquireToken, \"SltRClientAT\"],\r\n        [PerformanceEvents.SsoSilent, \"SsoSlt\"],\r\n        [\r\n            PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority,\r\n            \"StdIntClientGetDiscAuth\",\r\n        ],\r\n        [\r\n            PerformanceEvents.FetchAccountIdWithNativeBroker,\r\n            \"FetchAccIdWithNtvBroker\",\r\n        ],\r\n        [\r\n            PerformanceEvents.NativeInteractionClientAcquireToken,\r\n            \"NtvIntClientAT\",\r\n        ],\r\n        [\r\n            PerformanceEvents.BaseClientCreateTokenRequestHeaders,\r\n            \"BaseClientCreateTReqHead\",\r\n        ],\r\n        [\r\n            PerformanceEvents.NetworkClientSendPostRequestAsync,\r\n            \"NetClientSendPost\",\r\n        ],\r\n        [\r\n            PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint,\r\n            \"RTClientExecPost\",\r\n        ],\r\n        [\r\n            PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint,\r\n            \"AuthCodeClientExecPost\",\r\n        ],\r\n        [PerformanceEvents.BrokerHandhshake, \"BrokerHandshake\"],\r\n        [\r\n            PerformanceEvents.AcquireTokenByRefreshTokenInBroker,\r\n            \"ATByRTInBroker\",\r\n        ],\r\n        [PerformanceEvents.AcquireTokenByBroker, \"ATByBroker\"],\r\n        [\r\n            PerformanceEvents.RefreshTokenClientExecuteTokenRequest,\r\n            \"RTClientExecTReq\",\r\n        ],\r\n        [PerformanceEvents.RefreshTokenClientAcquireToken, \"RTClientAT\"],\r\n        [\r\n            PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,\r\n            \"RTClientATWithCachedRT\",\r\n        ],\r\n        [\r\n            PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken,\r\n            \"RTClientATByRT\",\r\n        ],\r\n        [\r\n            PerformanceEvents.RefreshTokenClientCreateTokenRequestBody,\r\n            \"RTClientCreateTReqBody\",\r\n        ],\r\n        [PerformanceEvents.AcquireTokenFromCache, \"ATFromCache\"],\r\n        [\r\n            PerformanceEvents.SilentFlowClientAcquireCachedToken,\r\n            \"SltFlowClientATCached\",\r\n        ],\r\n        [\r\n            PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord,\r\n            \"SltFlowClientGenResFromCache\",\r\n        ],\r\n        [PerformanceEvents.AcquireTokenBySilentIframe, \"ATBySltIframe\"],\r\n        [PerformanceEvents.InitializeBaseRequest, \"InitBaseReq\"],\r\n        [PerformanceEvents.InitializeSilentRequest, \"InitSltReq\"],\r\n        [\r\n            PerformanceEvents.InitializeClientApplication,\r\n            \"InitClientApplication\",\r\n        ],\r\n        [PerformanceEvents.InitializeCache, \"InitCache\"],\r\n        [PerformanceEvents.ImportExistingCache, \"importCache\"],\r\n        [PerformanceEvents.SetUserData, \"setUserData\"],\r\n        [PerformanceEvents.LocalStorageUpdated, \"localStorageUpdated\"],\r\n        [PerformanceEvents.SilentIframeClientTokenHelper, \"SIClientTHelper\"],\r\n        [\r\n            PerformanceEvents.SilentHandlerInitiateAuthRequest,\r\n            \"SHandlerInitAuthReq\",\r\n        ],\r\n        [\r\n            PerformanceEvents.SilentHandlerMonitorIframeForHash,\r\n            \"SltHandlerMonitorIframeForHash\",\r\n        ],\r\n        [PerformanceEvents.SilentHandlerLoadFrame, \"SHandlerLoadFrame\"],\r\n        [PerformanceEvents.SilentHandlerLoadFrameSync, \"SHandlerLoadFrameSync\"],\r\n\r\n        [\r\n            PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\r\n            \"StdIntClientCreateAuthCodeClient\",\r\n        ],\r\n        [\r\n            PerformanceEvents.StandardInteractionClientGetClientConfiguration,\r\n            \"StdIntClientGetClientConf\",\r\n        ],\r\n        [\r\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\r\n            \"StdIntClientInitAuthReq\",\r\n        ],\r\n        [\r\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest,\r\n            \"StdIntClientInitAuthCodeReq\",\r\n        ],\r\n\r\n        [PerformanceEvents.GetAuthCodeUrl, \"GetAuthCodeUrl\"],\r\n\r\n        [\r\n            PerformanceEvents.HandleCodeResponseFromServer,\r\n            \"HandleCodeResFromServer\",\r\n        ],\r\n        [PerformanceEvents.HandleCodeResponse, \"HandleCodeResp\"],\r\n        [PerformanceEvents.UpdateTokenEndpointAuthority, \"UpdTEndpointAuth\"],\r\n\r\n        [PerformanceEvents.AuthClientAcquireToken, \"AuthClientAT\"],\r\n        [PerformanceEvents.AuthClientExecuteTokenRequest, \"AuthClientExecTReq\"],\r\n        [\r\n            PerformanceEvents.AuthClientCreateTokenRequestBody,\r\n            \"AuthClientCreateTReqBody\",\r\n        ],\r\n        [\r\n            PerformanceEvents.AuthClientCreateQueryString,\r\n            \"AuthClientCreateQueryStr\",\r\n        ],\r\n        [PerformanceEvents.PopTokenGenerateCnf, \"PopTGenCnf\"],\r\n        [PerformanceEvents.PopTokenGenerateKid, \"PopTGenKid\"],\r\n        [PerformanceEvents.HandleServerTokenResponse, \"HandleServerTRes\"],\r\n        [PerformanceEvents.DeserializeResponse, \"DeserializeRes\"],\r\n        [\r\n            PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance,\r\n            \"AuthFactCreateDiscInst\",\r\n        ],\r\n        [\r\n            PerformanceEvents.AuthorityResolveEndpointsAsync,\r\n            \"AuthResolveEndpointsAsync\",\r\n        ],\r\n        [\r\n            PerformanceEvents.AuthorityResolveEndpointsFromLocalSources,\r\n            \"AuthResolveEndpointsFromLocal\",\r\n        ],\r\n        [\r\n            PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork,\r\n            \"AuthGetCDMetaFromNet\",\r\n        ],\r\n        [\r\n            PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata,\r\n            \"AuthUpdCDMeta\",\r\n        ],\r\n        [\r\n            PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork,\r\n            \"AuthUpdCDMetaFromNet\",\r\n        ],\r\n        [\r\n            PerformanceEvents.AuthorityUpdateEndpointMetadata,\r\n            \"AuthUpdEndpointMeta\",\r\n        ],\r\n        [\r\n            PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation,\r\n            \"AuthUpdMetaWithRegInfo\",\r\n        ],\r\n        [PerformanceEvents.RegionDiscoveryDetectRegion, \"RegDiscDetectReg\"],\r\n        [\r\n            PerformanceEvents.RegionDiscoveryGetRegionFromIMDS,\r\n            \"RegDiscGetRegFromIMDS\",\r\n        ],\r\n        [\r\n            PerformanceEvents.RegionDiscoveryGetCurrentVersion,\r\n            \"RegDiscGetCurrentVer\",\r\n        ],\r\n        [PerformanceEvents.AcquireTokenByCodeAsync, \"ATByCodeAsync\"],\r\n        [\r\n            PerformanceEvents.GetEndpointMetadataFromNetwork,\r\n            \"GetEndpointMetaFromNet\",\r\n        ],\r\n        [\r\n            PerformanceEvents.GetCloudDiscoveryMetadataFromNetworkMeasurement,\r\n            \"GetCDMetaFromNet\",\r\n        ],\r\n        [\r\n            PerformanceEvents.HandleRedirectPromiseMeasurement,\r\n            \"HandleRedirectPromise\",\r\n        ],\r\n        [\r\n            PerformanceEvents.HandleNativeRedirectPromiseMeasurement,\r\n            \"HandleNtvRedirectPromise\",\r\n        ],\r\n        [\r\n            PerformanceEvents.UpdateCloudDiscoveryMetadataMeasurement,\r\n            \"UpdateCDMeta\",\r\n        ],\r\n        [\r\n            PerformanceEvents.UsernamePasswordClientAcquireToken,\r\n            \"UserPassClientAT\",\r\n        ],\r\n        [\r\n            PerformanceEvents.NativeMessageHandlerHandshake,\r\n            \"NtvMsgHandlerHandshake\",\r\n        ],\r\n        [PerformanceEvents.NativeGenerateAuthResult, \"NtvGenAuthRes\"],\r\n        [PerformanceEvents.RemoveHiddenIframe, \"RemoveHiddenIframe\"],\r\n        [\r\n            PerformanceEvents.ClearTokensAndKeysWithClaims,\r\n            \"ClearTAndKeysWithClaims\",\r\n        ],\r\n        [PerformanceEvents.CacheManagerGetRefreshToken, \"CacheManagerGetRT\"],\r\n        [PerformanceEvents.GeneratePkceCodes, \"GenPkceCodes\"],\r\n        [PerformanceEvents.GenerateCodeVerifier, \"GenCodeVerifier\"],\r\n        [\r\n            PerformanceEvents.GenerateCodeChallengeFromVerifier,\r\n            \"GenCodeChallengeFromVerifier\",\r\n        ],\r\n        [PerformanceEvents.Sha256Digest, \"Sha256Digest\"],\r\n        [PerformanceEvents.GetRandomValues, \"GetRandomValues\"],\r\n        [PerformanceEvents.GenerateHKDF, \"genHKDF\"],\r\n        [PerformanceEvents.GenerateBaseKey, \"genBaseKey\"],\r\n        [PerformanceEvents.Base64Decode, \"b64Decode\"],\r\n        [PerformanceEvents.UrlEncodeArr, \"urlEncArr\"],\r\n        [PerformanceEvents.Encrypt, \"encrypt\"],\r\n        [PerformanceEvents.Decrypt, \"decrypt\"],\r\n    ]);\r\n\r\n/**\r\n * State of the performance event.\r\n *\r\n * @export\r\n * @enum {number}\r\n */\r\nexport const PerformanceEventStatus = {\r\n    NotStarted: 0,\r\n    InProgress: 1,\r\n    Completed: 2,\r\n} as const;\r\nexport type PerformanceEventStatus =\r\n    (typeof PerformanceEventStatus)[keyof typeof PerformanceEventStatus];\r\n\r\nexport type SubMeasurement = {\r\n    name: string;\r\n    startTimeMs: number;\r\n};\r\n\r\n/**\r\n * Performance measurement taken by the library, including metadata about the request and application.\r\n *\r\n * @export\r\n * @typedef {PerformanceEvent}\r\n */\r\nexport type PerformanceEvent = {\r\n    /**\r\n     * Unique id for the event\r\n     *\r\n     * @type {string}\r\n     */\r\n    eventId: string;\r\n\r\n    /**\r\n     * State of the perforance measure.\r\n     *\r\n     * @type {PerformanceEventStatus}\r\n     */\r\n    status: PerformanceEventStatus;\r\n\r\n    /**\r\n     * Login authority used for the request\r\n     *\r\n     * @type {string}\r\n     */\r\n    authority: string;\r\n\r\n    /**\r\n     * Client id for the application\r\n     *\r\n     * @type {string}\r\n     */\r\n    clientId: string;\r\n\r\n    /**\r\n     * Correlation ID used for the request\r\n     *\r\n     * @type {string}\r\n     */\r\n    correlationId: string;\r\n\r\n    /**\r\n     * End-to-end duration in milliseconds.\r\n     * @date 3/22/2022 - 3:40:05 PM\r\n     *\r\n     * @type {number}\r\n     */\r\n    durationMs?: number;\r\n\r\n    /**\r\n     * Visibility of the page when the event completed.\r\n     * Read from: https://developer.mozilla.org/docs/Web/API/Page_Visibility_API\r\n     *\r\n     * @type {?(string | null)}\r\n     */\r\n    endPageVisibility?: string | null;\r\n\r\n    /**\r\n     * Whether the result was retrieved from the cache.\r\n     *\r\n     * @type {(boolean | null)}\r\n     */\r\n    fromCache?: boolean | null;\r\n\r\n    /**\r\n     * Event name (usually in the form of classNameFunctionName)\r\n     *\r\n     * @type {string}\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * Visibility of the page when the event completed.\r\n     * Read from: https://developer.mozilla.org/docs/Web/API/Page_Visibility_API\r\n     *\r\n     * @type {?(string | null)}\r\n     */\r\n    startPageVisibility?: string | null;\r\n\r\n    /**\r\n     * Unix millisecond timestamp when the event was initiated.\r\n     *\r\n     * @type {number}\r\n     */\r\n    startTimeMs: number;\r\n\r\n    /**\r\n     * Whether or the operation completed successfully.\r\n     *\r\n     * @type {(boolean | null)}\r\n     */\r\n    success?: boolean | null;\r\n\r\n    /**\r\n     * Add specific error code in case of failure\r\n     *\r\n     * @type {string}\r\n     */\r\n    errorCode?: string;\r\n\r\n    /**\r\n     * Add specific sub error code in case of failure\r\n     *\r\n     * @type {string}\r\n     */\r\n    subErrorCode?: string;\r\n\r\n    /**\r\n     * Server error number\r\n     */\r\n    serverErrorNo?: string;\r\n\r\n    /**\r\n     * Name of the library used for the operation.\r\n     *\r\n     * @type {string}\r\n     */\r\n    libraryName: string;\r\n\r\n    /**\r\n     * Version of the library used for the operation.\r\n     *\r\n     * @type {string}\r\n     */\r\n    libraryVersion: string;\r\n\r\n    /**\r\n     * Whether the response is from a native component (e.g., WAM)\r\n     *\r\n     * @type {?boolean}\r\n     */\r\n    isNativeBroker?: boolean;\r\n\r\n    /**\r\n     * Request ID returned from the response\r\n     *\r\n     * @type {?string}\r\n     */\r\n    requestId?: string;\r\n\r\n    /**\r\n     * Cache lookup policy\r\n     *\r\n     * @type {?number}\r\n     */\r\n    cacheLookupPolicy?: number | undefined;\r\n\r\n    /**\r\n     * Cache Outcome\r\n     * @type {?number}\r\n     */\r\n    cacheOutcome?: number;\r\n\r\n    /**\r\n     * Amount of time spent in the JS queue in milliseconds.\r\n     *\r\n     * @type {?number}\r\n     */\r\n    queuedTimeMs?: number;\r\n\r\n    /**\r\n     * Sub-measurements for internal use. To be deleted before flushing.\r\n     */\r\n    incompleteSubMeasurements?: Map<string, SubMeasurement>;\r\n\r\n    visibilityChangeCount?: number;\r\n    incompleteSubsCount?: number;\r\n\r\n    /**\r\n     * CorrelationId of the in progress iframe request that was awaited\r\n     */\r\n    awaitIframeCorrelationId?: string;\r\n    /**\r\n     * Amount of times queued in the JS event queue.\r\n     *\r\n     * @type {?number}\r\n     */\r\n    queuedCount?: number;\r\n    /**\r\n     * Amount of manually completed queue events.\r\n     *\r\n     * @type {?number}\r\n     */\r\n    queuedManuallyCompletedCount?: number;\r\n\r\n    /**\r\n     * Size of the id token\r\n     *\r\n     * @type {number}\r\n     */\r\n    idTokenSize?: number;\r\n\r\n    /**\r\n     *\r\n     * Size of the access token\r\n     *\r\n     * @type {number}\r\n     */\r\n\r\n    accessTokenSize?: number;\r\n\r\n    /**\r\n     *\r\n     * Size of the refresh token\r\n     *\r\n     * @type {number}\r\n     */\r\n\r\n    refreshTokenSize?: number | undefined;\r\n\r\n    /**\r\n     * Application name as specified by the app.\r\n     *\r\n     * @type {?string}\r\n     */\r\n    appName?: string;\r\n\r\n    /**\r\n     * Application version as specified by the app.\r\n     *\r\n     * @type {?string}\r\n     */\r\n    appVersion?: string;\r\n\r\n    /**\r\n     * The following are fields that may be emitted in native broker scenarios\r\n     */\r\n    extensionId?: string;\r\n    extensionVersion?: string;\r\n    matsBrokerVersion?: string;\r\n    matsAccountJoinOnStart?: string;\r\n    matsAccountJoinOnEnd?: string;\r\n    matsDeviceJoin?: string;\r\n    matsPromptBehavior?: string;\r\n    matsApiErrorCode?: number;\r\n    matsUiVisible?: boolean;\r\n    matsSilentCode?: number;\r\n    matsSilentBiSubCode?: number;\r\n    matsSilentMessage?: string;\r\n    matsSilentStatus?: number;\r\n    matsHttpStatus?: number;\r\n    matsHttpEventCount?: number;\r\n\r\n    /**\r\n     * Http POST metadata\r\n     */\r\n    httpVerToken?: string;\r\n    httpStatus?: number;\r\n    contentTypeHeader?: string;\r\n    contentLengthHeader?: string;\r\n\r\n    /**\r\n     * Platform broker fields\r\n     */\r\n    allowPlatformBroker?: boolean;\r\n    extensionInstalled?: boolean;\r\n    extensionHandshakeTimeoutMs?: number;\r\n    extensionHandshakeTimedOut?: boolean;\r\n\r\n    /**\r\n     * Nested App Auth Fields\r\n     */\r\n    nestedAppAuthRequest?: boolean;\r\n\r\n    /**\r\n     * Multiple matched access/id/refresh tokens in the cache\r\n     */\r\n    multiMatchedAT?: number;\r\n    multiMatchedID?: number;\r\n    multiMatchedRT?: number;\r\n\r\n    errorName?: string;\r\n    errorStack?: string[];\r\n\r\n    // Event context as JSON string\r\n    context?: string;\r\n\r\n    // Number of tokens in the cache to be reported when cache quota is exceeded\r\n    cacheRtCount?: number;\r\n    cacheIdCount?: number;\r\n    cacheAtCount?: number;\r\n\r\n    // Scenario id to track custom user prompts\r\n    scenarioId?: string;\r\n\r\n    accountType?: \"AAD\" | \"MSA\" | \"B2C\";\r\n\r\n    /**\r\n     * Server error that triggers a request retry\r\n     *\r\n     * @type {string}\r\n     */\r\n    retryError?: string;\r\n\r\n    embeddedClientId?: string;\r\n    embeddedRedirectUri?: string;\r\n\r\n    isAsyncPopup?: boolean;\r\n\r\n    rtExpiresOnMs?: number;\r\n\r\n    sidFromClaims?: boolean;\r\n    sidFromRequest?: boolean;\r\n    loginHintFromRequest?: boolean;\r\n    loginHintFromUpn?: boolean;\r\n    loginHintFromClaim?: boolean;\r\n    domainHintFromRequest?: boolean;\r\n\r\n    prompt?: string;\r\n\r\n    usePreGeneratedPkce?: boolean;\r\n};\r\n\r\nexport type PerformanceEventContext = {\r\n    dur?: number;\r\n    err?: string;\r\n    subErr?: string;\r\n    fail?: number;\r\n};\r\n\r\nexport type PerformanceEventStackedContext = PerformanceEventContext & {\r\n    name?: string;\r\n    childErr?: string;\r\n};\r\n\r\nexport const IntFields: ReadonlySet<string> = new Set([\r\n    \"accessTokenSize\",\r\n    \"durationMs\",\r\n    \"idTokenSize\",\r\n    \"matsSilentStatus\",\r\n    \"matsHttpStatus\",\r\n    \"refreshTokenSize\",\r\n    \"queuedTimeMs\",\r\n    \"startTimeMs\",\r\n    \"status\",\r\n    \"multiMatchedAT\",\r\n    \"multiMatchedID\",\r\n    \"multiMatchedRT\",\r\n    \"unencryptedCacheCount\",\r\n    \"encryptedCacheExpiredCount\",\r\n]);\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    IPerformanceClient,\r\n    InProgressPerformanceEvent,\r\n} from \"./IPerformanceClient.js\";\r\nimport { IPerformanceMeasurement } from \"./IPerformanceMeasurement.js\";\r\nimport {\r\n    PerformanceEvent,\r\n    PerformanceEventStatus,\r\n} from \"./PerformanceEvent.js\";\r\n\r\nexport class StubPerformanceMeasurement implements IPerformanceMeasurement {\r\n    startMeasurement(): void {\r\n        return;\r\n    }\r\n    endMeasurement(): void {\r\n        return;\r\n    }\r\n    flushMeasurement(): number | null {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport class StubPerformanceClient implements IPerformanceClient {\r\n    generateId(): string {\r\n        return \"callback-id\";\r\n    }\r\n\r\n    startMeasurement(\r\n        measureName: string,\r\n        correlationId?: string | undefined\r\n    ): InProgressPerformanceEvent {\r\n        return {\r\n            end: () => null,\r\n            discard: () => {},\r\n            add: () => {},\r\n            increment: () => {},\r\n            event: {\r\n                eventId: this.generateId(),\r\n                status: PerformanceEventStatus.InProgress,\r\n                authority: \"\",\r\n                libraryName: \"\",\r\n                libraryVersion: \"\",\r\n                clientId: \"\",\r\n                name: measureName,\r\n                startTimeMs: Date.now(),\r\n                correlationId: correlationId || \"\",\r\n            },\r\n            measurement: new StubPerformanceMeasurement(),\r\n        };\r\n    }\r\n\r\n    startPerformanceMeasurement(): IPerformanceMeasurement {\r\n        return new StubPerformanceMeasurement();\r\n    }\r\n    calculateQueuedTime(): number {\r\n        return 0;\r\n    }\r\n\r\n    addQueueMeasurement(): void {\r\n        return;\r\n    }\r\n\r\n    setPreQueueTime(): void {\r\n        return;\r\n    }\r\n\r\n    endMeasurement(): PerformanceEvent | null {\r\n        return null;\r\n    }\r\n\r\n    discardMeasurements(): void {\r\n        return;\r\n    }\r\n\r\n    removePerformanceCallback(): boolean {\r\n        return true;\r\n    }\r\n\r\n    addPerformanceCallback(): string {\r\n        return \"\";\r\n    }\r\n\r\n    emitEvents(): void {\r\n        return;\r\n    }\r\n\r\n    addFields(): void {\r\n        return;\r\n    }\r\n\r\n    incrementFields(): void {\r\n        return;\r\n    }\r\n\r\n    cacheEventByCorrelationId(): void {\r\n        return;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { OIDC_DEFAULT_SCOPES } from \"@azure/msal-common/browser\";\r\nimport { PopupRequest } from \"../request/PopupRequest.js\";\r\nimport { RedirectRequest } from \"../request/RedirectRequest.js\";\r\n\r\n/**\r\n * Constants\r\n */\r\nexport const BrowserConstants = {\r\n    /**\r\n     * Interaction in progress cache value\r\n     */\r\n    INTERACTION_IN_PROGRESS_VALUE: \"interaction_in_progress\",\r\n    /**\r\n     * Invalid grant error code\r\n     */\r\n    INVALID_GRANT_ERROR: \"invalid_grant\",\r\n    /**\r\n     * Default popup window width\r\n     */\r\n    POPUP_WIDTH: 483,\r\n    /**\r\n     * Default popup window height\r\n     */\r\n    POPUP_HEIGHT: 600,\r\n    /**\r\n     * Name of the popup window starts with\r\n     */\r\n    POPUP_NAME_PREFIX: \"msal\",\r\n    /**\r\n     * Default popup monitor poll interval in milliseconds\r\n     */\r\n    DEFAULT_POLL_INTERVAL_MS: 30,\r\n    /**\r\n     * Msal-browser SKU\r\n     */\r\n    MSAL_SKU: \"msal.js.browser\",\r\n};\r\n\r\nexport const NativeConstants = {\r\n    CHANNEL_ID: \"53ee284d-920a-4b59-9d30-a60315b26836\",\r\n    PREFERRED_EXTENSION_ID: \"ppnbnpeolgkicgegkbkbjmhlideopiji\",\r\n    MATS_TELEMETRY: \"MATS\",\r\n};\r\n\r\nexport const NativeExtensionMethod = {\r\n    HandshakeRequest: \"Handshake\",\r\n    HandshakeResponse: \"HandshakeResponse\",\r\n    GetToken: \"GetToken\",\r\n    Response: \"Response\",\r\n} as const;\r\nexport type NativeExtensionMethod =\r\n    (typeof NativeExtensionMethod)[keyof typeof NativeExtensionMethod];\r\n\r\nexport const BrowserCacheLocation = {\r\n    LocalStorage: \"localStorage\",\r\n    SessionStorage: \"sessionStorage\",\r\n    MemoryStorage: \"memoryStorage\",\r\n} as const;\r\nexport type BrowserCacheLocation =\r\n    (typeof BrowserCacheLocation)[keyof typeof BrowserCacheLocation];\r\n\r\n/**\r\n * HTTP Request types supported by MSAL.\r\n */\r\nexport const HTTP_REQUEST_TYPE = {\r\n    GET: \"GET\",\r\n    POST: \"POST\",\r\n} as const;\r\nexport type HTTP_REQUEST_TYPE =\r\n    (typeof HTTP_REQUEST_TYPE)[keyof typeof HTTP_REQUEST_TYPE];\r\n\r\n/**\r\n * Temporary cache keys for MSAL, deleted after any request.\r\n */\r\nexport const TemporaryCacheKeys = {\r\n    AUTHORITY: \"authority\",\r\n    ACQUIRE_TOKEN_ACCOUNT: \"acquireToken.account\",\r\n    SESSION_STATE: \"session.state\",\r\n    REQUEST_STATE: \"request.state\",\r\n    NONCE_IDTOKEN: \"nonce.id_token\",\r\n    ORIGIN_URI: \"request.origin\",\r\n    RENEW_STATUS: \"token.renew.status\",\r\n    URL_HASH: \"urlHash\",\r\n    REQUEST_PARAMS: \"request.params\",\r\n    SCOPES: \"scopes\",\r\n    INTERACTION_STATUS_KEY: \"interaction.status\",\r\n    CCS_CREDENTIAL: \"ccs.credential\",\r\n    CORRELATION_ID: \"request.correlationId\",\r\n    NATIVE_REQUEST: \"request.native\",\r\n    REDIRECT_CONTEXT: \"request.redirect.context\",\r\n} as const;\r\nexport type TemporaryCacheKeys =\r\n    (typeof TemporaryCacheKeys)[keyof typeof TemporaryCacheKeys];\r\n\r\nexport const StaticCacheKeys = {\r\n    ACCOUNT_KEYS: \"msal.account.keys\",\r\n    TOKEN_KEYS: \"msal.token.keys\",\r\n} as const;\r\nexport type StaticCacheKeys =\r\n    (typeof StaticCacheKeys)[keyof typeof StaticCacheKeys];\r\n\r\n/**\r\n * Cache keys stored in-memory\r\n */\r\nexport const InMemoryCacheKeys = {\r\n    WRAPPER_SKU: \"wrapper.sku\",\r\n    WRAPPER_VER: \"wrapper.version\",\r\n} as const;\r\nexport type InMemoryCacheKeys =\r\n    (typeof InMemoryCacheKeys)[keyof typeof InMemoryCacheKeys];\r\n\r\n/**\r\n * API Codes for Telemetry purposes.\r\n * Before adding a new code you must claim it in the MSAL Telemetry tracker as these number spaces are shared across all MSALs\r\n * 0-99 Silent Flow\r\n * 800-899 Auth Code Flow\r\n */\r\nexport const ApiId = {\r\n    acquireTokenRedirect: 861,\r\n    acquireTokenPopup: 862,\r\n    ssoSilent: 863,\r\n    acquireTokenSilent_authCode: 864,\r\n    handleRedirectPromise: 865,\r\n    acquireTokenByCode: 866,\r\n    acquireTokenSilent_silentFlow: 61,\r\n    logout: 961,\r\n    logoutPopup: 962,\r\n} as const;\r\nexport type ApiId = (typeof ApiId)[keyof typeof ApiId];\r\n\r\n/*\r\n * Interaction type of the API - used for state and telemetry\r\n */\r\nexport enum InteractionType {\r\n    Redirect = \"redirect\",\r\n    Popup = \"popup\",\r\n    Silent = \"silent\",\r\n    None = \"none\",\r\n}\r\n\r\n/**\r\n * Types of interaction currently in progress.\r\n * Used in events in wrapper libraries to invoke functions when certain interaction is in progress or all interactions are complete.\r\n */\r\nexport const InteractionStatus = {\r\n    /**\r\n     * Initial status before interaction occurs\r\n     */\r\n    Startup: \"startup\",\r\n    /**\r\n     * Status set when all login calls occuring\r\n     */\r\n    Login: \"login\",\r\n    /**\r\n     * Status set when logout call occuring\r\n     */\r\n    Logout: \"logout\",\r\n    /**\r\n     * Status set for acquireToken calls\r\n     */\r\n    AcquireToken: \"acquireToken\",\r\n    /**\r\n     * Status set for ssoSilent calls\r\n     */\r\n    SsoSilent: \"ssoSilent\",\r\n    /**\r\n     * Status set when handleRedirect in progress\r\n     */\r\n    HandleRedirect: \"handleRedirect\",\r\n    /**\r\n     * Status set when interaction is complete\r\n     */\r\n    None: \"none\",\r\n} as const;\r\nexport type InteractionStatus =\r\n    (typeof InteractionStatus)[keyof typeof InteractionStatus];\r\n\r\nexport const DEFAULT_REQUEST: RedirectRequest | PopupRequest = {\r\n    scopes: OIDC_DEFAULT_SCOPES,\r\n};\r\n\r\n/**\r\n * JWK Key Format string (Type MUST be defined for window crypto APIs)\r\n */\r\nexport const KEY_FORMAT_JWK = \"jwk\";\r\n\r\n// Supported wrapper SKUs\r\nexport const WrapperSKU = {\r\n    React: \"@azure/msal-react\",\r\n    Angular: \"@azure/msal-angular\",\r\n} as const;\r\nexport type WrapperSKU = (typeof WrapperSKU)[keyof typeof WrapperSKU];\r\n\r\n// DatabaseStorage Constants\r\nexport const DB_NAME = \"msal.db\";\r\nexport const DB_VERSION = 1;\r\nexport const DB_TABLE_NAME = `${DB_NAME}.keys`;\r\n\r\nexport const CacheLookupPolicy = {\r\n    /*\r\n     * acquireTokenSilent will attempt to retrieve an access token from the cache. If the access token is expired\r\n     * or cannot be found the refresh token will be used to acquire a new one. Finally, if the refresh token\r\n     * is expired acquireTokenSilent will attempt to acquire new access and refresh tokens.\r\n     */\r\n    Default: 0, // 0 is falsy, is equivalent to not passing in a CacheLookupPolicy\r\n    /*\r\n     * acquireTokenSilent will only look for access tokens in the cache. It will not attempt to renew access or\r\n     * refresh tokens.\r\n     */\r\n    AccessToken: 1,\r\n    /*\r\n     * acquireTokenSilent will attempt to retrieve an access token from the cache. If the access token is expired or\r\n     * cannot be found, the refresh token will be used to acquire a new one. If the refresh token is expired, it\r\n     * will not be renewed and acquireTokenSilent will fail.\r\n     */\r\n    AccessTokenAndRefreshToken: 2,\r\n    /*\r\n     * acquireTokenSilent will not attempt to retrieve access tokens from the cache and will instead attempt to\r\n     * exchange the cached refresh token for a new access token. If the refresh token is expired, it will not be\r\n     * renewed and acquireTokenSilent will fail.\r\n     */\r\n    RefreshToken: 3,\r\n    /*\r\n     * acquireTokenSilent will not look in the cache for the access token. It will go directly to network with the\r\n     * cached refresh token. If the refresh token is expired an attempt will be made to renew it. This is equivalent to\r\n     * setting \"forceRefresh: true\".\r\n     */\r\n    RefreshTokenAndNetwork: 4,\r\n    /*\r\n     * acquireTokenSilent will attempt to renew both access and refresh tokens. It will not look in the cache. This will\r\n     * always fail if 3rd party cookies are blocked by the browser.\r\n     */\r\n    Skip: 5,\r\n} as const;\r\nexport type CacheLookupPolicy =\r\n    (typeof CacheLookupPolicy)[keyof typeof CacheLookupPolicy];\r\n\r\nexport const iFrameRenewalPolicies: CacheLookupPolicy[] = [\r\n    CacheLookupPolicy.Default,\r\n    CacheLookupPolicy.Skip,\r\n    CacheLookupPolicy.RefreshTokenAndNetwork,\r\n];\r\n\r\nexport const LOG_LEVEL_CACHE_KEY = \"msal.browser.log.level\";\r\nexport const LOG_PII_CACHE_KEY = \"msal.browser.log.pii\";\r\n\r\nexport const BROWSER_PERF_ENABLED_KEY = \"msal.browser.performance.enabled\";\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { INavigationClient } from \"./INavigationClient.js\";\r\nimport { NavigationOptions } from \"./NavigationOptions.js\";\r\n\r\nexport class NavigationClient implements INavigationClient {\r\n    /**\r\n     * Navigates to other pages within the same web application\r\n     * @param url\r\n     * @param options\r\n     */\r\n    navigateInternal(\r\n        url: string,\r\n        options: NavigationOptions\r\n    ): Promise<boolean> {\r\n        return NavigationClient.defaultNavigateWindow(url, options);\r\n    }\r\n\r\n    /**\r\n     * Navigates to other pages outside the web application i.e. the Identity Provider\r\n     * @param url\r\n     * @param options\r\n     */\r\n    navigateExternal(\r\n        url: string,\r\n        options: NavigationOptions\r\n    ): Promise<boolean> {\r\n        return NavigationClient.defaultNavigateWindow(url, options);\r\n    }\r\n\r\n    /**\r\n     * Default navigation implementation invoked by the internal and external functions\r\n     * @param url\r\n     * @param options\r\n     */\r\n    private static defaultNavigateWindow(\r\n        url: string,\r\n        options: NavigationOptions\r\n    ): Promise<boolean> {\r\n        if (options.noHistory) {\r\n            window.location.replace(url);\r\n        } else {\r\n            window.location.assign(url);\r\n        }\r\n\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(true);\r\n            }, options.timeout);\r\n        });\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AuthError } from \"./AuthError.js\";\r\n\r\n/**\r\n * Represents network related errors\r\n */\r\nexport class NetworkError extends AuthError {\r\n    error: AuthError;\r\n    httpStatus?: number;\r\n    responseHeaders?: Record<string, string>;\r\n\r\n    constructor(\r\n        error: AuthError,\r\n        httpStatus?: number,\r\n        responseHeaders?: Record<string, string>\r\n    ) {\r\n        super(error.errorCode, error.errorMessage, error.subError);\r\n\r\n        Object.setPrototypeOf(this, NetworkError.prototype);\r\n        this.name = \"NetworkError\";\r\n        this.error = error;\r\n        this.httpStatus = httpStatus;\r\n        this.responseHeaders = responseHeaders;\r\n    }\r\n}\r\n\r\n/**\r\n * Creates NetworkError object for a failed network request\r\n * @param error - Error to be thrown back to the caller\r\n * @param httpStatus - Status code of the network request\r\n * @param responseHeaders - Response headers of the network request, when available\r\n * @returns NetworkError object\r\n */\r\nexport function createNetworkError(\r\n    error: AuthError,\r\n    httpStatus?: number,\r\n    responseHeaders?: Record<string, string>\r\n): NetworkError {\r\n    return new NetworkError(error, httpStatus, responseHeaders);\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nexport const pkceNotCreated = \"pkce_not_created\";\r\nexport const cryptoNonExistent = \"crypto_nonexistent\";\r\nexport const emptyNavigateUri = \"empty_navigate_uri\";\r\nexport const hashEmptyError = \"hash_empty_error\";\r\nexport const noStateInHash = \"no_state_in_hash\";\r\nexport const hashDoesNotContainKnownProperties =\r\n    \"hash_does_not_contain_known_properties\";\r\nexport const unableToParseState = \"unable_to_parse_state\";\r\nexport const stateInteractionTypeMismatch = \"state_interaction_type_mismatch\";\r\nexport const interactionInProgress = \"interaction_in_progress\";\r\nexport const popupWindowError = \"popup_window_error\";\r\nexport const emptyWindowError = \"empty_window_error\";\r\nexport const userCancelled = \"user_cancelled\";\r\nexport const monitorPopupTimeout = \"monitor_popup_timeout\";\r\nexport const monitorWindowTimeout = \"monitor_window_timeout\";\r\nexport const redirectInIframe = \"redirect_in_iframe\";\r\nexport const blockIframeReload = \"block_iframe_reload\";\r\nexport const blockNestedPopups = \"block_nested_popups\";\r\nexport const iframeClosedPrematurely = \"iframe_closed_prematurely\";\r\nexport const silentLogoutUnsupported = \"silent_logout_unsupported\";\r\nexport const noAccountError = \"no_account_error\";\r\nexport const silentPromptValueError = \"silent_prompt_value_error\";\r\nexport const noTokenRequestCacheError = \"no_token_request_cache_error\";\r\nexport const unableToParseTokenRequestCacheError =\r\n    \"unable_to_parse_token_request_cache_error\";\r\nexport const noCachedAuthorityError = \"no_cached_authority_error\";\r\nexport const authRequestNotSetError = \"auth_request_not_set_error\";\r\nexport const invalidCacheType = \"invalid_cache_type\";\r\nexport const nonBrowserEnvironment = \"non_browser_environment\";\r\nexport const databaseNotOpen = \"database_not_open\";\r\nexport const noNetworkConnectivity = \"no_network_connectivity\";\r\nexport const postRequestFailed = \"post_request_failed\";\r\nexport const getRequestFailed = \"get_request_failed\";\r\nexport const failedToParseResponse = \"failed_to_parse_response\";\r\nexport const unableToLoadToken = \"unable_to_load_token\";\r\nexport const cryptoKeyNotFound = \"crypto_key_not_found\";\r\nexport const authCodeRequired = \"auth_code_required\";\r\nexport const authCodeOrNativeAccountIdRequired =\r\n    \"auth_code_or_nativeAccountId_required\";\r\nexport const spaCodeAndNativeAccountIdPresent =\r\n    \"spa_code_and_nativeAccountId_present\";\r\nexport const databaseUnavailable = \"database_unavailable\";\r\nexport const unableToAcquireTokenFromNativePlatform =\r\n    \"unable_to_acquire_token_from_native_platform\";\r\nexport const nativeHandshakeTimeout = \"native_handshake_timeout\";\r\nexport const nativeExtensionNotInstalled = \"native_extension_not_installed\";\r\nexport const nativeConnectionNotEstablished =\r\n    \"native_connection_not_established\";\r\nexport const uninitializedPublicClientApplication =\r\n    \"uninitialized_public_client_application\";\r\nexport const nativePromptNotSupported = \"native_prompt_not_supported\";\r\nexport const invalidBase64String = \"invalid_base64_string\";\r\nexport const invalidPopTokenRequest = \"invalid_pop_token_request\";\r\nexport const failedToBuildHeaders = \"failed_to_build_headers\";\r\nexport const failedToParseHeaders = \"failed_to_parse_headers\";\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AuthError } from \"@azure/msal-common/browser\";\r\nimport * as BrowserAuthErrorCodes from \"./BrowserAuthErrorCodes.js\";\r\nexport { BrowserAuthErrorCodes }; // Allow importing as \"BrowserAuthErrorCodes\"\r\n\r\nconst ErrorLink = \"For more visit: aka.ms/msaljs/browser-errors\";\r\n\r\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nexport const BrowserAuthErrorMessages = {\r\n    [BrowserAuthErrorCodes.pkceNotCreated]:\r\n        \"The PKCE code challenge and verifier could not be generated.\",\r\n    [BrowserAuthErrorCodes.cryptoNonExistent]:\r\n        \"The crypto object or function is not available.\",\r\n    [BrowserAuthErrorCodes.emptyNavigateUri]:\r\n        \"Navigation URI is empty. Please check stack trace for more info.\",\r\n    [BrowserAuthErrorCodes.hashEmptyError]: `Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${ErrorLink}`,\r\n    [BrowserAuthErrorCodes.noStateInHash]:\r\n        \"Hash does not contain state. Please verify that the request originated from msal.\",\r\n    [BrowserAuthErrorCodes.hashDoesNotContainKnownProperties]: `Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${ErrorLink}`,\r\n    [BrowserAuthErrorCodes.unableToParseState]:\r\n        \"Unable to parse state. Please verify that the request originated from msal.\",\r\n    [BrowserAuthErrorCodes.stateInteractionTypeMismatch]:\r\n        \"Hash contains state but the interaction type does not match the caller.\",\r\n    [BrowserAuthErrorCodes.interactionInProgress]: `Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${ErrorLink}`,\r\n    [BrowserAuthErrorCodes.popupWindowError]:\r\n        \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\",\r\n    [BrowserAuthErrorCodes.emptyWindowError]:\r\n        \"window.open returned null or undefined window object.\",\r\n    [BrowserAuthErrorCodes.userCancelled]: \"User cancelled the flow.\",\r\n    [BrowserAuthErrorCodes.monitorPopupTimeout]: `Token acquisition in popup failed due to timeout.  ${ErrorLink}`,\r\n    [BrowserAuthErrorCodes.monitorWindowTimeout]: `Token acquisition in iframe failed due to timeout.  ${ErrorLink}`,\r\n    [BrowserAuthErrorCodes.redirectInIframe]:\r\n        \"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\",\r\n    [BrowserAuthErrorCodes.blockIframeReload]: `Request was blocked inside an iframe because MSAL detected an authentication response.  ${ErrorLink}`,\r\n    [BrowserAuthErrorCodes.blockNestedPopups]:\r\n        \"Request was blocked inside a popup because MSAL detected it was running in a popup.\",\r\n    [BrowserAuthErrorCodes.iframeClosedPrematurely]:\r\n        \"The iframe being monitored was closed prematurely.\",\r\n    [BrowserAuthErrorCodes.silentLogoutUnsupported]:\r\n        \"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.\",\r\n    [BrowserAuthErrorCodes.noAccountError]:\r\n        \"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.\",\r\n    [BrowserAuthErrorCodes.silentPromptValueError]:\r\n        \"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.\",\r\n    [BrowserAuthErrorCodes.noTokenRequestCacheError]:\r\n        \"No token request found in cache.\",\r\n    [BrowserAuthErrorCodes.unableToParseTokenRequestCacheError]:\r\n        \"The cached token request could not be parsed.\",\r\n    [BrowserAuthErrorCodes.noCachedAuthorityError]:\r\n        \"No cached authority found.\",\r\n    [BrowserAuthErrorCodes.authRequestNotSetError]:\r\n        \"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler\",\r\n    [BrowserAuthErrorCodes.invalidCacheType]: \"Invalid cache type\",\r\n    [BrowserAuthErrorCodes.nonBrowserEnvironment]:\r\n        \"Login and token requests are not supported in non-browser environments.\",\r\n    [BrowserAuthErrorCodes.databaseNotOpen]: \"Database is not open!\",\r\n    [BrowserAuthErrorCodes.noNetworkConnectivity]:\r\n        \"No network connectivity. Check your internet connection.\",\r\n    [BrowserAuthErrorCodes.postRequestFailed]:\r\n        \"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'\",\r\n    [BrowserAuthErrorCodes.getRequestFailed]:\r\n        \"Network request failed. Please check the network trace to determine root cause.\",\r\n    [BrowserAuthErrorCodes.failedToParseResponse]:\r\n        \"Failed to parse network response. Check network trace.\",\r\n    [BrowserAuthErrorCodes.unableToLoadToken]: \"Error loading token to cache.\",\r\n    [BrowserAuthErrorCodes.cryptoKeyNotFound]:\r\n        \"Cryptographic Key or Keypair not found in browser storage.\",\r\n    [BrowserAuthErrorCodes.authCodeRequired]:\r\n        \"An authorization code must be provided (as the `code` property on the request) to this flow.\",\r\n    [BrowserAuthErrorCodes.authCodeOrNativeAccountIdRequired]:\r\n        \"An authorization code or nativeAccountId must be provided to this flow.\",\r\n    [BrowserAuthErrorCodes.spaCodeAndNativeAccountIdPresent]:\r\n        \"Request cannot contain both spa code and native account id.\",\r\n    [BrowserAuthErrorCodes.databaseUnavailable]:\r\n        \"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.\",\r\n    [BrowserAuthErrorCodes.unableToAcquireTokenFromNativePlatform]: `Unable to acquire token from native platform.  ${ErrorLink}`,\r\n    [BrowserAuthErrorCodes.nativeHandshakeTimeout]:\r\n        \"Timed out while attempting to establish connection to browser extension\",\r\n    [BrowserAuthErrorCodes.nativeExtensionNotInstalled]:\r\n        \"Native extension is not installed. If you think this is a mistake call the initialize function.\",\r\n    [BrowserAuthErrorCodes.nativeConnectionNotEstablished]: `Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${ErrorLink}`,\r\n    [BrowserAuthErrorCodes.uninitializedPublicClientApplication]: `You must call and await the initialize function before attempting to call any other MSAL API.  ${ErrorLink}`,\r\n    [BrowserAuthErrorCodes.nativePromptNotSupported]:\r\n        \"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.\",\r\n    [BrowserAuthErrorCodes.invalidBase64String]:\r\n        \"Invalid base64 encoded string.\",\r\n    [BrowserAuthErrorCodes.invalidPopTokenRequest]:\r\n        \"Invalid PoP token request. The request should not have both a popKid value and signPopToken set to true.\",\r\n    [BrowserAuthErrorCodes.failedToBuildHeaders]:\r\n        \"Failed to build request headers object.\",\r\n    [BrowserAuthErrorCodes.failedToParseHeaders]:\r\n        \"Failed to parse response headers\",\r\n};\r\n\r\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n * @deprecated Use exported BrowserAuthErrorCodes instead.\r\n * In your app you can do :\r\n * ```\r\n * import { BrowserAuthErrorCodes } from \"@azure/msal-browser\";\r\n * ```\r\n */\r\nexport const BrowserAuthErrorMessage = {\r\n    pkceNotGenerated: {\r\n        code: BrowserAuthErrorCodes.pkceNotCreated,\r\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.pkceNotCreated],\r\n    },\r\n    cryptoDoesNotExist: {\r\n        code: BrowserAuthErrorCodes.cryptoNonExistent,\r\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.cryptoNonExistent],\r\n    },\r\n    emptyNavigateUriError: {\r\n        code: BrowserAuthErrorCodes.emptyNavigateUri,\r\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.emptyNavigateUri],\r\n    },\r\n    hashEmptyError: {\r\n        code: BrowserAuthErrorCodes.hashEmptyError,\r\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.hashEmptyError],\r\n    },\r\n    hashDoesNotContainStateError: {\r\n        code: BrowserAuthErrorCodes.noStateInHash,\r\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.noStateInHash],\r\n    },\r\n    hashDoesNotContainKnownPropertiesError: {\r\n        code: BrowserAuthErrorCodes.hashDoesNotContainKnownProperties,\r\n        desc: BrowserAuthErrorMessages[\r\n            BrowserAuthErrorCodes.hashDoesNotContainKnownProperties\r\n        ],\r\n    },\r\n    unableToParseStateError: {\r\n        code: BrowserAuthErrorCodes.unableToParseState,\r\n        desc: BrowserAuthErrorMessages[\r\n            BrowserAuthErrorCodes.unableToParseState\r\n        ],\r\n    },\r\n    stateInteractionTypeMismatchError: {\r\n        code: BrowserAuthErrorCodes.stateInteractionTypeMismatch,\r\n        desc: BrowserAuthErrorMessages[\r\n            BrowserAuthErrorCodes.stateInteractionTypeMismatch\r\n        ],\r\n    },\r\n    interactionInProgress: {\r\n        code: BrowserAuthErrorCodes.interactionInProgress,\r\n        desc: BrowserAuthErrorMessages[\r\n            BrowserAuthErrorCodes.interactionInProgress\r\n        ],\r\n    },\r\n    popupWindowError: {\r\n        code: BrowserAuthErrorCodes.popupWindowError,\r\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.popupWindowError],\r\n    },\r\n    emptyWindowError: {\r\n        code: BrowserAuthErrorCodes.emptyWindowError,\r\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.emptyWindowError],\r\n    },\r\n    userCancelledError: {\r\n        code: BrowserAuthErrorCodes.userCancelled,\r\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.userCancelled],\r\n    },\r\n    monitorPopupTimeoutError: {\r\n        code: BrowserAuthErrorCodes.monitorPopupTimeout,\r\n        desc: BrowserAuthErrorMessages[\r\n            BrowserAuthErrorCodes.monitorPopupTimeout\r\n        ],\r\n    },\r\n    monitorIframeTimeoutError: {\r\n        code: BrowserAuthErrorCodes.monitorWindowTimeout,\r\n        desc: BrowserAuthErrorMessages[\r\n            BrowserAuthErrorCodes.monitorWindowTimeout\r\n        ],\r\n    },\r\n    redirectInIframeError: {\r\n        code: BrowserAuthErrorCodes.redirectInIframe,\r\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.redirectInIframe],\r\n    },\r\n    blockTokenRequestsInHiddenIframeError: {\r\n        code: BrowserAuthErrorCodes.blockIframeReload,\r\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.blockIframeReload],\r\n    },\r\n    blockAcquireTokenInPopupsError: {\r\n        code: BrowserAuthErrorCodes.blockNestedPopups,\r\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.blockNestedPopups],\r\n    },\r\n    iframeClosedPrematurelyError: {\r\n        code: BrowserAuthErrorCodes.iframeClosedPrematurely,\r\n        desc: BrowserAuthErrorMessages[\r\n            BrowserAuthErrorCodes.iframeClosedPrematurely\r\n        ],\r\n    },\r\n    silentLogoutUnsupportedError: {\r\n        code: BrowserAuthErrorCodes.silentLogoutUnsupported,\r\n        desc: BrowserAuthErrorMessages[\r\n            BrowserAuthErrorCodes.silentLogoutUnsupported\r\n        ],\r\n    },\r\n    noAccountError: {\r\n        code: BrowserAuthErrorCodes.noAccountError,\r\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.noAccountError],\r\n    },\r\n    silentPromptValueError: {\r\n        code: BrowserAuthErrorCodes.silentPromptValueError,\r\n        desc: BrowserAuthErrorMessages[\r\n            BrowserAuthErrorCodes.silentPromptValueError\r\n        ],\r\n    },\r\n    noTokenRequestCacheError: {\r\n        code: BrowserAuthErrorCodes.noTokenRequestCacheError,\r\n        desc: BrowserAuthErrorMessages[\r\n            BrowserAuthErrorCodes.noTokenRequestCacheError\r\n        ],\r\n    },\r\n    unableToParseTokenRequestCacheError: {\r\n        code: BrowserAuthErrorCodes.unableToParseTokenRequestCacheError,\r\n        desc: BrowserAuthErrorMessages[\r\n            BrowserAuthErrorCodes.unableToParseTokenRequestCacheError\r\n        ],\r\n    },\r\n    noCachedAuthorityError: {\r\n        code: BrowserAuthErrorCodes.noCachedAuthorityError,\r\n        desc: BrowserAuthErrorMessages[\r\n            BrowserAuthErrorCodes.noCachedAuthorityError\r\n        ],\r\n    },\r\n    authRequestNotSet: {\r\n        code: BrowserAuthErrorCodes.authRequestNotSetError,\r\n        desc: BrowserAuthErrorMessages[\r\n            BrowserAuthErrorCodes.authRequestNotSetError\r\n        ],\r\n    },\r\n    invalidCacheType: {\r\n        code: BrowserAuthErrorCodes.invalidCacheType,\r\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.invalidCacheType],\r\n    },\r\n    notInBrowserEnvironment: {\r\n        code: BrowserAuthErrorCodes.nonBrowserEnvironment,\r\n        desc: BrowserAuthErrorMessages[\r\n            BrowserAuthErrorCodes.nonBrowserEnvironment\r\n        ],\r\n    },\r\n    databaseNotOpen: {\r\n        code: BrowserAuthErrorCodes.databaseNotOpen,\r\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.databaseNotOpen],\r\n    },\r\n    noNetworkConnectivity: {\r\n        code: BrowserAuthErrorCodes.noNetworkConnectivity,\r\n        desc: BrowserAuthErrorMessages[\r\n            BrowserAuthErrorCodes.noNetworkConnectivity\r\n        ],\r\n    },\r\n    postRequestFailed: {\r\n        code: BrowserAuthErrorCodes.postRequestFailed,\r\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.postRequestFailed],\r\n    },\r\n    getRequestFailed: {\r\n        code: BrowserAuthErrorCodes.getRequestFailed,\r\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.getRequestFailed],\r\n    },\r\n    failedToParseNetworkResponse: {\r\n        code: BrowserAuthErrorCodes.failedToParseResponse,\r\n        desc: BrowserAuthErrorMessages[\r\n            BrowserAuthErrorCodes.failedToParseResponse\r\n        ],\r\n    },\r\n    unableToLoadTokenError: {\r\n        code: BrowserAuthErrorCodes.unableToLoadToken,\r\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.unableToLoadToken],\r\n    },\r\n    signingKeyNotFoundInStorage: {\r\n        code: BrowserAuthErrorCodes.cryptoKeyNotFound,\r\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.cryptoKeyNotFound],\r\n    },\r\n    authCodeRequired: {\r\n        code: BrowserAuthErrorCodes.authCodeRequired,\r\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.authCodeRequired],\r\n    },\r\n    authCodeOrNativeAccountRequired: {\r\n        code: BrowserAuthErrorCodes.authCodeOrNativeAccountIdRequired,\r\n        desc: BrowserAuthErrorMessages[\r\n            BrowserAuthErrorCodes.authCodeOrNativeAccountIdRequired\r\n        ],\r\n    },\r\n    spaCodeAndNativeAccountPresent: {\r\n        code: BrowserAuthErrorCodes.spaCodeAndNativeAccountIdPresent,\r\n        desc: BrowserAuthErrorMessages[\r\n            BrowserAuthErrorCodes.spaCodeAndNativeAccountIdPresent\r\n        ],\r\n    },\r\n    databaseUnavailable: {\r\n        code: BrowserAuthErrorCodes.databaseUnavailable,\r\n        desc: BrowserAuthErrorMessages[\r\n            BrowserAuthErrorCodes.databaseUnavailable\r\n        ],\r\n    },\r\n    unableToAcquireTokenFromNativePlatform: {\r\n        code: BrowserAuthErrorCodes.unableToAcquireTokenFromNativePlatform,\r\n        desc: BrowserAuthErrorMessages[\r\n            BrowserAuthErrorCodes.unableToAcquireTokenFromNativePlatform\r\n        ],\r\n    },\r\n    nativeHandshakeTimeout: {\r\n        code: BrowserAuthErrorCodes.nativeHandshakeTimeout,\r\n        desc: BrowserAuthErrorMessages[\r\n            BrowserAuthErrorCodes.nativeHandshakeTimeout\r\n        ],\r\n    },\r\n    nativeExtensionNotInstalled: {\r\n        code: BrowserAuthErrorCodes.nativeExtensionNotInstalled,\r\n        desc: BrowserAuthErrorMessages[\r\n            BrowserAuthErrorCodes.nativeExtensionNotInstalled\r\n        ],\r\n    },\r\n    nativeConnectionNotEstablished: {\r\n        code: BrowserAuthErrorCodes.nativeConnectionNotEstablished,\r\n        desc: BrowserAuthErrorMessages[\r\n            BrowserAuthErrorCodes.nativeConnectionNotEstablished\r\n        ],\r\n    },\r\n    uninitializedPublicClientApplication: {\r\n        code: BrowserAuthErrorCodes.uninitializedPublicClientApplication,\r\n        desc: BrowserAuthErrorMessages[\r\n            BrowserAuthErrorCodes.uninitializedPublicClientApplication\r\n        ],\r\n    },\r\n    nativePromptNotSupported: {\r\n        code: BrowserAuthErrorCodes.nativePromptNotSupported,\r\n        desc: BrowserAuthErrorMessages[\r\n            BrowserAuthErrorCodes.nativePromptNotSupported\r\n        ],\r\n    },\r\n    invalidBase64StringError: {\r\n        code: BrowserAuthErrorCodes.invalidBase64String,\r\n        desc: BrowserAuthErrorMessages[\r\n            BrowserAuthErrorCodes.invalidBase64String\r\n        ],\r\n    },\r\n    invalidPopTokenRequest: {\r\n        code: BrowserAuthErrorCodes.invalidPopTokenRequest,\r\n        desc: BrowserAuthErrorMessages[\r\n            BrowserAuthErrorCodes.invalidPopTokenRequest\r\n        ],\r\n    },\r\n};\r\n\r\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\r\nexport class BrowserAuthError extends AuthError {\r\n    constructor(errorCode: string, subError?: string) {\r\n        super(errorCode, BrowserAuthErrorMessages[errorCode], subError);\r\n\r\n        Object.setPrototypeOf(this, BrowserAuthError.prototype);\r\n        this.name = \"BrowserAuthError\";\r\n    }\r\n}\r\n\r\nexport function createBrowserAuthError(\r\n    errorCode: string,\r\n    subError?: string\r\n): BrowserAuthError {\r\n    return new BrowserAuthError(errorCode, subError);\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    INetworkModule,\r\n    NetworkRequestOptions,\r\n    NetworkResponse,\r\n    createNetworkError,\r\n} from \"@azure/msal-common/browser\";\r\nimport {\r\n    createBrowserAuthError,\r\n    BrowserAuthErrorCodes,\r\n} from \"../error/BrowserAuthError.js\";\r\nimport { HTTP_REQUEST_TYPE } from \"../utils/BrowserConstants.js\";\r\n\r\n/**\r\n * This class implements the Fetch API for GET and POST requests. See more here: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\r\n */\r\nexport class FetchClient implements INetworkModule {\r\n    /**\r\n     * Fetch Client for REST endpoints - Get request\r\n     * @param url\r\n     * @param headers\r\n     * @param body\r\n     */\r\n    async sendGetRequestAsync<T>(\r\n        url: string,\r\n        options?: NetworkRequestOptions\r\n    ): Promise<NetworkResponse<T>> {\r\n        let response: Response;\r\n        let responseHeaders: Record<string, string> = {};\r\n        let responseStatus = 0;\r\n        const reqHeaders = getFetchHeaders(options);\r\n        try {\r\n            response = await fetch(url, {\r\n                method: HTTP_REQUEST_TYPE.GET,\r\n                headers: reqHeaders,\r\n            });\r\n        } catch (e) {\r\n            throw createBrowserAuthError(\r\n                window.navigator.onLine\r\n                    ? BrowserAuthErrorCodes.getRequestFailed\r\n                    : BrowserAuthErrorCodes.noNetworkConnectivity\r\n            );\r\n        }\r\n\r\n        responseHeaders = getHeaderDict(response.headers);\r\n        try {\r\n            responseStatus = response.status;\r\n            return {\r\n                headers: responseHeaders,\r\n                body: (await response.json()) as T,\r\n                status: responseStatus,\r\n            };\r\n        } catch (e) {\r\n            throw createNetworkError(\r\n                createBrowserAuthError(\r\n                    BrowserAuthErrorCodes.failedToParseResponse\r\n                ),\r\n                responseStatus,\r\n                responseHeaders\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fetch Client for REST endpoints - Post request\r\n     * @param url\r\n     * @param headers\r\n     * @param body\r\n     */\r\n    async sendPostRequestAsync<T>(\r\n        url: string,\r\n        options?: NetworkRequestOptions\r\n    ): Promise<NetworkResponse<T>> {\r\n        const reqBody = (options && options.body) || \"\";\r\n        const reqHeaders = getFetchHeaders(options);\r\n\r\n        let response: Response;\r\n        let responseStatus = 0;\r\n        let responseHeaders: Record<string, string> = {};\r\n        try {\r\n            response = await fetch(url, {\r\n                method: HTTP_REQUEST_TYPE.POST,\r\n                headers: reqHeaders,\r\n                body: reqBody,\r\n            });\r\n        } catch (e) {\r\n            throw createBrowserAuthError(\r\n                window.navigator.onLine\r\n                    ? BrowserAuthErrorCodes.postRequestFailed\r\n                    : BrowserAuthErrorCodes.noNetworkConnectivity\r\n            );\r\n        }\r\n\r\n        responseHeaders = getHeaderDict(response.headers);\r\n        try {\r\n            responseStatus = response.status;\r\n            return {\r\n                headers: responseHeaders,\r\n                body: (await response.json()) as T,\r\n                status: responseStatus,\r\n            };\r\n        } catch (e) {\r\n            throw createNetworkError(\r\n                createBrowserAuthError(\r\n                    BrowserAuthErrorCodes.failedToParseResponse\r\n                ),\r\n                responseStatus,\r\n                responseHeaders\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Get Fetch API Headers object from string map\r\n * @param inputHeaders\r\n */\r\nfunction getFetchHeaders(options?: NetworkRequestOptions): Headers {\r\n    try {\r\n        const headers = new Headers();\r\n        if (!(options && options.headers)) {\r\n            return headers;\r\n        }\r\n        const optionsHeaders = options.headers;\r\n        Object.entries(optionsHeaders).forEach(([key, value]) => {\r\n            headers.append(key, value);\r\n        });\r\n        return headers;\r\n    } catch (e) {\r\n        throw createBrowserAuthError(\r\n            BrowserAuthErrorCodes.failedToBuildHeaders\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * Returns object representing response headers\r\n * @param headers\r\n * @returns\r\n */\r\nfunction getHeaderDict(headers: Headers): Record<string, string> {\r\n    try {\r\n        const headerDict: Record<string, string> = {};\r\n        headers.forEach((value: string, key: string) => {\r\n            headerDict[key] = value;\r\n        });\r\n        return headerDict;\r\n    } catch (e) {\r\n        throw createBrowserAuthError(\r\n            BrowserAuthErrorCodes.failedToParseHeaders\r\n        );\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n/**\r\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\n\r\n/**\r\n * Returns URL Safe b64 encoded string from a plaintext string.\r\n * @param input\r\n */\r\nexport function urlEncode(input: string): string {\r\n    return encodeURIComponent(\r\n        base64Encode(input)\r\n            .replace(/=/g, \"\")\r\n            .replace(/\\+/g, \"-\")\r\n            .replace(/\\//g, \"_\")\r\n    );\r\n}\r\n\r\n/**\r\n * Returns URL Safe b64 encoded string from an int8Array.\r\n * @param inputArr\r\n */\r\nexport function urlEncodeArr(inputArr: Uint8Array): string {\r\n    return base64EncArr(inputArr)\r\n        .replace(/=/g, \"\")\r\n        .replace(/\\+/g, \"-\")\r\n        .replace(/\\//g, \"_\");\r\n}\r\n\r\n/**\r\n * Returns b64 encoded string from plaintext string.\r\n * @param input\r\n */\r\nexport function base64Encode(input: string): string {\r\n    return base64EncArr(new TextEncoder().encode(input));\r\n}\r\n\r\n/**\r\n * Base64 encode byte array\r\n * @param aBytes\r\n */\r\nfunction base64EncArr(aBytes: Uint8Array): string {\r\n    const binString = Array.from(aBytes, (x) => String.fromCodePoint(x)).join(\r\n        \"\"\r\n    );\r\n    return btoa(binString);\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    BrowserAuthErrorCodes,\r\n    createBrowserAuthError,\r\n} from \"../error/BrowserAuthError.js\";\r\n\r\n/**\r\n * Class which exposes APIs to decode base64 strings to plaintext. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Glossary/Base64#the_unicode_problem\r\n */\r\n\r\n/**\r\n * Returns a URL-safe plaintext decoded string from b64 encoded input.\r\n * @param input\r\n */\r\nexport function base64Decode(input: string): string {\r\n    return new TextDecoder().decode(base64DecToArr(input));\r\n}\r\n\r\n/**\r\n * Decodes base64 into Uint8Array\r\n * @param base64String\r\n */\r\nexport function base64DecToArr(base64String: string): Uint8Array {\r\n    let encodedString = base64String.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n    switch (encodedString.length % 4) {\r\n        case 0:\r\n            break;\r\n        case 2:\r\n            encodedString += \"==\";\r\n            break;\r\n        case 3:\r\n            encodedString += \"=\";\r\n            break;\r\n        default:\r\n            throw createBrowserAuthError(\r\n                BrowserAuthErrorCodes.invalidBase64String\r\n            );\r\n    }\r\n    const binString = atob(encodedString);\r\n    return Uint8Array.from(binString, (m) => m.codePointAt(0) || 0);\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    createBrowserAuthError,\r\n    BrowserAuthErrorCodes,\r\n} from \"../error/BrowserAuthError.js\";\r\nimport {\r\n    IPerformanceClient,\r\n    PerformanceEvents,\r\n} from \"@azure/msal-common/browser\";\r\nimport { KEY_FORMAT_JWK } from \"../utils/BrowserConstants.js\";\r\nimport { urlEncodeArr } from \"../encode/Base64Encode.js\";\r\nimport { base64DecToArr } from \"../encode/Base64Decode.js\";\r\n\r\n/**\r\n * This file defines functions used by the browser library to perform cryptography operations such as\r\n * hashing and encoding. It also has helper functions to validate the availability of specific APIs.\r\n */\r\n\r\n/**\r\n * See here for more info on RsaHashedKeyGenParams: https://developer.mozilla.org/en-US/docs/Web/API/RsaHashedKeyGenParams\r\n */\r\n// Algorithms\r\nconst PKCS1_V15_KEYGEN_ALG = \"RSASSA-PKCS1-v1_5\";\r\nconst AES_GCM = \"AES-GCM\";\r\nconst HKDF = \"HKDF\";\r\n// SHA-256 hashing algorithm\r\nconst S256_HASH_ALG = \"SHA-256\";\r\n// MOD length for PoP tokens\r\nconst MODULUS_LENGTH = 2048;\r\n// Public Exponent\r\nconst PUBLIC_EXPONENT: Uint8Array = new Uint8Array([0x01, 0x00, 0x01]);\r\n// UUID hex digits\r\nconst UUID_CHARS = \"0123456789abcdef\";\r\n// Array to store UINT32 random value\r\nconst UINT32_ARR = new Uint32Array(1);\r\n\r\n// Key Format\r\nconst RAW = \"raw\";\r\n// Key Usages\r\nconst ENCRYPT = \"encrypt\";\r\nconst DECRYPT = \"decrypt\";\r\nconst DERIVE_KEY = \"deriveKey\";\r\n\r\n// Suberror\r\nconst SUBTLE_SUBERROR = \"crypto_subtle_undefined\";\r\n\r\nconst keygenAlgorithmOptions: RsaHashedKeyGenParams = {\r\n    name: PKCS1_V15_KEYGEN_ALG,\r\n    hash: S256_HASH_ALG,\r\n    modulusLength: MODULUS_LENGTH,\r\n    publicExponent: PUBLIC_EXPONENT,\r\n};\r\n\r\n/**\r\n * Check whether browser crypto is available.\r\n */\r\nexport function validateCryptoAvailable(\r\n    skipValidateSubtleCrypto: boolean\r\n): void {\r\n    if (!window) {\r\n        throw createBrowserAuthError(\r\n            BrowserAuthErrorCodes.nonBrowserEnvironment\r\n        );\r\n    }\r\n    if (!window.crypto) {\r\n        throw createBrowserAuthError(BrowserAuthErrorCodes.cryptoNonExistent);\r\n    }\r\n    if (!skipValidateSubtleCrypto && !window.crypto.subtle) {\r\n        throw createBrowserAuthError(\r\n            BrowserAuthErrorCodes.cryptoNonExistent,\r\n            SUBTLE_SUBERROR\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a sha-256 hash of the given dataString as an ArrayBuffer.\r\n * @param dataString {string} data string\r\n * @param performanceClient {?IPerformanceClient}\r\n * @param correlationId {?string} correlation id\r\n */\r\nexport async function sha256Digest(\r\n    dataString: string,\r\n    performanceClient?: IPerformanceClient,\r\n    correlationId?: string\r\n): Promise<ArrayBuffer> {\r\n    performanceClient?.addQueueMeasurement(\r\n        PerformanceEvents.Sha256Digest,\r\n        correlationId\r\n    );\r\n    const encoder = new TextEncoder();\r\n    const data = encoder.encode(dataString);\r\n    return window.crypto.subtle.digest(\r\n        S256_HASH_ALG,\r\n        data\r\n    ) as Promise<ArrayBuffer>;\r\n}\r\n\r\n/**\r\n * Populates buffer with cryptographically random values.\r\n * @param dataBuffer\r\n */\r\nexport function getRandomValues(dataBuffer: Uint8Array): Uint8Array {\r\n    return window.crypto.getRandomValues(dataBuffer);\r\n}\r\n\r\n/**\r\n * Returns random Uint32 value.\r\n * @returns {number}\r\n */\r\nfunction getRandomUint32(): number {\r\n    window.crypto.getRandomValues(UINT32_ARR);\r\n    return UINT32_ARR[0];\r\n}\r\n\r\n/**\r\n * Creates a UUID v7 from the current timestamp.\r\n * Implementation relies on the system clock to guarantee increasing order of generated identifiers.\r\n * @returns {number}\r\n */\r\nexport function createNewGuid(): string {\r\n    const currentTimestamp = Date.now();\r\n    const baseRand = getRandomUint32() * 0x400 + (getRandomUint32() & 0x3ff);\r\n\r\n    // Result byte array\r\n    const bytes = new Uint8Array(16);\r\n    // A 12-bit `rand_a` field value\r\n    const randA = Math.trunc(baseRand / 2 ** 30);\r\n    // The higher 30 bits of 62-bit `rand_b` field value\r\n    const randBHi = baseRand & (2 ** 30 - 1);\r\n    // The lower 32 bits of 62-bit `rand_b` field value\r\n    const randBLo = getRandomUint32();\r\n\r\n    bytes[0] = currentTimestamp / 2 ** 40;\r\n    bytes[1] = currentTimestamp / 2 ** 32;\r\n    bytes[2] = currentTimestamp / 2 ** 24;\r\n    bytes[3] = currentTimestamp / 2 ** 16;\r\n    bytes[4] = currentTimestamp / 2 ** 8;\r\n    bytes[5] = currentTimestamp;\r\n    bytes[6] = 0x70 | (randA >>> 8);\r\n    bytes[7] = randA;\r\n    bytes[8] = 0x80 | (randBHi >>> 24);\r\n    bytes[9] = randBHi >>> 16;\r\n    bytes[10] = randBHi >>> 8;\r\n    bytes[11] = randBHi;\r\n    bytes[12] = randBLo >>> 24;\r\n    bytes[13] = randBLo >>> 16;\r\n    bytes[14] = randBLo >>> 8;\r\n    bytes[15] = randBLo;\r\n\r\n    let text = \"\";\r\n    for (let i = 0; i < bytes.length; i++) {\r\n        text += UUID_CHARS.charAt(bytes[i] >>> 4);\r\n        text += UUID_CHARS.charAt(bytes[i] & 0xf);\r\n        if (i === 3 || i === 5 || i === 7 || i === 9) {\r\n            text += \"-\";\r\n        }\r\n    }\r\n    return text;\r\n}\r\n\r\n/**\r\n * Generates a keypair based on current keygen algorithm config.\r\n * @param extractable\r\n * @param usages\r\n */\r\nexport async function generateKeyPair(\r\n    extractable: boolean,\r\n    usages: Array<KeyUsage>\r\n): Promise<CryptoKeyPair> {\r\n    return window.crypto.subtle.generateKey(\r\n        keygenAlgorithmOptions,\r\n        extractable,\r\n        usages\r\n    ) as Promise<CryptoKeyPair>;\r\n}\r\n\r\n/**\r\n * Export key as Json Web Key (JWK)\r\n * @param key\r\n */\r\nexport async function exportJwk(key: CryptoKey): Promise<JsonWebKey> {\r\n    return window.crypto.subtle.exportKey(\r\n        KEY_FORMAT_JWK,\r\n        key\r\n    ) as Promise<JsonWebKey>;\r\n}\r\n\r\n/**\r\n * Imports key as Json Web Key (JWK), can set extractable and usages.\r\n * @param key\r\n * @param extractable\r\n * @param usages\r\n */\r\nexport async function importJwk(\r\n    key: JsonWebKey,\r\n    extractable: boolean,\r\n    usages: Array<KeyUsage>\r\n): Promise<CryptoKey> {\r\n    return window.crypto.subtle.importKey(\r\n        KEY_FORMAT_JWK,\r\n        key,\r\n        keygenAlgorithmOptions,\r\n        extractable,\r\n        usages\r\n    ) as Promise<CryptoKey>;\r\n}\r\n\r\n/**\r\n * Signs given data with given key\r\n * @param key\r\n * @param data\r\n */\r\nexport async function sign(\r\n    key: CryptoKey,\r\n    data: ArrayBuffer\r\n): Promise<ArrayBuffer> {\r\n    return window.crypto.subtle.sign(\r\n        keygenAlgorithmOptions,\r\n        key,\r\n        data\r\n    ) as Promise<ArrayBuffer>;\r\n}\r\n\r\n/**\r\n * Generates symmetric base encryption key. This may be stored as all encryption/decryption keys will be derived from this one.\r\n */\r\nexport async function generateBaseKey(): Promise<ArrayBuffer> {\r\n    const key = await window.crypto.subtle.generateKey(\r\n        {\r\n            name: AES_GCM,\r\n            length: 256,\r\n        },\r\n        true,\r\n        [ENCRYPT, DECRYPT]\r\n    );\r\n    return window.crypto.subtle.exportKey(RAW, key);\r\n}\r\n\r\n/**\r\n * Returns the raw key to be passed into the key derivation function\r\n * @param baseKey\r\n * @returns\r\n */\r\nexport async function generateHKDF(baseKey: ArrayBuffer): Promise<CryptoKey> {\r\n    return window.crypto.subtle.importKey(RAW, baseKey, HKDF, false, [\r\n        DERIVE_KEY,\r\n    ]);\r\n}\r\n\r\n/**\r\n * Given a base key and a nonce generates a derived key to be used in encryption and decryption.\r\n * Note: every time we encrypt a new key is derived\r\n * @param baseKey\r\n * @param nonce\r\n * @returns\r\n */\r\nasync function deriveKey(\r\n    baseKey: CryptoKey,\r\n    nonce: ArrayBuffer,\r\n    context: string\r\n): Promise<CryptoKey> {\r\n    return window.crypto.subtle.deriveKey(\r\n        {\r\n            name: HKDF,\r\n            salt: nonce,\r\n            hash: S256_HASH_ALG,\r\n            info: new TextEncoder().encode(context),\r\n        },\r\n        baseKey,\r\n        { name: AES_GCM, length: 256 },\r\n        false,\r\n        [ENCRYPT, DECRYPT]\r\n    );\r\n}\r\n\r\n/**\r\n * Encrypt the given data given a base key. Returns encrypted data and a nonce that must be provided during decryption\r\n * @param key\r\n * @param rawData\r\n */\r\nexport async function encrypt(\r\n    baseKey: CryptoKey,\r\n    rawData: string,\r\n    context: string\r\n): Promise<{ data: string; nonce: string }> {\r\n    const encodedData = new TextEncoder().encode(rawData);\r\n    // The nonce must never be reused with a given key.\r\n    const nonce = window.crypto.getRandomValues(new Uint8Array(16));\r\n    const derivedKey = await deriveKey(baseKey, nonce, context);\r\n    const encryptedData = await window.crypto.subtle.encrypt(\r\n        {\r\n            name: AES_GCM,\r\n            iv: new Uint8Array(12), // New key is derived for every encrypt so we don't need a new nonce\r\n        },\r\n        derivedKey,\r\n        encodedData\r\n    );\r\n\r\n    return {\r\n        data: urlEncodeArr(new Uint8Array(encryptedData)),\r\n        nonce: urlEncodeArr(nonce),\r\n    };\r\n}\r\n\r\n/**\r\n * Decrypt data with the given key and nonce\r\n * @param key\r\n * @param nonce\r\n * @param encryptedData\r\n * @returns\r\n */\r\nexport async function decrypt(\r\n    baseKey: CryptoKey,\r\n    nonce: string,\r\n    context: string,\r\n    encryptedData: string\r\n): Promise<string> {\r\n    const encodedData = base64DecToArr(encryptedData);\r\n    const derivedKey = await deriveKey(baseKey, base64DecToArr(nonce), context);\r\n    const decryptedData = await window.crypto.subtle.decrypt(\r\n        {\r\n            name: AES_GCM,\r\n            iv: new Uint8Array(12), // New key is derived for every encrypt so we don't need a new nonce\r\n        },\r\n        derivedKey,\r\n        encodedData\r\n    );\r\n\r\n    return new TextDecoder().decode(decryptedData);\r\n}\r\n\r\n/**\r\n * Returns the SHA-256 hash of an input string\r\n * @param plainText\r\n */\r\nexport async function hashString(plainText: string): Promise<string> {\r\n    const hashBuffer: ArrayBuffer = await sha256Digest(plainText);\r\n    const hashBytes = new Uint8Array(hashBuffer);\r\n    return urlEncodeArr(hashBytes);\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nexport const storageNotSupported = \"storage_not_supported\";\r\nexport const stubbedPublicClientApplicationCalled =\r\n    \"stubbed_public_client_application_called\";\r\nexport const inMemRedirectUnavailable = \"in_mem_redirect_unavailable\";\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AuthError } from \"@azure/msal-common/browser\";\r\nimport * as BrowserConfigurationAuthErrorCodes from \"./BrowserConfigurationAuthErrorCodes.js\";\r\nexport { BrowserConfigurationAuthErrorCodes };\r\n\r\nexport const BrowserConfigurationAuthErrorMessages = {\r\n    [BrowserConfigurationAuthErrorCodes.storageNotSupported]:\r\n        \"Given storage configuration option was not supported.\",\r\n    [BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled]:\r\n        \"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors\",\r\n    [BrowserConfigurationAuthErrorCodes.inMemRedirectUnavailable]:\r\n        \"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.\",\r\n};\r\n\r\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n * @deprecated Use BrowserAuthErrorCodes instead\r\n */\r\nexport const BrowserConfigurationAuthErrorMessage = {\r\n    storageNotSupportedError: {\r\n        code: BrowserConfigurationAuthErrorCodes.storageNotSupported,\r\n        desc: BrowserConfigurationAuthErrorMessages[\r\n            BrowserConfigurationAuthErrorCodes.storageNotSupported\r\n        ],\r\n    },\r\n    stubPcaInstanceCalled: {\r\n        code: BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled,\r\n        desc: BrowserConfigurationAuthErrorMessages[\r\n            BrowserConfigurationAuthErrorCodes\r\n                .stubbedPublicClientApplicationCalled\r\n        ],\r\n    },\r\n    inMemRedirectUnavailable: {\r\n        code: BrowserConfigurationAuthErrorCodes.inMemRedirectUnavailable,\r\n        desc: BrowserConfigurationAuthErrorMessages[\r\n            BrowserConfigurationAuthErrorCodes.inMemRedirectUnavailable\r\n        ],\r\n    },\r\n};\r\n\r\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\r\nexport class BrowserConfigurationAuthError extends AuthError {\r\n    constructor(errorCode: string, errorMessage?: string) {\r\n        super(errorCode, errorMessage);\r\n        this.name = \"BrowserConfigurationAuthError\";\r\n\r\n        Object.setPrototypeOf(this, BrowserConfigurationAuthError.prototype);\r\n    }\r\n}\r\n\r\nexport function createBrowserConfigurationAuthError(\r\n    errorCode: string\r\n): BrowserConfigurationAuthError {\r\n    return new BrowserConfigurationAuthError(\r\n        errorCode,\r\n        BrowserConfigurationAuthErrorMessages[errorCode]\r\n    );\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { UrlString, invoke, invokeAsync } from \"@azure/msal-common/browser\";\r\nimport {\r\n    createBrowserAuthError,\r\n    BrowserAuthErrorCodes,\r\n} from \"../error/BrowserAuthError.js\";\r\nimport { BrowserConstants, BrowserCacheLocation } from \"./BrowserConstants.js\";\r\nimport * as BrowserCrypto from \"../crypto/BrowserCrypto.js\";\r\nimport {\r\n    BrowserConfigurationAuthErrorCodes,\r\n    createBrowserConfigurationAuthError,\r\n} from \"../error/BrowserConfigurationAuthError.js\";\r\nimport { BrowserConfiguration } from \"../config/Configuration.js\";\r\n\r\n/**\r\n * Clears hash from window url.\r\n */\r\nexport function clearHash(contentWindow: Window): void {\r\n    // Office.js sets history.replaceState to null\r\n    contentWindow.location.hash = \"\";\r\n    if (typeof contentWindow.history.replaceState === \"function\") {\r\n        // Full removes \"#\" from url\r\n        contentWindow.history.replaceState(\r\n            null,\r\n            \"\",\r\n            `${contentWindow.location.origin}${contentWindow.location.pathname}${contentWindow.location.search}`\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * Replaces current hash with hash from provided url\r\n */\r\nexport function replaceHash(url: string): void {\r\n    const urlParts = url.split(\"#\");\r\n    urlParts.shift(); // Remove part before the hash\r\n    window.location.hash = urlParts.length > 0 ? urlParts.join(\"#\") : \"\";\r\n}\r\n\r\n/**\r\n * Returns boolean of whether the current window is in an iframe or not.\r\n */\r\nexport function isInIframe(): boolean {\r\n    return window.parent !== window;\r\n}\r\n\r\n/**\r\n * Returns boolean of whether or not the current window is a popup opened by msal\r\n */\r\nexport function isInPopup(): boolean {\r\n    return (\r\n        typeof window !== \"undefined\" &&\r\n        !!window.opener &&\r\n        window.opener !== window &&\r\n        typeof window.name === \"string\" &&\r\n        window.name.indexOf(`${BrowserConstants.POPUP_NAME_PREFIX}.`) === 0\r\n    );\r\n}\r\n\r\n// #endregion\r\n\r\n/**\r\n * Returns current window URL as redirect uri\r\n */\r\nexport function getCurrentUri(): string {\r\n    return typeof window !== \"undefined\" && window.location\r\n        ? window.location.href.split(\"?\")[0].split(\"#\")[0]\r\n        : \"\";\r\n}\r\n\r\n/**\r\n * Gets the homepage url for the current window location.\r\n */\r\nexport function getHomepage(): string {\r\n    const currentUrl = new UrlString(window.location.href);\r\n    const urlComponents = currentUrl.getUrlComponents();\r\n    return `${urlComponents.Protocol}//${urlComponents.HostNameAndPort}/`;\r\n}\r\n\r\n/**\r\n * Throws error if we have completed an auth and are\r\n * attempting another auth request inside an iframe.\r\n */\r\nexport function blockReloadInHiddenIframes(): void {\r\n    const isResponseHash = UrlString.hashContainsKnownProperties(\r\n        window.location.hash\r\n    );\r\n    // return an error if called from the hidden iframe created by the msal js silent calls\r\n    if (isResponseHash && isInIframe()) {\r\n        throw createBrowserAuthError(BrowserAuthErrorCodes.blockIframeReload);\r\n    }\r\n}\r\n\r\n/**\r\n * Block redirect operations in iframes unless explicitly allowed\r\n * @param interactionType Interaction type for the request\r\n * @param allowRedirectInIframe Config value to allow redirects when app is inside an iframe\r\n */\r\nexport function blockRedirectInIframe(allowRedirectInIframe: boolean): void {\r\n    if (isInIframe() && !allowRedirectInIframe) {\r\n        // If we are not in top frame, we shouldn't redirect. This is also handled by the service.\r\n        throw createBrowserAuthError(BrowserAuthErrorCodes.redirectInIframe);\r\n    }\r\n}\r\n\r\n/**\r\n * Block redirectUri loaded in popup from calling AcquireToken APIs\r\n */\r\nexport function blockAcquireTokenInPopups(): void {\r\n    // Popups opened by msal popup APIs are given a name that starts with \"msal.\"\r\n    if (isInPopup()) {\r\n        throw createBrowserAuthError(BrowserAuthErrorCodes.blockNestedPopups);\r\n    }\r\n}\r\n\r\n/**\r\n * Throws error if token requests are made in non-browser environment\r\n * @param isBrowserEnvironment Flag indicating if environment is a browser.\r\n */\r\nexport function blockNonBrowserEnvironment(): void {\r\n    if (typeof window === \"undefined\") {\r\n        throw createBrowserAuthError(\r\n            BrowserAuthErrorCodes.nonBrowserEnvironment\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * Throws error if initialize hasn't been called\r\n * @param initialized\r\n */\r\nexport function blockAPICallsBeforeInitialize(initialized: boolean): void {\r\n    if (!initialized) {\r\n        throw createBrowserAuthError(\r\n            BrowserAuthErrorCodes.uninitializedPublicClientApplication\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * Helper to validate app environment before making an auth request\r\n * @param initialized\r\n */\r\nexport function preflightCheck(initialized: boolean): void {\r\n    // Block request if not in browser environment\r\n    blockNonBrowserEnvironment();\r\n\r\n    // Block auth requests inside a hidden iframe\r\n    blockReloadInHiddenIframes();\r\n\r\n    // Block redirectUri opened in a popup from calling MSAL APIs\r\n    blockAcquireTokenInPopups();\r\n\r\n    // Block token acquisition before initialize has been called\r\n    blockAPICallsBeforeInitialize(initialized);\r\n}\r\n\r\n/**\r\n * Helper to validate app enviornment before making redirect request\r\n * @param initialized\r\n * @param config\r\n */\r\nexport function redirectPreflightCheck(\r\n    initialized: boolean,\r\n    config: BrowserConfiguration\r\n): void {\r\n    preflightCheck(initialized);\r\n    blockRedirectInIframe(config.system.allowRedirectInIframe);\r\n    // Block redirects if memory storage is enabled but storeAuthStateInCookie is not\r\n    if (\r\n        config.cache.cacheLocation === BrowserCacheLocation.MemoryStorage &&\r\n        !config.cache.storeAuthStateInCookie\r\n    ) {\r\n        throw createBrowserConfigurationAuthError(\r\n            BrowserConfigurationAuthErrorCodes.inMemRedirectUnavailable\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * Adds a preconnect link element to the header which begins DNS resolution and SSL connection in anticipation of the /token request\r\n * @param loginDomain Authority domain, including https protocol e.g. https://login.microsoftonline.com\r\n * @returns\r\n */\r\nexport function preconnect(authority: string): void {\r\n    const link = document.createElement(\"link\");\r\n    link.rel = \"preconnect\";\r\n    link.href = new URL(authority).origin;\r\n    link.crossOrigin = \"anonymous\";\r\n    document.head.appendChild(link);\r\n\r\n    // The browser will close connection if not used within a few seconds, remove element from the header after 10s\r\n    window.setTimeout(() => {\r\n        try {\r\n            document.head.removeChild(link);\r\n        } catch {}\r\n    }, 10000); // 10s Timeout\r\n}\r\n\r\n/**\r\n * Wrapper function that creates a UUID v7 from the current timestamp.\r\n * @returns {string}\r\n */\r\nexport function createGuid(): string {\r\n    return BrowserCrypto.createNewGuid();\r\n}\r\n\r\nexport { invoke };\r\nexport { invokeAsync };\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    SystemOptions,\r\n    LoggerOptions,\r\n    INetworkModule,\r\n    DEFAULT_SYSTEM_OPTIONS,\r\n    Constants,\r\n    ProtocolMode,\r\n    OIDCOptions,\r\n    ServerResponseType,\r\n    LogLevel,\r\n    StubbedNetworkModule,\r\n    AzureCloudInstance,\r\n    AzureCloudOptions,\r\n    ApplicationTelemetry,\r\n    createClientConfigurationError,\r\n    ClientConfigurationErrorCodes,\r\n    IPerformanceClient,\r\n    StubPerformanceClient,\r\n    Logger,\r\n} from \"@azure/msal-common/browser\";\r\nimport {\r\n    BrowserCacheLocation,\r\n    BrowserConstants,\r\n} from \"../utils/BrowserConstants.js\";\r\nimport { INavigationClient } from \"../navigation/INavigationClient.js\";\r\nimport { NavigationClient } from \"../navigation/NavigationClient.js\";\r\nimport { FetchClient } from \"../network/FetchClient.js\";\r\nimport * as BrowserUtils from \"../utils/BrowserUtils.js\";\r\n\r\n// Default timeout for popup windows and iframes in milliseconds\r\nexport const DEFAULT_POPUP_TIMEOUT_MS = 60000;\r\nexport const DEFAULT_IFRAME_TIMEOUT_MS = 10000;\r\nexport const DEFAULT_REDIRECT_TIMEOUT_MS = 30000;\r\nexport const DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS = 2000;\r\n\r\n/**\r\n * Use this to configure the auth options in the Configuration object\r\n */\r\nexport type BrowserAuthOptions = {\r\n    /**\r\n     * Client ID of your app registered with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview in Microsoft Identity Platform\r\n     */\r\n    clientId: string;\r\n    /**\r\n     * You can configure a specific authority, defaults to \" \" or \"https://login.microsoftonline.com/common\"\r\n     */\r\n    authority?: string;\r\n    /**\r\n     * An array of URIs that are known to be valid. Used in B2C scenarios.\r\n     */\r\n    knownAuthorities?: Array<string>;\r\n    /**\r\n     * A string containing the cloud discovery response. Used in AAD scenarios.\r\n     */\r\n    cloudDiscoveryMetadata?: string;\r\n    /**\r\n     * A string containing the .well-known/openid-configuration endpoint response\r\n     */\r\n    authorityMetadata?: string;\r\n    /**\r\n     * The redirect URI where authentication responses can be received by your application. It must exactly match one of the redirect URIs registered in the Azure portal.\r\n     */\r\n    redirectUri?: string;\r\n    /**\r\n     * The redirect URI where the window navigates after a successful logout.\r\n     */\r\n    postLogoutRedirectUri?: string | null;\r\n    /**\r\n     * Boolean indicating whether to navigate to the original request URL after the auth server navigates to the redirect URL.\r\n     */\r\n    navigateToLoginRequestUrl?: boolean;\r\n    /**\r\n     * Array of capabilities which will be added to the claims.access_token.xms_cc request property on every network request.\r\n     */\r\n    clientCapabilities?: Array<string>;\r\n    /**\r\n     * Enum that represents the protocol that msal follows. Used for configuring proper endpoints.\r\n     */\r\n    protocolMode?: ProtocolMode;\r\n    /**\r\n     * Enum that configures options for the OIDC protocol mode.\r\n     */\r\n    OIDCOptions?: OIDCOptions;\r\n    /**\r\n     * Enum that represents the Azure Cloud to use.\r\n     */\r\n    azureCloudOptions?: AzureCloudOptions;\r\n    /**\r\n     * Flag of whether to use the local metadata cache\r\n     */\r\n    skipAuthorityMetadataCache?: boolean;\r\n    /**\r\n     * App supports nested app auth or not; defaults to\r\n     *\r\n     * @deprecated This flag is deprecated and will be removed in the next major version. createNestablePublicClientApplication should be used instead.\r\n     */\r\n    supportsNestedAppAuth?: boolean;\r\n    /**\r\n     * Callback that will be passed the url that MSAL will navigate to in redirect flows. Returning false in the callback will stop navigation.\r\n     */\r\n    onRedirectNavigate?: (url: string) => boolean | void;\r\n    /**\r\n     * Flag of whether the STS will send back additional parameters to specify where the tokens should be retrieved from.\r\n     */\r\n    instanceAware?: boolean;\r\n};\r\n\r\n/** @internal */\r\nexport type InternalAuthOptions = Omit<\r\n    Required<BrowserAuthOptions>,\r\n    \"onRedirectNavigate\"\r\n> & {\r\n    OIDCOptions: Required<OIDCOptions>;\r\n    onRedirectNavigate?: (url: string) => boolean | void;\r\n};\r\n\r\n/**\r\n * Use this to configure the below cache configuration options:\r\n */\r\nexport type CacheOptions = {\r\n    /**\r\n     * Used to specify the cacheLocation user wants to set. Valid values are \"localStorage\", \"sessionStorage\" and \"memoryStorage\".\r\n     */\r\n    cacheLocation?: BrowserCacheLocation | string;\r\n    /**\r\n     * Used to specify the temporaryCacheLocation user wants to set. Valid values are \"localStorage\", \"sessionStorage\" and \"memoryStorage\".\r\n     */\r\n    temporaryCacheLocation?: BrowserCacheLocation | string;\r\n    /**\r\n     * If set, MSAL stores the auth request state required for validation of the auth flows in the browser cookies. By default this flag is set to false.\r\n     */\r\n    storeAuthStateInCookie?: boolean;\r\n    /**\r\n     * If set, MSAL sets the \"Secure\" flag on cookies so they can only be sent over HTTPS. By default this flag is set to true.\r\n     * @deprecated This option will be removed in a future major version and all cookies set will include the Secure attribute.\r\n     */\r\n    secureCookies?: boolean;\r\n    /**\r\n     * If set, MSAL will attempt to migrate cache entries from older versions on initialization. By default this flag is set to true if cacheLocation is localStorage, otherwise false.\r\n     */\r\n    cacheMigrationEnabled?: boolean;\r\n    /**\r\n     * Flag that determines whether access tokens are stored based on requested claims\r\n     */\r\n    claimsBasedCachingEnabled?: boolean;\r\n};\r\n\r\nexport type BrowserSystemOptions = SystemOptions & {\r\n    /**\r\n     * Used to initialize the Logger object (See ClientConfiguration.ts)\r\n     */\r\n    loggerOptions?: LoggerOptions;\r\n    /**\r\n     * Network interface implementation\r\n     */\r\n    networkClient?: INetworkModule;\r\n    /**\r\n     * Override the methods used to navigate to other webpages. Particularly useful if you are using a client-side router\r\n     */\r\n    navigationClient?: INavigationClient;\r\n    /**\r\n     * Sets the timeout for waiting for a response hash in a popup. Will take precedence over loadFrameTimeout if both are set.\r\n     */\r\n    windowHashTimeout?: number;\r\n    /**\r\n     * Sets the timeout for waiting for a response hash in an iframe. Will take precedence over loadFrameTimeout if both are set.\r\n     */\r\n    iframeHashTimeout?: number;\r\n    /**\r\n     * Sets the timeout for waiting for a response hash in an iframe or popup\r\n     */\r\n    loadFrameTimeout?: number;\r\n    /**\r\n     * Maximum time the library should wait for a frame to load\r\n     * @deprecated This was previously needed for older browsers which are no longer supported by MSAL.js. This option will be removed in the next major version\r\n     */\r\n    navigateFrameWait?: number;\r\n    /**\r\n     * Time to wait for redirection to occur before resolving promise\r\n     */\r\n    redirectNavigationTimeout?: number;\r\n    /**\r\n     * Sets whether popups are opened asynchronously. By default, this flag is set to false. When set to false, blank popups are opened before anything else happens. When set to true, popups are opened when making the network request.\r\n     */\r\n    asyncPopups?: boolean;\r\n    /**\r\n     * Flag to enable redirect opertaions when the app is rendered in an iframe (to support scenarios such as embedded B2C login).\r\n     */\r\n    allowRedirectInIframe?: boolean;\r\n    /**\r\n     * Flag to enable native broker support (e.g. acquiring tokens from WAM on Windows, MacBroker on Mac)\r\n     */\r\n    allowPlatformBroker?: boolean;\r\n    /**\r\n     * Sets the timeout for waiting for the native broker handshake to resolve\r\n     */\r\n    nativeBrokerHandshakeTimeout?: number;\r\n    /**\r\n     * Sets the interval length in milliseconds for polling the location attribute in popup windows (default is 30ms)\r\n     */\r\n    pollIntervalMilliseconds?: number;\r\n};\r\n\r\n/**\r\n * Telemetry Options\r\n */\r\nexport type BrowserTelemetryOptions = {\r\n    /**\r\n     * Telemetry information sent on request\r\n     * - appName: Unique string name of an application\r\n     * - appVersion: Version of the application using MSAL\r\n     */\r\n    application?: ApplicationTelemetry;\r\n\r\n    client?: IPerformanceClient;\r\n};\r\n\r\n/**\r\n * This object allows you to configure important elements of MSAL functionality and is passed into the constructor of PublicClientApplication\r\n */\r\nexport type Configuration = {\r\n    /**\r\n     * This is where you configure auth elements like clientID, authority used for authenticating against the Microsoft Identity Platform\r\n     */\r\n    auth: BrowserAuthOptions;\r\n    /**\r\n     * This is where you configure cache location and whether to store cache in cookies\r\n     */\r\n    cache?: CacheOptions;\r\n    /**\r\n     * This is where you can configure the network client, logger, token renewal offset\r\n     */\r\n    system?: BrowserSystemOptions;\r\n    /**\r\n     * This is where you can configure telemetry data and options\r\n     */\r\n    telemetry?: BrowserTelemetryOptions;\r\n};\r\n\r\n/** @internal */\r\nexport type BrowserConfiguration = {\r\n    auth: InternalAuthOptions;\r\n    cache: Required<CacheOptions>;\r\n    system: Required<BrowserSystemOptions>;\r\n    telemetry: Required<BrowserTelemetryOptions>;\r\n};\r\n\r\n/**\r\n * MSAL function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param auth\r\n * @param cache\r\n * @param system\r\n *\r\n * @returns Configuration object\r\n */\r\nexport function buildConfiguration(\r\n    {\r\n        auth: userInputAuth,\r\n        cache: userInputCache,\r\n        system: userInputSystem,\r\n        telemetry: userInputTelemetry,\r\n    }: Configuration,\r\n    isBrowserEnvironment: boolean\r\n): BrowserConfiguration {\r\n    // Default auth options for browser\r\n    const DEFAULT_AUTH_OPTIONS: InternalAuthOptions = {\r\n        clientId: Constants.EMPTY_STRING,\r\n        authority: `${Constants.DEFAULT_AUTHORITY}`,\r\n        knownAuthorities: [],\r\n        cloudDiscoveryMetadata: Constants.EMPTY_STRING,\r\n        authorityMetadata: Constants.EMPTY_STRING,\r\n        redirectUri:\r\n            typeof window !== \"undefined\" ? BrowserUtils.getCurrentUri() : \"\",\r\n        postLogoutRedirectUri: Constants.EMPTY_STRING,\r\n        navigateToLoginRequestUrl: true,\r\n        clientCapabilities: [],\r\n        protocolMode: ProtocolMode.AAD,\r\n        OIDCOptions: {\r\n            serverResponseType: ServerResponseType.FRAGMENT,\r\n            defaultScopes: [\r\n                Constants.OPENID_SCOPE,\r\n                Constants.PROFILE_SCOPE,\r\n                Constants.OFFLINE_ACCESS_SCOPE,\r\n            ],\r\n        },\r\n        azureCloudOptions: {\r\n            azureCloudInstance: AzureCloudInstance.None,\r\n            tenant: Constants.EMPTY_STRING,\r\n        },\r\n        skipAuthorityMetadataCache: false,\r\n        supportsNestedAppAuth: false,\r\n        instanceAware: false,\r\n    };\r\n\r\n    // Default cache options for browser\r\n    const DEFAULT_CACHE_OPTIONS: Required<CacheOptions> = {\r\n        cacheLocation: BrowserCacheLocation.SessionStorage,\r\n        temporaryCacheLocation: BrowserCacheLocation.SessionStorage,\r\n        storeAuthStateInCookie: false,\r\n        secureCookies: false,\r\n        // Default cache migration to true if cache location is localStorage since entries are preserved across tabs/windows. Migration has little to no benefit in sessionStorage and memoryStorage\r\n        cacheMigrationEnabled:\r\n            userInputCache &&\r\n            userInputCache.cacheLocation === BrowserCacheLocation.LocalStorage\r\n                ? true\r\n                : false,\r\n        claimsBasedCachingEnabled: false,\r\n    };\r\n\r\n    // Default logger options for browser\r\n    const DEFAULT_LOGGER_OPTIONS: LoggerOptions = {\r\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n        loggerCallback: (): void => {\r\n            // allow users to not set logger call back\r\n        },\r\n        logLevel: LogLevel.Info,\r\n        piiLoggingEnabled: false,\r\n    };\r\n\r\n    // Default system options for browser\r\n    const DEFAULT_BROWSER_SYSTEM_OPTIONS: Required<BrowserSystemOptions> = {\r\n        ...DEFAULT_SYSTEM_OPTIONS,\r\n        loggerOptions: DEFAULT_LOGGER_OPTIONS,\r\n        networkClient: isBrowserEnvironment\r\n            ? new FetchClient()\r\n            : StubbedNetworkModule,\r\n        navigationClient: new NavigationClient(),\r\n        loadFrameTimeout: 0,\r\n        // If loadFrameTimeout is provided, use that as default.\r\n        windowHashTimeout:\r\n            userInputSystem?.loadFrameTimeout || DEFAULT_POPUP_TIMEOUT_MS,\r\n        iframeHashTimeout:\r\n            userInputSystem?.loadFrameTimeout || DEFAULT_IFRAME_TIMEOUT_MS,\r\n        navigateFrameWait: 0,\r\n        redirectNavigationTimeout: DEFAULT_REDIRECT_TIMEOUT_MS,\r\n        asyncPopups: false,\r\n        allowRedirectInIframe: false,\r\n        allowPlatformBroker: false,\r\n        nativeBrokerHandshakeTimeout:\r\n            userInputSystem?.nativeBrokerHandshakeTimeout ||\r\n            DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS,\r\n        pollIntervalMilliseconds: BrowserConstants.DEFAULT_POLL_INTERVAL_MS,\r\n    };\r\n\r\n    const providedSystemOptions: Required<BrowserSystemOptions> = {\r\n        ...DEFAULT_BROWSER_SYSTEM_OPTIONS,\r\n        ...userInputSystem,\r\n        loggerOptions: userInputSystem?.loggerOptions || DEFAULT_LOGGER_OPTIONS,\r\n    };\r\n\r\n    const DEFAULT_TELEMETRY_OPTIONS: Required<BrowserTelemetryOptions> = {\r\n        application: {\r\n            appName: Constants.EMPTY_STRING,\r\n            appVersion: Constants.EMPTY_STRING,\r\n        },\r\n        client: new StubPerformanceClient(),\r\n    };\r\n\r\n    // Throw an error if user has set OIDCOptions without being in OIDC protocol mode\r\n    if (\r\n        userInputAuth?.protocolMode !== ProtocolMode.OIDC &&\r\n        userInputAuth?.OIDCOptions\r\n    ) {\r\n        const logger = new Logger(providedSystemOptions.loggerOptions);\r\n        logger.warning(\r\n            JSON.stringify(\r\n                createClientConfigurationError(\r\n                    ClientConfigurationErrorCodes.cannotSetOIDCOptions\r\n                )\r\n            )\r\n        );\r\n    }\r\n\r\n    // Throw an error if user has set allowPlatformBroker to true without being in AAD protocol mode\r\n    if (\r\n        userInputAuth?.protocolMode &&\r\n        userInputAuth.protocolMode !== ProtocolMode.AAD &&\r\n        providedSystemOptions?.allowPlatformBroker\r\n    ) {\r\n        throw createClientConfigurationError(\r\n            ClientConfigurationErrorCodes.cannotAllowPlatformBroker\r\n        );\r\n    }\r\n\r\n    const overlayedConfig: BrowserConfiguration = {\r\n        auth: {\r\n            ...DEFAULT_AUTH_OPTIONS,\r\n            ...userInputAuth,\r\n            OIDCOptions: {\r\n                ...DEFAULT_AUTH_OPTIONS.OIDCOptions,\r\n                ...userInputAuth?.OIDCOptions,\r\n            },\r\n        },\r\n        cache: { ...DEFAULT_CACHE_OPTIONS, ...userInputCache },\r\n        system: providedSystemOptions,\r\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...userInputTelemetry },\r\n    };\r\n\r\n    return overlayedConfig;\r\n}\r\n","/* eslint-disable header/header */\r\nexport const name = \"@azure/msal-browser\";\r\nexport const version = \"4.5.0\";\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Logger, LogLevel } from \"@azure/msal-common/browser\";\r\nimport {\r\n    BrowserConfiguration,\r\n    buildConfiguration,\r\n    Configuration,\r\n} from \"../config/Configuration.js\";\r\nimport { version, name } from \"../packageMetadata.js\";\r\nimport {\r\n    BrowserCacheLocation,\r\n    LOG_LEVEL_CACHE_KEY,\r\n    LOG_PII_CACHE_KEY,\r\n} from \"../utils/BrowserConstants.js\";\r\n\r\n/**\r\n * Base class for operating context\r\n * Operating contexts are contexts in which MSAL.js is being run\r\n * More than one operating context may be available at a time\r\n * It's important from a logging and telemetry point of view for us to be able to identify the operating context.\r\n * For example: Some operating contexts will pre-cache tokens impacting performance telemetry\r\n */\r\nexport abstract class BaseOperatingContext {\r\n    protected logger: Logger;\r\n    protected config: BrowserConfiguration;\r\n    protected available: boolean;\r\n    protected browserEnvironment: boolean;\r\n\r\n    protected static loggerCallback(level: LogLevel, message: string): void {\r\n        switch (level) {\r\n            case LogLevel.Error:\r\n                // eslint-disable-next-line no-console\r\n                console.error(message);\r\n                return;\r\n            case LogLevel.Info:\r\n                // eslint-disable-next-line no-console\r\n                console.info(message);\r\n                return;\r\n            case LogLevel.Verbose:\r\n                // eslint-disable-next-line no-console\r\n                console.debug(message);\r\n                return;\r\n            case LogLevel.Warning:\r\n                // eslint-disable-next-line no-console\r\n                console.warn(message);\r\n                return;\r\n            default:\r\n                // eslint-disable-next-line no-console\r\n                console.log(message);\r\n                return;\r\n        }\r\n    }\r\n\r\n    constructor(config: Configuration) {\r\n        /*\r\n         * If loaded in an environment where window is not available,\r\n         * set internal flag to false so that further requests fail.\r\n         * This is to support server-side rendering environments.\r\n         */\r\n        this.browserEnvironment = typeof window !== \"undefined\";\r\n        this.config = buildConfiguration(config, this.browserEnvironment);\r\n\r\n        let sessionStorage: Storage | undefined;\r\n        try {\r\n            sessionStorage = window[BrowserCacheLocation.SessionStorage];\r\n            // Mute errors if it's a non-browser environment or cookies are blocked.\r\n        } catch (e) {}\r\n\r\n        const logLevelKey = sessionStorage?.getItem(LOG_LEVEL_CACHE_KEY);\r\n        const piiLoggingKey = sessionStorage\r\n            ?.getItem(LOG_PII_CACHE_KEY)\r\n            ?.toLowerCase();\r\n\r\n        const piiLoggingEnabled =\r\n            piiLoggingKey === \"true\"\r\n                ? true\r\n                : piiLoggingKey === \"false\"\r\n                ? false\r\n                : undefined;\r\n        const loggerOptions = { ...this.config.system.loggerOptions };\r\n\r\n        const logLevel =\r\n            logLevelKey && Object.keys(LogLevel).includes(logLevelKey)\r\n                ? LogLevel[logLevelKey]\r\n                : undefined;\r\n        if (logLevel) {\r\n            loggerOptions.loggerCallback = BaseOperatingContext.loggerCallback;\r\n            loggerOptions.logLevel = logLevel;\r\n        }\r\n        if (piiLoggingEnabled !== undefined) {\r\n            loggerOptions.piiLoggingEnabled = piiLoggingEnabled;\r\n        }\r\n\r\n        this.logger = new Logger(loggerOptions, name, version);\r\n        this.available = false;\r\n    }\r\n\r\n    /**\r\n     * returns the name of the module containing the API controller associated with this operating context\r\n     */\r\n    abstract getModuleName(): string;\r\n\r\n    /**\r\n     * returns the string identifier of this operating context\r\n     */\r\n    abstract getId(): string;\r\n\r\n    /**\r\n     * returns a boolean indicating whether this operating context is present\r\n     */\r\n    abstract initialize(): Promise<boolean>;\r\n\r\n    /**\r\n     * Return the MSAL config\r\n     * @returns BrowserConfiguration\r\n     */\r\n    getConfig(): BrowserConfiguration {\r\n        return this.config;\r\n    }\r\n\r\n    /**\r\n     * Returns the MSAL Logger\r\n     * @returns Logger\r\n     */\r\n    getLogger(): Logger {\r\n        return this.logger;\r\n    }\r\n\r\n    isAvailable(): boolean {\r\n        return this.available;\r\n    }\r\n\r\n    isBrowserEnvironment(): boolean {\r\n        return this.browserEnvironment;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { BaseOperatingContext } from \"./BaseOperatingContext.js\";\r\n\r\nexport class StandardOperatingContext extends BaseOperatingContext {\r\n    /*\r\n     * TODO: Once we have determine the bundling code return here to specify the name of the bundle\r\n     * containing the implementation for this operating context\r\n     */\r\n    static readonly MODULE_NAME: string = \"\";\r\n\r\n    /**\r\n     * Unique identifier for the operating context\r\n     */\r\n    static readonly ID: string = \"StandardOperatingContext\";\r\n\r\n    /**\r\n     * Return the module name.  Intended for use with import() to enable dynamic import\r\n     * of the implementation associated with this operating context\r\n     * @returns\r\n     */\r\n    getModuleName(): string {\r\n        return StandardOperatingContext.MODULE_NAME;\r\n    }\r\n\r\n    /**\r\n     * Returns the unique identifier for this operating context\r\n     * @returns string\r\n     */\r\n    getId(): string {\r\n        return StandardOperatingContext.ID;\r\n    }\r\n\r\n    /**\r\n     * Checks whether the operating context is available.\r\n     * Confirms that the code is running a browser rather.  This is required.\r\n     * @returns Promise<boolean> indicating whether this operating context is currently available.\r\n     */\r\n    async initialize(): Promise<boolean> {\r\n        this.available = typeof window !== \"undefined\";\r\n        return this.available;\r\n        /*\r\n         * NOTE: The standard context is available as long as there is a window.  If/when we split out WAM from Browser\r\n         * We can move the current contents of the initialize method to here and verify that the WAM extension is available\r\n         */\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nexport const missingKidError = \"missing_kid_error\";\r\nexport const missingAlgError = \"missing_alg_error\";\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AuthError } from \"./AuthError.js\";\r\nimport * as JoseHeaderErrorCodes from \"./JoseHeaderErrorCodes.js\";\r\nexport { JoseHeaderErrorCodes };\r\n\r\nexport const JoseHeaderErrorMessages = {\r\n    [JoseHeaderErrorCodes.missingKidError]:\r\n        \"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.\",\r\n    [JoseHeaderErrorCodes.missingAlgError]:\r\n        \"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided.\",\r\n};\r\n\r\n/**\r\n * Error thrown when there is an error in the client code running on the browser.\r\n */\r\nexport class JoseHeaderError extends AuthError {\r\n    constructor(errorCode: string, errorMessage?: string) {\r\n        super(errorCode, errorMessage);\r\n        this.name = \"JoseHeaderError\";\r\n\r\n        Object.setPrototypeOf(this, JoseHeaderError.prototype);\r\n    }\r\n}\r\n\r\n/** Returns JoseHeaderError object */\r\nexport function createJoseHeaderError(code: string): JoseHeaderError {\r\n    return new JoseHeaderError(code, JoseHeaderErrorMessages[code]);\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    JoseHeaderErrorCodes,\r\n    createJoseHeaderError,\r\n} from \"../error/JoseHeaderError.js\";\r\nimport { JsonWebTokenTypes } from \"../utils/Constants.js\";\r\n\r\nexport type JoseHeaderOptions = {\r\n    typ?: JsonWebTokenTypes;\r\n    alg?: string;\r\n    kid?: string;\r\n};\r\n\r\n/** @internal */\r\nexport class JoseHeader {\r\n    public typ?: JsonWebTokenTypes;\r\n    public alg?: string;\r\n    public kid?: string;\r\n\r\n    constructor(options: JoseHeaderOptions) {\r\n        this.typ = options.typ;\r\n        this.alg = options.alg;\r\n        this.kid = options.kid;\r\n    }\r\n\r\n    /**\r\n     * Builds SignedHttpRequest formatted JOSE Header from the\r\n     * JOSE Header options provided or previously set on the object and returns\r\n     * the stringified header object.\r\n     * Throws if keyId or algorithm aren't provided since they are required for Access Token Binding.\r\n     * @param shrHeaderOptions\r\n     * @returns\r\n     */\r\n    static getShrHeaderString(shrHeaderOptions: JoseHeaderOptions): string {\r\n        // KeyID is required on the SHR header\r\n        if (!shrHeaderOptions.kid) {\r\n            throw createJoseHeaderError(JoseHeaderErrorCodes.missingKidError);\r\n        }\r\n\r\n        // Alg is required on the SHR header\r\n        if (!shrHeaderOptions.alg) {\r\n            throw createJoseHeaderError(JoseHeaderErrorCodes.missingAlgError);\r\n        }\r\n\r\n        const shrHeader = new JoseHeader({\r\n            // Access Token PoP headers must have type pop, but the type header can be overriden for special cases\r\n            typ: shrHeaderOptions.typ || JsonWebTokenTypes.Pop,\r\n            kid: shrHeaderOptions.kid,\r\n            alg: shrHeaderOptions.alg,\r\n        });\r\n\r\n        return JSON.stringify(shrHeader);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    createBrowserAuthError,\r\n    BrowserAuthErrorCodes,\r\n} from \"../error/BrowserAuthError.js\";\r\nimport {\r\n    DB_NAME,\r\n    DB_TABLE_NAME,\r\n    DB_VERSION,\r\n} from \"../utils/BrowserConstants.js\";\r\nimport { IAsyncStorage } from \"./IAsyncStorage.js\";\r\n\r\ninterface IDBOpenDBRequestEvent extends Event {\r\n    target: IDBOpenDBRequest & EventTarget;\r\n}\r\n\r\ninterface IDBOpenOnUpgradeNeededEvent extends IDBVersionChangeEvent {\r\n    target: IDBOpenDBRequest & EventTarget;\r\n}\r\n\r\ninterface IDBRequestEvent extends Event {\r\n    target: IDBRequest & EventTarget;\r\n}\r\n\r\n/**\r\n * Storage wrapper for IndexedDB storage in browsers: https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API\r\n */\r\nexport class DatabaseStorage<T> implements IAsyncStorage<T> {\r\n    private db: IDBDatabase | undefined;\r\n    private dbName: string;\r\n    private tableName: string;\r\n    private version: number;\r\n    private dbOpen: boolean;\r\n\r\n    constructor() {\r\n        this.dbName = DB_NAME;\r\n        this.version = DB_VERSION;\r\n        this.tableName = DB_TABLE_NAME;\r\n        this.dbOpen = false;\r\n    }\r\n\r\n    /**\r\n     * Opens IndexedDB instance.\r\n     */\r\n    async open(): Promise<void> {\r\n        return new Promise((resolve, reject) => {\r\n            const openDB = window.indexedDB.open(this.dbName, this.version);\r\n            openDB.addEventListener(\r\n                \"upgradeneeded\",\r\n                (e: IDBVersionChangeEvent) => {\r\n                    const event = e as IDBOpenOnUpgradeNeededEvent;\r\n                    event.target.result.createObjectStore(this.tableName);\r\n                }\r\n            );\r\n            openDB.addEventListener(\"success\", (e: Event) => {\r\n                const event = e as IDBOpenDBRequestEvent;\r\n                this.db = event.target.result;\r\n                this.dbOpen = true;\r\n                resolve();\r\n            });\r\n            openDB.addEventListener(\"error\", () =>\r\n                reject(\r\n                    createBrowserAuthError(\r\n                        BrowserAuthErrorCodes.databaseUnavailable\r\n                    )\r\n                )\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Closes the connection to IndexedDB database when all pending transactions\r\n     * complete.\r\n     */\r\n    closeConnection(): void {\r\n        const db = this.db;\r\n        if (db && this.dbOpen) {\r\n            db.close();\r\n            this.dbOpen = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Opens database if it's not already open\r\n     */\r\n    private async validateDbIsOpen(): Promise<void> {\r\n        if (!this.dbOpen) {\r\n            return this.open();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieves item from IndexedDB instance.\r\n     * @param key\r\n     */\r\n    async getItem(key: string): Promise<T | null> {\r\n        await this.validateDbIsOpen();\r\n        return new Promise<T>((resolve, reject) => {\r\n            // TODO: Add timeouts?\r\n            if (!this.db) {\r\n                return reject(\r\n                    createBrowserAuthError(\r\n                        BrowserAuthErrorCodes.databaseNotOpen\r\n                    )\r\n                );\r\n            }\r\n            const transaction = this.db.transaction(\r\n                [this.tableName],\r\n                \"readonly\"\r\n            );\r\n            const objectStore = transaction.objectStore(this.tableName);\r\n            const dbGet = objectStore.get(key);\r\n\r\n            dbGet.addEventListener(\"success\", (e: Event) => {\r\n                const event = e as IDBRequestEvent;\r\n                this.closeConnection();\r\n                resolve(event.target.result);\r\n            });\r\n\r\n            dbGet.addEventListener(\"error\", (e: Event) => {\r\n                this.closeConnection();\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Adds item to IndexedDB under given key\r\n     * @param key\r\n     * @param payload\r\n     */\r\n    async setItem(key: string, payload: T): Promise<void> {\r\n        await this.validateDbIsOpen();\r\n        return new Promise<void>((resolve: Function, reject: Function) => {\r\n            // TODO: Add timeouts?\r\n            if (!this.db) {\r\n                return reject(\r\n                    createBrowserAuthError(\r\n                        BrowserAuthErrorCodes.databaseNotOpen\r\n                    )\r\n                );\r\n            }\r\n            const transaction = this.db.transaction(\r\n                [this.tableName],\r\n                \"readwrite\"\r\n            );\r\n\r\n            const objectStore = transaction.objectStore(this.tableName);\r\n\r\n            const dbPut = objectStore.put(payload, key);\r\n\r\n            dbPut.addEventListener(\"success\", () => {\r\n                this.closeConnection();\r\n                resolve();\r\n            });\r\n\r\n            dbPut.addEventListener(\"error\", (e) => {\r\n                this.closeConnection();\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Removes item from IndexedDB under given key\r\n     * @param key\r\n     */\r\n    async removeItem(key: string): Promise<void> {\r\n        await this.validateDbIsOpen();\r\n        return new Promise<void>((resolve: Function, reject: Function) => {\r\n            if (!this.db) {\r\n                return reject(\r\n                    createBrowserAuthError(\r\n                        BrowserAuthErrorCodes.databaseNotOpen\r\n                    )\r\n                );\r\n            }\r\n\r\n            const transaction = this.db.transaction(\r\n                [this.tableName],\r\n                \"readwrite\"\r\n            );\r\n            const objectStore = transaction.objectStore(this.tableName);\r\n            const dbDelete = objectStore.delete(key);\r\n\r\n            dbDelete.addEventListener(\"success\", () => {\r\n                this.closeConnection();\r\n                resolve();\r\n            });\r\n\r\n            dbDelete.addEventListener(\"error\", (e) => {\r\n                this.closeConnection();\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get all the keys from the storage object as an iterable array of strings.\r\n     */\r\n    async getKeys(): Promise<string[]> {\r\n        await this.validateDbIsOpen();\r\n        return new Promise<string[]>((resolve: Function, reject: Function) => {\r\n            if (!this.db) {\r\n                return reject(\r\n                    createBrowserAuthError(\r\n                        BrowserAuthErrorCodes.databaseNotOpen\r\n                    )\r\n                );\r\n            }\r\n\r\n            const transaction = this.db.transaction(\r\n                [this.tableName],\r\n                \"readonly\"\r\n            );\r\n            const objectStore = transaction.objectStore(this.tableName);\r\n            const dbGetKeys = objectStore.getAllKeys();\r\n\r\n            dbGetKeys.addEventListener(\"success\", (e: Event) => {\r\n                const event = e as IDBRequestEvent;\r\n                this.closeConnection();\r\n                resolve(event.target.result);\r\n            });\r\n\r\n            dbGetKeys.addEventListener(\"error\", (e: Event) => {\r\n                this.closeConnection();\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * Checks whether there is an object under the search key in the object store\r\n     */\r\n    async containsKey(key: string): Promise<boolean> {\r\n        await this.validateDbIsOpen();\r\n\r\n        return new Promise<boolean>((resolve: Function, reject: Function) => {\r\n            if (!this.db) {\r\n                return reject(\r\n                    createBrowserAuthError(\r\n                        BrowserAuthErrorCodes.databaseNotOpen\r\n                    )\r\n                );\r\n            }\r\n\r\n            const transaction = this.db.transaction(\r\n                [this.tableName],\r\n                \"readonly\"\r\n            );\r\n            const objectStore = transaction.objectStore(this.tableName);\r\n            const dbContainsKey = objectStore.count(key);\r\n\r\n            dbContainsKey.addEventListener(\"success\", (e: Event) => {\r\n                const event = e as IDBRequestEvent;\r\n                this.closeConnection();\r\n                resolve(event.target.result === 1);\r\n            });\r\n\r\n            dbContainsKey.addEventListener(\"error\", (e: Event) => {\r\n                this.closeConnection();\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Deletes the MSAL database. The database is deleted rather than cleared to make it possible\r\n     * for client applications to downgrade to a previous MSAL version without worrying about forward compatibility issues\r\n     * with IndexedDB database versions.\r\n     */\r\n    async deleteDatabase(): Promise<boolean> {\r\n        // Check if database being deleted exists\r\n\r\n        if (this.db && this.dbOpen) {\r\n            this.closeConnection();\r\n        }\r\n\r\n        return new Promise<boolean>((resolve: Function, reject: Function) => {\r\n            const deleteDbRequest = window.indexedDB.deleteDatabase(DB_NAME);\r\n            const id = setTimeout(() => reject(false), 200); // Reject if events aren't raised within 200ms\r\n            deleteDbRequest.addEventListener(\"success\", () => {\r\n                clearTimeout(id);\r\n                return resolve(true);\r\n            });\r\n            deleteDbRequest.addEventListener(\"blocked\", () => {\r\n                clearTimeout(id);\r\n                return resolve(true);\r\n            });\r\n            deleteDbRequest.addEventListener(\"error\", () => {\r\n                clearTimeout(id);\r\n                return reject(false);\r\n            });\r\n        });\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { IWindowStorage } from \"./IWindowStorage.js\";\r\n\r\nexport class MemoryStorage<T> implements IWindowStorage<T> {\r\n    private cache: Map<string, T>;\r\n\r\n    constructor() {\r\n        this.cache = new Map<string, T>();\r\n    }\r\n\r\n    async initialize(): Promise<void> {\r\n        // Memory storage does not require initialization\r\n    }\r\n\r\n    getItem(key: string): T | null {\r\n        return this.cache.get(key) || null;\r\n    }\r\n\r\n    getUserData(key: string): T | null {\r\n        return this.getItem(key);\r\n    }\r\n\r\n    setItem(key: string, value: T): void {\r\n        this.cache.set(key, value);\r\n    }\r\n\r\n    async setUserData(key: string, value: T): Promise<void> {\r\n        this.setItem(key, value);\r\n    }\r\n\r\n    removeItem(key: string): void {\r\n        this.cache.delete(key);\r\n    }\r\n\r\n    getKeys(): string[] {\r\n        const cacheKeys: string[] = [];\r\n        this.cache.forEach((value: T, key: string) => {\r\n            cacheKeys.push(key);\r\n        });\r\n        return cacheKeys;\r\n    }\r\n\r\n    containsKey(key: string): boolean {\r\n        return this.cache.has(key);\r\n    }\r\n\r\n    clear(): void {\r\n        this.cache.clear();\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Logger } from \"@azure/msal-common/browser\";\r\nimport {\r\n    BrowserAuthError,\r\n    BrowserAuthErrorCodes,\r\n} from \"../error/BrowserAuthError.js\";\r\nimport { DatabaseStorage } from \"./DatabaseStorage.js\";\r\nimport { IAsyncStorage } from \"./IAsyncStorage.js\";\r\nimport { MemoryStorage } from \"./MemoryStorage.js\";\r\n\r\n/**\r\n * This class allows MSAL to store artifacts asynchronously using the DatabaseStorage IndexedDB wrapper,\r\n * backed up with the more volatile MemoryStorage object for cases in which IndexedDB may be unavailable.\r\n */\r\nexport class AsyncMemoryStorage<T> implements IAsyncStorage<T> {\r\n    private inMemoryCache: MemoryStorage<T>;\r\n    private indexedDBCache: DatabaseStorage<T>;\r\n    private logger: Logger;\r\n\r\n    constructor(logger: Logger) {\r\n        this.inMemoryCache = new MemoryStorage<T>();\r\n        this.indexedDBCache = new DatabaseStorage<T>();\r\n        this.logger = logger;\r\n    }\r\n\r\n    private handleDatabaseAccessError(error: unknown): void {\r\n        if (\r\n            error instanceof BrowserAuthError &&\r\n            error.errorCode === BrowserAuthErrorCodes.databaseUnavailable\r\n        ) {\r\n            this.logger.error(\r\n                \"Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.\"\r\n            );\r\n        } else {\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Get the item matching the given key. Tries in-memory cache first, then in the asynchronous\r\n     * storage object if item isn't found in-memory.\r\n     * @param key\r\n     */\r\n    async getItem(key: string): Promise<T | null> {\r\n        const item = this.inMemoryCache.getItem(key);\r\n        if (!item) {\r\n            try {\r\n                this.logger.verbose(\r\n                    \"Queried item not found in in-memory cache, now querying persistent storage.\"\r\n                );\r\n                return await this.indexedDBCache.getItem(key);\r\n            } catch (e) {\r\n                this.handleDatabaseAccessError(e);\r\n            }\r\n        }\r\n        return item;\r\n    }\r\n\r\n    /**\r\n     * Sets the item in the in-memory cache and then tries to set it in the asynchronous\r\n     * storage object with the given key.\r\n     * @param key\r\n     * @param value\r\n     */\r\n    async setItem(key: string, value: T): Promise<void> {\r\n        this.inMemoryCache.setItem(key, value);\r\n        try {\r\n            await this.indexedDBCache.setItem(key, value);\r\n        } catch (e) {\r\n            this.handleDatabaseAccessError(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes the item matching the key from the in-memory cache, then tries to remove it from the asynchronous storage object.\r\n     * @param key\r\n     */\r\n    async removeItem(key: string): Promise<void> {\r\n        this.inMemoryCache.removeItem(key);\r\n        try {\r\n            await this.indexedDBCache.removeItem(key);\r\n        } catch (e) {\r\n            this.handleDatabaseAccessError(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get all the keys from the in-memory cache as an iterable array of strings. If no keys are found, query the keys in the\r\n     * asynchronous storage object.\r\n     */\r\n    async getKeys(): Promise<string[]> {\r\n        const cacheKeys = this.inMemoryCache.getKeys();\r\n        if (cacheKeys.length === 0) {\r\n            try {\r\n                this.logger.verbose(\r\n                    \"In-memory cache is empty, now querying persistent storage.\"\r\n                );\r\n                return await this.indexedDBCache.getKeys();\r\n            } catch (e) {\r\n                this.handleDatabaseAccessError(e);\r\n            }\r\n        }\r\n        return cacheKeys;\r\n    }\r\n\r\n    /**\r\n     * Returns true or false if the given key is present in the cache.\r\n     * @param key\r\n     */\r\n    async containsKey(key: string): Promise<boolean> {\r\n        const containsKey = this.inMemoryCache.containsKey(key);\r\n        if (!containsKey) {\r\n            try {\r\n                this.logger.verbose(\r\n                    \"Key not found in in-memory cache, now querying persistent storage.\"\r\n                );\r\n                return await this.indexedDBCache.containsKey(key);\r\n            } catch (e) {\r\n                this.handleDatabaseAccessError(e);\r\n            }\r\n        }\r\n        return containsKey;\r\n    }\r\n\r\n    /**\r\n     * Clears in-memory Map\r\n     */\r\n    clearInMemory(): void {\r\n        // InMemory cache is a Map instance, clear is straightforward\r\n        this.logger.verbose(`Deleting in-memory keystore`);\r\n        this.inMemoryCache.clear();\r\n        this.logger.verbose(`In-memory keystore deleted`);\r\n    }\r\n\r\n    /**\r\n     * Tries to delete the IndexedDB database\r\n     * @returns\r\n     */\r\n    async clearPersistent(): Promise<boolean> {\r\n        try {\r\n            this.logger.verbose(\"Deleting persistent keystore\");\r\n            const dbDeleted = await this.indexedDBCache.deleteDatabase();\r\n            if (dbDeleted) {\r\n                this.logger.verbose(\"Persistent keystore deleted\");\r\n            }\r\n\r\n            return dbDeleted;\r\n        } catch (e) {\r\n            this.handleDatabaseAccessError(e);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    ICrypto,\r\n    IPerformanceClient,\r\n    JoseHeader,\r\n    Logger,\r\n    PerformanceEvents,\r\n    ShrOptions,\r\n    SignedHttpRequest,\r\n    SignedHttpRequestParameters,\r\n} from \"@azure/msal-common/browser\";\r\nimport {\r\n    base64Encode,\r\n    urlEncode,\r\n    urlEncodeArr,\r\n} from \"../encode/Base64Encode.js\";\r\nimport { base64Decode } from \"../encode/Base64Decode.js\";\r\nimport * as BrowserCrypto from \"./BrowserCrypto.js\";\r\nimport {\r\n    createBrowserAuthError,\r\n    BrowserAuthErrorCodes,\r\n} from \"../error/BrowserAuthError.js\";\r\nimport { AsyncMemoryStorage } from \"../cache/AsyncMemoryStorage.js\";\r\n\r\nexport type CachedKeyPair = {\r\n    publicKey: CryptoKey;\r\n    privateKey: CryptoKey;\r\n    requestMethod?: string;\r\n    requestUri?: string;\r\n};\r\n\r\n/**\r\n * This class implements MSAL's crypto interface, which allows it to perform base64 encoding and decoding, generating cryptographically random GUIDs and\r\n * implementing Proof Key for Code Exchange specs for the OAuth Authorization Code Flow using PKCE (rfc here: https://tools.ietf.org/html/rfc7636).\r\n */\r\nexport class CryptoOps implements ICrypto {\r\n    private logger: Logger;\r\n\r\n    /**\r\n     * CryptoOps can be used in contexts outside a PCA instance,\r\n     * meaning there won't be a performance manager available.\r\n     */\r\n    private performanceClient: IPerformanceClient | undefined;\r\n\r\n    private static POP_KEY_USAGES: Array<KeyUsage> = [\"sign\", \"verify\"];\r\n    private static EXTRACTABLE: boolean = true;\r\n    private cache: AsyncMemoryStorage<CachedKeyPair>;\r\n\r\n    constructor(\r\n        logger: Logger,\r\n        performanceClient?: IPerformanceClient,\r\n        skipValidateSubtleCrypto?: boolean\r\n    ) {\r\n        this.logger = logger;\r\n        // Browser crypto needs to be validated first before any other classes can be set.\r\n        BrowserCrypto.validateCryptoAvailable(\r\n            skipValidateSubtleCrypto ?? false\r\n        );\r\n        this.cache = new AsyncMemoryStorage<CachedKeyPair>(this.logger);\r\n        this.performanceClient = performanceClient;\r\n    }\r\n\r\n    /**\r\n     * Creates a new random GUID - used to populate state and nonce.\r\n     * @returns string (GUID)\r\n     */\r\n    createNewGuid(): string {\r\n        return BrowserCrypto.createNewGuid();\r\n    }\r\n\r\n    /**\r\n     * Encodes input string to base64.\r\n     * @param input\r\n     */\r\n    base64Encode(input: string): string {\r\n        return base64Encode(input);\r\n    }\r\n\r\n    /**\r\n     * Decodes input string from base64.\r\n     * @param input\r\n     */\r\n    base64Decode(input: string): string {\r\n        return base64Decode(input);\r\n    }\r\n\r\n    /**\r\n     * Encodes input string to base64 URL safe string.\r\n     * @param input\r\n     */\r\n    base64UrlEncode(input: string): string {\r\n        return urlEncode(input);\r\n    }\r\n\r\n    /**\r\n     * Stringifies and base64Url encodes input public key\r\n     * @param inputKid\r\n     * @returns Base64Url encoded public key\r\n     */\r\n    encodeKid(inputKid: string): string {\r\n        return this.base64UrlEncode(JSON.stringify({ kid: inputKid }));\r\n    }\r\n\r\n    /**\r\n     * Generates a keypair, stores it and returns a thumbprint\r\n     * @param request\r\n     */\r\n    async getPublicKeyThumbprint(\r\n        request: SignedHttpRequestParameters\r\n    ): Promise<string> {\r\n        const publicKeyThumbMeasurement =\r\n            this.performanceClient?.startMeasurement(\r\n                PerformanceEvents.CryptoOptsGetPublicKeyThumbprint,\r\n                request.correlationId\r\n            );\r\n\r\n        // Generate Keypair\r\n        const keyPair: CryptoKeyPair = await BrowserCrypto.generateKeyPair(\r\n            CryptoOps.EXTRACTABLE,\r\n            CryptoOps.POP_KEY_USAGES\r\n        );\r\n\r\n        // Generate Thumbprint for Public Key\r\n        const publicKeyJwk: JsonWebKey = await BrowserCrypto.exportJwk(\r\n            keyPair.publicKey\r\n        );\r\n\r\n        const pubKeyThumprintObj: JsonWebKey = {\r\n            e: publicKeyJwk.e,\r\n            kty: publicKeyJwk.kty,\r\n            n: publicKeyJwk.n,\r\n        };\r\n\r\n        const publicJwkString: string =\r\n            getSortedObjectString(pubKeyThumprintObj);\r\n        const publicJwkHash = await this.hashString(publicJwkString);\r\n\r\n        // Generate Thumbprint for Private Key\r\n        const privateKeyJwk: JsonWebKey = await BrowserCrypto.exportJwk(\r\n            keyPair.privateKey\r\n        );\r\n        // Re-import private key to make it unextractable\r\n        const unextractablePrivateKey: CryptoKey =\r\n            await BrowserCrypto.importJwk(privateKeyJwk, false, [\"sign\"]);\r\n\r\n        // Store Keypair data in keystore\r\n        await this.cache.setItem(publicJwkHash, {\r\n            privateKey: unextractablePrivateKey,\r\n            publicKey: keyPair.publicKey,\r\n            requestMethod: request.resourceRequestMethod,\r\n            requestUri: request.resourceRequestUri,\r\n        });\r\n\r\n        if (publicKeyThumbMeasurement) {\r\n            publicKeyThumbMeasurement.end({\r\n                success: true,\r\n            });\r\n        }\r\n\r\n        return publicJwkHash;\r\n    }\r\n\r\n    /**\r\n     * Removes cryptographic keypair from key store matching the keyId passed in\r\n     * @param kid\r\n     */\r\n    async removeTokenBindingKey(kid: string): Promise<boolean> {\r\n        await this.cache.removeItem(kid);\r\n        const keyFound = await this.cache.containsKey(kid);\r\n        return !keyFound;\r\n    }\r\n\r\n    /**\r\n     * Removes all cryptographic keys from IndexedDB storage\r\n     */\r\n    async clearKeystore(): Promise<boolean> {\r\n        // Delete in-memory keystores\r\n        this.cache.clearInMemory();\r\n\r\n        /**\r\n         * There is only one database, so calling clearPersistent on asymmetric keystore takes care of\r\n         * every persistent keystore\r\n         */\r\n        try {\r\n            await this.cache.clearPersistent();\r\n            return true;\r\n        } catch (e) {\r\n            if (e instanceof Error) {\r\n                this.logger.error(\r\n                    `Clearing keystore failed with error: ${e.message}`\r\n                );\r\n            } else {\r\n                this.logger.error(\r\n                    \"Clearing keystore failed with unknown error\"\r\n                );\r\n            }\r\n\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Signs the given object as a jwt payload with private key retrieved by given kid.\r\n     * @param payload\r\n     * @param kid\r\n     */\r\n    async signJwt(\r\n        payload: SignedHttpRequest,\r\n        kid: string,\r\n        shrOptions?: ShrOptions,\r\n        correlationId?: string\r\n    ): Promise<string> {\r\n        const signJwtMeasurement = this.performanceClient?.startMeasurement(\r\n            PerformanceEvents.CryptoOptsSignJwt,\r\n            correlationId\r\n        );\r\n        const cachedKeyPair = await this.cache.getItem(kid);\r\n\r\n        if (!cachedKeyPair) {\r\n            throw createBrowserAuthError(\r\n                BrowserAuthErrorCodes.cryptoKeyNotFound\r\n            );\r\n        }\r\n\r\n        // Get public key as JWK\r\n        const publicKeyJwk = await BrowserCrypto.exportJwk(\r\n            cachedKeyPair.publicKey\r\n        );\r\n        const publicKeyJwkString = getSortedObjectString(publicKeyJwk);\r\n        // Base64URL encode public key thumbprint with keyId only: BASE64URL({ kid: \"FULL_PUBLIC_KEY_HASH\" })\r\n        const encodedKeyIdThumbprint = urlEncode(JSON.stringify({ kid: kid }));\r\n        // Generate header\r\n        const shrHeader = JoseHeader.getShrHeaderString({\r\n            ...shrOptions?.header,\r\n            alg: publicKeyJwk.alg,\r\n            kid: encodedKeyIdThumbprint,\r\n        });\r\n\r\n        const encodedShrHeader = urlEncode(shrHeader);\r\n\r\n        // Generate payload\r\n        payload.cnf = {\r\n            jwk: JSON.parse(publicKeyJwkString),\r\n        };\r\n        const encodedPayload = urlEncode(JSON.stringify(payload));\r\n\r\n        // Form token string\r\n        const tokenString = `${encodedShrHeader}.${encodedPayload}`;\r\n\r\n        // Sign token\r\n        const encoder = new TextEncoder();\r\n        const tokenBuffer = encoder.encode(tokenString);\r\n        const signatureBuffer = await BrowserCrypto.sign(\r\n            cachedKeyPair.privateKey,\r\n            tokenBuffer\r\n        );\r\n        const encodedSignature = urlEncodeArr(new Uint8Array(signatureBuffer));\r\n\r\n        const signedJwt = `${tokenString}.${encodedSignature}`;\r\n\r\n        if (signJwtMeasurement) {\r\n            signJwtMeasurement.end({\r\n                success: true,\r\n            });\r\n        }\r\n\r\n        return signedJwt;\r\n    }\r\n\r\n    /**\r\n     * Returns the SHA-256 hash of an input string\r\n     * @param plainText\r\n     */\r\n    async hashString(plainText: string): Promise<string> {\r\n        return BrowserCrypto.hashString(plainText);\r\n    }\r\n}\r\n\r\nfunction getSortedObjectString(obj: object): string {\r\n    return JSON.stringify(obj, Object.keys(obj).sort());\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Logger } from \"../logger/Logger.js\";\r\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient.js\";\r\n\r\n/**\r\n * Wraps a function with a performance measurement.\r\n * Usage: invoke(functionToCall, performanceClient, \"EventName\", \"correlationId\")(...argsToPassToFunction)\r\n * @param callback\r\n * @param eventName\r\n * @param logger\r\n * @param telemetryClient\r\n * @param correlationId\r\n * @returns\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport const invoke = <T extends Array<any>, U>(\r\n    callback: (...args: T) => U,\r\n    eventName: string,\r\n    logger: Logger,\r\n    telemetryClient?: IPerformanceClient,\r\n    correlationId?: string\r\n) => {\r\n    return (...args: T): U => {\r\n        logger.trace(`Executing function ${eventName}`);\r\n        const inProgressEvent = telemetryClient?.startMeasurement(\r\n            eventName,\r\n            correlationId\r\n        );\r\n        if (correlationId) {\r\n            // Track number of times this API is called in a single request\r\n            const eventCount = eventName + \"CallCount\";\r\n            telemetryClient?.incrementFields(\r\n                { [eventCount]: 1 },\r\n                correlationId\r\n            );\r\n        }\r\n        try {\r\n            const result = callback(...args);\r\n            inProgressEvent?.end({\r\n                success: true,\r\n            });\r\n            logger.trace(`Returning result from ${eventName}`);\r\n            return result;\r\n        } catch (e) {\r\n            logger.trace(`Error occurred in ${eventName}`);\r\n            try {\r\n                logger.trace(JSON.stringify(e));\r\n            } catch (e) {\r\n                logger.trace(\"Unable to print error message.\");\r\n            }\r\n            inProgressEvent?.end(\r\n                {\r\n                    success: false,\r\n                },\r\n                e\r\n            );\r\n            throw e;\r\n        }\r\n    };\r\n};\r\n\r\n/**\r\n * Wraps an async function with a performance measurement.\r\n * Usage: invokeAsync(functionToCall, performanceClient, \"EventName\", \"correlationId\")(...argsToPassToFunction)\r\n * @param callback\r\n * @param eventName\r\n * @param logger\r\n * @param telemetryClient\r\n * @param correlationId\r\n * @returns\r\n * @internal\r\n *\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport const invokeAsync = <T extends Array<any>, U>(\r\n    callback: (...args: T) => Promise<U>,\r\n    eventName: string,\r\n    logger: Logger,\r\n    telemetryClient?: IPerformanceClient,\r\n    correlationId?: string\r\n) => {\r\n    return (...args: T): Promise<U> => {\r\n        logger.trace(`Executing function ${eventName}`);\r\n        const inProgressEvent = telemetryClient?.startMeasurement(\r\n            eventName,\r\n            correlationId\r\n        );\r\n        if (correlationId) {\r\n            // Track number of times this API is called in a single request\r\n            const eventCount = eventName + \"CallCount\";\r\n            telemetryClient?.incrementFields(\r\n                { [eventCount]: 1 },\r\n                correlationId\r\n            );\r\n        }\r\n        telemetryClient?.setPreQueueTime(eventName, correlationId);\r\n        return callback(...args)\r\n            .then((response) => {\r\n                logger.trace(`Returning result from ${eventName}`);\r\n                inProgressEvent?.end({\r\n                    success: true,\r\n                });\r\n                return response;\r\n            })\r\n            .catch((e) => {\r\n                logger.trace(`Error occurred in ${eventName}`);\r\n                try {\r\n                    logger.trace(JSON.stringify(e));\r\n                } catch (e) {\r\n                    logger.trace(\"Unable to print error message.\");\r\n                }\r\n                inProgressEvent?.end(\r\n                    {\r\n                        success: false,\r\n                    },\r\n                    e\r\n                );\r\n                throw e;\r\n            });\r\n    };\r\n};\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { INetworkModule } from \"../network/INetworkModule.js\";\r\nimport { NetworkResponse } from \"../network/NetworkResponse.js\";\r\nimport { IMDSBadResponse } from \"../response/IMDSBadResponse.js\";\r\nimport {\r\n    Constants,\r\n    RegionDiscoverySources,\r\n    ResponseCodes,\r\n} from \"../utils/Constants.js\";\r\nimport { RegionDiscoveryMetadata } from \"./RegionDiscoveryMetadata.js\";\r\nimport { ImdsOptions } from \"./ImdsOptions.js\";\r\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient.js\";\r\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent.js\";\r\nimport { invokeAsync } from \"../utils/FunctionWrappers.js\";\r\nimport { Logger } from \"../logger/Logger.js\";\r\n\r\nexport class RegionDiscovery {\r\n    // Network interface to make requests with.\r\n    protected networkInterface: INetworkModule;\r\n    // Logger\r\n    private logger: Logger;\r\n    // Performance client\r\n    protected performanceClient: IPerformanceClient | undefined;\r\n    // CorrelationId\r\n    protected correlationId: string | undefined;\r\n    // Options for the IMDS endpoint request\r\n    protected static IMDS_OPTIONS: ImdsOptions = {\r\n        headers: {\r\n            Metadata: \"true\",\r\n        },\r\n    };\r\n\r\n    constructor(\r\n        networkInterface: INetworkModule,\r\n        logger: Logger,\r\n        performanceClient?: IPerformanceClient,\r\n        correlationId?: string\r\n    ) {\r\n        this.networkInterface = networkInterface;\r\n        this.logger = logger;\r\n        this.performanceClient = performanceClient;\r\n        this.correlationId = correlationId;\r\n    }\r\n\r\n    /**\r\n     * Detect the region from the application's environment.\r\n     *\r\n     * @returns Promise<string | null>\r\n     */\r\n    public async detectRegion(\r\n        environmentRegion: string | undefined,\r\n        regionDiscoveryMetadata: RegionDiscoveryMetadata\r\n    ): Promise<string | null> {\r\n        this.performanceClient?.addQueueMeasurement(\r\n            PerformanceEvents.RegionDiscoveryDetectRegion,\r\n            this.correlationId\r\n        );\r\n\r\n        // Initialize auto detected region with the region from the envrionment\r\n        let autodetectedRegionName = environmentRegion;\r\n\r\n        // Check if a region was detected from the environment, if not, attempt to get the region from IMDS\r\n        if (!autodetectedRegionName) {\r\n            const options = RegionDiscovery.IMDS_OPTIONS;\r\n\r\n            try {\r\n                const localIMDSVersionResponse = await invokeAsync(\r\n                    this.getRegionFromIMDS.bind(this),\r\n                    PerformanceEvents.RegionDiscoveryGetRegionFromIMDS,\r\n                    this.logger,\r\n                    this.performanceClient,\r\n                    this.correlationId\r\n                )(Constants.IMDS_VERSION, options);\r\n                if (\r\n                    localIMDSVersionResponse.status ===\r\n                    ResponseCodes.httpSuccess\r\n                ) {\r\n                    autodetectedRegionName = localIMDSVersionResponse.body;\r\n                    regionDiscoveryMetadata.region_source =\r\n                        RegionDiscoverySources.IMDS;\r\n                }\r\n\r\n                // If the response using the local IMDS version failed, try to fetch the current version of IMDS and retry.\r\n                if (\r\n                    localIMDSVersionResponse.status ===\r\n                    ResponseCodes.httpBadRequest\r\n                ) {\r\n                    const currentIMDSVersion = await invokeAsync(\r\n                        this.getCurrentVersion.bind(this),\r\n                        PerformanceEvents.RegionDiscoveryGetCurrentVersion,\r\n                        this.logger,\r\n                        this.performanceClient,\r\n                        this.correlationId\r\n                    )(options);\r\n                    if (!currentIMDSVersion) {\r\n                        regionDiscoveryMetadata.region_source =\r\n                            RegionDiscoverySources.FAILED_AUTO_DETECTION;\r\n                        return null;\r\n                    }\r\n\r\n                    const currentIMDSVersionResponse = await invokeAsync(\r\n                        this.getRegionFromIMDS.bind(this),\r\n                        PerformanceEvents.RegionDiscoveryGetRegionFromIMDS,\r\n                        this.logger,\r\n                        this.performanceClient,\r\n                        this.correlationId\r\n                    )(currentIMDSVersion, options);\r\n                    if (\r\n                        currentIMDSVersionResponse.status ===\r\n                        ResponseCodes.httpSuccess\r\n                    ) {\r\n                        autodetectedRegionName =\r\n                            currentIMDSVersionResponse.body;\r\n                        regionDiscoveryMetadata.region_source =\r\n                            RegionDiscoverySources.IMDS;\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                regionDiscoveryMetadata.region_source =\r\n                    RegionDiscoverySources.FAILED_AUTO_DETECTION;\r\n                return null;\r\n            }\r\n        } else {\r\n            regionDiscoveryMetadata.region_source =\r\n                RegionDiscoverySources.ENVIRONMENT_VARIABLE;\r\n        }\r\n\r\n        // If no region was auto detected from the environment or from the IMDS endpoint, mark the attempt as a FAILED_AUTO_DETECTION\r\n        if (!autodetectedRegionName) {\r\n            regionDiscoveryMetadata.region_source =\r\n                RegionDiscoverySources.FAILED_AUTO_DETECTION;\r\n        }\r\n\r\n        return autodetectedRegionName || null;\r\n    }\r\n\r\n    /**\r\n     * Make the call to the IMDS endpoint\r\n     *\r\n     * @param imdsEndpointUrl\r\n     * @returns Promise<NetworkResponse<string>>\r\n     */\r\n    private async getRegionFromIMDS(\r\n        version: string,\r\n        options: ImdsOptions\r\n    ): Promise<NetworkResponse<string>> {\r\n        this.performanceClient?.addQueueMeasurement(\r\n            PerformanceEvents.RegionDiscoveryGetRegionFromIMDS,\r\n            this.correlationId\r\n        );\r\n        return this.networkInterface.sendGetRequestAsync<string>(\r\n            `${Constants.IMDS_ENDPOINT}?api-version=${version}&format=text`,\r\n            options,\r\n            Constants.IMDS_TIMEOUT\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Get the most recent version of the IMDS endpoint available\r\n     *\r\n     * @returns Promise<string | null>\r\n     */\r\n    private async getCurrentVersion(\r\n        options: ImdsOptions\r\n    ): Promise<string | null> {\r\n        this.performanceClient?.addQueueMeasurement(\r\n            PerformanceEvents.RegionDiscoveryGetCurrentVersion,\r\n            this.correlationId\r\n        );\r\n        try {\r\n            const response =\r\n                await this.networkInterface.sendGetRequestAsync<IMDSBadResponse>(\r\n                    `${Constants.IMDS_ENDPOINT}?format=json`,\r\n                    options\r\n                );\r\n\r\n            // When IMDS endpoint is called without the api version query param, bad request response comes back with latest version.\r\n            if (\r\n                response.status === ResponseCodes.httpBadRequest &&\r\n                response.body &&\r\n                response.body[\"newest-versions\"] &&\r\n                response.body[\"newest-versions\"].length > 0\r\n            ) {\r\n                return response.body[\"newest-versions\"][0];\r\n            }\r\n\r\n            return null;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AuthorityType } from \"./AuthorityType.js\";\r\nimport {\r\n    isOpenIdConfigResponse,\r\n    OpenIdConfigResponse,\r\n} from \"./OpenIdConfigResponse.js\";\r\nimport { UrlString } from \"../url/UrlString.js\";\r\nimport { IUri } from \"../url/IUri.js\";\r\nimport {\r\n    createClientAuthError,\r\n    ClientAuthErrorCodes,\r\n} from \"../error/ClientAuthError.js\";\r\nimport { INetworkModule } from \"../network/INetworkModule.js\";\r\nimport {\r\n    AADAuthorityConstants,\r\n    AuthorityMetadataSource,\r\n    Constants,\r\n    RegionDiscoveryOutcomes,\r\n} from \"../utils/Constants.js\";\r\nimport {\r\n    EndpointMetadata,\r\n    getCloudDiscoveryMetadataFromHardcodedValues,\r\n    getCloudDiscoveryMetadataFromNetworkResponse,\r\n    InstanceDiscoveryMetadataAliases,\r\n} from \"./AuthorityMetadata.js\";\r\nimport {\r\n    createClientConfigurationError,\r\n    ClientConfigurationErrorCodes,\r\n} from \"../error/ClientConfigurationError.js\";\r\nimport { ProtocolMode } from \"./ProtocolMode.js\";\r\nimport { ICacheManager } from \"../cache/interface/ICacheManager.js\";\r\nimport { AuthorityMetadataEntity } from \"../cache/entities/AuthorityMetadataEntity.js\";\r\nimport {\r\n    AuthorityOptions,\r\n    AzureCloudInstance,\r\n    StaticAuthorityOptions,\r\n} from \"./AuthorityOptions.js\";\r\nimport {\r\n    CloudInstanceDiscoveryResponse,\r\n    isCloudInstanceDiscoveryResponse,\r\n} from \"./CloudInstanceDiscoveryResponse.js\";\r\nimport {\r\n    CloudInstanceDiscoveryErrorResponse,\r\n    isCloudInstanceDiscoveryErrorResponse,\r\n} from \"./CloudInstanceDiscoveryErrorResponse.js\";\r\nimport { CloudDiscoveryMetadata } from \"./CloudDiscoveryMetadata.js\";\r\nimport { RegionDiscovery } from \"./RegionDiscovery.js\";\r\nimport { RegionDiscoveryMetadata } from \"./RegionDiscoveryMetadata.js\";\r\nimport { ImdsOptions } from \"./ImdsOptions.js\";\r\nimport { AzureCloudOptions } from \"../config/ClientConfiguration.js\";\r\nimport { Logger } from \"../logger/Logger.js\";\r\nimport { AuthError } from \"../error/AuthError.js\";\r\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient.js\";\r\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent.js\";\r\nimport { invokeAsync } from \"../utils/FunctionWrappers.js\";\r\nimport * as CacheHelpers from \"../cache/utils/CacheHelpers.js\";\r\n\r\n/**\r\n * The authority class validates the authority URIs used by the user, and retrieves the OpenID Configuration Data from the\r\n * endpoint. It will store the pertinent config data in this object for use during token calls.\r\n * @internal\r\n */\r\nexport class Authority {\r\n    // Canonical authority url string\r\n    private _canonicalAuthority: UrlString;\r\n    // Canonicaly authority url components\r\n    private _canonicalAuthorityUrlComponents: IUri | null;\r\n    // Network interface to make requests with.\r\n    protected networkInterface: INetworkModule;\r\n    // Cache Manager to cache network responses\r\n    protected cacheManager: ICacheManager;\r\n    // Protocol mode to construct endpoints\r\n    private authorityOptions: AuthorityOptions;\r\n    // Authority metadata\r\n    private metadata: AuthorityMetadataEntity;\r\n    // Region discovery service\r\n    private regionDiscovery: RegionDiscovery;\r\n    // Region discovery metadata\r\n    public regionDiscoveryMetadata: RegionDiscoveryMetadata;\r\n    // Logger object\r\n    private logger: Logger;\r\n    // Performance client\r\n    protected performanceClient: IPerformanceClient | undefined;\r\n    // Correlation Id\r\n    protected correlationId: string;\r\n    // Indicates if the authority is fake, for the purpose of a Managed Identity Application\r\n    private managedIdentity: boolean;\r\n    // Reserved tenant domain names that will not be replaced with tenant id\r\n    private static reservedTenantDomains: Set<string> = new Set([\r\n        \"{tenant}\",\r\n        \"{tenantid}\",\r\n        AADAuthorityConstants.COMMON,\r\n        AADAuthorityConstants.CONSUMERS,\r\n        AADAuthorityConstants.ORGANIZATIONS,\r\n    ]);\r\n\r\n    constructor(\r\n        authority: string,\r\n        networkInterface: INetworkModule,\r\n        cacheManager: ICacheManager,\r\n        authorityOptions: AuthorityOptions,\r\n        logger: Logger,\r\n        correlationId: string,\r\n        performanceClient?: IPerformanceClient,\r\n        managedIdentity?: boolean\r\n    ) {\r\n        this.canonicalAuthority = authority;\r\n        this._canonicalAuthority.validateAsUri();\r\n        this.networkInterface = networkInterface;\r\n        this.cacheManager = cacheManager;\r\n        this.authorityOptions = authorityOptions;\r\n        this.regionDiscoveryMetadata = {\r\n            region_used: undefined,\r\n            region_source: undefined,\r\n            region_outcome: undefined,\r\n        };\r\n        this.logger = logger;\r\n        this.performanceClient = performanceClient;\r\n        this.correlationId = correlationId;\r\n        this.managedIdentity = managedIdentity || false;\r\n        this.regionDiscovery = new RegionDiscovery(\r\n            networkInterface,\r\n            this.logger,\r\n            this.performanceClient,\r\n            this.correlationId\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Get {@link AuthorityType}\r\n     * @param authorityUri {@link IUri}\r\n     * @private\r\n     */\r\n    private getAuthorityType(authorityUri: IUri): AuthorityType {\r\n        // CIAM auth url pattern is being standardized as: <tenant>.ciamlogin.com\r\n        if (authorityUri.HostNameAndPort.endsWith(Constants.CIAM_AUTH_URL)) {\r\n            return AuthorityType.Ciam;\r\n        }\r\n\r\n        const pathSegments = authorityUri.PathSegments;\r\n        if (pathSegments.length) {\r\n            switch (pathSegments[0].toLowerCase()) {\r\n                case Constants.ADFS:\r\n                    return AuthorityType.Adfs;\r\n                case Constants.DSTS:\r\n                    return AuthorityType.Dsts;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        return AuthorityType.Default;\r\n    }\r\n\r\n    // See above for AuthorityType\r\n    public get authorityType(): AuthorityType {\r\n        return this.getAuthorityType(this.canonicalAuthorityUrlComponents);\r\n    }\r\n\r\n    /**\r\n     * ProtocolMode enum representing the way endpoints are constructed.\r\n     */\r\n    public get protocolMode(): ProtocolMode {\r\n        return this.authorityOptions.protocolMode;\r\n    }\r\n\r\n    /**\r\n     * Returns authorityOptions which can be used to reinstantiate a new authority instance\r\n     */\r\n    public get options(): AuthorityOptions {\r\n        return this.authorityOptions;\r\n    }\r\n\r\n    /**\r\n     * A URL that is the authority set by the developer\r\n     */\r\n    public get canonicalAuthority(): string {\r\n        return this._canonicalAuthority.urlString;\r\n    }\r\n\r\n    /**\r\n     * Sets canonical authority.\r\n     */\r\n    public set canonicalAuthority(url: string) {\r\n        this._canonicalAuthority = new UrlString(url);\r\n        this._canonicalAuthority.validateAsUri();\r\n        this._canonicalAuthorityUrlComponents = null;\r\n    }\r\n\r\n    /**\r\n     * Get authority components.\r\n     */\r\n    public get canonicalAuthorityUrlComponents(): IUri {\r\n        if (!this._canonicalAuthorityUrlComponents) {\r\n            this._canonicalAuthorityUrlComponents =\r\n                this._canonicalAuthority.getUrlComponents();\r\n        }\r\n\r\n        return this._canonicalAuthorityUrlComponents;\r\n    }\r\n\r\n    /**\r\n     * Get hostname and port i.e. login.microsoftonline.com\r\n     */\r\n    public get hostnameAndPort(): string {\r\n        return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase();\r\n    }\r\n\r\n    /**\r\n     * Get tenant for authority.\r\n     */\r\n    public get tenant(): string {\r\n        return this.canonicalAuthorityUrlComponents.PathSegments[0];\r\n    }\r\n\r\n    /**\r\n     * OAuth /authorize endpoint for requests\r\n     */\r\n    public get authorizationEndpoint(): string {\r\n        if (this.discoveryComplete()) {\r\n            return this.replacePath(this.metadata.authorization_endpoint);\r\n        } else {\r\n            throw createClientAuthError(\r\n                ClientAuthErrorCodes.endpointResolutionError\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * OAuth /token endpoint for requests\r\n     */\r\n    public get tokenEndpoint(): string {\r\n        if (this.discoveryComplete()) {\r\n            return this.replacePath(this.metadata.token_endpoint);\r\n        } else {\r\n            throw createClientAuthError(\r\n                ClientAuthErrorCodes.endpointResolutionError\r\n            );\r\n        }\r\n    }\r\n\r\n    public get deviceCodeEndpoint(): string {\r\n        if (this.discoveryComplete()) {\r\n            return this.replacePath(\r\n                this.metadata.token_endpoint.replace(\"/token\", \"/devicecode\")\r\n            );\r\n        } else {\r\n            throw createClientAuthError(\r\n                ClientAuthErrorCodes.endpointResolutionError\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * OAuth logout endpoint for requests\r\n     */\r\n    public get endSessionEndpoint(): string {\r\n        if (this.discoveryComplete()) {\r\n            // ROPC policies may not have end_session_endpoint set\r\n            if (!this.metadata.end_session_endpoint) {\r\n                throw createClientAuthError(\r\n                    ClientAuthErrorCodes.endSessionEndpointNotSupported\r\n                );\r\n            }\r\n            return this.replacePath(this.metadata.end_session_endpoint);\r\n        } else {\r\n            throw createClientAuthError(\r\n                ClientAuthErrorCodes.endpointResolutionError\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * OAuth issuer for requests\r\n     */\r\n    public get selfSignedJwtAudience(): string {\r\n        if (this.discoveryComplete()) {\r\n            return this.replacePath(this.metadata.issuer);\r\n        } else {\r\n            throw createClientAuthError(\r\n                ClientAuthErrorCodes.endpointResolutionError\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Jwks_uri for token signing keys\r\n     */\r\n    public get jwksUri(): string {\r\n        if (this.discoveryComplete()) {\r\n            return this.replacePath(this.metadata.jwks_uri);\r\n        } else {\r\n            throw createClientAuthError(\r\n                ClientAuthErrorCodes.endpointResolutionError\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a flag indicating that tenant name can be replaced in authority {@link IUri}\r\n     * @param authorityUri {@link IUri}\r\n     * @private\r\n     */\r\n    private canReplaceTenant(authorityUri: IUri): boolean {\r\n        return (\r\n            authorityUri.PathSegments.length === 1 &&\r\n            !Authority.reservedTenantDomains.has(\r\n                authorityUri.PathSegments[0]\r\n            ) &&\r\n            this.getAuthorityType(authorityUri) === AuthorityType.Default &&\r\n            this.protocolMode === ProtocolMode.AAD\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Replaces tenant in url path with current tenant. Defaults to common.\r\n     * @param urlString\r\n     */\r\n    private replaceTenant(urlString: string): string {\r\n        return urlString.replace(/{tenant}|{tenantid}/g, this.tenant);\r\n    }\r\n\r\n    /**\r\n     * Replaces path such as tenant or policy with the current tenant or policy.\r\n     * @param urlString\r\n     */\r\n    private replacePath(urlString: string): string {\r\n        let endpoint = urlString;\r\n        const cachedAuthorityUrl = new UrlString(\r\n            this.metadata.canonical_authority\r\n        );\r\n        const cachedAuthorityUrlComponents =\r\n            cachedAuthorityUrl.getUrlComponents();\r\n        const cachedAuthorityParts = cachedAuthorityUrlComponents.PathSegments;\r\n        const currentAuthorityParts =\r\n            this.canonicalAuthorityUrlComponents.PathSegments;\r\n\r\n        currentAuthorityParts.forEach((currentPart, index) => {\r\n            let cachedPart = cachedAuthorityParts[index];\r\n            if (\r\n                index === 0 &&\r\n                this.canReplaceTenant(cachedAuthorityUrlComponents)\r\n            ) {\r\n                const tenantId = new UrlString(\r\n                    this.metadata.authorization_endpoint\r\n                ).getUrlComponents().PathSegments[0];\r\n                /**\r\n                 * Check if AAD canonical authority contains tenant domain name, for example \"testdomain.onmicrosoft.com\",\r\n                 * by comparing its first path segment to the corresponding authorization endpoint path segment, which is\r\n                 * always resolved with tenant id by OIDC.\r\n                 */\r\n                if (cachedPart !== tenantId) {\r\n                    this.logger.verbose(\r\n                        `Replacing tenant domain name ${cachedPart} with id ${tenantId}`\r\n                    );\r\n                    cachedPart = tenantId;\r\n                }\r\n            }\r\n            if (currentPart !== cachedPart) {\r\n                endpoint = endpoint.replace(\r\n                    `/${cachedPart}/`,\r\n                    `/${currentPart}/`\r\n                );\r\n            }\r\n        });\r\n\r\n        return this.replaceTenant(endpoint);\r\n    }\r\n\r\n    /**\r\n     * The default open id configuration endpoint for any canonical authority.\r\n     */\r\n    protected get defaultOpenIdConfigurationEndpoint(): string {\r\n        const canonicalAuthorityHost = this.hostnameAndPort;\r\n        if (\r\n            this.canonicalAuthority.endsWith(\"v2.0/\") ||\r\n            this.authorityType === AuthorityType.Adfs ||\r\n            (this.protocolMode !== ProtocolMode.AAD &&\r\n                !this.isAliasOfKnownMicrosoftAuthority(canonicalAuthorityHost))\r\n        ) {\r\n            return `${this.canonicalAuthority}.well-known/openid-configuration`;\r\n        }\r\n        return `${this.canonicalAuthority}v2.0/.well-known/openid-configuration`;\r\n    }\r\n\r\n    /**\r\n     * Boolean that returns whether or not tenant discovery has been completed.\r\n     */\r\n    discoveryComplete(): boolean {\r\n        return !!this.metadata;\r\n    }\r\n\r\n    /**\r\n     * Perform endpoint discovery to discover aliases, preferred_cache, preferred_network\r\n     * and the /authorize, /token and logout endpoints.\r\n     */\r\n    public async resolveEndpointsAsync(): Promise<void> {\r\n        this.performanceClient?.addQueueMeasurement(\r\n            PerformanceEvents.AuthorityResolveEndpointsAsync,\r\n            this.correlationId\r\n        );\r\n\r\n        const metadataEntity = this.getCurrentMetadataEntity();\r\n\r\n        const cloudDiscoverySource = await invokeAsync(\r\n            this.updateCloudDiscoveryMetadata.bind(this),\r\n            PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata,\r\n            this.logger,\r\n            this.performanceClient,\r\n            this.correlationId\r\n        )(metadataEntity);\r\n        this.canonicalAuthority = this.canonicalAuthority.replace(\r\n            this.hostnameAndPort,\r\n            metadataEntity.preferred_network\r\n        );\r\n        const endpointSource = await invokeAsync(\r\n            this.updateEndpointMetadata.bind(this),\r\n            PerformanceEvents.AuthorityUpdateEndpointMetadata,\r\n            this.logger,\r\n            this.performanceClient,\r\n            this.correlationId\r\n        )(metadataEntity);\r\n        this.updateCachedMetadata(metadataEntity, cloudDiscoverySource, {\r\n            source: endpointSource,\r\n        });\r\n        this.performanceClient?.addFields(\r\n            {\r\n                cloudDiscoverySource: cloudDiscoverySource,\r\n                authorityEndpointSource: endpointSource,\r\n            },\r\n            this.correlationId\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns metadata entity from cache if it exists, otherwiser returns a new metadata entity built\r\n     * from the configured canonical authority\r\n     * @returns\r\n     */\r\n    private getCurrentMetadataEntity(): AuthorityMetadataEntity {\r\n        let metadataEntity: AuthorityMetadataEntity | null =\r\n            this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);\r\n\r\n        if (!metadataEntity) {\r\n            metadataEntity = {\r\n                aliases: [],\r\n                preferred_cache: this.hostnameAndPort,\r\n                preferred_network: this.hostnameAndPort,\r\n                canonical_authority: this.canonicalAuthority,\r\n                authorization_endpoint: \"\",\r\n                token_endpoint: \"\",\r\n                end_session_endpoint: \"\",\r\n                issuer: \"\",\r\n                aliasesFromNetwork: false,\r\n                endpointsFromNetwork: false,\r\n                expiresAt: CacheHelpers.generateAuthorityMetadataExpiresAt(),\r\n                jwks_uri: \"\",\r\n            };\r\n        }\r\n        return metadataEntity;\r\n    }\r\n\r\n    /**\r\n     * Updates cached metadata based on metadata source and sets the instance's metadata\r\n     * property to the same value\r\n     * @param metadataEntity\r\n     * @param cloudDiscoverySource\r\n     * @param endpointMetadataResult\r\n     */\r\n    private updateCachedMetadata(\r\n        metadataEntity: AuthorityMetadataEntity,\r\n        cloudDiscoverySource: AuthorityMetadataSource | null,\r\n        endpointMetadataResult: {\r\n            source: AuthorityMetadataSource;\r\n            metadata?: OpenIdConfigResponse;\r\n        } | null\r\n    ): void {\r\n        if (\r\n            cloudDiscoverySource !== AuthorityMetadataSource.CACHE &&\r\n            endpointMetadataResult?.source !== AuthorityMetadataSource.CACHE\r\n        ) {\r\n            // Reset the expiration time unless both values came from a successful cache lookup\r\n            metadataEntity.expiresAt =\r\n                CacheHelpers.generateAuthorityMetadataExpiresAt();\r\n            metadataEntity.canonical_authority = this.canonicalAuthority;\r\n        }\r\n\r\n        const cacheKey = this.cacheManager.generateAuthorityMetadataCacheKey(\r\n            metadataEntity.preferred_cache\r\n        );\r\n        this.cacheManager.setAuthorityMetadata(cacheKey, metadataEntity);\r\n        this.metadata = metadataEntity;\r\n    }\r\n\r\n    /**\r\n     * Update AuthorityMetadataEntity with new endpoints and return where the information came from\r\n     * @param metadataEntity\r\n     */\r\n    private async updateEndpointMetadata(\r\n        metadataEntity: AuthorityMetadataEntity\r\n    ): Promise<AuthorityMetadataSource> {\r\n        this.performanceClient?.addQueueMeasurement(\r\n            PerformanceEvents.AuthorityUpdateEndpointMetadata,\r\n            this.correlationId\r\n        );\r\n\r\n        const localMetadata =\r\n            this.updateEndpointMetadataFromLocalSources(metadataEntity);\r\n\r\n        // Further update may be required for hardcoded metadata if regional metadata is preferred\r\n        if (localMetadata) {\r\n            if (\r\n                localMetadata.source ===\r\n                AuthorityMetadataSource.HARDCODED_VALUES\r\n            ) {\r\n                // If the user prefers to use an azure region replace the global endpoints with regional information.\r\n                if (\r\n                    this.authorityOptions.azureRegionConfiguration?.azureRegion\r\n                ) {\r\n                    if (localMetadata.metadata) {\r\n                        const hardcodedMetadata = await invokeAsync(\r\n                            this.updateMetadataWithRegionalInformation.bind(\r\n                                this\r\n                            ),\r\n                            PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation,\r\n                            this.logger,\r\n                            this.performanceClient,\r\n                            this.correlationId\r\n                        )(localMetadata.metadata);\r\n                        CacheHelpers.updateAuthorityEndpointMetadata(\r\n                            metadataEntity,\r\n                            hardcodedMetadata,\r\n                            false\r\n                        );\r\n                        metadataEntity.canonical_authority =\r\n                            this.canonicalAuthority;\r\n                    }\r\n                }\r\n            }\r\n            return localMetadata.source;\r\n        }\r\n\r\n        // Get metadata from network if local sources aren't available\r\n        let metadata = await invokeAsync(\r\n            this.getEndpointMetadataFromNetwork.bind(this),\r\n            PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork,\r\n            this.logger,\r\n            this.performanceClient,\r\n            this.correlationId\r\n        )();\r\n        if (metadata) {\r\n            // If the user prefers to use an azure region replace the global endpoints with regional information.\r\n            if (this.authorityOptions.azureRegionConfiguration?.azureRegion) {\r\n                metadata = await invokeAsync(\r\n                    this.updateMetadataWithRegionalInformation.bind(this),\r\n                    PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation,\r\n                    this.logger,\r\n                    this.performanceClient,\r\n                    this.correlationId\r\n                )(metadata);\r\n            }\r\n\r\n            CacheHelpers.updateAuthorityEndpointMetadata(\r\n                metadataEntity,\r\n                metadata,\r\n                true\r\n            );\r\n            return AuthorityMetadataSource.NETWORK;\r\n        } else {\r\n            // Metadata could not be obtained from the config, cache, network or hardcoded values\r\n            throw createClientAuthError(\r\n                ClientAuthErrorCodes.openIdConfigError,\r\n                this.defaultOpenIdConfigurationEndpoint\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates endpoint metadata from local sources and returns where the information was retrieved from and the metadata config\r\n     * response if the source is hardcoded metadata\r\n     * @param metadataEntity\r\n     * @returns\r\n     */\r\n    private updateEndpointMetadataFromLocalSources(\r\n        metadataEntity: AuthorityMetadataEntity\r\n    ): {\r\n        source: AuthorityMetadataSource;\r\n        metadata?: OpenIdConfigResponse;\r\n    } | null {\r\n        this.logger.verbose(\r\n            \"Attempting to get endpoint metadata from authority configuration\"\r\n        );\r\n        const configMetadata = this.getEndpointMetadataFromConfig();\r\n        if (configMetadata) {\r\n            this.logger.verbose(\r\n                \"Found endpoint metadata in authority configuration\"\r\n            );\r\n            CacheHelpers.updateAuthorityEndpointMetadata(\r\n                metadataEntity,\r\n                configMetadata,\r\n                false\r\n            );\r\n            return {\r\n                source: AuthorityMetadataSource.CONFIG,\r\n            };\r\n        }\r\n\r\n        this.logger.verbose(\r\n            \"Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values.\"\r\n        );\r\n\r\n        // skipAuthorityMetadataCache is used to bypass hardcoded authority metadata and force a network metadata cache lookup and network metadata request if no cached response is available.\r\n        if (this.authorityOptions.skipAuthorityMetadataCache) {\r\n            this.logger.verbose(\r\n                \"Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.\"\r\n            );\r\n        } else {\r\n            const hardcodedMetadata =\r\n                this.getEndpointMetadataFromHardcodedValues();\r\n            if (hardcodedMetadata) {\r\n                CacheHelpers.updateAuthorityEndpointMetadata(\r\n                    metadataEntity,\r\n                    hardcodedMetadata,\r\n                    false\r\n                );\r\n                return {\r\n                    source: AuthorityMetadataSource.HARDCODED_VALUES,\r\n                    metadata: hardcodedMetadata,\r\n                };\r\n            } else {\r\n                this.logger.verbose(\r\n                    \"Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.\"\r\n                );\r\n            }\r\n        }\r\n\r\n        // Check cached metadata entity expiration status\r\n        const metadataEntityExpired =\r\n            CacheHelpers.isAuthorityMetadataExpired(metadataEntity);\r\n        if (\r\n            this.isAuthoritySameType(metadataEntity) &&\r\n            metadataEntity.endpointsFromNetwork &&\r\n            !metadataEntityExpired\r\n        ) {\r\n            // No need to update\r\n            this.logger.verbose(\"Found endpoint metadata in the cache.\");\r\n            return { source: AuthorityMetadataSource.CACHE };\r\n        } else if (metadataEntityExpired) {\r\n            this.logger.verbose(\"The metadata entity is expired.\");\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Compares the number of url components after the domain to determine if the cached\r\n     * authority metadata can be used for the requested authority. Protects against same domain different\r\n     * authority such as login.microsoftonline.com/tenant and login.microsoftonline.com/tfp/tenant/policy\r\n     * @param metadataEntity\r\n     */\r\n    private isAuthoritySameType(\r\n        metadataEntity: AuthorityMetadataEntity\r\n    ): boolean {\r\n        const cachedAuthorityUrl = new UrlString(\r\n            metadataEntity.canonical_authority\r\n        );\r\n        const cachedParts = cachedAuthorityUrl.getUrlComponents().PathSegments;\r\n\r\n        return (\r\n            cachedParts.length ===\r\n            this.canonicalAuthorityUrlComponents.PathSegments.length\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Parse authorityMetadata config option\r\n     */\r\n    private getEndpointMetadataFromConfig(): OpenIdConfigResponse | null {\r\n        if (this.authorityOptions.authorityMetadata) {\r\n            try {\r\n                return JSON.parse(\r\n                    this.authorityOptions.authorityMetadata\r\n                ) as OpenIdConfigResponse;\r\n            } catch (e) {\r\n                throw createClientConfigurationError(\r\n                    ClientConfigurationErrorCodes.invalidAuthorityMetadata\r\n                );\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Gets OAuth endpoints from the given OpenID configuration endpoint.\r\n     *\r\n     * @param hasHardcodedMetadata boolean\r\n     */\r\n    private async getEndpointMetadataFromNetwork(): Promise<OpenIdConfigResponse | null> {\r\n        this.performanceClient?.addQueueMeasurement(\r\n            PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork,\r\n            this.correlationId\r\n        );\r\n\r\n        const options: ImdsOptions = {};\r\n\r\n        /*\r\n         * TODO: Add a timeout if the authority exists in our library's\r\n         * hardcoded list of metadata\r\n         */\r\n\r\n        const openIdConfigurationEndpoint =\r\n            this.defaultOpenIdConfigurationEndpoint;\r\n        this.logger.verbose(\r\n            `Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${openIdConfigurationEndpoint}`\r\n        );\r\n\r\n        try {\r\n            const response =\r\n                await this.networkInterface.sendGetRequestAsync<OpenIdConfigResponse>(\r\n                    openIdConfigurationEndpoint,\r\n                    options\r\n                );\r\n            const isValidResponse = isOpenIdConfigResponse(response.body);\r\n            if (isValidResponse) {\r\n                return response.body;\r\n            } else {\r\n                this.logger.verbose(\r\n                    `Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration`\r\n                );\r\n                return null;\r\n            }\r\n        } catch (e) {\r\n            this.logger.verbose(\r\n                `Authority.getEndpointMetadataFromNetwork: ${e}`\r\n            );\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get OAuth endpoints for common authorities.\r\n     */\r\n    private getEndpointMetadataFromHardcodedValues(): OpenIdConfigResponse | null {\r\n        if (this.hostnameAndPort in EndpointMetadata) {\r\n            return EndpointMetadata[this.hostnameAndPort];\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Update the retrieved metadata with regional information.\r\n     * User selected Azure region will be used if configured.\r\n     */\r\n    private async updateMetadataWithRegionalInformation(\r\n        metadata: OpenIdConfigResponse\r\n    ): Promise<OpenIdConfigResponse> {\r\n        this.performanceClient?.addQueueMeasurement(\r\n            PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation,\r\n            this.correlationId\r\n        );\r\n\r\n        const userConfiguredAzureRegion =\r\n            this.authorityOptions.azureRegionConfiguration?.azureRegion;\r\n\r\n        if (userConfiguredAzureRegion) {\r\n            if (\r\n                userConfiguredAzureRegion !==\r\n                Constants.AZURE_REGION_AUTO_DISCOVER_FLAG\r\n            ) {\r\n                this.regionDiscoveryMetadata.region_outcome =\r\n                    RegionDiscoveryOutcomes.CONFIGURED_NO_AUTO_DETECTION;\r\n                this.regionDiscoveryMetadata.region_used =\r\n                    userConfiguredAzureRegion;\r\n                return Authority.replaceWithRegionalInformation(\r\n                    metadata,\r\n                    userConfiguredAzureRegion\r\n                );\r\n            }\r\n\r\n            const autodetectedRegionName = await invokeAsync(\r\n                this.regionDiscovery.detectRegion.bind(this.regionDiscovery),\r\n                PerformanceEvents.RegionDiscoveryDetectRegion,\r\n                this.logger,\r\n                this.performanceClient,\r\n                this.correlationId\r\n            )(\r\n                this.authorityOptions.azureRegionConfiguration\r\n                    ?.environmentRegion,\r\n                this.regionDiscoveryMetadata\r\n            );\r\n\r\n            if (autodetectedRegionName) {\r\n                this.regionDiscoveryMetadata.region_outcome =\r\n                    RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_SUCCESSFUL;\r\n                this.regionDiscoveryMetadata.region_used =\r\n                    autodetectedRegionName;\r\n                return Authority.replaceWithRegionalInformation(\r\n                    metadata,\r\n                    autodetectedRegionName\r\n                );\r\n            }\r\n\r\n            this.regionDiscoveryMetadata.region_outcome =\r\n                RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_FAILED;\r\n        }\r\n\r\n        return metadata;\r\n    }\r\n\r\n    /**\r\n     * Updates the AuthorityMetadataEntity with new aliases, preferred_network and preferred_cache\r\n     * and returns where the information was retrieved from\r\n     * @param metadataEntity\r\n     * @returns AuthorityMetadataSource\r\n     */\r\n    private async updateCloudDiscoveryMetadata(\r\n        metadataEntity: AuthorityMetadataEntity\r\n    ): Promise<AuthorityMetadataSource> {\r\n        this.performanceClient?.addQueueMeasurement(\r\n            PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata,\r\n            this.correlationId\r\n        );\r\n        const localMetadataSource =\r\n            this.updateCloudDiscoveryMetadataFromLocalSources(metadataEntity);\r\n        if (localMetadataSource) {\r\n            return localMetadataSource;\r\n        }\r\n\r\n        // Fallback to network as metadata source\r\n        const metadata = await invokeAsync(\r\n            this.getCloudDiscoveryMetadataFromNetwork.bind(this),\r\n            PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork,\r\n            this.logger,\r\n            this.performanceClient,\r\n            this.correlationId\r\n        )();\r\n\r\n        if (metadata) {\r\n            CacheHelpers.updateCloudDiscoveryMetadata(\r\n                metadataEntity,\r\n                metadata,\r\n                true\r\n            );\r\n            return AuthorityMetadataSource.NETWORK;\r\n        }\r\n\r\n        // Metadata could not be obtained from the config, cache, network or hardcoded values\r\n        throw createClientConfigurationError(\r\n            ClientConfigurationErrorCodes.untrustedAuthority\r\n        );\r\n    }\r\n\r\n    private updateCloudDiscoveryMetadataFromLocalSources(\r\n        metadataEntity: AuthorityMetadataEntity\r\n    ): AuthorityMetadataSource | null {\r\n        this.logger.verbose(\r\n            \"Attempting to get cloud discovery metadata  from authority configuration\"\r\n        );\r\n        this.logger.verbosePii(\r\n            `Known Authorities: ${\r\n                this.authorityOptions.knownAuthorities ||\r\n                Constants.NOT_APPLICABLE\r\n            }`\r\n        );\r\n        this.logger.verbosePii(\r\n            `Authority Metadata: ${\r\n                this.authorityOptions.authorityMetadata ||\r\n                Constants.NOT_APPLICABLE\r\n            }`\r\n        );\r\n        this.logger.verbosePii(\r\n            `Canonical Authority: ${\r\n                metadataEntity.canonical_authority || Constants.NOT_APPLICABLE\r\n            }`\r\n        );\r\n        const metadata = this.getCloudDiscoveryMetadataFromConfig();\r\n        if (metadata) {\r\n            this.logger.verbose(\r\n                \"Found cloud discovery metadata in authority configuration\"\r\n            );\r\n            CacheHelpers.updateCloudDiscoveryMetadata(\r\n                metadataEntity,\r\n                metadata,\r\n                false\r\n            );\r\n            return AuthorityMetadataSource.CONFIG;\r\n        }\r\n\r\n        // If the cached metadata came from config but that config was not passed to this instance, we must go to hardcoded values\r\n        this.logger.verbose(\r\n            \"Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values.\"\r\n        );\r\n\r\n        if (this.options.skipAuthorityMetadataCache) {\r\n            this.logger.verbose(\r\n                \"Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.\"\r\n            );\r\n        } else {\r\n            const hardcodedMetadata =\r\n                getCloudDiscoveryMetadataFromHardcodedValues(\r\n                    this.hostnameAndPort\r\n                );\r\n            if (hardcodedMetadata) {\r\n                this.logger.verbose(\r\n                    \"Found cloud discovery metadata from hardcoded values.\"\r\n                );\r\n                CacheHelpers.updateCloudDiscoveryMetadata(\r\n                    metadataEntity,\r\n                    hardcodedMetadata,\r\n                    false\r\n                );\r\n                return AuthorityMetadataSource.HARDCODED_VALUES;\r\n            }\r\n\r\n            this.logger.verbose(\r\n                \"Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.\"\r\n            );\r\n        }\r\n\r\n        const metadataEntityExpired =\r\n            CacheHelpers.isAuthorityMetadataExpired(metadataEntity);\r\n        if (\r\n            this.isAuthoritySameType(metadataEntity) &&\r\n            metadataEntity.aliasesFromNetwork &&\r\n            !metadataEntityExpired\r\n        ) {\r\n            this.logger.verbose(\"Found cloud discovery metadata in the cache.\");\r\n            // No need to update\r\n            return AuthorityMetadataSource.CACHE;\r\n        } else if (metadataEntityExpired) {\r\n            this.logger.verbose(\"The metadata entity is expired.\");\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Parse cloudDiscoveryMetadata config or check knownAuthorities\r\n     */\r\n    private getCloudDiscoveryMetadataFromConfig(): CloudDiscoveryMetadata | null {\r\n        // CIAM does not support cloud discovery metadata\r\n        if (this.authorityType === AuthorityType.Ciam) {\r\n            this.logger.verbose(\r\n                \"CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host.\"\r\n            );\r\n            return Authority.createCloudDiscoveryMetadataFromHost(\r\n                this.hostnameAndPort\r\n            );\r\n        }\r\n\r\n        // Check if network response was provided in config\r\n        if (this.authorityOptions.cloudDiscoveryMetadata) {\r\n            this.logger.verbose(\r\n                \"The cloud discovery metadata has been provided as a network response, in the config.\"\r\n            );\r\n            try {\r\n                this.logger.verbose(\r\n                    \"Attempting to parse the cloud discovery metadata.\"\r\n                );\r\n                const parsedResponse = JSON.parse(\r\n                    this.authorityOptions.cloudDiscoveryMetadata\r\n                ) as CloudInstanceDiscoveryResponse;\r\n                const metadata = getCloudDiscoveryMetadataFromNetworkResponse(\r\n                    parsedResponse.metadata,\r\n                    this.hostnameAndPort\r\n                );\r\n                this.logger.verbose(\"Parsed the cloud discovery metadata.\");\r\n                if (metadata) {\r\n                    this.logger.verbose(\r\n                        \"There is returnable metadata attached to the parsed cloud discovery metadata.\"\r\n                    );\r\n                    return metadata;\r\n                } else {\r\n                    this.logger.verbose(\r\n                        \"There is no metadata attached to the parsed cloud discovery metadata.\"\r\n                    );\r\n                }\r\n            } catch (e) {\r\n                this.logger.verbose(\r\n                    \"Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error.\"\r\n                );\r\n                throw createClientConfigurationError(\r\n                    ClientConfigurationErrorCodes.invalidCloudDiscoveryMetadata\r\n                );\r\n            }\r\n        }\r\n\r\n        // If cloudDiscoveryMetadata is empty or does not contain the host, check knownAuthorities\r\n        if (this.isInKnownAuthorities()) {\r\n            this.logger.verbose(\r\n                \"The host is included in knownAuthorities. Creating new cloud discovery metadata from the host.\"\r\n            );\r\n            return Authority.createCloudDiscoveryMetadataFromHost(\r\n                this.hostnameAndPort\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Called to get metadata from network if CloudDiscoveryMetadata was not populated by config\r\n     *\r\n     * @param hasHardcodedMetadata boolean\r\n     */\r\n    private async getCloudDiscoveryMetadataFromNetwork(): Promise<CloudDiscoveryMetadata | null> {\r\n        this.performanceClient?.addQueueMeasurement(\r\n            PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork,\r\n            this.correlationId\r\n        );\r\n        const instanceDiscoveryEndpoint = `${Constants.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`;\r\n        const options: ImdsOptions = {};\r\n\r\n        /*\r\n         * TODO: Add a timeout if the authority exists in our library's\r\n         * hardcoded list of metadata\r\n         */\r\n\r\n        let match = null;\r\n        try {\r\n            const response = await this.networkInterface.sendGetRequestAsync<\r\n                | CloudInstanceDiscoveryResponse\r\n                | CloudInstanceDiscoveryErrorResponse\r\n            >(instanceDiscoveryEndpoint, options);\r\n            let typedResponseBody:\r\n                | CloudInstanceDiscoveryResponse\r\n                | CloudInstanceDiscoveryErrorResponse;\r\n            let metadata: Array<CloudDiscoveryMetadata>;\r\n            if (isCloudInstanceDiscoveryResponse(response.body)) {\r\n                typedResponseBody =\r\n                    response.body as CloudInstanceDiscoveryResponse;\r\n                metadata = typedResponseBody.metadata;\r\n\r\n                this.logger.verbosePii(\r\n                    `tenant_discovery_endpoint is: ${typedResponseBody.tenant_discovery_endpoint}`\r\n                );\r\n            } else if (isCloudInstanceDiscoveryErrorResponse(response.body)) {\r\n                this.logger.warning(\r\n                    `A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${response.status}`\r\n                );\r\n\r\n                typedResponseBody =\r\n                    response.body as CloudInstanceDiscoveryErrorResponse;\r\n                if (typedResponseBody.error === Constants.INVALID_INSTANCE) {\r\n                    this.logger.error(\r\n                        \"The CloudInstanceDiscoveryErrorResponse error is invalid_instance.\"\r\n                    );\r\n                    return null;\r\n                }\r\n\r\n                this.logger.warning(\r\n                    `The CloudInstanceDiscoveryErrorResponse error is ${typedResponseBody.error}`\r\n                );\r\n                this.logger.warning(\r\n                    `The CloudInstanceDiscoveryErrorResponse error description is ${typedResponseBody.error_description}`\r\n                );\r\n\r\n                this.logger.warning(\r\n                    \"Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []\"\r\n                );\r\n                metadata = [];\r\n            } else {\r\n                this.logger.error(\r\n                    \"AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse\"\r\n                );\r\n                return null;\r\n            }\r\n\r\n            this.logger.verbose(\r\n                \"Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request.\"\r\n            );\r\n            match = getCloudDiscoveryMetadataFromNetworkResponse(\r\n                metadata,\r\n                this.hostnameAndPort\r\n            );\r\n        } catch (error) {\r\n            if (error instanceof AuthError) {\r\n                this.logger.error(\r\n                    `There was a network error while attempting to get the cloud discovery instance metadata.\\nError: ${error.errorCode}\\nError Description: ${error.errorMessage}`\r\n                );\r\n            } else {\r\n                const typedError = error as Error;\r\n                this.logger.error(\r\n                    `A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.\\nError: ${typedError.name}\\nError Description: ${typedError.message}`\r\n                );\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        // Custom Domain scenario, host is trusted because Instance Discovery call succeeded\r\n        if (!match) {\r\n            this.logger.warning(\r\n                \"The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request.\"\r\n            );\r\n            this.logger.verbose(\r\n                \"Creating custom Authority for custom domain scenario.\"\r\n            );\r\n\r\n            match = Authority.createCloudDiscoveryMetadataFromHost(\r\n                this.hostnameAndPort\r\n            );\r\n        }\r\n        return match;\r\n    }\r\n\r\n    /**\r\n     * Helper function to determine if this host is included in the knownAuthorities config option\r\n     */\r\n    private isInKnownAuthorities(): boolean {\r\n        const matches = this.authorityOptions.knownAuthorities.filter(\r\n            (authority) => {\r\n                return (\r\n                    authority &&\r\n                    UrlString.getDomainFromUrl(authority).toLowerCase() ===\r\n                        this.hostnameAndPort\r\n                );\r\n            }\r\n        );\r\n        return matches.length > 0;\r\n    }\r\n\r\n    /**\r\n     * helper function to populate the authority based on azureCloudOptions\r\n     * @param authorityString\r\n     * @param azureCloudOptions\r\n     */\r\n    static generateAuthority(\r\n        authorityString: string,\r\n        azureCloudOptions?: AzureCloudOptions\r\n    ): string {\r\n        let authorityAzureCloudInstance;\r\n\r\n        if (\r\n            azureCloudOptions &&\r\n            azureCloudOptions.azureCloudInstance !== AzureCloudInstance.None\r\n        ) {\r\n            const tenant = azureCloudOptions.tenant\r\n                ? azureCloudOptions.tenant\r\n                : Constants.DEFAULT_COMMON_TENANT;\r\n            authorityAzureCloudInstance = `${azureCloudOptions.azureCloudInstance}/${tenant}/`;\r\n        }\r\n\r\n        return authorityAzureCloudInstance\r\n            ? authorityAzureCloudInstance\r\n            : authorityString;\r\n    }\r\n\r\n    /**\r\n     * Creates cloud discovery metadata object from a given host\r\n     * @param host\r\n     */\r\n    static createCloudDiscoveryMetadataFromHost(\r\n        host: string\r\n    ): CloudDiscoveryMetadata {\r\n        return {\r\n            preferred_network: host,\r\n            preferred_cache: host,\r\n            aliases: [host],\r\n        };\r\n    }\r\n\r\n    /**\r\n     * helper function to generate environment from authority object\r\n     */\r\n    getPreferredCache(): string {\r\n        if (this.managedIdentity) {\r\n            return Constants.DEFAULT_AUTHORITY_HOST;\r\n        } else if (this.discoveryComplete()) {\r\n            return this.metadata.preferred_cache;\r\n        } else {\r\n            throw createClientAuthError(\r\n                ClientAuthErrorCodes.endpointResolutionError\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the provided host is an alias of this authority instance\r\n     * @param host\r\n     */\r\n    isAlias(host: string): boolean {\r\n        return this.metadata.aliases.indexOf(host) > -1;\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the provided host is an alias of a known Microsoft authority for purposes of endpoint discovery\r\n     * @param host\r\n     */\r\n    isAliasOfKnownMicrosoftAuthority(host: string): boolean {\r\n        return InstanceDiscoveryMetadataAliases.has(host);\r\n    }\r\n\r\n    /**\r\n     * Checks whether the provided host is that of a public cloud authority\r\n     *\r\n     * @param authority string\r\n     * @returns bool\r\n     */\r\n    static isPublicCloudAuthority(host: string): boolean {\r\n        return Constants.KNOWN_PUBLIC_CLOUDS.indexOf(host) >= 0;\r\n    }\r\n\r\n    /**\r\n     * Rebuild the authority string with the region\r\n     *\r\n     * @param host string\r\n     * @param region string\r\n     */\r\n    static buildRegionalAuthorityString(\r\n        host: string,\r\n        region: string,\r\n        queryString?: string\r\n    ): string {\r\n        // Create and validate a Url string object with the initial authority string\r\n        const authorityUrlInstance = new UrlString(host);\r\n        authorityUrlInstance.validateAsUri();\r\n\r\n        const authorityUrlParts = authorityUrlInstance.getUrlComponents();\r\n\r\n        let hostNameAndPort = `${region}.${authorityUrlParts.HostNameAndPort}`;\r\n\r\n        if (this.isPublicCloudAuthority(authorityUrlParts.HostNameAndPort)) {\r\n            hostNameAndPort = `${region}.${Constants.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`;\r\n        }\r\n\r\n        // Include the query string portion of the url\r\n        const url = UrlString.constructAuthorityUriFromObject({\r\n            ...authorityUrlInstance.getUrlComponents(),\r\n            HostNameAndPort: hostNameAndPort,\r\n        }).urlString;\r\n\r\n        // Add the query string if a query string was provided\r\n        if (queryString) return `${url}?${queryString}`;\r\n\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * Replace the endpoints in the metadata object with their regional equivalents.\r\n     *\r\n     * @param metadata OpenIdConfigResponse\r\n     * @param azureRegion string\r\n     */\r\n    static replaceWithRegionalInformation(\r\n        metadata: OpenIdConfigResponse,\r\n        azureRegion: string\r\n    ): OpenIdConfigResponse {\r\n        const regionalMetadata = { ...metadata };\r\n        regionalMetadata.authorization_endpoint =\r\n            Authority.buildRegionalAuthorityString(\r\n                regionalMetadata.authorization_endpoint,\r\n                azureRegion\r\n            );\r\n\r\n        regionalMetadata.token_endpoint =\r\n            Authority.buildRegionalAuthorityString(\r\n                regionalMetadata.token_endpoint,\r\n                azureRegion\r\n            );\r\n\r\n        if (regionalMetadata.end_session_endpoint) {\r\n            regionalMetadata.end_session_endpoint =\r\n                Authority.buildRegionalAuthorityString(\r\n                    regionalMetadata.end_session_endpoint,\r\n                    azureRegion\r\n                );\r\n        }\r\n\r\n        return regionalMetadata;\r\n    }\r\n\r\n    /**\r\n     * Transform CIAM_AUTHORIY as per the below rules:\r\n     * If no path segments found and it is a CIAM authority (hostname ends with .ciamlogin.com), then transform it\r\n     *\r\n     * NOTE: The transformation path should go away once STS supports CIAM with the format: `tenantIdorDomain.ciamlogin.com`\r\n     * `ciamlogin.com` can also change in the future and we should accommodate the same\r\n     *\r\n     * @param authority\r\n     */\r\n    static transformCIAMAuthority(authority: string): string {\r\n        let ciamAuthority = authority;\r\n        const authorityUrl = new UrlString(authority);\r\n        const authorityUrlComponents = authorityUrl.getUrlComponents();\r\n\r\n        // check if transformation is needed\r\n        if (\r\n            authorityUrlComponents.PathSegments.length === 0 &&\r\n            authorityUrlComponents.HostNameAndPort.endsWith(\r\n                Constants.CIAM_AUTH_URL\r\n            )\r\n        ) {\r\n            const tenantIdOrDomain =\r\n                authorityUrlComponents.HostNameAndPort.split(\".\")[0];\r\n            ciamAuthority = `${ciamAuthority}${tenantIdOrDomain}${Constants.AAD_TENANT_DOMAIN_SUFFIX}`;\r\n        }\r\n\r\n        return ciamAuthority;\r\n    }\r\n}\r\n\r\n/**\r\n * Extract tenantId from authority\r\n */\r\nexport function getTenantFromAuthorityString(\r\n    authority: string\r\n): string | undefined {\r\n    const authorityUrl = new UrlString(authority);\r\n    const authorityUrlComponents = authorityUrl.getUrlComponents();\r\n    /**\r\n     * For credential matching purposes, tenantId is the last path segment of the authority URL:\r\n     *  AAD Authority - domain/tenantId -> Credentials are cached with realm = tenantId\r\n     *  B2C Authority - domain/{tenantId}?/.../policy -> Credentials are cached with realm = policy\r\n     *  tenantId is downcased because B2C policies can have mixed case but tfp claim is downcased\r\n     *\r\n     * Note that we may not have any path segments in certain OIDC scenarios.\r\n     */\r\n    const tenantId =\r\n        authorityUrlComponents.PathSegments.slice(-1)[0]?.toLowerCase();\r\n\r\n    switch (tenantId) {\r\n        case AADAuthorityConstants.COMMON:\r\n        case AADAuthorityConstants.ORGANIZATIONS:\r\n        case AADAuthorityConstants.CONSUMERS:\r\n            return undefined;\r\n        default:\r\n            return tenantId;\r\n    }\r\n}\r\n\r\nexport function formatAuthorityUri(authorityUri: string): string {\r\n    return authorityUri.endsWith(Constants.FORWARD_SLASH)\r\n        ? authorityUri\r\n        : `${authorityUri}${Constants.FORWARD_SLASH}`;\r\n}\r\n\r\nexport function buildStaticAuthorityOptions(\r\n    authOptions: Partial<AuthorityOptions>\r\n): StaticAuthorityOptions {\r\n    const rawCloudDiscoveryMetadata = authOptions.cloudDiscoveryMetadata;\r\n    let cloudDiscoveryMetadata: CloudInstanceDiscoveryResponse | undefined =\r\n        undefined;\r\n    if (rawCloudDiscoveryMetadata) {\r\n        try {\r\n            cloudDiscoveryMetadata = JSON.parse(rawCloudDiscoveryMetadata);\r\n        } catch (e) {\r\n            throw createClientConfigurationError(\r\n                ClientConfigurationErrorCodes.invalidCloudDiscoveryMetadata\r\n            );\r\n        }\r\n    }\r\n    return {\r\n        canonicalAuthority: authOptions.authority\r\n            ? formatAuthorityUri(authOptions.authority)\r\n            : undefined,\r\n        knownAuthorities: authOptions.knownAuthorities,\r\n        cloudDiscoveryMetadata: cloudDiscoveryMetadata,\r\n    };\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n/**\r\n * Tenant Discovery Response which contains the relevant OAuth endpoints and data needed for authentication and authorization.\r\n */\r\nexport type OpenIdConfigResponse = {\r\n    authorization_endpoint: string;\r\n    token_endpoint: string;\r\n    end_session_endpoint?: string;\r\n    issuer: string;\r\n    jwks_uri: string;\r\n};\r\n\r\nexport function isOpenIdConfigResponse(response: object): boolean {\r\n    return (\r\n        response.hasOwnProperty(\"authorization_endpoint\") &&\r\n        response.hasOwnProperty(\"token_endpoint\") &&\r\n        response.hasOwnProperty(\"issuer\") &&\r\n        response.hasOwnProperty(\"jwks_uri\")\r\n    );\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { CloudDiscoveryMetadata } from \"./CloudDiscoveryMetadata.js\";\r\n\r\n/**\r\n * The OpenID Configuration Endpoint Response type. Used by the authority class to get relevant OAuth endpoints.\r\n */\r\nexport type CloudInstanceDiscoveryResponse = {\r\n    tenant_discovery_endpoint: string;\r\n    metadata: Array<CloudDiscoveryMetadata>;\r\n};\r\n\r\nexport function isCloudInstanceDiscoveryResponse(response: object): boolean {\r\n    return (\r\n        response.hasOwnProperty(\"tenant_discovery_endpoint\") &&\r\n        response.hasOwnProperty(\"metadata\")\r\n    );\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n/**\r\n * The OpenID Configuration Endpoint Response type. Used by the authority class to get relevant OAuth endpoints.\r\n */\r\nexport type CloudInstanceDiscoveryErrorResponse = {\r\n    error: String;\r\n    error_description: String;\r\n    error_codes?: Array<Number>;\r\n    timestamp?: String;\r\n    trace_id?: String;\r\n    correlation_id?: String;\r\n    error_uri?: String;\r\n};\r\n\r\nexport function isCloudInstanceDiscoveryErrorResponse(\r\n    response: object\r\n): boolean {\r\n    return (\r\n        response.hasOwnProperty(\"error\") &&\r\n        response.hasOwnProperty(\"error_description\")\r\n    );\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n// Codes defined by MSAL\r\nexport const noTokensFound = \"no_tokens_found\";\r\nexport const nativeAccountUnavailable = \"native_account_unavailable\";\r\nexport const refreshTokenExpired = \"refresh_token_expired\";\r\n\r\n// Codes potentially returned by server\r\nexport const interactionRequired = \"interaction_required\";\r\nexport const consentRequired = \"consent_required\";\r\nexport const loginRequired = \"login_required\";\r\nexport const badToken = \"bad_token\";\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Constants } from \"../utils/Constants.js\";\r\nimport { AuthError } from \"./AuthError.js\";\r\nimport * as InteractionRequiredAuthErrorCodes from \"./InteractionRequiredAuthErrorCodes.js\";\r\nexport { InteractionRequiredAuthErrorCodes };\r\n\r\n/**\r\n * InteractionRequiredServerErrorMessage contains string constants used by error codes and messages returned by the server indicating interaction is required\r\n */\r\nexport const InteractionRequiredServerErrorMessage = [\r\n    InteractionRequiredAuthErrorCodes.interactionRequired,\r\n    InteractionRequiredAuthErrorCodes.consentRequired,\r\n    InteractionRequiredAuthErrorCodes.loginRequired,\r\n    InteractionRequiredAuthErrorCodes.badToken,\r\n];\r\n\r\nexport const InteractionRequiredAuthSubErrorMessage = [\r\n    \"message_only\",\r\n    \"additional_action\",\r\n    \"basic_action\",\r\n    \"user_password_expired\",\r\n    \"consent_required\",\r\n    \"bad_token\",\r\n];\r\n\r\nconst InteractionRequiredAuthErrorMessages = {\r\n    [InteractionRequiredAuthErrorCodes.noTokensFound]:\r\n        \"No refresh token found in the cache. Please sign-in.\",\r\n    [InteractionRequiredAuthErrorCodes.nativeAccountUnavailable]:\r\n        \"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.\",\r\n    [InteractionRequiredAuthErrorCodes.refreshTokenExpired]:\r\n        \"Refresh token has expired.\",\r\n    [InteractionRequiredAuthErrorCodes.badToken]:\r\n        \"Identity provider returned bad_token due to an expired or invalid refresh token. Please invoke an interactive API to resolve.\",\r\n};\r\n\r\n/**\r\n * Interaction required errors defined by the SDK\r\n * @deprecated Use InteractionRequiredAuthErrorCodes instead\r\n */\r\nexport const InteractionRequiredAuthErrorMessage = {\r\n    noTokensFoundError: {\r\n        code: InteractionRequiredAuthErrorCodes.noTokensFound,\r\n        desc: InteractionRequiredAuthErrorMessages[\r\n            InteractionRequiredAuthErrorCodes.noTokensFound\r\n        ],\r\n    },\r\n    native_account_unavailable: {\r\n        code: InteractionRequiredAuthErrorCodes.nativeAccountUnavailable,\r\n        desc: InteractionRequiredAuthErrorMessages[\r\n            InteractionRequiredAuthErrorCodes.nativeAccountUnavailable\r\n        ],\r\n    },\r\n    bad_token: {\r\n        code: InteractionRequiredAuthErrorCodes.badToken,\r\n        desc: InteractionRequiredAuthErrorMessages[\r\n            InteractionRequiredAuthErrorCodes.badToken\r\n        ],\r\n    },\r\n};\r\n\r\n/**\r\n * Error thrown when user interaction is required.\r\n */\r\nexport class InteractionRequiredAuthError extends AuthError {\r\n    /**\r\n     * The time the error occured at\r\n     */\r\n    timestamp: string;\r\n\r\n    /**\r\n     * TraceId associated with the error\r\n     */\r\n    traceId: string;\r\n\r\n    /**\r\n     * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-common/docs/claims-challenge.md\r\n     *\r\n     * A string with extra claims needed for the token request to succeed\r\n     * web site: redirect the user to the authorization page and set the extra claims\r\n     * web api: include the claims in the WWW-Authenticate header that are sent back to the client so that it knows to request a token with the extra claims\r\n     * desktop application or browser context: include the claims when acquiring the token interactively\r\n     * app to app context (client_credentials): include the claims in the AcquireTokenByClientCredential request\r\n     */\r\n    claims: string;\r\n\r\n    /**\r\n     * Server error number;\r\n     */\r\n    readonly errorNo?: string;\r\n\r\n    constructor(\r\n        errorCode?: string,\r\n        errorMessage?: string,\r\n        subError?: string,\r\n        timestamp?: string,\r\n        traceId?: string,\r\n        correlationId?: string,\r\n        claims?: string,\r\n        errorNo?: string\r\n    ) {\r\n        super(errorCode, errorMessage, subError);\r\n        Object.setPrototypeOf(this, InteractionRequiredAuthError.prototype);\r\n\r\n        this.timestamp = timestamp || Constants.EMPTY_STRING;\r\n        this.traceId = traceId || Constants.EMPTY_STRING;\r\n        this.correlationId = correlationId || Constants.EMPTY_STRING;\r\n        this.claims = claims || Constants.EMPTY_STRING;\r\n        this.name = \"InteractionRequiredAuthError\";\r\n        this.errorNo = errorNo;\r\n    }\r\n}\r\n\r\n/**\r\n * Helper function used to determine if an error thrown by the server requires interaction to resolve\r\n * @param errorCode\r\n * @param errorString\r\n * @param subError\r\n */\r\nexport function isInteractionRequiredError(\r\n    errorCode?: string,\r\n    errorString?: string,\r\n    subError?: string\r\n): boolean {\r\n    const isInteractionRequiredErrorCode =\r\n        !!errorCode &&\r\n        InteractionRequiredServerErrorMessage.indexOf(errorCode) > -1;\r\n    const isInteractionRequiredSubError =\r\n        !!subError &&\r\n        InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\r\n    const isInteractionRequiredErrorDesc =\r\n        !!errorString &&\r\n        InteractionRequiredServerErrorMessage.some((irErrorCode) => {\r\n            return errorString.indexOf(irErrorCode) > -1;\r\n        });\r\n\r\n    return (\r\n        isInteractionRequiredErrorCode ||\r\n        isInteractionRequiredErrorDesc ||\r\n        isInteractionRequiredSubError\r\n    );\r\n}\r\n\r\n/**\r\n * Creates an InteractionRequiredAuthError\r\n */\r\nexport function createInteractionRequiredAuthError(\r\n    errorCode: string\r\n): InteractionRequiredAuthError {\r\n    return new InteractionRequiredAuthError(\r\n        errorCode,\r\n        InteractionRequiredAuthErrorMessages[errorCode]\r\n    );\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Constants } from \"./Constants.js\";\r\nimport { ICrypto } from \"../crypto/ICrypto.js\";\r\nimport {\r\n    ClientAuthErrorCodes,\r\n    createClientAuthError,\r\n} from \"../error/ClientAuthError.js\";\r\n\r\n/**\r\n * Type which defines the object that is stringified, encoded and sent in the state value.\r\n * Contains the following:\r\n * - id - unique identifier for this request\r\n * - ts - timestamp for the time the request was made. Used to ensure that token expiration is not calculated incorrectly.\r\n * - platformState - string value sent from the platform.\r\n */\r\nexport type LibraryStateObject = {\r\n    id: string;\r\n    meta?: Record<string, string>;\r\n};\r\n\r\n/**\r\n * Type which defines the stringified and encoded object sent to the service in the authorize request.\r\n */\r\nexport type RequestStateObject = {\r\n    userRequestState: string;\r\n    libraryState: LibraryStateObject;\r\n};\r\n\r\n/**\r\n * Class which provides helpers for OAuth 2.0 protocol specific values\r\n */\r\nexport class ProtocolUtils {\r\n    /**\r\n     * Appends user state with random guid, or returns random guid.\r\n     * @param userState\r\n     * @param randomGuid\r\n     */\r\n    static setRequestState(\r\n        cryptoObj: ICrypto,\r\n        userState?: string,\r\n        meta?: Record<string, string>\r\n    ): string {\r\n        const libraryState = ProtocolUtils.generateLibraryState(\r\n            cryptoObj,\r\n            meta\r\n        );\r\n        return userState\r\n            ? `${libraryState}${Constants.RESOURCE_DELIM}${userState}`\r\n            : libraryState;\r\n    }\r\n\r\n    /**\r\n     * Generates the state value used by the common library.\r\n     * @param randomGuid\r\n     * @param cryptoObj\r\n     */\r\n    static generateLibraryState(\r\n        cryptoObj: ICrypto,\r\n        meta?: Record<string, string>\r\n    ): string {\r\n        if (!cryptoObj) {\r\n            throw createClientAuthError(ClientAuthErrorCodes.noCryptoObject);\r\n        }\r\n\r\n        // Create a state object containing a unique id and the timestamp of the request creation\r\n        const stateObj: LibraryStateObject = {\r\n            id: cryptoObj.createNewGuid(),\r\n        };\r\n\r\n        if (meta) {\r\n            stateObj.meta = meta;\r\n        }\r\n\r\n        const stateString = JSON.stringify(stateObj);\r\n\r\n        return cryptoObj.base64Encode(stateString);\r\n    }\r\n\r\n    /**\r\n     * Parses the state into the RequestStateObject, which contains the LibraryState info and the state passed by the user.\r\n     * @param state\r\n     * @param cryptoObj\r\n     */\r\n    static parseRequestState(\r\n        cryptoObj: ICrypto,\r\n        state: string\r\n    ): RequestStateObject {\r\n        if (!cryptoObj) {\r\n            throw createClientAuthError(ClientAuthErrorCodes.noCryptoObject);\r\n        }\r\n\r\n        if (!state) {\r\n            throw createClientAuthError(ClientAuthErrorCodes.invalidState);\r\n        }\r\n\r\n        try {\r\n            // Split the state between library state and user passed state and decode them separately\r\n            const splitState = state.split(Constants.RESOURCE_DELIM);\r\n            const libraryState = splitState[0];\r\n            const userState =\r\n                splitState.length > 1\r\n                    ? splitState.slice(1).join(Constants.RESOURCE_DELIM)\r\n                    : Constants.EMPTY_STRING;\r\n            const libraryStateString = cryptoObj.base64Decode(libraryState);\r\n            const libraryStateObj = JSON.parse(\r\n                libraryStateString\r\n            ) as LibraryStateObject;\r\n            return {\r\n                userRequestState: userState || Constants.EMPTY_STRING,\r\n                libraryState: libraryStateObj,\r\n            };\r\n        } catch (e) {\r\n            throw createClientAuthError(ClientAuthErrorCodes.invalidState);\r\n        }\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nexport type CcsCredential = {\r\n    credential: string;\r\n    type: CcsCredentialType;\r\n};\r\n\r\nexport const CcsCredentialType = {\r\n    HOME_ACCOUNT_ID: \"home_account_id\",\r\n    UPN: \"UPN\",\r\n} as const;\r\nexport type CcsCredentialType =\r\n    (typeof CcsCredentialType)[keyof typeof CcsCredentialType];\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    ClientAuthErrorCodes,\r\n    createClientAuthError,\r\n} from \"@azure/msal-common/browser\";\r\nimport { IWindowStorage } from \"./IWindowStorage.js\";\r\n\r\n// Cookie life calculation (hours * minutes * seconds * ms)\r\nconst COOKIE_LIFE_MULTIPLIER = 24 * 60 * 60 * 1000;\r\n\r\nexport const SameSiteOptions = {\r\n    Lax: \"Lax\",\r\n    None: \"None\",\r\n} as const;\r\nexport type SameSiteOptions =\r\n    (typeof SameSiteOptions)[keyof typeof SameSiteOptions];\r\n\r\nexport class CookieStorage implements IWindowStorage<string> {\r\n    initialize(): Promise<void> {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    getItem(key: string): string | null {\r\n        const name = `${encodeURIComponent(key)}`;\r\n        const cookieList = document.cookie.split(\";\");\r\n        for (let i = 0; i < cookieList.length; i++) {\r\n            const cookie = cookieList[i];\r\n            const [key, ...rest] = decodeURIComponent(cookie).trim().split(\"=\");\r\n            const value = rest.join(\"=\");\r\n\r\n            if (key === name) {\r\n                return value;\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    getUserData(): string | null {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    }\r\n\r\n    setItem(\r\n        key: string,\r\n        value: string,\r\n        cookieLifeDays?: number,\r\n        secure: boolean = true,\r\n        sameSite: SameSiteOptions = SameSiteOptions.Lax\r\n    ): void {\r\n        let cookieStr = `${encodeURIComponent(key)}=${encodeURIComponent(\r\n            value\r\n        )};path=/;SameSite=${sameSite};`;\r\n\r\n        if (cookieLifeDays) {\r\n            const expireTime = getCookieExpirationTime(cookieLifeDays);\r\n            cookieStr += `expires=${expireTime};`;\r\n        }\r\n\r\n        if (secure || sameSite === SameSiteOptions.None) {\r\n            // SameSite None requires Secure flag\r\n            cookieStr += \"Secure;\";\r\n        }\r\n\r\n        document.cookie = cookieStr;\r\n    }\r\n\r\n    async setUserData(): Promise<void> {\r\n        return Promise.reject(\r\n            createClientAuthError(ClientAuthErrorCodes.methodNotImplemented)\r\n        );\r\n    }\r\n\r\n    removeItem(key: string): void {\r\n        // Setting expiration to -1 removes it\r\n        this.setItem(key, \"\", -1);\r\n    }\r\n\r\n    getKeys(): string[] {\r\n        const cookieList = document.cookie.split(\";\");\r\n        const keys: Array<string> = [];\r\n        cookieList.forEach((cookie) => {\r\n            const cookieParts = decodeURIComponent(cookie).trim().split(\"=\");\r\n            keys.push(cookieParts[0]);\r\n        });\r\n\r\n        return keys;\r\n    }\r\n\r\n    containsKey(key: string): boolean {\r\n        return this.getKeys().includes(key);\r\n    }\r\n}\r\n\r\n/**\r\n * Get cookie expiration time\r\n * @param cookieLifeDays\r\n */\r\nexport function getCookieExpirationTime(cookieLifeDays: number): string {\r\n    const today = new Date();\r\n    const expr = new Date(\r\n        today.getTime() + cookieLifeDays * COOKIE_LIFE_MULTIPLIER\r\n    );\r\n    return expr.toUTCString();\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { TokenKeys } from \"@azure/msal-common/browser\";\r\nimport { StaticCacheKeys } from \"../utils/BrowserConstants.js\";\r\nimport { IWindowStorage } from \"./IWindowStorage.js\";\r\n\r\n/**\r\n * Returns a list of cache keys for all known accounts\r\n * @param storage\r\n * @returns\r\n */\r\nexport function getAccountKeys(storage: IWindowStorage<string>): Array<string> {\r\n    const accountKeys = storage.getItem(StaticCacheKeys.ACCOUNT_KEYS);\r\n    if (accountKeys) {\r\n        return JSON.parse(accountKeys);\r\n    }\r\n\r\n    return [];\r\n}\r\n\r\n/**\r\n * Returns a list of cache keys for all known tokens\r\n * @param clientId\r\n * @param storage\r\n * @returns\r\n */\r\nexport function getTokenKeys(\r\n    clientId: string,\r\n    storage: IWindowStorage<string>\r\n): TokenKeys {\r\n    const item = storage.getItem(`${StaticCacheKeys.TOKEN_KEYS}.${clientId}`);\r\n    if (item) {\r\n        const tokenKeys = JSON.parse(item);\r\n        if (\r\n            tokenKeys &&\r\n            tokenKeys.hasOwnProperty(\"idToken\") &&\r\n            tokenKeys.hasOwnProperty(\"accessToken\") &&\r\n            tokenKeys.hasOwnProperty(\"refreshToken\")\r\n        ) {\r\n            return tokenKeys as TokenKeys;\r\n        }\r\n    }\r\n\r\n    return {\r\n        idToken: [],\r\n        accessToken: [],\r\n        refreshToken: [],\r\n    };\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    Constants,\r\n    TokenKeys,\r\n    IPerformanceClient,\r\n    invokeAsync,\r\n    PerformanceEvents,\r\n    Logger,\r\n    invoke,\r\n} from \"@azure/msal-common/browser\";\r\nimport {\r\n    createNewGuid,\r\n    decrypt,\r\n    encrypt,\r\n    generateBaseKey,\r\n    generateHKDF,\r\n} from \"../crypto/BrowserCrypto.js\";\r\nimport { base64DecToArr } from \"../encode/Base64Decode.js\";\r\nimport { urlEncodeArr } from \"../encode/Base64Encode.js\";\r\nimport {\r\n    BrowserAuthErrorCodes,\r\n    createBrowserAuthError,\r\n} from \"../error/BrowserAuthError.js\";\r\nimport {\r\n    BrowserConfigurationAuthErrorCodes,\r\n    createBrowserConfigurationAuthError,\r\n} from \"../error/BrowserConfigurationAuthError.js\";\r\nimport { CookieStorage, SameSiteOptions } from \"./CookieStorage.js\";\r\nimport { IWindowStorage } from \"./IWindowStorage.js\";\r\nimport { MemoryStorage } from \"./MemoryStorage.js\";\r\nimport { getAccountKeys, getTokenKeys } from \"./CacheHelpers.js\";\r\nimport { StaticCacheKeys } from \"../utils/BrowserConstants.js\";\r\n\r\nconst ENCRYPTION_KEY = \"msal.cache.encryption\";\r\nconst BROADCAST_CHANNEL_NAME = \"msal.broadcast.cache\";\r\n\r\ntype EncryptionCookie = {\r\n    id: string;\r\n    key: CryptoKey;\r\n};\r\n\r\ntype EncryptedData = {\r\n    id: string;\r\n    nonce: string;\r\n    data: string;\r\n};\r\n\r\nexport class LocalStorage implements IWindowStorage<string> {\r\n    private clientId: string;\r\n    private initialized: boolean;\r\n    private memoryStorage: MemoryStorage<string>;\r\n    private performanceClient: IPerformanceClient;\r\n    private logger: Logger;\r\n    private encryptionCookie?: EncryptionCookie;\r\n    private broadcast: BroadcastChannel;\r\n\r\n    constructor(\r\n        clientId: string,\r\n        logger: Logger,\r\n        performanceClient: IPerformanceClient\r\n    ) {\r\n        if (!window.localStorage) {\r\n            throw createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.storageNotSupported\r\n            );\r\n        }\r\n        this.memoryStorage = new MemoryStorage<string>();\r\n        this.initialized = false;\r\n        this.clientId = clientId;\r\n        this.logger = logger;\r\n        this.performanceClient = performanceClient;\r\n        this.broadcast = new BroadcastChannel(BROADCAST_CHANNEL_NAME);\r\n    }\r\n\r\n    async initialize(correlationId: string): Promise<void> {\r\n        this.initialized = true;\r\n\r\n        const cookies = new CookieStorage();\r\n        const cookieString = cookies.getItem(ENCRYPTION_KEY);\r\n        let parsedCookie = { key: \"\", id: \"\" };\r\n        if (cookieString) {\r\n            try {\r\n                parsedCookie = JSON.parse(cookieString);\r\n            } catch (e) {}\r\n        }\r\n        if (parsedCookie.key && parsedCookie.id) {\r\n            // Encryption key already exists, import\r\n            const baseKey = invoke(\r\n                base64DecToArr,\r\n                PerformanceEvents.Base64Decode,\r\n                this.logger,\r\n                this.performanceClient,\r\n                correlationId\r\n            )(parsedCookie.key);\r\n            this.encryptionCookie = {\r\n                id: parsedCookie.id,\r\n                key: await invokeAsync(\r\n                    generateHKDF,\r\n                    PerformanceEvents.GenerateHKDF,\r\n                    this.logger,\r\n                    this.performanceClient,\r\n                    correlationId\r\n                )(baseKey),\r\n            };\r\n            await invokeAsync(\r\n                this.importExistingCache.bind(this),\r\n                PerformanceEvents.ImportExistingCache,\r\n                this.logger,\r\n                this.performanceClient,\r\n                correlationId\r\n            )(correlationId);\r\n        } else {\r\n            // Encryption key doesn't exist or is invalid, generate a new one and clear existing cache\r\n            this.clear();\r\n            const id = createNewGuid();\r\n            const baseKey = await invokeAsync(\r\n                generateBaseKey,\r\n                PerformanceEvents.GenerateBaseKey,\r\n                this.logger,\r\n                this.performanceClient,\r\n                correlationId\r\n            )();\r\n            const keyStr = invoke(\r\n                urlEncodeArr,\r\n                PerformanceEvents.UrlEncodeArr,\r\n                this.logger,\r\n                this.performanceClient,\r\n                correlationId\r\n            )(new Uint8Array(baseKey));\r\n            this.encryptionCookie = {\r\n                id: id,\r\n                key: await invokeAsync(\r\n                    generateHKDF,\r\n                    PerformanceEvents.GenerateHKDF,\r\n                    this.logger,\r\n                    this.performanceClient,\r\n                    correlationId\r\n                )(baseKey),\r\n            };\r\n\r\n            const cookieData = {\r\n                id: id,\r\n                key: keyStr,\r\n            };\r\n\r\n            cookies.setItem(\r\n                ENCRYPTION_KEY,\r\n                JSON.stringify(cookieData),\r\n                0, // Expiration - 0 means cookie will be cleared at the end of the browser session\r\n                true, // Secure flag\r\n                SameSiteOptions.None // SameSite must be None to support iframed apps\r\n            );\r\n        }\r\n\r\n        // Register listener for cache updates in other tabs\r\n        this.broadcast.addEventListener(\"message\", this.updateCache.bind(this));\r\n    }\r\n\r\n    getItem(key: string): string | null {\r\n        return window.localStorage.getItem(key);\r\n    }\r\n\r\n    getUserData(key: string): string | null {\r\n        if (!this.initialized) {\r\n            throw createBrowserAuthError(\r\n                BrowserAuthErrorCodes.uninitializedPublicClientApplication\r\n            );\r\n        }\r\n        return this.memoryStorage.getItem(key);\r\n    }\r\n\r\n    setItem(key: string, value: string): void {\r\n        window.localStorage.setItem(key, value);\r\n    }\r\n\r\n    async setUserData(\r\n        key: string,\r\n        value: string,\r\n        correlationId: string\r\n    ): Promise<void> {\r\n        if (!this.initialized || !this.encryptionCookie) {\r\n            throw createBrowserAuthError(\r\n                BrowserAuthErrorCodes.uninitializedPublicClientApplication\r\n            );\r\n        }\r\n\r\n        const { data, nonce } = await invokeAsync(\r\n            encrypt,\r\n            PerformanceEvents.Encrypt,\r\n            this.logger,\r\n            this.performanceClient,\r\n            correlationId\r\n        )(this.encryptionCookie.key, value, this.getContext(key));\r\n        const encryptedData: EncryptedData = {\r\n            id: this.encryptionCookie.id,\r\n            nonce: nonce,\r\n            data: data,\r\n        };\r\n\r\n        this.memoryStorage.setItem(key, value);\r\n        this.setItem(key, JSON.stringify(encryptedData));\r\n\r\n        // Notify other frames to update their in-memory cache\r\n        this.broadcast.postMessage({\r\n            key: key,\r\n            value: value,\r\n            context: this.getContext(key),\r\n        });\r\n    }\r\n\r\n    removeItem(key: string): void {\r\n        if (this.memoryStorage.containsKey(key)) {\r\n            this.memoryStorage.removeItem(key);\r\n            this.broadcast.postMessage({\r\n                key: key,\r\n                value: null,\r\n                context: this.getContext(key),\r\n            });\r\n        }\r\n        window.localStorage.removeItem(key);\r\n    }\r\n\r\n    getKeys(): string[] {\r\n        return Object.keys(window.localStorage);\r\n    }\r\n\r\n    containsKey(key: string): boolean {\r\n        return window.localStorage.hasOwnProperty(key);\r\n    }\r\n\r\n    /**\r\n     * Removes all known MSAL keys from the cache\r\n     */\r\n    clear(): void {\r\n        // Removes all remaining MSAL cache items\r\n        this.memoryStorage.clear();\r\n\r\n        const accountKeys = getAccountKeys(this);\r\n        accountKeys.forEach((key) => this.removeItem(key));\r\n        const tokenKeys = getTokenKeys(this.clientId, this);\r\n        tokenKeys.idToken.forEach((key) => this.removeItem(key));\r\n        tokenKeys.accessToken.forEach((key) => this.removeItem(key));\r\n        tokenKeys.refreshToken.forEach((key) => this.removeItem(key));\r\n\r\n        // Clean up anything left\r\n        this.getKeys().forEach((cacheKey: string) => {\r\n            if (\r\n                cacheKey.startsWith(Constants.CACHE_PREFIX) ||\r\n                cacheKey.indexOf(this.clientId) !== -1\r\n            ) {\r\n                this.removeItem(cacheKey);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Helper to decrypt all known MSAL keys in localStorage and save them to inMemory storage\r\n     * @returns\r\n     */\r\n    private async importExistingCache(correlationId: string): Promise<void> {\r\n        if (!this.encryptionCookie) {\r\n            return;\r\n        }\r\n\r\n        let accountKeys = getAccountKeys(this);\r\n        accountKeys = await this.importArray(accountKeys, correlationId);\r\n        // Write valid account keys back to map\r\n        this.setItem(StaticCacheKeys.ACCOUNT_KEYS, JSON.stringify(accountKeys));\r\n\r\n        const tokenKeys: TokenKeys = getTokenKeys(this.clientId, this);\r\n        tokenKeys.idToken = await this.importArray(\r\n            tokenKeys.idToken,\r\n            correlationId\r\n        );\r\n        tokenKeys.accessToken = await this.importArray(\r\n            tokenKeys.accessToken,\r\n            correlationId\r\n        );\r\n        tokenKeys.refreshToken = await this.importArray(\r\n            tokenKeys.refreshToken,\r\n            correlationId\r\n        );\r\n        // Write valid token keys back to map\r\n        this.setItem(\r\n            `${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`,\r\n            JSON.stringify(tokenKeys)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Helper to decrypt and save cache entries\r\n     * @param key\r\n     * @returns\r\n     */\r\n    private async getItemFromEncryptedCache(\r\n        key: string,\r\n        correlationId: string\r\n    ): Promise<string | null> {\r\n        if (!this.encryptionCookie) {\r\n            return null;\r\n        }\r\n\r\n        const rawCache = this.getItem(key);\r\n        if (!rawCache) {\r\n            return null;\r\n        }\r\n\r\n        let encObj: EncryptedData;\r\n        try {\r\n            encObj = JSON.parse(rawCache);\r\n        } catch (e) {\r\n            // Not a valid encrypted object, remove\r\n            return null;\r\n        }\r\n\r\n        if (!encObj.id || !encObj.nonce || !encObj.data) {\r\n            // Data is not encrypted, likely from old version of MSAL. It must be removed because we don't know how old it is.\r\n            this.performanceClient.incrementFields(\r\n                { unencryptedCacheCount: 1 },\r\n                correlationId\r\n            );\r\n            return null;\r\n        }\r\n\r\n        if (encObj.id !== this.encryptionCookie.id) {\r\n            // Data was encrypted with a different key. It must be removed because it is from a previous session.\r\n            this.performanceClient.incrementFields(\r\n                { encryptedCacheExpiredCount: 1 },\r\n                correlationId\r\n            );\r\n            return null;\r\n        }\r\n\r\n        return invokeAsync(\r\n            decrypt,\r\n            PerformanceEvents.Decrypt,\r\n            this.logger,\r\n            this.performanceClient,\r\n            correlationId\r\n        )(\r\n            this.encryptionCookie.key,\r\n            encObj.nonce,\r\n            this.getContext(key),\r\n            encObj.data\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Helper to decrypt and save an array of cache keys\r\n     * @param arr\r\n     * @returns Array of keys successfully imported\r\n     */\r\n    private async importArray(\r\n        arr: Array<string>,\r\n        correlationId: string\r\n    ): Promise<Array<string>> {\r\n        const importedArr: Array<string> = [];\r\n        const promiseArr: Array<Promise<void>> = [];\r\n        arr.forEach((key) => {\r\n            const promise = this.getItemFromEncryptedCache(\r\n                key,\r\n                correlationId\r\n            ).then((value) => {\r\n                if (value) {\r\n                    this.memoryStorage.setItem(key, value);\r\n                    importedArr.push(key);\r\n                } else {\r\n                    // If value is empty, unencrypted or expired remove\r\n                    this.removeItem(key);\r\n                }\r\n            });\r\n            promiseArr.push(promise);\r\n        });\r\n\r\n        await Promise.all(promiseArr);\r\n        return importedArr;\r\n    }\r\n\r\n    /**\r\n     * Gets encryption context for a given cache entry. This is clientId for app specific entries, empty string for shared entries\r\n     * @param key\r\n     * @returns\r\n     */\r\n    private getContext(key: string): string {\r\n        let context = \"\";\r\n        if (key.includes(this.clientId)) {\r\n            context = this.clientId; // Used to bind encryption key to this appId\r\n        }\r\n\r\n        return context;\r\n    }\r\n\r\n    private updateCache(event: MessageEvent): void {\r\n        this.logger.trace(\"Updating internal cache from broadcast event\");\r\n        const perfMeasurement = this.performanceClient.startMeasurement(\r\n            PerformanceEvents.LocalStorageUpdated\r\n        );\r\n        perfMeasurement.add({ isBackground: true });\r\n\r\n        const { key, value, context } = event.data;\r\n        if (!key) {\r\n            this.logger.error(\"Broadcast event missing key\");\r\n            perfMeasurement.end({ success: false, errorCode: \"noKey\" });\r\n            return;\r\n        }\r\n\r\n        if (context && context !== this.clientId) {\r\n            this.logger.trace(\r\n                `Ignoring broadcast event from clientId: ${context}`\r\n            );\r\n            perfMeasurement.end({\r\n                success: false,\r\n                errorCode: \"contextMismatch\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!value) {\r\n            this.memoryStorage.removeItem(key);\r\n            this.logger.verbose(\"Removed item from internal cache\");\r\n        } else {\r\n            this.memoryStorage.setItem(key, value);\r\n            this.logger.verbose(\"Updated item in internal cache\");\r\n        }\r\n        perfMeasurement.end({ success: true });\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    BrowserConfigurationAuthErrorCodes,\r\n    createBrowserConfigurationAuthError,\r\n} from \"../error/BrowserConfigurationAuthError.js\";\r\nimport { IWindowStorage } from \"./IWindowStorage.js\";\r\n\r\nexport class SessionStorage implements IWindowStorage<string> {\r\n    constructor() {\r\n        if (!window.sessionStorage) {\r\n            throw createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.storageNotSupported\r\n            );\r\n        }\r\n    }\r\n\r\n    async initialize(): Promise<void> {\r\n        // Session storage does not require initialization\r\n    }\r\n\r\n    getItem(key: string): string | null {\r\n        return window.sessionStorage.getItem(key);\r\n    }\r\n\r\n    getUserData(key: string): string | null {\r\n        return this.getItem(key);\r\n    }\r\n\r\n    setItem(key: string, value: string): void {\r\n        window.sessionStorage.setItem(key, value);\r\n    }\r\n\r\n    async setUserData(key: string, value: string): Promise<void> {\r\n        this.setItem(key, value);\r\n    }\r\n\r\n    removeItem(key: string): void {\r\n        window.sessionStorage.removeItem(key);\r\n    }\r\n\r\n    getKeys(): string[] {\r\n        return Object.keys(window.sessionStorage);\r\n    }\r\n\r\n    containsKey(key: string): boolean {\r\n        return window.sessionStorage.hasOwnProperty(key);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { InteractionType } from \"./BrowserConstants.js\";\r\nimport {\r\n    ICrypto,\r\n    RequestStateObject,\r\n    ProtocolUtils,\r\n    createClientAuthError,\r\n    ClientAuthErrorCodes,\r\n} from \"@azure/msal-common/browser\";\r\n\r\nexport type BrowserStateObject = {\r\n    interactionType: InteractionType;\r\n};\r\n\r\n/**\r\n * Extracts the BrowserStateObject from the state string.\r\n * @param browserCrypto\r\n * @param state\r\n */\r\nexport function extractBrowserRequestState(\r\n    browserCrypto: ICrypto,\r\n    state: string\r\n): BrowserStateObject | null {\r\n    if (!state) {\r\n        return null;\r\n    }\r\n\r\n    try {\r\n        const requestStateObj: RequestStateObject =\r\n            ProtocolUtils.parseRequestState(browserCrypto, state);\r\n        return requestStateObj.libraryState.meta as BrowserStateObject;\r\n    } catch (e) {\r\n        throw createClientAuthError(ClientAuthErrorCodes.invalidState);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nexport const EventType = {\r\n    INITIALIZE_START: \"msal:initializeStart\",\r\n    INITIALIZE_END: \"msal:initializeEnd\",\r\n    ACCOUNT_ADDED: \"msal:accountAdded\",\r\n    ACCOUNT_REMOVED: \"msal:accountRemoved\",\r\n    ACTIVE_ACCOUNT_CHANGED: \"msal:activeAccountChanged\",\r\n    LOGIN_START: \"msal:loginStart\",\r\n    LOGIN_SUCCESS: \"msal:loginSuccess\",\r\n    LOGIN_FAILURE: \"msal:loginFailure\",\r\n    ACQUIRE_TOKEN_START: \"msal:acquireTokenStart\",\r\n    ACQUIRE_TOKEN_SUCCESS: \"msal:acquireTokenSuccess\",\r\n    ACQUIRE_TOKEN_FAILURE: \"msal:acquireTokenFailure\",\r\n    ACQUIRE_TOKEN_NETWORK_START: \"msal:acquireTokenFromNetworkStart\",\r\n    SSO_SILENT_START: \"msal:ssoSilentStart\",\r\n    SSO_SILENT_SUCCESS: \"msal:ssoSilentSuccess\",\r\n    SSO_SILENT_FAILURE: \"msal:ssoSilentFailure\",\r\n    ACQUIRE_TOKEN_BY_CODE_START: \"msal:acquireTokenByCodeStart\",\r\n    ACQUIRE_TOKEN_BY_CODE_SUCCESS: \"msal:acquireTokenByCodeSuccess\",\r\n    ACQUIRE_TOKEN_BY_CODE_FAILURE: \"msal:acquireTokenByCodeFailure\",\r\n    HANDLE_REDIRECT_START: \"msal:handleRedirectStart\",\r\n    HANDLE_REDIRECT_END: \"msal:handleRedirectEnd\",\r\n    POPUP_OPENED: \"msal:popupOpened\",\r\n    LOGOUT_START: \"msal:logoutStart\",\r\n    LOGOUT_SUCCESS: \"msal:logoutSuccess\",\r\n    LOGOUT_FAILURE: \"msal:logoutFailure\",\r\n    LOGOUT_END: \"msal:logoutEnd\",\r\n    RESTORE_FROM_BFCACHE: \"msal:restoreFromBFCache\",\r\n} as const;\r\nexport type EventType = (typeof EventType)[keyof typeof EventType];\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    Constants,\r\n    PersistentCacheKeys,\r\n    StringUtils,\r\n    CommonAuthorizationCodeRequest,\r\n    ICrypto,\r\n    AccountEntity,\r\n    IdTokenEntity,\r\n    AccessTokenEntity,\r\n    RefreshTokenEntity,\r\n    AppMetadataEntity,\r\n    CacheManager,\r\n    ServerTelemetryEntity,\r\n    ThrottlingEntity,\r\n    ProtocolUtils,\r\n    Logger,\r\n    AuthorityMetadataEntity,\r\n    DEFAULT_CRYPTO_IMPLEMENTATION,\r\n    AccountInfo,\r\n    ActiveAccountFilters,\r\n    CcsCredential,\r\n    CcsCredentialType,\r\n    TokenKeys,\r\n    CredentialType,\r\n    CacheRecord,\r\n    AuthenticationScheme,\r\n    createClientAuthError,\r\n    ClientAuthErrorCodes,\r\n    PerformanceEvents,\r\n    IPerformanceClient,\r\n    StaticAuthorityOptions,\r\n    CacheHelpers,\r\n    StoreInCache,\r\n    CacheError,\r\n    invokeAsync,\r\n} from \"@azure/msal-common/browser\";\r\nimport { CacheOptions } from \"../config/Configuration.js\";\r\nimport {\r\n    createBrowserAuthError,\r\n    BrowserAuthErrorCodes,\r\n} from \"../error/BrowserAuthError.js\";\r\nimport {\r\n    BrowserCacheLocation,\r\n    InteractionType,\r\n    TemporaryCacheKeys,\r\n    InMemoryCacheKeys,\r\n    StaticCacheKeys,\r\n} from \"../utils/BrowserConstants.js\";\r\nimport { LocalStorage } from \"./LocalStorage.js\";\r\nimport { SessionStorage } from \"./SessionStorage.js\";\r\nimport { MemoryStorage } from \"./MemoryStorage.js\";\r\nimport { IWindowStorage } from \"./IWindowStorage.js\";\r\nimport { extractBrowserRequestState } from \"../utils/BrowserProtocolUtils.js\";\r\nimport { NativeTokenRequest } from \"../broker/nativeBroker/NativeRequest.js\";\r\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\r\nimport { SilentRequest } from \"../request/SilentRequest.js\";\r\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest.js\";\r\nimport { RedirectRequest } from \"../request/RedirectRequest.js\";\r\nimport { PopupRequest } from \"../request/PopupRequest.js\";\r\nimport { base64Decode } from \"../encode/Base64Decode.js\";\r\nimport { base64Encode } from \"../encode/Base64Encode.js\";\r\nimport { CookieStorage } from \"./CookieStorage.js\";\r\nimport { getAccountKeys, getTokenKeys } from \"./CacheHelpers.js\";\r\nimport { EventType } from \"../event/EventType.js\";\r\nimport { EventHandler } from \"../event/EventHandler.js\";\r\n\r\n/**\r\n * This class implements the cache storage interface for MSAL through browser local or session storage.\r\n * Cookies are only used if storeAuthStateInCookie is true, and are only used for\r\n * parameters such as state and nonce, generally.\r\n */\r\nexport class BrowserCacheManager extends CacheManager {\r\n    // Cache configuration, either set by user or default values.\r\n    protected cacheConfig: Required<CacheOptions>;\r\n    // Window storage object (either local or sessionStorage)\r\n    protected browserStorage: IWindowStorage<string>;\r\n    // Internal in-memory storage object used for data used by msal that does not need to persist across page loads\r\n    protected internalStorage: MemoryStorage<string>;\r\n    // Temporary cache\r\n    protected temporaryCacheStorage: IWindowStorage<string>;\r\n    // Cookie storage\r\n    protected cookieStorage: CookieStorage;\r\n    // Logger instance\r\n    protected logger: Logger;\r\n    // Telemetry perf client\r\n    protected performanceClient: IPerformanceClient;\r\n    // Event Handler\r\n    private eventHandler: EventHandler;\r\n\r\n    constructor(\r\n        clientId: string,\r\n        cacheConfig: Required<CacheOptions>,\r\n        cryptoImpl: ICrypto,\r\n        logger: Logger,\r\n        performanceClient: IPerformanceClient,\r\n        eventHandler: EventHandler,\r\n        staticAuthorityOptions?: StaticAuthorityOptions\r\n    ) {\r\n        super(clientId, cryptoImpl, logger, staticAuthorityOptions);\r\n        this.cacheConfig = cacheConfig;\r\n        this.logger = logger;\r\n        this.internalStorage = new MemoryStorage();\r\n        this.browserStorage = getStorageImplementation(\r\n            clientId,\r\n            cacheConfig.cacheLocation,\r\n            logger,\r\n            performanceClient\r\n        );\r\n        this.temporaryCacheStorage = getStorageImplementation(\r\n            clientId,\r\n            cacheConfig.temporaryCacheLocation,\r\n            logger,\r\n            performanceClient\r\n        );\r\n        this.cookieStorage = new CookieStorage();\r\n\r\n        this.performanceClient = performanceClient;\r\n        this.eventHandler = eventHandler;\r\n    }\r\n\r\n    async initialize(correlationId: string): Promise<void> {\r\n        await this.browserStorage.initialize(correlationId);\r\n    }\r\n\r\n    /**\r\n     * Parses passed value as JSON object, JSON.parse() will throw an error.\r\n     * @param input\r\n     */\r\n    protected validateAndParseJson(jsonValue: string): object | null {\r\n        try {\r\n            const parsedJson = JSON.parse(jsonValue);\r\n            /**\r\n             * There are edge cases in which JSON.parse will successfully parse a non-valid JSON object\r\n             * (e.g. JSON.parse will parse an escaped string into an unescaped string), so adding a type check\r\n             * of the parsed value is necessary in order to be certain that the string represents a valid JSON object.\r\n             *\r\n             */\r\n            return parsedJson && typeof parsedJson === \"object\"\r\n                ? parsedJson\r\n                : null;\r\n        } catch (error) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reads account from cache, deserializes it into an account entity and returns it.\r\n     * If account is not found from the key, returns null and removes key from map.\r\n     * @param accountKey\r\n     * @returns\r\n     */\r\n    getAccount(accountKey: string): AccountEntity | null {\r\n        this.logger.trace(\"BrowserCacheManager.getAccount called\");\r\n        const serializedAccount = this.browserStorage.getUserData(accountKey);\r\n        if (!serializedAccount) {\r\n            this.removeAccountKeyFromMap(accountKey);\r\n            return null;\r\n        }\r\n\r\n        const parsedAccount = this.validateAndParseJson(serializedAccount);\r\n        if (!parsedAccount || !AccountEntity.isAccountEntity(parsedAccount)) {\r\n            this.removeAccountKeyFromMap(accountKey);\r\n            return null;\r\n        }\r\n\r\n        return CacheManager.toObject<AccountEntity>(\r\n            new AccountEntity(),\r\n            parsedAccount\r\n        );\r\n    }\r\n\r\n    /**\r\n     * set account entity in the platform cache\r\n     * @param account\r\n     */\r\n    async setAccount(\r\n        account: AccountEntity,\r\n        correlationId: string\r\n    ): Promise<void> {\r\n        this.logger.trace(\"BrowserCacheManager.setAccount called\");\r\n        const key = account.generateAccountKey();\r\n        await invokeAsync(\r\n            this.browserStorage.setUserData.bind(this.browserStorage),\r\n            PerformanceEvents.SetUserData,\r\n            this.logger,\r\n            this.performanceClient\r\n        )(key, JSON.stringify(account), correlationId);\r\n        const wasAdded = this.addAccountKeyToMap(key);\r\n\r\n        /**\r\n         * @deprecated - Remove this in next major version in favor of more consistent LOGIN event\r\n         */\r\n        if (\r\n            this.cacheConfig.cacheLocation ===\r\n                BrowserCacheLocation.LocalStorage &&\r\n            wasAdded\r\n        ) {\r\n            this.eventHandler.emitEvent(\r\n                EventType.ACCOUNT_ADDED,\r\n                undefined,\r\n                account.getAccountInfo()\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the array of account keys currently cached\r\n     * @returns\r\n     */\r\n    getAccountKeys(): Array<string> {\r\n        return getAccountKeys(this.browserStorage);\r\n    }\r\n\r\n    /**\r\n     * Add a new account to the key map\r\n     * @param key\r\n     */\r\n    addAccountKeyToMap(key: string): boolean {\r\n        this.logger.trace(\"BrowserCacheManager.addAccountKeyToMap called\");\r\n        this.logger.tracePii(\r\n            `BrowserCacheManager.addAccountKeyToMap called with key: ${key}`\r\n        );\r\n        const accountKeys = this.getAccountKeys();\r\n        if (accountKeys.indexOf(key) === -1) {\r\n            // Only add key if it does not already exist in the map\r\n            accountKeys.push(key);\r\n            this.browserStorage.setItem(\r\n                StaticCacheKeys.ACCOUNT_KEYS,\r\n                JSON.stringify(accountKeys)\r\n            );\r\n            this.logger.verbose(\r\n                \"BrowserCacheManager.addAccountKeyToMap account key added\"\r\n            );\r\n            return true;\r\n        } else {\r\n            this.logger.verbose(\r\n                \"BrowserCacheManager.addAccountKeyToMap account key already exists in map\"\r\n            );\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove an account from the key map\r\n     * @param key\r\n     */\r\n    removeAccountKeyFromMap(key: string): void {\r\n        this.logger.trace(\"BrowserCacheManager.removeAccountKeyFromMap called\");\r\n        this.logger.tracePii(\r\n            `BrowserCacheManager.removeAccountKeyFromMap called with key: ${key}`\r\n        );\r\n        const accountKeys = this.getAccountKeys();\r\n        const removalIndex = accountKeys.indexOf(key);\r\n        if (removalIndex > -1) {\r\n            accountKeys.splice(removalIndex, 1);\r\n            this.browserStorage.setItem(\r\n                StaticCacheKeys.ACCOUNT_KEYS,\r\n                JSON.stringify(accountKeys)\r\n            );\r\n            this.logger.trace(\r\n                \"BrowserCacheManager.removeAccountKeyFromMap account key removed\"\r\n            );\r\n        } else {\r\n            this.logger.trace(\r\n                \"BrowserCacheManager.removeAccountKeyFromMap key not found in existing map\"\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Extends inherited removeAccount function to include removal of the account key from the map\r\n     * @param key\r\n     */\r\n    async removeAccount(key: string): Promise<void> {\r\n        void super.removeAccount(key);\r\n        this.removeAccountKeyFromMap(key);\r\n    }\r\n\r\n    /**\r\n     * Removes credentials associated with the provided account\r\n     * @param account\r\n     */\r\n    async removeAccountContext(account: AccountEntity): Promise<void> {\r\n        await super.removeAccountContext(account);\r\n\r\n        /**\r\n         * @deprecated - Remove this in next major version in favor of more consistent LOGOUT event\r\n         */\r\n        if (\r\n            this.cacheConfig.cacheLocation === BrowserCacheLocation.LocalStorage\r\n        ) {\r\n            this.eventHandler.emitEvent(\r\n                EventType.ACCOUNT_REMOVED,\r\n                undefined,\r\n                account.getAccountInfo()\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes given idToken from the cache and from the key map\r\n     * @param key\r\n     */\r\n    removeIdToken(key: string): void {\r\n        super.removeIdToken(key);\r\n        this.removeTokenKey(key, CredentialType.ID_TOKEN);\r\n    }\r\n\r\n    /**\r\n     * Removes given accessToken from the cache and from the key map\r\n     * @param key\r\n     */\r\n    async removeAccessToken(key: string): Promise<void> {\r\n        void super.removeAccessToken(key);\r\n        this.removeTokenKey(key, CredentialType.ACCESS_TOKEN);\r\n    }\r\n\r\n    /**\r\n     * Removes given refreshToken from the cache and from the key map\r\n     * @param key\r\n     */\r\n    removeRefreshToken(key: string): void {\r\n        super.removeRefreshToken(key);\r\n        this.removeTokenKey(key, CredentialType.REFRESH_TOKEN);\r\n    }\r\n\r\n    /**\r\n     * Gets the keys for the cached tokens associated with this clientId\r\n     * @returns\r\n     */\r\n    getTokenKeys(): TokenKeys {\r\n        return getTokenKeys(this.clientId, this.browserStorage);\r\n    }\r\n\r\n    /**\r\n     * Adds the given key to the token key map\r\n     * @param key\r\n     * @param type\r\n     */\r\n    addTokenKey(key: string, type: CredentialType): void {\r\n        this.logger.trace(\"BrowserCacheManager addTokenKey called\");\r\n        const tokenKeys = this.getTokenKeys();\r\n\r\n        switch (type) {\r\n            case CredentialType.ID_TOKEN:\r\n                if (tokenKeys.idToken.indexOf(key) === -1) {\r\n                    this.logger.info(\r\n                        \"BrowserCacheManager: addTokenKey - idToken added to map\"\r\n                    );\r\n                    tokenKeys.idToken.push(key);\r\n                }\r\n                break;\r\n            case CredentialType.ACCESS_TOKEN:\r\n                if (tokenKeys.accessToken.indexOf(key) === -1) {\r\n                    this.logger.info(\r\n                        \"BrowserCacheManager: addTokenKey - accessToken added to map\"\r\n                    );\r\n                    tokenKeys.accessToken.push(key);\r\n                }\r\n                break;\r\n            case CredentialType.REFRESH_TOKEN:\r\n                if (tokenKeys.refreshToken.indexOf(key) === -1) {\r\n                    this.logger.info(\r\n                        \"BrowserCacheManager: addTokenKey - refreshToken added to map\"\r\n                    );\r\n                    tokenKeys.refreshToken.push(key);\r\n                }\r\n                break;\r\n            default:\r\n                this.logger.error(\r\n                    `BrowserCacheManager:addTokenKey - CredentialType provided invalid. CredentialType: ${type}`\r\n                );\r\n                throw createClientAuthError(\r\n                    ClientAuthErrorCodes.unexpectedCredentialType\r\n                );\r\n        }\r\n\r\n        this.browserStorage.setItem(\r\n            `${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`,\r\n            JSON.stringify(tokenKeys)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Removes the given key from the token key map\r\n     * @param key\r\n     * @param type\r\n     */\r\n    removeTokenKey(key: string, type: CredentialType): void {\r\n        this.logger.trace(\"BrowserCacheManager removeTokenKey called\");\r\n        const tokenKeys = this.getTokenKeys();\r\n\r\n        switch (type) {\r\n            case CredentialType.ID_TOKEN:\r\n                this.logger.infoPii(\r\n                    `BrowserCacheManager: removeTokenKey - attempting to remove idToken with key: ${key} from map`\r\n                );\r\n                const idRemoval = tokenKeys.idToken.indexOf(key);\r\n                if (idRemoval > -1) {\r\n                    this.logger.info(\r\n                        \"BrowserCacheManager: removeTokenKey - idToken removed from map\"\r\n                    );\r\n                    tokenKeys.idToken.splice(idRemoval, 1);\r\n                } else {\r\n                    this.logger.info(\r\n                        \"BrowserCacheManager: removeTokenKey - idToken does not exist in map. Either it was previously removed or it was never added.\"\r\n                    );\r\n                }\r\n                break;\r\n            case CredentialType.ACCESS_TOKEN:\r\n                this.logger.infoPii(\r\n                    `BrowserCacheManager: removeTokenKey - attempting to remove accessToken with key: ${key} from map`\r\n                );\r\n                const accessRemoval = tokenKeys.accessToken.indexOf(key);\r\n                if (accessRemoval > -1) {\r\n                    this.logger.info(\r\n                        \"BrowserCacheManager: removeTokenKey - accessToken removed from map\"\r\n                    );\r\n                    tokenKeys.accessToken.splice(accessRemoval, 1);\r\n                } else {\r\n                    this.logger.info(\r\n                        \"BrowserCacheManager: removeTokenKey - accessToken does not exist in map. Either it was previously removed or it was never added.\"\r\n                    );\r\n                }\r\n                break;\r\n            case CredentialType.REFRESH_TOKEN:\r\n                this.logger.infoPii(\r\n                    `BrowserCacheManager: removeTokenKey - attempting to remove refreshToken with key: ${key} from map`\r\n                );\r\n                const refreshRemoval = tokenKeys.refreshToken.indexOf(key);\r\n                if (refreshRemoval > -1) {\r\n                    this.logger.info(\r\n                        \"BrowserCacheManager: removeTokenKey - refreshToken removed from map\"\r\n                    );\r\n                    tokenKeys.refreshToken.splice(refreshRemoval, 1);\r\n                } else {\r\n                    this.logger.info(\r\n                        \"BrowserCacheManager: removeTokenKey - refreshToken does not exist in map. Either it was previously removed or it was never added.\"\r\n                    );\r\n                }\r\n                break;\r\n            default:\r\n                this.logger.error(\r\n                    `BrowserCacheManager:removeTokenKey - CredentialType provided invalid. CredentialType: ${type}`\r\n                );\r\n                throw createClientAuthError(\r\n                    ClientAuthErrorCodes.unexpectedCredentialType\r\n                );\r\n        }\r\n\r\n        this.browserStorage.setItem(\r\n            `${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`,\r\n            JSON.stringify(tokenKeys)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * generates idToken entity from a string\r\n     * @param idTokenKey\r\n     */\r\n    getIdTokenCredential(idTokenKey: string): IdTokenEntity | null {\r\n        const value = this.browserStorage.getUserData(idTokenKey);\r\n        if (!value) {\r\n            this.logger.trace(\r\n                \"BrowserCacheManager.getIdTokenCredential: called, no cache hit\"\r\n            );\r\n            this.removeTokenKey(idTokenKey, CredentialType.ID_TOKEN);\r\n            return null;\r\n        }\r\n\r\n        const parsedIdToken = this.validateAndParseJson(value);\r\n        if (!parsedIdToken || !CacheHelpers.isIdTokenEntity(parsedIdToken)) {\r\n            this.logger.trace(\r\n                \"BrowserCacheManager.getIdTokenCredential: called, no cache hit\"\r\n            );\r\n            this.removeTokenKey(idTokenKey, CredentialType.ID_TOKEN);\r\n            return null;\r\n        }\r\n\r\n        this.logger.trace(\r\n            \"BrowserCacheManager.getIdTokenCredential: cache hit\"\r\n        );\r\n        return parsedIdToken as IdTokenEntity;\r\n    }\r\n\r\n    /**\r\n     * set IdToken credential to the platform cache\r\n     * @param idToken\r\n     */\r\n    async setIdTokenCredential(\r\n        idToken: IdTokenEntity,\r\n        correlationId: string\r\n    ): Promise<void> {\r\n        this.logger.trace(\"BrowserCacheManager.setIdTokenCredential called\");\r\n        const idTokenKey = CacheHelpers.generateCredentialKey(idToken);\r\n\r\n        await invokeAsync(\r\n            this.browserStorage.setUserData.bind(this.browserStorage),\r\n            PerformanceEvents.SetUserData,\r\n            this.logger,\r\n            this.performanceClient\r\n        )(idTokenKey, JSON.stringify(idToken), correlationId);\r\n\r\n        this.addTokenKey(idTokenKey, CredentialType.ID_TOKEN);\r\n    }\r\n\r\n    /**\r\n     * generates accessToken entity from a string\r\n     * @param key\r\n     */\r\n    getAccessTokenCredential(accessTokenKey: string): AccessTokenEntity | null {\r\n        const value = this.browserStorage.getUserData(accessTokenKey);\r\n        if (!value) {\r\n            this.logger.trace(\r\n                \"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\"\r\n            );\r\n            this.removeTokenKey(accessTokenKey, CredentialType.ACCESS_TOKEN);\r\n            return null;\r\n        }\r\n        const parsedAccessToken = this.validateAndParseJson(value);\r\n        if (\r\n            !parsedAccessToken ||\r\n            !CacheHelpers.isAccessTokenEntity(parsedAccessToken)\r\n        ) {\r\n            this.logger.trace(\r\n                \"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\"\r\n            );\r\n            this.removeTokenKey(accessTokenKey, CredentialType.ACCESS_TOKEN);\r\n            return null;\r\n        }\r\n\r\n        this.logger.trace(\r\n            \"BrowserCacheManager.getAccessTokenCredential: cache hit\"\r\n        );\r\n        return parsedAccessToken as AccessTokenEntity;\r\n    }\r\n\r\n    /**\r\n     * set accessToken credential to the platform cache\r\n     * @param accessToken\r\n     */\r\n    async setAccessTokenCredential(\r\n        accessToken: AccessTokenEntity,\r\n        correlationId: string\r\n    ): Promise<void> {\r\n        this.logger.trace(\r\n            \"BrowserCacheManager.setAccessTokenCredential called\"\r\n        );\r\n        const accessTokenKey = CacheHelpers.generateCredentialKey(accessToken);\r\n        await invokeAsync(\r\n            this.browserStorage.setUserData.bind(this.browserStorage),\r\n            PerformanceEvents.SetUserData,\r\n            this.logger,\r\n            this.performanceClient\r\n        )(accessTokenKey, JSON.stringify(accessToken), correlationId);\r\n\r\n        this.addTokenKey(accessTokenKey, CredentialType.ACCESS_TOKEN);\r\n    }\r\n\r\n    /**\r\n     * generates refreshToken entity from a string\r\n     * @param refreshTokenKey\r\n     */\r\n    getRefreshTokenCredential(\r\n        refreshTokenKey: string\r\n    ): RefreshTokenEntity | null {\r\n        const value = this.browserStorage.getUserData(refreshTokenKey);\r\n        if (!value) {\r\n            this.logger.trace(\r\n                \"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\"\r\n            );\r\n            this.removeTokenKey(refreshTokenKey, CredentialType.REFRESH_TOKEN);\r\n            return null;\r\n        }\r\n        const parsedRefreshToken = this.validateAndParseJson(value);\r\n        if (\r\n            !parsedRefreshToken ||\r\n            !CacheHelpers.isRefreshTokenEntity(parsedRefreshToken)\r\n        ) {\r\n            this.logger.trace(\r\n                \"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\"\r\n            );\r\n            this.removeTokenKey(refreshTokenKey, CredentialType.REFRESH_TOKEN);\r\n            return null;\r\n        }\r\n\r\n        this.logger.trace(\r\n            \"BrowserCacheManager.getRefreshTokenCredential: cache hit\"\r\n        );\r\n        return parsedRefreshToken as RefreshTokenEntity;\r\n    }\r\n\r\n    /**\r\n     * set refreshToken credential to the platform cache\r\n     * @param refreshToken\r\n     */\r\n    async setRefreshTokenCredential(\r\n        refreshToken: RefreshTokenEntity,\r\n        correlationId: string\r\n    ): Promise<void> {\r\n        this.logger.trace(\r\n            \"BrowserCacheManager.setRefreshTokenCredential called\"\r\n        );\r\n        const refreshTokenKey =\r\n            CacheHelpers.generateCredentialKey(refreshToken);\r\n        await invokeAsync(\r\n            this.browserStorage.setUserData.bind(this.browserStorage),\r\n            PerformanceEvents.SetUserData,\r\n            this.logger,\r\n            this.performanceClient\r\n        )(refreshTokenKey, JSON.stringify(refreshToken), correlationId);\r\n\r\n        this.addTokenKey(refreshTokenKey, CredentialType.REFRESH_TOKEN);\r\n    }\r\n\r\n    /**\r\n     * fetch appMetadata entity from the platform cache\r\n     * @param appMetadataKey\r\n     */\r\n    getAppMetadata(appMetadataKey: string): AppMetadataEntity | null {\r\n        const value = this.browserStorage.getItem(appMetadataKey);\r\n        if (!value) {\r\n            this.logger.trace(\r\n                \"BrowserCacheManager.getAppMetadata: called, no cache hit\"\r\n            );\r\n            return null;\r\n        }\r\n\r\n        const parsedMetadata = this.validateAndParseJson(value);\r\n        if (\r\n            !parsedMetadata ||\r\n            !CacheHelpers.isAppMetadataEntity(appMetadataKey, parsedMetadata)\r\n        ) {\r\n            this.logger.trace(\r\n                \"BrowserCacheManager.getAppMetadata: called, no cache hit\"\r\n            );\r\n            return null;\r\n        }\r\n\r\n        this.logger.trace(\"BrowserCacheManager.getAppMetadata: cache hit\");\r\n        return parsedMetadata as AppMetadataEntity;\r\n    }\r\n\r\n    /**\r\n     * set appMetadata entity to the platform cache\r\n     * @param appMetadata\r\n     */\r\n    setAppMetadata(appMetadata: AppMetadataEntity): void {\r\n        this.logger.trace(\"BrowserCacheManager.setAppMetadata called\");\r\n        const appMetadataKey = CacheHelpers.generateAppMetadataKey(appMetadata);\r\n        this.browserStorage.setItem(\r\n            appMetadataKey,\r\n            JSON.stringify(appMetadata)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * fetch server telemetry entity from the platform cache\r\n     * @param serverTelemetryKey\r\n     */\r\n    getServerTelemetry(\r\n        serverTelemetryKey: string\r\n    ): ServerTelemetryEntity | null {\r\n        const value = this.browserStorage.getItem(serverTelemetryKey);\r\n        if (!value) {\r\n            this.logger.trace(\r\n                \"BrowserCacheManager.getServerTelemetry: called, no cache hit\"\r\n            );\r\n            return null;\r\n        }\r\n        const parsedEntity = this.validateAndParseJson(value);\r\n        if (\r\n            !parsedEntity ||\r\n            !CacheHelpers.isServerTelemetryEntity(\r\n                serverTelemetryKey,\r\n                parsedEntity\r\n            )\r\n        ) {\r\n            this.logger.trace(\r\n                \"BrowserCacheManager.getServerTelemetry: called, no cache hit\"\r\n            );\r\n            return null;\r\n        }\r\n\r\n        this.logger.trace(\"BrowserCacheManager.getServerTelemetry: cache hit\");\r\n        return parsedEntity as ServerTelemetryEntity;\r\n    }\r\n\r\n    /**\r\n     * set server telemetry entity to the platform cache\r\n     * @param serverTelemetryKey\r\n     * @param serverTelemetry\r\n     */\r\n    setServerTelemetry(\r\n        serverTelemetryKey: string,\r\n        serverTelemetry: ServerTelemetryEntity\r\n    ): void {\r\n        this.logger.trace(\"BrowserCacheManager.setServerTelemetry called\");\r\n        this.browserStorage.setItem(\r\n            serverTelemetryKey,\r\n            JSON.stringify(serverTelemetry)\r\n        );\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    getAuthorityMetadata(key: string): AuthorityMetadataEntity | null {\r\n        const value = this.internalStorage.getItem(key);\r\n        if (!value) {\r\n            this.logger.trace(\r\n                \"BrowserCacheManager.getAuthorityMetadata: called, no cache hit\"\r\n            );\r\n            return null;\r\n        }\r\n        const parsedMetadata = this.validateAndParseJson(value);\r\n        if (\r\n            parsedMetadata &&\r\n            CacheHelpers.isAuthorityMetadataEntity(key, parsedMetadata)\r\n        ) {\r\n            this.logger.trace(\r\n                \"BrowserCacheManager.getAuthorityMetadata: cache hit\"\r\n            );\r\n            return parsedMetadata as AuthorityMetadataEntity;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    getAuthorityMetadataKeys(): Array<string> {\r\n        const allKeys = this.internalStorage.getKeys();\r\n        return allKeys.filter((key) => {\r\n            return this.isAuthorityMetadata(key);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sets wrapper metadata in memory\r\n     * @param wrapperSKU\r\n     * @param wrapperVersion\r\n     */\r\n    setWrapperMetadata(wrapperSKU: string, wrapperVersion: string): void {\r\n        this.internalStorage.setItem(InMemoryCacheKeys.WRAPPER_SKU, wrapperSKU);\r\n        this.internalStorage.setItem(\r\n            InMemoryCacheKeys.WRAPPER_VER,\r\n            wrapperVersion\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns wrapper metadata from in-memory storage\r\n     */\r\n    getWrapperMetadata(): [string, string] {\r\n        const sku =\r\n            this.internalStorage.getItem(InMemoryCacheKeys.WRAPPER_SKU) ||\r\n            Constants.EMPTY_STRING;\r\n        const version =\r\n            this.internalStorage.getItem(InMemoryCacheKeys.WRAPPER_VER) ||\r\n            Constants.EMPTY_STRING;\r\n        return [sku, version];\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param entity\r\n     */\r\n    setAuthorityMetadata(key: string, entity: AuthorityMetadataEntity): void {\r\n        this.logger.trace(\"BrowserCacheManager.setAuthorityMetadata called\");\r\n        this.internalStorage.setItem(key, JSON.stringify(entity));\r\n    }\r\n\r\n    /**\r\n     * Gets the active account\r\n     */\r\n    getActiveAccount(): AccountInfo | null {\r\n        const activeAccountKeyFilters = this.generateCacheKey(\r\n            PersistentCacheKeys.ACTIVE_ACCOUNT_FILTERS\r\n        );\r\n        const activeAccountValueFilters = this.browserStorage.getItem(\r\n            activeAccountKeyFilters\r\n        );\r\n        if (!activeAccountValueFilters) {\r\n            this.logger.trace(\r\n                \"BrowserCacheManager.getActiveAccount: No active account filters found\"\r\n            );\r\n            return null;\r\n        }\r\n        const activeAccountValueObj = this.validateAndParseJson(\r\n            activeAccountValueFilters\r\n        ) as AccountInfo;\r\n        if (activeAccountValueObj) {\r\n            this.logger.trace(\r\n                \"BrowserCacheManager.getActiveAccount: Active account filters schema found\"\r\n            );\r\n            return this.getAccountInfoFilteredBy({\r\n                homeAccountId: activeAccountValueObj.homeAccountId,\r\n                localAccountId: activeAccountValueObj.localAccountId,\r\n                tenantId: activeAccountValueObj.tenantId,\r\n            });\r\n        }\r\n        this.logger.trace(\r\n            \"BrowserCacheManager.getActiveAccount: No active account found\"\r\n        );\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Sets the active account's localAccountId in cache\r\n     * @param account\r\n     */\r\n    setActiveAccount(account: AccountInfo | null): void {\r\n        const activeAccountKey = this.generateCacheKey(\r\n            PersistentCacheKeys.ACTIVE_ACCOUNT_FILTERS\r\n        );\r\n        if (account) {\r\n            this.logger.verbose(\"setActiveAccount: Active account set\");\r\n            const activeAccountValue: ActiveAccountFilters = {\r\n                homeAccountId: account.homeAccountId,\r\n                localAccountId: account.localAccountId,\r\n                tenantId: account.tenantId,\r\n            };\r\n            this.browserStorage.setItem(\r\n                activeAccountKey,\r\n                JSON.stringify(activeAccountValue)\r\n            );\r\n        } else {\r\n            this.logger.verbose(\r\n                \"setActiveAccount: No account passed, active account not set\"\r\n            );\r\n            this.browserStorage.removeItem(activeAccountKey);\r\n        }\r\n        this.eventHandler.emitEvent(EventType.ACTIVE_ACCOUNT_CHANGED);\r\n    }\r\n\r\n    /**\r\n     * fetch throttling entity from the platform cache\r\n     * @param throttlingCacheKey\r\n     */\r\n    getThrottlingCache(throttlingCacheKey: string): ThrottlingEntity | null {\r\n        const value = this.browserStorage.getItem(throttlingCacheKey);\r\n        if (!value) {\r\n            this.logger.trace(\r\n                \"BrowserCacheManager.getThrottlingCache: called, no cache hit\"\r\n            );\r\n            return null;\r\n        }\r\n\r\n        const parsedThrottlingCache = this.validateAndParseJson(value);\r\n        if (\r\n            !parsedThrottlingCache ||\r\n            !CacheHelpers.isThrottlingEntity(\r\n                throttlingCacheKey,\r\n                parsedThrottlingCache\r\n            )\r\n        ) {\r\n            this.logger.trace(\r\n                \"BrowserCacheManager.getThrottlingCache: called, no cache hit\"\r\n            );\r\n            return null;\r\n        }\r\n\r\n        this.logger.trace(\"BrowserCacheManager.getThrottlingCache: cache hit\");\r\n        return parsedThrottlingCache as ThrottlingEntity;\r\n    }\r\n\r\n    /**\r\n     * set throttling entity to the platform cache\r\n     * @param throttlingCacheKey\r\n     * @param throttlingCache\r\n     */\r\n    setThrottlingCache(\r\n        throttlingCacheKey: string,\r\n        throttlingCache: ThrottlingEntity\r\n    ): void {\r\n        this.logger.trace(\"BrowserCacheManager.setThrottlingCache called\");\r\n        this.browserStorage.setItem(\r\n            throttlingCacheKey,\r\n            JSON.stringify(throttlingCache)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Gets cache item with given key.\r\n     * Will retrieve from cookies if storeAuthStateInCookie is set to true.\r\n     * @param key\r\n     */\r\n    getTemporaryCache(cacheKey: string, generateKey?: boolean): string | null {\r\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\r\n        if (this.cacheConfig.storeAuthStateInCookie) {\r\n            const itemCookie = this.cookieStorage.getItem(key);\r\n            if (itemCookie) {\r\n                this.logger.trace(\r\n                    \"BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies\"\r\n                );\r\n                return itemCookie;\r\n            }\r\n        }\r\n\r\n        const value = this.temporaryCacheStorage.getItem(key);\r\n        if (!value) {\r\n            // If temp cache item not found in session/memory, check local storage for items set by old versions\r\n            if (\r\n                this.cacheConfig.cacheLocation ===\r\n                BrowserCacheLocation.LocalStorage\r\n            ) {\r\n                const item = this.browserStorage.getItem(key);\r\n                if (item) {\r\n                    this.logger.trace(\r\n                        \"BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage\"\r\n                    );\r\n                    return item;\r\n                }\r\n            }\r\n            this.logger.trace(\r\n                \"BrowserCacheManager.getTemporaryCache: No cache item found in local storage\"\r\n            );\r\n            return null;\r\n        }\r\n        this.logger.trace(\r\n            \"BrowserCacheManager.getTemporaryCache: Temporary cache item returned\"\r\n        );\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Sets the cache item with the key and value given.\r\n     * Stores in cookie if storeAuthStateInCookie is set to true.\r\n     * This can cause cookie overflow if used incorrectly.\r\n     * @param key\r\n     * @param value\r\n     */\r\n    setTemporaryCache(\r\n        cacheKey: string,\r\n        value: string,\r\n        generateKey?: boolean\r\n    ): void {\r\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\r\n\r\n        this.temporaryCacheStorage.setItem(key, value);\r\n        if (this.cacheConfig.storeAuthStateInCookie) {\r\n            this.logger.trace(\r\n                \"BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie\"\r\n            );\r\n            this.cookieStorage.setItem(\r\n                key,\r\n                value,\r\n                undefined,\r\n                this.cacheConfig.secureCookies\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes the cache item with the given key.\r\n     * @param key\r\n     */\r\n    removeItem(key: string): void {\r\n        this.browserStorage.removeItem(key);\r\n    }\r\n\r\n    /**\r\n     * Removes the temporary cache item with the given key.\r\n     * Will also clear the cookie item if storeAuthStateInCookie is set to true.\r\n     * @param key\r\n     */\r\n    removeTemporaryItem(key: string): void {\r\n        this.temporaryCacheStorage.removeItem(key);\r\n        if (this.cacheConfig.storeAuthStateInCookie) {\r\n            this.logger.trace(\r\n                \"BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie\"\r\n            );\r\n            this.cookieStorage.removeItem(key);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets all keys in window.\r\n     */\r\n    getKeys(): string[] {\r\n        return this.browserStorage.getKeys();\r\n    }\r\n\r\n    /**\r\n     * Clears all cache entries created by MSAL.\r\n     */\r\n    async clear(): Promise<void> {\r\n        // Removes all accounts and their credentials\r\n        await this.removeAllAccounts();\r\n        this.removeAppMetadata();\r\n\r\n        // Remove temp storage first to make sure any cookies are cleared\r\n        this.temporaryCacheStorage.getKeys().forEach((cacheKey: string) => {\r\n            if (\r\n                cacheKey.indexOf(Constants.CACHE_PREFIX) !== -1 ||\r\n                cacheKey.indexOf(this.clientId) !== -1\r\n            ) {\r\n                this.removeTemporaryItem(cacheKey);\r\n            }\r\n        });\r\n\r\n        // Removes all remaining MSAL cache items\r\n        this.browserStorage.getKeys().forEach((cacheKey: string) => {\r\n            if (\r\n                cacheKey.indexOf(Constants.CACHE_PREFIX) !== -1 ||\r\n                cacheKey.indexOf(this.clientId) !== -1\r\n            ) {\r\n                this.browserStorage.removeItem(cacheKey);\r\n            }\r\n        });\r\n\r\n        this.internalStorage.clear();\r\n    }\r\n\r\n    /**\r\n     * Clears all access tokes that have claims prior to saving the current one\r\n     * @param performanceClient {IPerformanceClient}\r\n     * @param correlationId {string} correlation id\r\n     * @returns\r\n     */\r\n    async clearTokensAndKeysWithClaims(\r\n        performanceClient: IPerformanceClient,\r\n        correlationId: string\r\n    ): Promise<void> {\r\n        performanceClient.addQueueMeasurement(\r\n            PerformanceEvents.ClearTokensAndKeysWithClaims,\r\n            correlationId\r\n        );\r\n\r\n        const tokenKeys = this.getTokenKeys();\r\n\r\n        const removedAccessTokens: Array<Promise<void>> = [];\r\n        tokenKeys.accessToken.forEach((key: string) => {\r\n            // if the access token has claims in its key, remove the token key and the token\r\n            const credential = this.getAccessTokenCredential(key);\r\n            if (\r\n                credential?.requestedClaimsHash &&\r\n                key.includes(credential.requestedClaimsHash.toLowerCase())\r\n            ) {\r\n                removedAccessTokens.push(this.removeAccessToken(key));\r\n            }\r\n        });\r\n        await Promise.all(removedAccessTokens);\r\n\r\n        // warn if any access tokens are removed\r\n        if (removedAccessTokens.length > 0) {\r\n            this.logger.warning(\r\n                `${removedAccessTokens.length} access tokens with claims in the cache keys have been removed from the cache.`\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Prepend msal.<client-id> to each key; Skip for any JSON object as Key (defined schemas do not need the key appended: AccessToken Keys or the upcoming schema)\r\n     * @param key\r\n     * @param addInstanceId\r\n     */\r\n    generateCacheKey(key: string): string {\r\n        const generatedKey = this.validateAndParseJson(key);\r\n        if (!generatedKey) {\r\n            if (StringUtils.startsWith(key, Constants.CACHE_PREFIX)) {\r\n                return key;\r\n            }\r\n            return `${Constants.CACHE_PREFIX}.${this.clientId}.${key}`;\r\n        }\r\n\r\n        return JSON.stringify(key);\r\n    }\r\n\r\n    /**\r\n     * Create authorityKey to cache authority\r\n     * @param state\r\n     */\r\n    generateAuthorityKey(stateString: string): string {\r\n        const {\r\n            libraryState: { id: stateId },\r\n        } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\r\n\r\n        return this.generateCacheKey(\r\n            `${TemporaryCacheKeys.AUTHORITY}.${stateId}`\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Create Nonce key to cache nonce\r\n     * @param state\r\n     */\r\n    generateNonceKey(stateString: string): string {\r\n        const {\r\n            libraryState: { id: stateId },\r\n        } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\r\n\r\n        return this.generateCacheKey(\r\n            `${TemporaryCacheKeys.NONCE_IDTOKEN}.${stateId}`\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Creates full cache key for the request state\r\n     * @param stateString State string for the request\r\n     */\r\n    generateStateKey(stateString: string): string {\r\n        // Use the library state id to key temp storage for uniqueness for multiple concurrent requests\r\n        const {\r\n            libraryState: { id: stateId },\r\n        } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\r\n        return this.generateCacheKey(\r\n            `${TemporaryCacheKeys.REQUEST_STATE}.${stateId}`\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Gets the cached authority based on the cached state. Returns empty if no cached state found.\r\n     */\r\n    getCachedAuthority(cachedState: string): string | null {\r\n        const stateCacheKey = this.generateStateKey(cachedState);\r\n        const state = this.getTemporaryCache(stateCacheKey);\r\n        if (!state) {\r\n            return null;\r\n        }\r\n\r\n        const authorityCacheKey = this.generateAuthorityKey(state);\r\n        return this.getTemporaryCache(authorityCacheKey);\r\n    }\r\n\r\n    /**\r\n     * Updates account, authority, and state in cache\r\n     * @param serverAuthenticationRequest\r\n     * @param account\r\n     */\r\n    updateCacheEntries(\r\n        state: string,\r\n        nonce: string,\r\n        authorityInstance: string,\r\n        loginHint: string,\r\n        account: AccountInfo | null\r\n    ): void {\r\n        this.logger.trace(\"BrowserCacheManager.updateCacheEntries called\");\r\n        // Cache the request state\r\n        const stateCacheKey = this.generateStateKey(state);\r\n        this.setTemporaryCache(stateCacheKey, state, false);\r\n\r\n        // Cache the nonce\r\n        const nonceCacheKey = this.generateNonceKey(state);\r\n        this.setTemporaryCache(nonceCacheKey, nonce, false);\r\n\r\n        // Cache authorityKey\r\n        const authorityCacheKey = this.generateAuthorityKey(state);\r\n        this.setTemporaryCache(authorityCacheKey, authorityInstance, false);\r\n\r\n        if (account) {\r\n            const ccsCredential: CcsCredential = {\r\n                credential: account.homeAccountId,\r\n                type: CcsCredentialType.HOME_ACCOUNT_ID,\r\n            };\r\n            this.setTemporaryCache(\r\n                TemporaryCacheKeys.CCS_CREDENTIAL,\r\n                JSON.stringify(ccsCredential),\r\n                true\r\n            );\r\n        } else if (loginHint) {\r\n            const ccsCredential: CcsCredential = {\r\n                credential: loginHint,\r\n                type: CcsCredentialType.UPN,\r\n            };\r\n            this.setTemporaryCache(\r\n                TemporaryCacheKeys.CCS_CREDENTIAL,\r\n                JSON.stringify(ccsCredential),\r\n                true\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reset all temporary cache items\r\n     * @param state\r\n     */\r\n    resetRequestCache(state: string): void {\r\n        this.logger.trace(\"BrowserCacheManager.resetRequestCache called\");\r\n        // check state and remove associated cache items\r\n        if (state) {\r\n            this.temporaryCacheStorage.getKeys().forEach((key) => {\r\n                if (key.indexOf(state) !== -1) {\r\n                    this.removeTemporaryItem(key);\r\n                }\r\n            });\r\n\r\n            // delete generic interactive request parameters\r\n            this.removeTemporaryItem(this.generateStateKey(state));\r\n            this.removeTemporaryItem(this.generateNonceKey(state));\r\n            this.removeTemporaryItem(this.generateAuthorityKey(state));\r\n        }\r\n        this.removeTemporaryItem(\r\n            this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS)\r\n        );\r\n        this.removeTemporaryItem(\r\n            this.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI)\r\n        );\r\n        this.removeTemporaryItem(\r\n            this.generateCacheKey(TemporaryCacheKeys.URL_HASH)\r\n        );\r\n        this.removeTemporaryItem(\r\n            this.generateCacheKey(TemporaryCacheKeys.CORRELATION_ID)\r\n        );\r\n        this.removeTemporaryItem(\r\n            this.generateCacheKey(TemporaryCacheKeys.CCS_CREDENTIAL)\r\n        );\r\n        this.removeTemporaryItem(\r\n            this.generateCacheKey(TemporaryCacheKeys.NATIVE_REQUEST)\r\n        );\r\n        this.setInteractionInProgress(false);\r\n    }\r\n\r\n    /**\r\n     * Removes temporary cache for the provided state\r\n     * @param stateString\r\n     */\r\n    cleanRequestByState(stateString: string): void {\r\n        this.logger.trace(\"BrowserCacheManager.cleanRequestByState called\");\r\n        // Interaction is completed - remove interaction status.\r\n        if (stateString) {\r\n            const stateKey = this.generateStateKey(stateString);\r\n            const cachedState = this.temporaryCacheStorage.getItem(stateKey);\r\n            this.logger.infoPii(\r\n                `BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${cachedState}`\r\n            );\r\n            this.resetRequestCache(cachedState || Constants.EMPTY_STRING);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Looks in temporary cache for any state values with the provided interactionType and removes all temporary cache items for that state\r\n     * Used in scenarios where temp cache needs to be cleaned but state is not known, such as clicking browser back button.\r\n     * @param interactionType\r\n     */\r\n    cleanRequestByInteractionType(interactionType: InteractionType): void {\r\n        this.logger.trace(\r\n            \"BrowserCacheManager.cleanRequestByInteractionType called\"\r\n        );\r\n        // Loop through all keys to find state key\r\n        this.temporaryCacheStorage.getKeys().forEach((key) => {\r\n            // If this key is not the state key, move on\r\n            if (key.indexOf(TemporaryCacheKeys.REQUEST_STATE) === -1) {\r\n                return;\r\n            }\r\n\r\n            // Retrieve state value, return if not a valid value\r\n            const stateValue = this.temporaryCacheStorage.getItem(key);\r\n            if (!stateValue) {\r\n                return;\r\n            }\r\n            // Extract state and ensure it matches given InteractionType, then clean request cache\r\n            const parsedState = extractBrowserRequestState(\r\n                this.cryptoImpl,\r\n                stateValue\r\n            );\r\n            if (\r\n                parsedState &&\r\n                parsedState.interactionType === interactionType\r\n            ) {\r\n                this.logger.infoPii(\r\n                    `BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${stateValue}`\r\n                );\r\n                this.resetRequestCache(stateValue);\r\n            }\r\n        });\r\n        this.setInteractionInProgress(false);\r\n    }\r\n\r\n    cacheCodeRequest(authCodeRequest: CommonAuthorizationCodeRequest): void {\r\n        this.logger.trace(\"BrowserCacheManager.cacheCodeRequest called\");\r\n\r\n        const encodedValue = base64Encode(JSON.stringify(authCodeRequest));\r\n        this.setTemporaryCache(\r\n            TemporaryCacheKeys.REQUEST_PARAMS,\r\n            encodedValue,\r\n            true\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Gets the token exchange parameters from the cache. Throws an error if nothing is found.\r\n     */\r\n    getCachedRequest(state: string): CommonAuthorizationCodeRequest {\r\n        this.logger.trace(\"BrowserCacheManager.getCachedRequest called\");\r\n        // Get token request from cache and parse as TokenExchangeParameters.\r\n        const encodedTokenRequest = this.getTemporaryCache(\r\n            TemporaryCacheKeys.REQUEST_PARAMS,\r\n            true\r\n        );\r\n        if (!encodedTokenRequest) {\r\n            throw createBrowserAuthError(\r\n                BrowserAuthErrorCodes.noTokenRequestCacheError\r\n            );\r\n        }\r\n\r\n        let parsedRequest: CommonAuthorizationCodeRequest;\r\n        try {\r\n            parsedRequest = JSON.parse(base64Decode(encodedTokenRequest));\r\n        } catch (e) {\r\n            this.logger.errorPii(`Attempted to parse: ${encodedTokenRequest}`);\r\n            this.logger.error(\r\n                `Parsing cached token request threw with error: ${e}`\r\n            );\r\n            throw createBrowserAuthError(\r\n                BrowserAuthErrorCodes.unableToParseTokenRequestCacheError\r\n            );\r\n        }\r\n        this.removeTemporaryItem(\r\n            this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS)\r\n        );\r\n\r\n        // Get cached authority and use if no authority is cached with request.\r\n        if (!parsedRequest.authority) {\r\n            const authorityCacheKey: string = this.generateAuthorityKey(state);\r\n            const cachedAuthority = this.getTemporaryCache(authorityCacheKey);\r\n            if (!cachedAuthority) {\r\n                throw createBrowserAuthError(\r\n                    BrowserAuthErrorCodes.noCachedAuthorityError\r\n                );\r\n            }\r\n            parsedRequest.authority = cachedAuthority;\r\n        }\r\n\r\n        return parsedRequest;\r\n    }\r\n\r\n    /**\r\n     * Gets cached native request for redirect flows\r\n     */\r\n    getCachedNativeRequest(): NativeTokenRequest | null {\r\n        this.logger.trace(\"BrowserCacheManager.getCachedNativeRequest called\");\r\n        const cachedRequest = this.getTemporaryCache(\r\n            TemporaryCacheKeys.NATIVE_REQUEST,\r\n            true\r\n        );\r\n        if (!cachedRequest) {\r\n            this.logger.trace(\r\n                \"BrowserCacheManager.getCachedNativeRequest: No cached native request found\"\r\n            );\r\n            return null;\r\n        }\r\n\r\n        const parsedRequest = this.validateAndParseJson(\r\n            cachedRequest\r\n        ) as NativeTokenRequest;\r\n        if (!parsedRequest) {\r\n            this.logger.error(\r\n                \"BrowserCacheManager.getCachedNativeRequest: Unable to parse native request\"\r\n            );\r\n            return null;\r\n        }\r\n\r\n        return parsedRequest;\r\n    }\r\n\r\n    isInteractionInProgress(matchClientId?: boolean): boolean {\r\n        const clientId = this.getInteractionInProgress();\r\n\r\n        if (matchClientId) {\r\n            return clientId === this.clientId;\r\n        } else {\r\n            return !!clientId;\r\n        }\r\n    }\r\n\r\n    getInteractionInProgress(): string | null {\r\n        const key = `${Constants.CACHE_PREFIX}.${TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\r\n        return this.getTemporaryCache(key, false);\r\n    }\r\n\r\n    setInteractionInProgress(inProgress: boolean): void {\r\n        // Ensure we don't overwrite interaction in progress for a different clientId\r\n        const key = `${Constants.CACHE_PREFIX}.${TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\r\n        if (inProgress) {\r\n            if (this.getInteractionInProgress()) {\r\n                throw createBrowserAuthError(\r\n                    BrowserAuthErrorCodes.interactionInProgress\r\n                );\r\n            } else {\r\n                // No interaction is in progress\r\n                this.setTemporaryCache(key, this.clientId, false);\r\n            }\r\n        } else if (\r\n            !inProgress &&\r\n            this.getInteractionInProgress() === this.clientId\r\n        ) {\r\n            this.removeTemporaryItem(key);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Builds credential entities from AuthenticationResult object and saves the resulting credentials to the cache\r\n     * @param result\r\n     * @param request\r\n     */\r\n    async hydrateCache(\r\n        result: AuthenticationResult,\r\n        request:\r\n            | SilentRequest\r\n            | SsoSilentRequest\r\n            | RedirectRequest\r\n            | PopupRequest\r\n    ): Promise<void> {\r\n        const idTokenEntity = CacheHelpers.createIdTokenEntity(\r\n            result.account?.homeAccountId,\r\n            result.account?.environment,\r\n            result.idToken,\r\n            this.clientId,\r\n            result.tenantId\r\n        );\r\n\r\n        let claimsHash;\r\n        if (request.claims) {\r\n            claimsHash = await this.cryptoImpl.hashString(request.claims);\r\n        }\r\n\r\n        /**\r\n         * meta data for cache stores time in seconds from epoch\r\n         * AuthenticationResult returns expiresOn and extExpiresOn in milliseconds (as a Date object which is in ms)\r\n         * We need to map these for the cache when building tokens from AuthenticationResult\r\n         *\r\n         * The next MSAL VFuture should map these both to same value if possible\r\n         */\r\n\r\n        const accessTokenEntity = CacheHelpers.createAccessTokenEntity(\r\n            result.account?.homeAccountId,\r\n            result.account.environment,\r\n            result.accessToken,\r\n            this.clientId,\r\n            result.tenantId,\r\n            result.scopes.join(\" \"),\r\n            result.expiresOn ? result.expiresOn.getTime() / 1000 : 0,\r\n            result.extExpiresOn ? result.extExpiresOn.getTime() / 1000 : 0,\r\n            base64Decode,\r\n            undefined, // refreshOn\r\n            result.tokenType as AuthenticationScheme,\r\n            undefined, // userAssertionHash\r\n            request.sshKid,\r\n            request.claims,\r\n            claimsHash\r\n        );\r\n\r\n        const cacheRecord = {\r\n            idToken: idTokenEntity,\r\n            accessToken: accessTokenEntity,\r\n        };\r\n        return this.saveCacheRecord(cacheRecord, result.correlationId);\r\n    }\r\n\r\n    /**\r\n     * saves a cache record\r\n     * @param cacheRecord {CacheRecord}\r\n     * @param storeInCache {?StoreInCache}\r\n     * @param correlationId {?string} correlation id\r\n     */\r\n    async saveCacheRecord(\r\n        cacheRecord: CacheRecord,\r\n        correlationId: string,\r\n        storeInCache?: StoreInCache\r\n    ): Promise<void> {\r\n        try {\r\n            await super.saveCacheRecord(\r\n                cacheRecord,\r\n                correlationId,\r\n                storeInCache\r\n            );\r\n        } catch (e) {\r\n            if (\r\n                e instanceof CacheError &&\r\n                this.performanceClient &&\r\n                correlationId\r\n            ) {\r\n                try {\r\n                    const tokenKeys = this.getTokenKeys();\r\n\r\n                    this.performanceClient.addFields(\r\n                        {\r\n                            cacheRtCount: tokenKeys.refreshToken.length,\r\n                            cacheIdCount: tokenKeys.idToken.length,\r\n                            cacheAtCount: tokenKeys.accessToken.length,\r\n                        },\r\n                        correlationId\r\n                    );\r\n                } catch (e) {}\r\n            }\r\n\r\n            throw e;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a window storage class implementing the IWindowStorage interface that corresponds to the configured cacheLocation.\r\n * @param cacheLocation\r\n */\r\nfunction getStorageImplementation(\r\n    clientId: string,\r\n    cacheLocation: BrowserCacheLocation | string,\r\n    logger: Logger,\r\n    performanceClient: IPerformanceClient\r\n): IWindowStorage<string> {\r\n    try {\r\n        switch (cacheLocation) {\r\n            case BrowserCacheLocation.LocalStorage:\r\n                return new LocalStorage(clientId, logger, performanceClient);\r\n            case BrowserCacheLocation.SessionStorage:\r\n                return new SessionStorage();\r\n            case BrowserCacheLocation.MemoryStorage:\r\n            default:\r\n                break;\r\n        }\r\n    } catch (e) {\r\n        logger.error(e as string);\r\n    }\r\n\r\n    return new MemoryStorage();\r\n}\r\n\r\nexport const DEFAULT_BROWSER_CACHE_MANAGER = (\r\n    clientId: string,\r\n    logger: Logger,\r\n    performanceClient: IPerformanceClient,\r\n    eventHandler: EventHandler\r\n): BrowserCacheManager => {\r\n    const cacheOptions: Required<CacheOptions> = {\r\n        cacheLocation: BrowserCacheLocation.MemoryStorage,\r\n        temporaryCacheLocation: BrowserCacheLocation.MemoryStorage,\r\n        storeAuthStateInCookie: false,\r\n        secureCookies: false,\r\n        cacheMigrationEnabled: false,\r\n        claimsBasedCachingEnabled: false,\r\n    };\r\n    return new BrowserCacheManager(\r\n        clientId,\r\n        cacheOptions,\r\n        DEFAULT_CRYPTO_IMPLEMENTATION,\r\n        logger,\r\n        performanceClient,\r\n        eventHandler\r\n    );\r\n};\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Logger } from \"@azure/msal-common/browser\";\r\nimport { InteractionType } from \"../utils/BrowserConstants.js\";\r\nimport {\r\n    EventCallbackFunction,\r\n    EventError,\r\n    EventMessage,\r\n    EventPayload,\r\n} from \"./EventMessage.js\";\r\nimport { EventType } from \"./EventType.js\";\r\nimport { createGuid } from \"../utils/BrowserUtils.js\";\r\n\r\nconst BROADCAST_CHANNEL_NAME = \"msal.broadcast.event\";\r\n\r\nexport class EventHandler {\r\n    // Callback for subscribing to events\r\n    private eventCallbacks: Map<\r\n        string,\r\n        [EventCallbackFunction, Array<EventType>]\r\n    >;\r\n    private logger: Logger;\r\n    private broadcastChannel: BroadcastChannel;\r\n\r\n    constructor(logger?: Logger) {\r\n        this.eventCallbacks = new Map();\r\n        this.logger = logger || new Logger({});\r\n        this.broadcastChannel = new BroadcastChannel(BROADCAST_CHANNEL_NAME);\r\n        this.invokeCrossTabCallbacks = this.invokeCrossTabCallbacks.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Adds event callbacks to array\r\n     * @param callback - callback to be invoked when an event is raised\r\n     * @param eventTypes - list of events that this callback will be invoked for, if not provided callback will be invoked for all events\r\n     * @param callbackId - Identifier for the callback, used to locate and remove the callback when no longer required\r\n     */\r\n    addEventCallback(\r\n        callback: EventCallbackFunction,\r\n        eventTypes?: Array<EventType>,\r\n        callbackId?: string\r\n    ): string | null {\r\n        if (typeof window !== \"undefined\") {\r\n            const id = callbackId || createGuid();\r\n            if (this.eventCallbacks.has(id)) {\r\n                this.logger.error(\r\n                    `Event callback with id: ${id} is already registered. Please provide a unique id or remove the existing callback and try again.`\r\n                );\r\n                return null;\r\n            }\r\n            this.eventCallbacks.set(id, [callback, eventTypes || []]);\r\n            this.logger.verbose(`Event callback registered with id: ${id}`);\r\n\r\n            return id;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Removes callback with provided id from callback array\r\n     * @param callbackId\r\n     */\r\n    removeEventCallback(callbackId: string): void {\r\n        this.eventCallbacks.delete(callbackId);\r\n        this.logger.verbose(`Event callback ${callbackId} removed.`);\r\n    }\r\n\r\n    /**\r\n     * Emits events by calling callback with event message\r\n     * @param eventType\r\n     * @param interactionType\r\n     * @param payload\r\n     * @param error\r\n     */\r\n    emitEvent(\r\n        eventType: EventType,\r\n        interactionType?: InteractionType,\r\n        payload?: EventPayload,\r\n        error?: EventError\r\n    ): void {\r\n        const message: EventMessage = {\r\n            eventType: eventType,\r\n            interactionType: interactionType || null,\r\n            payload: payload || null,\r\n            error: error || null,\r\n            timestamp: Date.now(),\r\n        };\r\n\r\n        switch (eventType) {\r\n            case EventType.ACCOUNT_ADDED:\r\n            case EventType.ACCOUNT_REMOVED:\r\n            case EventType.ACTIVE_ACCOUNT_CHANGED:\r\n                // Send event to other open tabs / MSAL instances on same domain\r\n                this.broadcastChannel.postMessage(message);\r\n                break;\r\n            default:\r\n                // Emit event to callbacks registered in this instance\r\n                this.invokeCallbacks(message);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Invoke registered callbacks\r\n     * @param message\r\n     */\r\n    private invokeCallbacks(message: EventMessage): void {\r\n        this.eventCallbacks.forEach(\r\n            (\r\n                [callback, eventTypes]: [\r\n                    EventCallbackFunction,\r\n                    Array<EventType>\r\n                ],\r\n                callbackId: string\r\n            ) => {\r\n                if (\r\n                    eventTypes.length === 0 ||\r\n                    eventTypes.includes(message.eventType)\r\n                ) {\r\n                    this.logger.verbose(\r\n                        `Emitting event to callback ${callbackId}: ${message.eventType}`\r\n                    );\r\n                    callback.apply(null, [message]);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Wrapper around invokeCallbacks to handle broadcast events received from other tabs/instances\r\n     * @param event\r\n     */\r\n    private invokeCrossTabCallbacks(event: MessageEvent): void {\r\n        const message = event.data as EventMessage;\r\n        this.invokeCallbacks(message);\r\n    }\r\n\r\n    /**\r\n     * Listen for events broadcasted from other tabs/instances\r\n     */\r\n    subscribeCrossTab(): void {\r\n        this.broadcastChannel.addEventListener(\r\n            \"message\",\r\n            this.invokeCrossTabCallbacks\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Unsubscribe from broadcast events\r\n     */\r\n    unsubscribeCrossTab(): void {\r\n        this.broadcastChannel.removeEventListener(\r\n            \"message\",\r\n            this.invokeCrossTabCallbacks\r\n        );\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AuthError } from \"./AuthError.js\";\r\n\r\n/**\r\n * Error thrown when there is an error with the server code, for example, unavailability.\r\n */\r\nexport class ServerError extends AuthError {\r\n    /**\r\n     * Server error number;\r\n     */\r\n    readonly errorNo?: string;\r\n\r\n    /**\r\n     * Http status number;\r\n     */\r\n    readonly status?: number;\r\n\r\n    constructor(\r\n        errorCode?: string,\r\n        errorMessage?: string,\r\n        subError?: string,\r\n        errorNo?: string,\r\n        status?: number\r\n    ) {\r\n        super(errorCode, errorMessage, subError);\r\n        this.name = \"ServerError\";\r\n        this.errorNo = errorNo;\r\n        this.status = status;\r\n\r\n        Object.setPrototypeOf(this, ServerError.prototype);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { NetworkResponse } from \"./NetworkResponse.js\";\r\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse.js\";\r\nimport {\r\n    HeaderNames,\r\n    ThrottlingConstants,\r\n    Constants,\r\n} from \"../utils/Constants.js\";\r\nimport { CacheManager } from \"../cache/CacheManager.js\";\r\nimport { ServerError } from \"../error/ServerError.js\";\r\nimport { RequestThumbprint } from \"./RequestThumbprint.js\";\r\nimport { ThrottlingEntity } from \"../cache/entities/ThrottlingEntity.js\";\r\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest.js\";\r\n\r\n/** @internal */\r\nexport class ThrottlingUtils {\r\n    /**\r\n     * Prepares a RequestThumbprint to be stored as a key.\r\n     * @param thumbprint\r\n     */\r\n    static generateThrottlingStorageKey(thumbprint: RequestThumbprint): string {\r\n        return `${ThrottlingConstants.THROTTLING_PREFIX}.${JSON.stringify(\r\n            thumbprint\r\n        )}`;\r\n    }\r\n\r\n    /**\r\n     * Performs necessary throttling checks before a network request.\r\n     * @param cacheManager\r\n     * @param thumbprint\r\n     */\r\n    static preProcess(\r\n        cacheManager: CacheManager,\r\n        thumbprint: RequestThumbprint\r\n    ): void {\r\n        const key = ThrottlingUtils.generateThrottlingStorageKey(thumbprint);\r\n        const value = cacheManager.getThrottlingCache(key);\r\n\r\n        if (value) {\r\n            if (value.throttleTime < Date.now()) {\r\n                cacheManager.removeItem(key);\r\n                return;\r\n            }\r\n            throw new ServerError(\r\n                value.errorCodes?.join(\" \") || Constants.EMPTY_STRING,\r\n                value.errorMessage,\r\n                value.subError\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Performs necessary throttling checks after a network request.\r\n     * @param cacheManager\r\n     * @param thumbprint\r\n     * @param response\r\n     */\r\n    static postProcess(\r\n        cacheManager: CacheManager,\r\n        thumbprint: RequestThumbprint,\r\n        response: NetworkResponse<ServerAuthorizationTokenResponse>\r\n    ): void {\r\n        if (\r\n            ThrottlingUtils.checkResponseStatus(response) ||\r\n            ThrottlingUtils.checkResponseForRetryAfter(response)\r\n        ) {\r\n            const thumbprintValue: ThrottlingEntity = {\r\n                throttleTime: ThrottlingUtils.calculateThrottleTime(\r\n                    parseInt(response.headers[HeaderNames.RETRY_AFTER])\r\n                ),\r\n                error: response.body.error,\r\n                errorCodes: response.body.error_codes,\r\n                errorMessage: response.body.error_description,\r\n                subError: response.body.suberror,\r\n            };\r\n            cacheManager.setThrottlingCache(\r\n                ThrottlingUtils.generateThrottlingStorageKey(thumbprint),\r\n                thumbprintValue\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks a NetworkResponse object's status codes against 429 or 5xx\r\n     * @param response\r\n     */\r\n    static checkResponseStatus(\r\n        response: NetworkResponse<ServerAuthorizationTokenResponse>\r\n    ): boolean {\r\n        return (\r\n            response.status === 429 ||\r\n            (response.status >= 500 && response.status < 600)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Checks a NetworkResponse object's RetryAfter header\r\n     * @param response\r\n     */\r\n    static checkResponseForRetryAfter(\r\n        response: NetworkResponse<ServerAuthorizationTokenResponse>\r\n    ): boolean {\r\n        if (response.headers) {\r\n            return (\r\n                response.headers.hasOwnProperty(HeaderNames.RETRY_AFTER) &&\r\n                (response.status < 200 || response.status >= 300)\r\n            );\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Calculates the Unix-time value for a throttle to expire given throttleTime in seconds.\r\n     * @param throttleTime\r\n     */\r\n    static calculateThrottleTime(throttleTime: number): number {\r\n        const time = throttleTime <= 0 ? 0 : throttleTime;\r\n\r\n        const currentSeconds = Date.now() / 1000;\r\n        return Math.floor(\r\n            Math.min(\r\n                currentSeconds +\r\n                    (time || ThrottlingConstants.DEFAULT_THROTTLE_TIME_SECONDS),\r\n                currentSeconds +\r\n                    ThrottlingConstants.DEFAULT_MAX_THROTTLE_TIME_SECONDS\r\n            ) * 1000\r\n        );\r\n    }\r\n\r\n    static removeThrottle(\r\n        cacheManager: CacheManager,\r\n        clientId: string,\r\n        request: BaseAuthRequest,\r\n        homeAccountIdentifier?: string\r\n    ): void {\r\n        const thumbprint: RequestThumbprint = {\r\n            clientId: clientId,\r\n            authority: request.authority,\r\n            scopes: request.scopes,\r\n            homeAccountIdentifier: homeAccountIdentifier,\r\n            claims: request.claims,\r\n            authenticationScheme: request.authenticationScheme,\r\n            resourceRequestMethod: request.resourceRequestMethod,\r\n            resourceRequestUri: request.resourceRequestUri,\r\n            shrClaims: request.shrClaims,\r\n            sshKid: request.sshKid,\r\n        };\r\n\r\n        const key = this.generateThrottlingStorageKey(thumbprint);\r\n        cacheManager.removeItem(key);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nexport const CLIENT_ID = \"client_id\";\r\nexport const REDIRECT_URI = \"redirect_uri\";\r\nexport const RESPONSE_TYPE = \"response_type\";\r\nexport const RESPONSE_MODE = \"response_mode\";\r\nexport const GRANT_TYPE = \"grant_type\";\r\nexport const CLAIMS = \"claims\";\r\nexport const SCOPE = \"scope\";\r\nexport const ERROR = \"error\";\r\nexport const ERROR_DESCRIPTION = \"error_description\";\r\nexport const ACCESS_TOKEN = \"access_token\";\r\nexport const ID_TOKEN = \"id_token\";\r\nexport const REFRESH_TOKEN = \"refresh_token\";\r\nexport const EXPIRES_IN = \"expires_in\";\r\nexport const REFRESH_TOKEN_EXPIRES_IN = \"refresh_token_expires_in\";\r\nexport const STATE = \"state\";\r\nexport const NONCE = \"nonce\";\r\nexport const PROMPT = \"prompt\";\r\nexport const SESSION_STATE = \"session_state\";\r\nexport const CLIENT_INFO = \"client_info\";\r\nexport const CODE = \"code\";\r\nexport const CODE_CHALLENGE = \"code_challenge\";\r\nexport const CODE_CHALLENGE_METHOD = \"code_challenge_method\";\r\nexport const CODE_VERIFIER = \"code_verifier\";\r\nexport const CLIENT_REQUEST_ID = \"client-request-id\";\r\nexport const X_CLIENT_SKU = \"x-client-SKU\";\r\nexport const X_CLIENT_VER = \"x-client-VER\";\r\nexport const X_CLIENT_OS = \"x-client-OS\";\r\nexport const X_CLIENT_CPU = \"x-client-CPU\";\r\nexport const X_CLIENT_CURR_TELEM = \"x-client-current-telemetry\";\r\nexport const X_CLIENT_LAST_TELEM = \"x-client-last-telemetry\";\r\nexport const X_MS_LIB_CAPABILITY = \"x-ms-lib-capability\";\r\nexport const X_APP_NAME = \"x-app-name\";\r\nexport const X_APP_VER = \"x-app-ver\";\r\nexport const POST_LOGOUT_URI = \"post_logout_redirect_uri\";\r\nexport const ID_TOKEN_HINT = \"id_token_hint\";\r\nexport const DEVICE_CODE = \"device_code\";\r\nexport const CLIENT_SECRET = \"client_secret\";\r\nexport const CLIENT_ASSERTION = \"client_assertion\";\r\nexport const CLIENT_ASSERTION_TYPE = \"client_assertion_type\";\r\nexport const TOKEN_TYPE = \"token_type\";\r\nexport const REQ_CNF = \"req_cnf\";\r\nexport const OBO_ASSERTION = \"assertion\";\r\nexport const REQUESTED_TOKEN_USE = \"requested_token_use\";\r\nexport const ON_BEHALF_OF = \"on_behalf_of\";\r\nexport const FOCI = \"foci\";\r\nexport const CCS_HEADER = \"X-AnchorMailbox\";\r\nexport const RETURN_SPA_CODE = \"return_spa_code\";\r\nexport const NATIVE_BROKER = \"nativebroker\";\r\nexport const LOGOUT_HINT = \"logout_hint\";\r\nexport const SID = \"sid\";\r\nexport const LOGIN_HINT = \"login_hint\";\r\nexport const DOMAIN_HINT = \"domain_hint\";\r\nexport const X_CLIENT_EXTRA_SKU = \"x-client-xtra-sku\";\r\nexport const BROKER_CLIENT_ID = \"brk_client_id\";\r\nexport const BROKER_REDIRECT_URI = \"brk_redirect_uri\";\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    createClientConfigurationError,\r\n    ClientConfigurationErrorCodes,\r\n} from \"../error/ClientConfigurationError.js\";\r\nimport { PromptValue, CodeChallengeMethodValues } from \"../utils/Constants.js\";\r\n\r\n/**\r\n * Validates server consumable params from the \"request\" objects\r\n */\r\nexport class RequestValidator {\r\n    /**\r\n     * Utility to check if the `redirectUri` in the request is a non-null value\r\n     * @param redirectUri\r\n     */\r\n    static validateRedirectUri(redirectUri: string): void {\r\n        if (!redirectUri) {\r\n            throw createClientConfigurationError(\r\n                ClientConfigurationErrorCodes.redirectUriEmpty\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Utility to validate prompt sent by the user in the request\r\n     * @param prompt\r\n     */\r\n    static validatePrompt(prompt: string): void {\r\n        const promptValues = [];\r\n\r\n        for (const value in PromptValue) {\r\n            promptValues.push(PromptValue[value]);\r\n        }\r\n\r\n        if (promptValues.indexOf(prompt) < 0) {\r\n            throw createClientConfigurationError(\r\n                ClientConfigurationErrorCodes.invalidPromptValue\r\n            );\r\n        }\r\n    }\r\n\r\n    static validateClaims(claims: string): void {\r\n        try {\r\n            JSON.parse(claims);\r\n        } catch (e) {\r\n            throw createClientConfigurationError(\r\n                ClientConfigurationErrorCodes.invalidClaims\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Utility to validate code_challenge and code_challenge_method\r\n     * @param codeChallenge\r\n     * @param codeChallengeMethod\r\n     */\r\n    static validateCodeChallengeParams(\r\n        codeChallenge: string,\r\n        codeChallengeMethod: string\r\n    ): void {\r\n        if (!codeChallenge || !codeChallengeMethod) {\r\n            throw createClientConfigurationError(\r\n                ClientConfigurationErrorCodes.pkceParamsMissing\r\n            );\r\n        } else {\r\n            this.validateCodeChallengeMethod(codeChallengeMethod);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Utility to validate code_challenge_method\r\n     * @param codeChallengeMethod\r\n     */\r\n    static validateCodeChallengeMethod(codeChallengeMethod: string): void {\r\n        if (\r\n            [\r\n                CodeChallengeMethodValues.PLAIN,\r\n                CodeChallengeMethodValues.S256,\r\n            ].indexOf(codeChallengeMethod) < 0\r\n        ) {\r\n            throw createClientConfigurationError(\r\n                ClientConfigurationErrorCodes.invalidCodeChallengeMethod\r\n            );\r\n        }\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    Constants,\r\n    ResponseMode,\r\n    CLIENT_INFO,\r\n    AuthenticationScheme,\r\n    ClaimsRequestKeys,\r\n    PasswordGrantConstants,\r\n    OIDC_DEFAULT_SCOPES,\r\n    ThrottlingConstants,\r\n    HeaderNames,\r\n} from \"../utils/Constants.js\";\r\nimport * as AADServerParamKeys from \"../constants/AADServerParamKeys.js\";\r\nimport { ScopeSet } from \"./ScopeSet.js\";\r\nimport {\r\n    createClientConfigurationError,\r\n    ClientConfigurationErrorCodes,\r\n} from \"../error/ClientConfigurationError.js\";\r\nimport { StringDict } from \"../utils/MsalTypes.js\";\r\nimport { RequestValidator } from \"./RequestValidator.js\";\r\nimport {\r\n    ApplicationTelemetry,\r\n    LibraryInfo,\r\n} from \"../config/ClientConfiguration.js\";\r\nimport { ServerTelemetryManager } from \"../telemetry/server/ServerTelemetryManager.js\";\r\nimport { ClientInfo } from \"../account/ClientInfo.js\";\r\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient.js\";\r\n\r\nfunction instrumentBrokerParams(\r\n    parameters: Map<string, string>,\r\n    correlationId?: string,\r\n    performanceClient?: IPerformanceClient\r\n) {\r\n    if (!correlationId) {\r\n        return;\r\n    }\r\n\r\n    const clientId = parameters.get(AADServerParamKeys.CLIENT_ID);\r\n    if (clientId && parameters.has(AADServerParamKeys.BROKER_CLIENT_ID)) {\r\n        performanceClient?.addFields(\r\n            {\r\n                embeddedClientId: clientId,\r\n                embeddedRedirectUri: parameters.get(\r\n                    AADServerParamKeys.REDIRECT_URI\r\n                ),\r\n            },\r\n            correlationId\r\n        );\r\n    }\r\n}\r\n\r\n/** @internal */\r\nexport class RequestParameterBuilder {\r\n    private parameters: Map<string, string>;\r\n    private readonly performanceClient?: IPerformanceClient;\r\n    private readonly correlationId?: string;\r\n\r\n    constructor(\r\n        correlationId?: string,\r\n        performanceClient?: IPerformanceClient\r\n    ) {\r\n        this.parameters = new Map<string, string>();\r\n        this.performanceClient = performanceClient;\r\n        this.correlationId = correlationId;\r\n    }\r\n\r\n    /**\r\n     * add response_type = code\r\n     */\r\n    addResponseTypeCode(): void {\r\n        this.parameters.set(\r\n            AADServerParamKeys.RESPONSE_TYPE,\r\n            encodeURIComponent(Constants.CODE_RESPONSE_TYPE)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * add response_type = token id_token\r\n     */\r\n    addResponseTypeForTokenAndIdToken(): void {\r\n        this.parameters.set(\r\n            AADServerParamKeys.RESPONSE_TYPE,\r\n            encodeURIComponent(\r\n                `${Constants.TOKEN_RESPONSE_TYPE} ${Constants.ID_TOKEN_RESPONSE_TYPE}`\r\n            )\r\n        );\r\n    }\r\n\r\n    /**\r\n     * add response_mode. defaults to query.\r\n     * @param responseMode\r\n     */\r\n    addResponseMode(responseMode?: ResponseMode): void {\r\n        this.parameters.set(\r\n            AADServerParamKeys.RESPONSE_MODE,\r\n            encodeURIComponent(responseMode ? responseMode : ResponseMode.QUERY)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Add flag to indicate STS should attempt to use WAM if available\r\n     */\r\n    addNativeBroker(): void {\r\n        this.parameters.set(\r\n            AADServerParamKeys.NATIVE_BROKER,\r\n            encodeURIComponent(\"1\")\r\n        );\r\n    }\r\n\r\n    /**\r\n     * add scopes. set addOidcScopes to false to prevent default scopes in non-user scenarios\r\n     * @param scopeSet\r\n     * @param addOidcScopes\r\n     */\r\n    addScopes(\r\n        scopes: string[],\r\n        addOidcScopes: boolean = true,\r\n        defaultScopes: Array<string> = OIDC_DEFAULT_SCOPES\r\n    ): void {\r\n        // Always add openid to the scopes when adding OIDC scopes\r\n        if (\r\n            addOidcScopes &&\r\n            !defaultScopes.includes(\"openid\") &&\r\n            !scopes.includes(\"openid\")\r\n        ) {\r\n            defaultScopes.push(\"openid\");\r\n        }\r\n        const requestScopes = addOidcScopes\r\n            ? [...(scopes || []), ...defaultScopes]\r\n            : scopes || [];\r\n        const scopeSet = new ScopeSet(requestScopes);\r\n        this.parameters.set(\r\n            AADServerParamKeys.SCOPE,\r\n            encodeURIComponent(scopeSet.printScopes())\r\n        );\r\n    }\r\n\r\n    /**\r\n     * add clientId\r\n     * @param clientId\r\n     */\r\n    addClientId(clientId: string): void {\r\n        this.parameters.set(\r\n            AADServerParamKeys.CLIENT_ID,\r\n            encodeURIComponent(clientId)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * add redirect_uri\r\n     * @param redirectUri\r\n     */\r\n    addRedirectUri(redirectUri: string): void {\r\n        RequestValidator.validateRedirectUri(redirectUri);\r\n        this.parameters.set(\r\n            AADServerParamKeys.REDIRECT_URI,\r\n            encodeURIComponent(redirectUri)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * add post logout redirectUri\r\n     * @param redirectUri\r\n     */\r\n    addPostLogoutRedirectUri(redirectUri: string): void {\r\n        RequestValidator.validateRedirectUri(redirectUri);\r\n        this.parameters.set(\r\n            AADServerParamKeys.POST_LOGOUT_URI,\r\n            encodeURIComponent(redirectUri)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * add id_token_hint to logout request\r\n     * @param idTokenHint\r\n     */\r\n    addIdTokenHint(idTokenHint: string): void {\r\n        this.parameters.set(\r\n            AADServerParamKeys.ID_TOKEN_HINT,\r\n            encodeURIComponent(idTokenHint)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * add domain_hint\r\n     * @param domainHint\r\n     */\r\n    addDomainHint(domainHint: string): void {\r\n        this.parameters.set(\r\n            AADServerParamKeys.DOMAIN_HINT,\r\n            encodeURIComponent(domainHint)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * add login_hint\r\n     * @param loginHint\r\n     */\r\n    addLoginHint(loginHint: string): void {\r\n        this.parameters.set(\r\n            AADServerParamKeys.LOGIN_HINT,\r\n            encodeURIComponent(loginHint)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Adds the CCS (Cache Credential Service) query parameter for login_hint\r\n     * @param loginHint\r\n     */\r\n    addCcsUpn(loginHint: string): void {\r\n        this.parameters.set(\r\n            HeaderNames.CCS_HEADER,\r\n            encodeURIComponent(`UPN:${loginHint}`)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Adds the CCS (Cache Credential Service) query parameter for account object\r\n     * @param loginHint\r\n     */\r\n    addCcsOid(clientInfo: ClientInfo): void {\r\n        this.parameters.set(\r\n            HeaderNames.CCS_HEADER,\r\n            encodeURIComponent(`Oid:${clientInfo.uid}@${clientInfo.utid}`)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * add sid\r\n     * @param sid\r\n     */\r\n    addSid(sid: string): void {\r\n        this.parameters.set(AADServerParamKeys.SID, encodeURIComponent(sid));\r\n    }\r\n\r\n    /**\r\n     * add claims\r\n     * @param claims\r\n     */\r\n    addClaims(claims?: string, clientCapabilities?: Array<string>): void {\r\n        const mergedClaims = this.addClientCapabilitiesToClaims(\r\n            claims,\r\n            clientCapabilities\r\n        );\r\n        RequestValidator.validateClaims(mergedClaims);\r\n        this.parameters.set(\r\n            AADServerParamKeys.CLAIMS,\r\n            encodeURIComponent(mergedClaims)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * add correlationId\r\n     * @param correlationId\r\n     */\r\n    addCorrelationId(correlationId: string): void {\r\n        this.parameters.set(\r\n            AADServerParamKeys.CLIENT_REQUEST_ID,\r\n            encodeURIComponent(correlationId)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * add library info query params\r\n     * @param libraryInfo\r\n     */\r\n    addLibraryInfo(libraryInfo: LibraryInfo): void {\r\n        // Telemetry Info\r\n        this.parameters.set(AADServerParamKeys.X_CLIENT_SKU, libraryInfo.sku);\r\n        this.parameters.set(\r\n            AADServerParamKeys.X_CLIENT_VER,\r\n            libraryInfo.version\r\n        );\r\n        if (libraryInfo.os) {\r\n            this.parameters.set(AADServerParamKeys.X_CLIENT_OS, libraryInfo.os);\r\n        }\r\n        if (libraryInfo.cpu) {\r\n            this.parameters.set(\r\n                AADServerParamKeys.X_CLIENT_CPU,\r\n                libraryInfo.cpu\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add client telemetry parameters\r\n     * @param appTelemetry\r\n     */\r\n    addApplicationTelemetry(appTelemetry: ApplicationTelemetry): void {\r\n        if (appTelemetry?.appName) {\r\n            this.parameters.set(\r\n                AADServerParamKeys.X_APP_NAME,\r\n                appTelemetry.appName\r\n            );\r\n        }\r\n\r\n        if (appTelemetry?.appVersion) {\r\n            this.parameters.set(\r\n                AADServerParamKeys.X_APP_VER,\r\n                appTelemetry.appVersion\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * add prompt\r\n     * @param prompt\r\n     */\r\n    addPrompt(prompt: string): void {\r\n        RequestValidator.validatePrompt(prompt);\r\n        this.parameters.set(\r\n            `${AADServerParamKeys.PROMPT}`,\r\n            encodeURIComponent(prompt)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * add state\r\n     * @param state\r\n     */\r\n    addState(state: string): void {\r\n        if (state) {\r\n            this.parameters.set(\r\n                AADServerParamKeys.STATE,\r\n                encodeURIComponent(state)\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * add nonce\r\n     * @param nonce\r\n     */\r\n    addNonce(nonce: string): void {\r\n        this.parameters.set(\r\n            AADServerParamKeys.NONCE,\r\n            encodeURIComponent(nonce)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * add code_challenge and code_challenge_method\r\n     * - throw if either of them are not passed\r\n     * @param codeChallenge\r\n     * @param codeChallengeMethod\r\n     */\r\n    addCodeChallengeParams(\r\n        codeChallenge: string,\r\n        codeChallengeMethod: string\r\n    ): void {\r\n        RequestValidator.validateCodeChallengeParams(\r\n            codeChallenge,\r\n            codeChallengeMethod\r\n        );\r\n        if (codeChallenge && codeChallengeMethod) {\r\n            this.parameters.set(\r\n                AADServerParamKeys.CODE_CHALLENGE,\r\n                encodeURIComponent(codeChallenge)\r\n            );\r\n            this.parameters.set(\r\n                AADServerParamKeys.CODE_CHALLENGE_METHOD,\r\n                encodeURIComponent(codeChallengeMethod)\r\n            );\r\n        } else {\r\n            throw createClientConfigurationError(\r\n                ClientConfigurationErrorCodes.pkceParamsMissing\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * add the `authorization_code` passed by the user to exchange for a token\r\n     * @param code\r\n     */\r\n    addAuthorizationCode(code: string): void {\r\n        this.parameters.set(AADServerParamKeys.CODE, encodeURIComponent(code));\r\n    }\r\n\r\n    /**\r\n     * add the `authorization_code` passed by the user to exchange for a token\r\n     * @param code\r\n     */\r\n    addDeviceCode(code: string): void {\r\n        this.parameters.set(\r\n            AADServerParamKeys.DEVICE_CODE,\r\n            encodeURIComponent(code)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * add the `refreshToken` passed by the user\r\n     * @param refreshToken\r\n     */\r\n    addRefreshToken(refreshToken: string): void {\r\n        this.parameters.set(\r\n            AADServerParamKeys.REFRESH_TOKEN,\r\n            encodeURIComponent(refreshToken)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * add the `code_verifier` passed by the user to exchange for a token\r\n     * @param codeVerifier\r\n     */\r\n    addCodeVerifier(codeVerifier: string): void {\r\n        this.parameters.set(\r\n            AADServerParamKeys.CODE_VERIFIER,\r\n            encodeURIComponent(codeVerifier)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * add client_secret\r\n     * @param clientSecret\r\n     */\r\n    addClientSecret(clientSecret: string): void {\r\n        this.parameters.set(\r\n            AADServerParamKeys.CLIENT_SECRET,\r\n            encodeURIComponent(clientSecret)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * add clientAssertion for confidential client flows\r\n     * @param clientAssertion\r\n     */\r\n    addClientAssertion(clientAssertion: string): void {\r\n        if (clientAssertion) {\r\n            this.parameters.set(\r\n                AADServerParamKeys.CLIENT_ASSERTION,\r\n                encodeURIComponent(clientAssertion)\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * add clientAssertionType for confidential client flows\r\n     * @param clientAssertionType\r\n     */\r\n    addClientAssertionType(clientAssertionType: string): void {\r\n        if (clientAssertionType) {\r\n            this.parameters.set(\r\n                AADServerParamKeys.CLIENT_ASSERTION_TYPE,\r\n                encodeURIComponent(clientAssertionType)\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * add OBO assertion for confidential client flows\r\n     * @param clientAssertion\r\n     */\r\n    addOboAssertion(oboAssertion: string): void {\r\n        this.parameters.set(\r\n            AADServerParamKeys.OBO_ASSERTION,\r\n            encodeURIComponent(oboAssertion)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * add grant type\r\n     * @param grantType\r\n     */\r\n    addRequestTokenUse(tokenUse: string): void {\r\n        this.parameters.set(\r\n            AADServerParamKeys.REQUESTED_TOKEN_USE,\r\n            encodeURIComponent(tokenUse)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * add grant type\r\n     * @param grantType\r\n     */\r\n    addGrantType(grantType: string): void {\r\n        this.parameters.set(\r\n            AADServerParamKeys.GRANT_TYPE,\r\n            encodeURIComponent(grantType)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * add client info\r\n     *\r\n     */\r\n    addClientInfo(): void {\r\n        this.parameters.set(CLIENT_INFO, \"1\");\r\n    }\r\n\r\n    /**\r\n     * add extraQueryParams\r\n     * @param eQParams\r\n     */\r\n    addExtraQueryParameters(eQParams: StringDict): void {\r\n        Object.entries(eQParams).forEach(([key, value]) => {\r\n            if (!this.parameters.has(key) && value) {\r\n                this.parameters.set(key, value);\r\n            }\r\n        });\r\n    }\r\n\r\n    addClientCapabilitiesToClaims(\r\n        claims?: string,\r\n        clientCapabilities?: Array<string>\r\n    ): string {\r\n        let mergedClaims: object;\r\n\r\n        // Parse provided claims into JSON object or initialize empty object\r\n        if (!claims) {\r\n            mergedClaims = {};\r\n        } else {\r\n            try {\r\n                mergedClaims = JSON.parse(claims);\r\n            } catch (e) {\r\n                throw createClientConfigurationError(\r\n                    ClientConfigurationErrorCodes.invalidClaims\r\n                );\r\n            }\r\n        }\r\n\r\n        if (clientCapabilities && clientCapabilities.length > 0) {\r\n            if (!mergedClaims.hasOwnProperty(ClaimsRequestKeys.ACCESS_TOKEN)) {\r\n                // Add access_token key to claims object\r\n                mergedClaims[ClaimsRequestKeys.ACCESS_TOKEN] = {};\r\n            }\r\n\r\n            // Add xms_cc claim with provided clientCapabilities to access_token key\r\n            mergedClaims[ClaimsRequestKeys.ACCESS_TOKEN][\r\n                ClaimsRequestKeys.XMS_CC\r\n            ] = {\r\n                values: clientCapabilities,\r\n            };\r\n        }\r\n\r\n        return JSON.stringify(mergedClaims);\r\n    }\r\n\r\n    /**\r\n     * adds `username` for Password Grant flow\r\n     * @param username\r\n     */\r\n    addUsername(username: string): void {\r\n        this.parameters.set(\r\n            PasswordGrantConstants.username,\r\n            encodeURIComponent(username)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * adds `password` for Password Grant flow\r\n     * @param password\r\n     */\r\n    addPassword(password: string): void {\r\n        this.parameters.set(\r\n            PasswordGrantConstants.password,\r\n            encodeURIComponent(password)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * add pop_jwk to query params\r\n     * @param cnfString\r\n     */\r\n    addPopToken(cnfString: string): void {\r\n        if (cnfString) {\r\n            this.parameters.set(\r\n                AADServerParamKeys.TOKEN_TYPE,\r\n                AuthenticationScheme.POP\r\n            );\r\n            this.parameters.set(\r\n                AADServerParamKeys.REQ_CNF,\r\n                encodeURIComponent(cnfString)\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * add SSH JWK and key ID to query params\r\n     */\r\n    addSshJwk(sshJwkString: string): void {\r\n        if (sshJwkString) {\r\n            this.parameters.set(\r\n                AADServerParamKeys.TOKEN_TYPE,\r\n                AuthenticationScheme.SSH\r\n            );\r\n            this.parameters.set(\r\n                AADServerParamKeys.REQ_CNF,\r\n                encodeURIComponent(sshJwkString)\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * add server telemetry fields\r\n     * @param serverTelemetryManager\r\n     */\r\n    addServerTelemetry(serverTelemetryManager: ServerTelemetryManager): void {\r\n        this.parameters.set(\r\n            AADServerParamKeys.X_CLIENT_CURR_TELEM,\r\n            serverTelemetryManager.generateCurrentRequestHeaderValue()\r\n        );\r\n        this.parameters.set(\r\n            AADServerParamKeys.X_CLIENT_LAST_TELEM,\r\n            serverTelemetryManager.generateLastRequestHeaderValue()\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Adds parameter that indicates to the server that throttling is supported\r\n     */\r\n    addThrottling(): void {\r\n        this.parameters.set(\r\n            AADServerParamKeys.X_MS_LIB_CAPABILITY,\r\n            ThrottlingConstants.X_MS_LIB_CAPABILITY_VALUE\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Adds logout_hint parameter for \"silent\" logout which prevent server account picker\r\n     */\r\n    addLogoutHint(logoutHint: string): void {\r\n        this.parameters.set(\r\n            AADServerParamKeys.LOGOUT_HINT,\r\n            encodeURIComponent(logoutHint)\r\n        );\r\n    }\r\n\r\n    addBrokerParameters(params: {\r\n        brokerClientId: string;\r\n        brokerRedirectUri: string;\r\n    }): void {\r\n        const brokerParams: StringDict = {};\r\n        brokerParams[AADServerParamKeys.BROKER_CLIENT_ID] =\r\n            params.brokerClientId;\r\n        brokerParams[AADServerParamKeys.BROKER_REDIRECT_URI] =\r\n            params.brokerRedirectUri;\r\n\r\n        this.addExtraQueryParameters(brokerParams);\r\n    }\r\n\r\n    /**\r\n     * Utility to create a URL from the params map\r\n     */\r\n    createQueryString(): string {\r\n        const queryParameterArray: Array<string> = new Array<string>();\r\n\r\n        this.parameters.forEach((value, key) => {\r\n            queryParameterArray.push(`${key}=${value}`);\r\n        });\r\n\r\n        instrumentBrokerParams(\r\n            this.parameters,\r\n            this.correlationId,\r\n            this.performanceClient\r\n        );\r\n\r\n        return queryParameterArray.join(\"&\");\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Authority, formatAuthorityUri } from \"./Authority.js\";\r\nimport { INetworkModule } from \"../network/INetworkModule.js\";\r\nimport {\r\n    createClientAuthError,\r\n    ClientAuthErrorCodes,\r\n} from \"../error/ClientAuthError.js\";\r\nimport { ICacheManager } from \"../cache/interface/ICacheManager.js\";\r\nimport { AuthorityOptions } from \"./AuthorityOptions.js\";\r\nimport { Logger } from \"../logger/Logger.js\";\r\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient.js\";\r\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent.js\";\r\nimport { invokeAsync } from \"../utils/FunctionWrappers.js\";\r\n\r\n/**\r\n * Create an authority object of the correct type based on the url\r\n * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\r\n *\r\n * Also performs endpoint discovery.\r\n *\r\n * @param authorityUri\r\n * @param networkClient\r\n * @param protocolMode\r\n * @internal\r\n */\r\nexport async function createDiscoveredInstance(\r\n    authorityUri: string,\r\n    networkClient: INetworkModule,\r\n    cacheManager: ICacheManager,\r\n    authorityOptions: AuthorityOptions,\r\n    logger: Logger,\r\n    correlationId: string,\r\n    performanceClient?: IPerformanceClient\r\n): Promise<Authority> {\r\n    performanceClient?.addQueueMeasurement(\r\n        PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance,\r\n        correlationId\r\n    );\r\n    const authorityUriFinal = Authority.transformCIAMAuthority(\r\n        formatAuthorityUri(authorityUri)\r\n    );\r\n\r\n    // Initialize authority and perform discovery endpoint check.\r\n    const acquireTokenAuthority: Authority = new Authority(\r\n        authorityUriFinal,\r\n        networkClient,\r\n        cacheManager,\r\n        authorityOptions,\r\n        logger,\r\n        correlationId,\r\n        performanceClient\r\n    );\r\n\r\n    try {\r\n        await invokeAsync(\r\n            acquireTokenAuthority.resolveEndpointsAsync.bind(\r\n                acquireTokenAuthority\r\n            ),\r\n            PerformanceEvents.AuthorityResolveEndpointsAsync,\r\n            logger,\r\n            performanceClient,\r\n            correlationId\r\n        )();\r\n        return acquireTokenAuthority;\r\n    } catch (e) {\r\n        throw createClientAuthError(\r\n            ClientAuthErrorCodes.endpointResolutionError\r\n        );\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    ClientConfiguration,\r\n    buildClientConfiguration,\r\n    CommonClientConfiguration,\r\n} from \"../config/ClientConfiguration.js\";\r\nimport {\r\n    INetworkModule,\r\n    NetworkRequestOptions,\r\n} from \"../network/INetworkModule.js\";\r\nimport { NetworkResponse } from \"../network/NetworkResponse.js\";\r\nimport { ICrypto } from \"../crypto/ICrypto.js\";\r\nimport { Authority } from \"../authority/Authority.js\";\r\nimport { Logger } from \"../logger/Logger.js\";\r\nimport { Constants, HeaderNames } from \"../utils/Constants.js\";\r\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse.js\";\r\nimport { CacheManager } from \"../cache/CacheManager.js\";\r\nimport { ServerTelemetryManager } from \"../telemetry/server/ServerTelemetryManager.js\";\r\nimport { RequestThumbprint } from \"../network/RequestThumbprint.js\";\r\nimport { version, name } from \"../packageMetadata.js\";\r\nimport { CcsCredential, CcsCredentialType } from \"../account/CcsCredential.js\";\r\nimport { buildClientInfoFromHomeAccountId } from \"../account/ClientInfo.js\";\r\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient.js\";\r\nimport { RequestParameterBuilder } from \"../request/RequestParameterBuilder.js\";\r\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest.js\";\r\nimport { createDiscoveredInstance } from \"../authority/AuthorityFactory.js\";\r\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent.js\";\r\nimport { ThrottlingUtils } from \"../network/ThrottlingUtils.js\";\r\nimport { AuthError } from \"../error/AuthError.js\";\r\nimport {\r\n    ClientAuthErrorCodes,\r\n    createClientAuthError,\r\n} from \"../error/ClientAuthError.js\";\r\nimport { NetworkError } from \"../error/NetworkError.js\";\r\nimport { invokeAsync } from \"../utils/FunctionWrappers.js\";\r\n\r\n/**\r\n * Base application class which will construct requests to send to and handle responses from the Microsoft STS using the authorization code flow.\r\n * @internal\r\n */\r\nexport abstract class BaseClient {\r\n    // Logger object\r\n    public logger: Logger;\r\n\r\n    // Application config\r\n    protected config: CommonClientConfiguration;\r\n\r\n    // Crypto Interface\r\n    protected cryptoUtils: ICrypto;\r\n\r\n    // Storage Interface\r\n    protected cacheManager: CacheManager;\r\n\r\n    // Network Interface\r\n    protected networkClient: INetworkModule;\r\n\r\n    // Server Telemetry Manager\r\n    protected serverTelemetryManager: ServerTelemetryManager | null;\r\n\r\n    // Default authority object\r\n    public authority: Authority;\r\n\r\n    // Performance telemetry client\r\n    protected performanceClient?: IPerformanceClient;\r\n\r\n    protected constructor(\r\n        configuration: ClientConfiguration,\r\n        performanceClient?: IPerformanceClient\r\n    ) {\r\n        // Set the configuration\r\n        this.config = buildClientConfiguration(configuration);\r\n\r\n        // Initialize the logger\r\n        this.logger = new Logger(this.config.loggerOptions, name, version);\r\n\r\n        // Initialize crypto\r\n        this.cryptoUtils = this.config.cryptoInterface;\r\n\r\n        // Initialize storage interface\r\n        this.cacheManager = this.config.storageInterface;\r\n\r\n        // Set the network interface\r\n        this.networkClient = this.config.networkInterface;\r\n\r\n        // Set TelemetryManager\r\n        this.serverTelemetryManager = this.config.serverTelemetryManager;\r\n\r\n        // set Authority\r\n        this.authority = this.config.authOptions.authority;\r\n\r\n        // set performance telemetry client\r\n        this.performanceClient = performanceClient;\r\n    }\r\n\r\n    /**\r\n     * Creates default headers for requests to token endpoint\r\n     */\r\n    protected createTokenRequestHeaders(\r\n        ccsCred?: CcsCredential\r\n    ): Record<string, string> {\r\n        const headers: Record<string, string> = {};\r\n        headers[HeaderNames.CONTENT_TYPE] = Constants.URL_FORM_CONTENT_TYPE;\r\n        if (!this.config.systemOptions.preventCorsPreflight && ccsCred) {\r\n            switch (ccsCred.type) {\r\n                case CcsCredentialType.HOME_ACCOUNT_ID:\r\n                    try {\r\n                        const clientInfo = buildClientInfoFromHomeAccountId(\r\n                            ccsCred.credential\r\n                        );\r\n                        headers[\r\n                            HeaderNames.CCS_HEADER\r\n                        ] = `Oid:${clientInfo.uid}@${clientInfo.utid}`;\r\n                    } catch (e) {\r\n                        this.logger.verbose(\r\n                            \"Could not parse home account ID for CCS Header: \" +\r\n                                e\r\n                        );\r\n                    }\r\n                    break;\r\n                case CcsCredentialType.UPN:\r\n                    headers[\r\n                        HeaderNames.CCS_HEADER\r\n                    ] = `UPN: ${ccsCred.credential}`;\r\n                    break;\r\n            }\r\n        }\r\n        return headers;\r\n    }\r\n\r\n    /**\r\n     * Http post to token endpoint\r\n     * @param tokenEndpoint\r\n     * @param queryString\r\n     * @param headers\r\n     * @param thumbprint\r\n     */\r\n    protected async executePostToTokenEndpoint(\r\n        tokenEndpoint: string,\r\n        queryString: string,\r\n        headers: Record<string, string>,\r\n        thumbprint: RequestThumbprint,\r\n        correlationId: string,\r\n        queuedEvent?: string\r\n    ): Promise<NetworkResponse<ServerAuthorizationTokenResponse>> {\r\n        if (queuedEvent) {\r\n            this.performanceClient?.addQueueMeasurement(\r\n                queuedEvent,\r\n                correlationId\r\n            );\r\n        }\r\n\r\n        const response =\r\n            await this.sendPostRequest<ServerAuthorizationTokenResponse>(\r\n                thumbprint,\r\n                tokenEndpoint,\r\n                { body: queryString, headers: headers },\r\n                correlationId\r\n            );\r\n\r\n        if (\r\n            this.config.serverTelemetryManager &&\r\n            response.status < 500 &&\r\n            response.status !== 429\r\n        ) {\r\n            // Telemetry data successfully logged by server, clear Telemetry cache\r\n            this.config.serverTelemetryManager.clearTelemetryCache();\r\n        }\r\n\r\n        return response;\r\n    }\r\n\r\n    /**\r\n     * Wraps sendPostRequestAsync with necessary preflight and postflight logic\r\n     * @param thumbprint - Request thumbprint for throttling\r\n     * @param tokenEndpoint - Endpoint to make the POST to\r\n     * @param options - Body and Headers to include on the POST request\r\n     * @param correlationId - CorrelationId for telemetry\r\n     */\r\n    async sendPostRequest<T extends ServerAuthorizationTokenResponse>(\r\n        thumbprint: RequestThumbprint,\r\n        tokenEndpoint: string,\r\n        options: NetworkRequestOptions,\r\n        correlationId: string\r\n    ): Promise<NetworkResponse<T>> {\r\n        ThrottlingUtils.preProcess(this.cacheManager, thumbprint);\r\n\r\n        let response;\r\n        try {\r\n            response = await invokeAsync(\r\n                this.networkClient.sendPostRequestAsync.bind(\r\n                    this.networkClient\r\n                )<T>,\r\n                PerformanceEvents.NetworkClientSendPostRequestAsync,\r\n                this.logger,\r\n                this.performanceClient,\r\n                correlationId\r\n            )(tokenEndpoint, options);\r\n            const responseHeaders = response.headers || {};\r\n            this.performanceClient?.addFields(\r\n                {\r\n                    refreshTokenSize: response.body.refresh_token?.length || 0,\r\n                    httpVerToken:\r\n                        responseHeaders[HeaderNames.X_MS_HTTP_VERSION] || \"\",\r\n                    requestId:\r\n                        responseHeaders[HeaderNames.X_MS_REQUEST_ID] || \"\",\r\n                },\r\n                correlationId\r\n            );\r\n        } catch (e) {\r\n            if (e instanceof NetworkError) {\r\n                const responseHeaders = e.responseHeaders;\r\n                if (responseHeaders) {\r\n                    this.performanceClient?.addFields(\r\n                        {\r\n                            httpVerToken:\r\n                                responseHeaders[\r\n                                    HeaderNames.X_MS_HTTP_VERSION\r\n                                ] || \"\",\r\n                            requestId:\r\n                                responseHeaders[HeaderNames.X_MS_REQUEST_ID] ||\r\n                                \"\",\r\n                            contentTypeHeader:\r\n                                responseHeaders[HeaderNames.CONTENT_TYPE] ||\r\n                                undefined,\r\n                            contentLengthHeader:\r\n                                responseHeaders[HeaderNames.CONTENT_LENGTH] ||\r\n                                undefined,\r\n                            httpStatus: e.httpStatus,\r\n                        },\r\n                        correlationId\r\n                    );\r\n                }\r\n                throw e.error;\r\n            }\r\n            if (e instanceof AuthError) {\r\n                throw e;\r\n            } else {\r\n                throw createClientAuthError(ClientAuthErrorCodes.networkError);\r\n            }\r\n        }\r\n\r\n        ThrottlingUtils.postProcess(this.cacheManager, thumbprint, response);\r\n\r\n        return response;\r\n    }\r\n\r\n    /**\r\n     * Updates the authority object of the client. Endpoint discovery must be completed.\r\n     * @param updatedAuthority\r\n     */\r\n    async updateAuthority(\r\n        cloudInstanceHostname: string,\r\n        correlationId: string\r\n    ): Promise<void> {\r\n        this.performanceClient?.addQueueMeasurement(\r\n            PerformanceEvents.UpdateTokenEndpointAuthority,\r\n            correlationId\r\n        );\r\n        const cloudInstanceAuthorityUri = `https://${cloudInstanceHostname}/${this.authority.tenant}/`;\r\n        const cloudInstanceAuthority = await createDiscoveredInstance(\r\n            cloudInstanceAuthorityUri,\r\n            this.networkClient,\r\n            this.cacheManager,\r\n            this.authority.options,\r\n            this.logger,\r\n            correlationId,\r\n            this.performanceClient\r\n        );\r\n        this.authority = cloudInstanceAuthority;\r\n    }\r\n\r\n    /**\r\n     * Creates query string for the /token request\r\n     * @param request\r\n     */\r\n    createTokenQueryParameters(request: BaseAuthRequest): string {\r\n        const parameterBuilder = new RequestParameterBuilder(\r\n            request.correlationId,\r\n            this.performanceClient\r\n        );\r\n\r\n        if (request.embeddedClientId) {\r\n            parameterBuilder.addBrokerParameters({\r\n                brokerClientId: this.config.authOptions.clientId,\r\n                brokerRedirectUri: this.config.authOptions.redirectUri,\r\n            });\r\n        }\r\n\r\n        if (request.tokenQueryParameters) {\r\n            parameterBuilder.addExtraQueryParameters(\r\n                request.tokenQueryParameters\r\n            );\r\n        }\r\n\r\n        parameterBuilder.addCorrelationId(request.correlationId);\r\n\r\n        return parameterBuilder.createQueryString();\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { ICrypto, SignedHttpRequestParameters } from \"./ICrypto.js\";\r\nimport * as TimeUtils from \"../utils/TimeUtils.js\";\r\nimport { UrlString } from \"../url/UrlString.js\";\r\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient.js\";\r\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent.js\";\r\nimport { invokeAsync } from \"../utils/FunctionWrappers.js\";\r\nimport { Logger } from \"../logger/Logger.js\";\r\n\r\n/**\r\n * See eSTS docs for more info.\r\n * - A kid element, with the value containing an RFC 7638-compliant JWK thumbprint that is base64 encoded.\r\n * -  xms_ksl element, representing the storage location of the key's secret component on the client device. One of two values:\r\n *      - sw: software storage\r\n *      - uhw: hardware storage\r\n */\r\ntype ReqCnf = {\r\n    kid: string;\r\n    xms_ksl: KeyLocation;\r\n};\r\n\r\nexport type ReqCnfData = {\r\n    kid: string;\r\n    reqCnfString: string;\r\n};\r\n\r\nconst KeyLocation = {\r\n    SW: \"sw\",\r\n    UHW: \"uhw\",\r\n} as const;\r\nexport type KeyLocation = (typeof KeyLocation)[keyof typeof KeyLocation];\r\n\r\n/** @internal */\r\nexport class PopTokenGenerator {\r\n    private cryptoUtils: ICrypto;\r\n    private performanceClient?: IPerformanceClient;\r\n\r\n    constructor(cryptoUtils: ICrypto, performanceClient?: IPerformanceClient) {\r\n        this.cryptoUtils = cryptoUtils;\r\n        this.performanceClient = performanceClient;\r\n    }\r\n\r\n    /**\r\n     * Generates the req_cnf validated at the RP in the POP protocol for SHR parameters\r\n     * and returns an object containing the keyid, the full req_cnf string and the req_cnf string hash\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async generateCnf(\r\n        request: SignedHttpRequestParameters,\r\n        logger: Logger\r\n    ): Promise<ReqCnfData> {\r\n        this.performanceClient?.addQueueMeasurement(\r\n            PerformanceEvents.PopTokenGenerateCnf,\r\n            request.correlationId\r\n        );\r\n\r\n        const reqCnf = await invokeAsync(\r\n            this.generateKid.bind(this),\r\n            PerformanceEvents.PopTokenGenerateCnf,\r\n            logger,\r\n            this.performanceClient,\r\n            request.correlationId\r\n        )(request);\r\n        const reqCnfString: string = this.cryptoUtils.base64UrlEncode(\r\n            JSON.stringify(reqCnf)\r\n        );\r\n\r\n        return {\r\n            kid: reqCnf.kid,\r\n            reqCnfString,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Generates key_id for a SHR token request\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async generateKid(request: SignedHttpRequestParameters): Promise<ReqCnf> {\r\n        this.performanceClient?.addQueueMeasurement(\r\n            PerformanceEvents.PopTokenGenerateKid,\r\n            request.correlationId\r\n        );\r\n\r\n        const kidThumbprint = await this.cryptoUtils.getPublicKeyThumbprint(\r\n            request\r\n        );\r\n\r\n        return {\r\n            kid: kidThumbprint,\r\n            xms_ksl: KeyLocation.SW,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Signs the POP access_token with the local generated key-pair\r\n     * @param accessToken\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async signPopToken(\r\n        accessToken: string,\r\n        keyId: string,\r\n        request: SignedHttpRequestParameters\r\n    ): Promise<string> {\r\n        return this.signPayload(accessToken, keyId, request);\r\n    }\r\n\r\n    /**\r\n     * Utility function to generate the signed JWT for an access_token\r\n     * @param payload\r\n     * @param kid\r\n     * @param request\r\n     * @param claims\r\n     * @returns\r\n     */\r\n    async signPayload(\r\n        payload: string,\r\n        keyId: string,\r\n        request: SignedHttpRequestParameters,\r\n        claims?: object\r\n    ): Promise<string> {\r\n        // Deconstruct request to extract SHR parameters\r\n        const {\r\n            resourceRequestMethod,\r\n            resourceRequestUri,\r\n            shrClaims,\r\n            shrNonce,\r\n            shrOptions,\r\n        } = request;\r\n\r\n        const resourceUrlString = resourceRequestUri\r\n            ? new UrlString(resourceRequestUri)\r\n            : undefined;\r\n        const resourceUrlComponents = resourceUrlString?.getUrlComponents();\r\n        return this.cryptoUtils.signJwt(\r\n            {\r\n                at: payload,\r\n                ts: TimeUtils.nowSeconds(),\r\n                m: resourceRequestMethod?.toUpperCase(),\r\n                u: resourceUrlComponents?.HostNameAndPort,\r\n                nonce: shrNonce || this.cryptoUtils.createNewGuid(),\r\n                p: resourceUrlComponents?.AbsolutePath,\r\n                q: resourceUrlComponents?.QueryString\r\n                    ? [[], resourceUrlComponents.QueryString]\r\n                    : undefined,\r\n                client_claims: shrClaims || undefined,\r\n                ...claims,\r\n            },\r\n            keyId,\r\n            shrOptions,\r\n            request.correlationId\r\n        );\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { ISerializableTokenCache } from \"../interface/ISerializableTokenCache.js\";\r\n\r\n/**\r\n * This class instance helps track the memory changes facilitating\r\n * decisions to read from and write to the persistent cache\r\n */ export class TokenCacheContext {\r\n    /**\r\n     * boolean indicating cache change\r\n     */\r\n    hasChanged: boolean;\r\n    /**\r\n     * serializable token cache interface\r\n     */\r\n    cache: ISerializableTokenCache;\r\n\r\n    constructor(tokenCache: ISerializableTokenCache, hasChanged: boolean) {\r\n        this.cache = tokenCache;\r\n        this.hasChanged = hasChanged;\r\n    }\r\n\r\n    /**\r\n     * boolean which indicates the changes in cache\r\n     */\r\n    get cacheHasChanged(): boolean {\r\n        return this.hasChanged;\r\n    }\r\n\r\n    /**\r\n     * function to retrieve the token cache\r\n     */\r\n    get tokenCache(): ISerializableTokenCache {\r\n        return this.cache;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { ServerAuthorizationTokenResponse } from \"./ServerAuthorizationTokenResponse.js\";\r\nimport { ICrypto } from \"../crypto/ICrypto.js\";\r\nimport {\r\n    ClientAuthErrorCodes,\r\n    createClientAuthError,\r\n} from \"../error/ClientAuthError.js\";\r\nimport { ServerAuthorizationCodeResponse } from \"./ServerAuthorizationCodeResponse.js\";\r\nimport { Logger } from \"../logger/Logger.js\";\r\nimport { ServerError } from \"../error/ServerError.js\";\r\nimport { ScopeSet } from \"../request/ScopeSet.js\";\r\nimport { AuthenticationResult } from \"./AuthenticationResult.js\";\r\nimport { AccountEntity } from \"../cache/entities/AccountEntity.js\";\r\nimport { Authority } from \"../authority/Authority.js\";\r\nimport { IdTokenEntity } from \"../cache/entities/IdTokenEntity.js\";\r\nimport { AccessTokenEntity } from \"../cache/entities/AccessTokenEntity.js\";\r\nimport { RefreshTokenEntity } from \"../cache/entities/RefreshTokenEntity.js\";\r\nimport {\r\n    InteractionRequiredAuthError,\r\n    isInteractionRequiredError,\r\n} from \"../error/InteractionRequiredAuthError.js\";\r\nimport { CacheRecord } from \"../cache/entities/CacheRecord.js\";\r\nimport { CacheManager } from \"../cache/CacheManager.js\";\r\nimport { ProtocolUtils, RequestStateObject } from \"../utils/ProtocolUtils.js\";\r\nimport {\r\n    AuthenticationScheme,\r\n    Constants,\r\n    THE_FAMILY_ID,\r\n    HttpStatus,\r\n} from \"../utils/Constants.js\";\r\nimport { PopTokenGenerator } from \"../crypto/PopTokenGenerator.js\";\r\nimport { AppMetadataEntity } from \"../cache/entities/AppMetadataEntity.js\";\r\nimport { ICachePlugin } from \"../cache/interface/ICachePlugin.js\";\r\nimport { TokenCacheContext } from \"../cache/persistence/TokenCacheContext.js\";\r\nimport { ISerializableTokenCache } from \"../cache/interface/ISerializableTokenCache.js\";\r\nimport { AuthorizationCodePayload } from \"./AuthorizationCodePayload.js\";\r\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest.js\";\r\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient.js\";\r\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent.js\";\r\nimport { checkMaxAge, extractTokenClaims } from \"../account/AuthToken.js\";\r\nimport {\r\n    TokenClaims,\r\n    getTenantIdFromIdTokenClaims,\r\n} from \"../account/TokenClaims.js\";\r\nimport {\r\n    AccountInfo,\r\n    buildTenantProfile,\r\n    updateAccountTenantProfileData,\r\n} from \"../account/AccountInfo.js\";\r\nimport * as CacheHelpers from \"../cache/utils/CacheHelpers.js\";\r\n\r\nfunction parseServerErrorNo(\r\n    serverResponse: ServerAuthorizationCodeResponse\r\n): string | undefined {\r\n    const errorCodePrefix = \"code=\";\r\n    const errorCodePrefixIndex =\r\n        serverResponse.error_uri?.lastIndexOf(errorCodePrefix);\r\n    return errorCodePrefixIndex && errorCodePrefixIndex >= 0\r\n        ? serverResponse.error_uri?.substring(\r\n              errorCodePrefixIndex + errorCodePrefix.length\r\n          )\r\n        : undefined;\r\n}\r\n\r\n/**\r\n * Class that handles response parsing.\r\n * @internal\r\n */\r\nexport class ResponseHandler {\r\n    private clientId: string;\r\n    private cacheStorage: CacheManager;\r\n    private cryptoObj: ICrypto;\r\n    private logger: Logger;\r\n    private homeAccountIdentifier: string;\r\n    private serializableCache: ISerializableTokenCache | null;\r\n    private persistencePlugin: ICachePlugin | null;\r\n    private performanceClient?: IPerformanceClient;\r\n\r\n    constructor(\r\n        clientId: string,\r\n        cacheStorage: CacheManager,\r\n        cryptoObj: ICrypto,\r\n        logger: Logger,\r\n        serializableCache: ISerializableTokenCache | null,\r\n        persistencePlugin: ICachePlugin | null,\r\n        performanceClient?: IPerformanceClient\r\n    ) {\r\n        this.clientId = clientId;\r\n        this.cacheStorage = cacheStorage;\r\n        this.cryptoObj = cryptoObj;\r\n        this.logger = logger;\r\n        this.serializableCache = serializableCache;\r\n        this.persistencePlugin = persistencePlugin;\r\n        this.performanceClient = performanceClient;\r\n    }\r\n\r\n    /**\r\n     * Function which validates server authorization code response.\r\n     * @param serverResponseHash\r\n     * @param requestState\r\n     * @param cryptoObj\r\n     */\r\n    validateServerAuthorizationCodeResponse(\r\n        serverResponse: ServerAuthorizationCodeResponse,\r\n        requestState: string\r\n    ): void {\r\n        if (!serverResponse.state || !requestState) {\r\n            throw serverResponse.state\r\n                ? createClientAuthError(\r\n                      ClientAuthErrorCodes.stateNotFound,\r\n                      \"Cached State\"\r\n                  )\r\n                : createClientAuthError(\r\n                      ClientAuthErrorCodes.stateNotFound,\r\n                      \"Server State\"\r\n                  );\r\n        }\r\n\r\n        let decodedServerResponseState: string;\r\n        let decodedRequestState: string;\r\n\r\n        try {\r\n            decodedServerResponseState = decodeURIComponent(\r\n                serverResponse.state\r\n            );\r\n        } catch (e) {\r\n            throw createClientAuthError(\r\n                ClientAuthErrorCodes.invalidState,\r\n                serverResponse.state\r\n            );\r\n        }\r\n\r\n        try {\r\n            decodedRequestState = decodeURIComponent(requestState);\r\n        } catch (e) {\r\n            throw createClientAuthError(\r\n                ClientAuthErrorCodes.invalidState,\r\n                serverResponse.state\r\n            );\r\n        }\r\n\r\n        if (decodedServerResponseState !== decodedRequestState) {\r\n            throw createClientAuthError(ClientAuthErrorCodes.stateMismatch);\r\n        }\r\n\r\n        // Check for error\r\n        if (\r\n            serverResponse.error ||\r\n            serverResponse.error_description ||\r\n            serverResponse.suberror\r\n        ) {\r\n            const serverErrorNo = parseServerErrorNo(serverResponse);\r\n            if (\r\n                isInteractionRequiredError(\r\n                    serverResponse.error,\r\n                    serverResponse.error_description,\r\n                    serverResponse.suberror\r\n                )\r\n            ) {\r\n                throw new InteractionRequiredAuthError(\r\n                    serverResponse.error || \"\",\r\n                    serverResponse.error_description,\r\n                    serverResponse.suberror,\r\n                    serverResponse.timestamp || \"\",\r\n                    serverResponse.trace_id || \"\",\r\n                    serverResponse.correlation_id || \"\",\r\n                    serverResponse.claims || \"\",\r\n                    serverErrorNo\r\n                );\r\n            }\r\n\r\n            throw new ServerError(\r\n                serverResponse.error || \"\",\r\n                serverResponse.error_description,\r\n                serverResponse.suberror,\r\n                serverErrorNo\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function which validates server authorization token response.\r\n     * @param serverResponse\r\n     * @param refreshAccessToken\r\n     */\r\n    validateTokenResponse(\r\n        serverResponse: ServerAuthorizationTokenResponse,\r\n        refreshAccessToken?: boolean\r\n    ): void {\r\n        // Check for error\r\n        if (\r\n            serverResponse.error ||\r\n            serverResponse.error_description ||\r\n            serverResponse.suberror\r\n        ) {\r\n            const errString = `Error(s): ${\r\n                serverResponse.error_codes || Constants.NOT_AVAILABLE\r\n            } - Timestamp: ${\r\n                serverResponse.timestamp || Constants.NOT_AVAILABLE\r\n            } - Description: ${\r\n                serverResponse.error_description || Constants.NOT_AVAILABLE\r\n            } - Correlation ID: ${\r\n                serverResponse.correlation_id || Constants.NOT_AVAILABLE\r\n            } - Trace ID: ${\r\n                serverResponse.trace_id || Constants.NOT_AVAILABLE\r\n            }`;\r\n            const serverErrorNo = serverResponse.error_codes?.length\r\n                ? serverResponse.error_codes[0]\r\n                : undefined;\r\n            const serverError = new ServerError(\r\n                serverResponse.error,\r\n                errString,\r\n                serverResponse.suberror,\r\n                serverErrorNo,\r\n                serverResponse.status\r\n            );\r\n\r\n            // check if 500 error\r\n            if (\r\n                refreshAccessToken &&\r\n                serverResponse.status &&\r\n                serverResponse.status >= HttpStatus.SERVER_ERROR_RANGE_START &&\r\n                serverResponse.status <= HttpStatus.SERVER_ERROR_RANGE_END\r\n            ) {\r\n                this.logger.warning(\r\n                    `executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.\\n${serverError}`\r\n                );\r\n\r\n                // don't throw an exception, but alert the user via a log that the token was unable to be refreshed\r\n                return;\r\n                // check if 400 error\r\n            } else if (\r\n                refreshAccessToken &&\r\n                serverResponse.status &&\r\n                serverResponse.status >= HttpStatus.CLIENT_ERROR_RANGE_START &&\r\n                serverResponse.status <= HttpStatus.CLIENT_ERROR_RANGE_END\r\n            ) {\r\n                this.logger.warning(\r\n                    `executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.\\n${serverError}`\r\n                );\r\n\r\n                // don't throw an exception, but alert the user via a log that the token was unable to be refreshed\r\n                return;\r\n            }\r\n\r\n            if (\r\n                isInteractionRequiredError(\r\n                    serverResponse.error,\r\n                    serverResponse.error_description,\r\n                    serverResponse.suberror\r\n                )\r\n            ) {\r\n                throw new InteractionRequiredAuthError(\r\n                    serverResponse.error,\r\n                    serverResponse.error_description,\r\n                    serverResponse.suberror,\r\n                    serverResponse.timestamp || Constants.EMPTY_STRING,\r\n                    serverResponse.trace_id || Constants.EMPTY_STRING,\r\n                    serverResponse.correlation_id || Constants.EMPTY_STRING,\r\n                    serverResponse.claims || Constants.EMPTY_STRING,\r\n                    serverErrorNo\r\n                );\r\n            }\r\n\r\n            throw serverError;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a constructed token response based on given string. Also manages the cache updates and cleanups.\r\n     * @param serverTokenResponse\r\n     * @param authority\r\n     */\r\n    async handleServerTokenResponse(\r\n        serverTokenResponse: ServerAuthorizationTokenResponse,\r\n        authority: Authority,\r\n        reqTimestamp: number,\r\n        request: BaseAuthRequest,\r\n        authCodePayload?: AuthorizationCodePayload,\r\n        userAssertionHash?: string,\r\n        handlingRefreshTokenResponse?: boolean,\r\n        forceCacheRefreshTokenResponse?: boolean,\r\n        serverRequestId?: string\r\n    ): Promise<AuthenticationResult> {\r\n        this.performanceClient?.addQueueMeasurement(\r\n            PerformanceEvents.HandleServerTokenResponse,\r\n            serverTokenResponse.correlation_id\r\n        );\r\n\r\n        // create an idToken object (not entity)\r\n        let idTokenClaims: TokenClaims | undefined;\r\n        if (serverTokenResponse.id_token) {\r\n            idTokenClaims = extractTokenClaims(\r\n                serverTokenResponse.id_token || Constants.EMPTY_STRING,\r\n                this.cryptoObj.base64Decode\r\n            );\r\n\r\n            // token nonce check (TODO: Add a warning if no nonce is given?)\r\n            if (authCodePayload && authCodePayload.nonce) {\r\n                if (idTokenClaims.nonce !== authCodePayload.nonce) {\r\n                    throw createClientAuthError(\r\n                        ClientAuthErrorCodes.nonceMismatch\r\n                    );\r\n                }\r\n            }\r\n\r\n            // token max_age check\r\n            if (request.maxAge || request.maxAge === 0) {\r\n                const authTime = idTokenClaims.auth_time;\r\n                if (!authTime) {\r\n                    throw createClientAuthError(\r\n                        ClientAuthErrorCodes.authTimeNotFound\r\n                    );\r\n                }\r\n\r\n                checkMaxAge(authTime, request.maxAge);\r\n            }\r\n        }\r\n\r\n        // generate homeAccountId\r\n        this.homeAccountIdentifier = AccountEntity.generateHomeAccountId(\r\n            serverTokenResponse.client_info || Constants.EMPTY_STRING,\r\n            authority.authorityType,\r\n            this.logger,\r\n            this.cryptoObj,\r\n            idTokenClaims\r\n        );\r\n\r\n        // save the response tokens\r\n        let requestStateObj: RequestStateObject | undefined;\r\n        if (!!authCodePayload && !!authCodePayload.state) {\r\n            requestStateObj = ProtocolUtils.parseRequestState(\r\n                this.cryptoObj,\r\n                authCodePayload.state\r\n            );\r\n        }\r\n\r\n        // Add keyId from request to serverTokenResponse if defined\r\n        serverTokenResponse.key_id =\r\n            serverTokenResponse.key_id || request.sshKid || undefined;\r\n\r\n        const cacheRecord = this.generateCacheRecord(\r\n            serverTokenResponse,\r\n            authority,\r\n            reqTimestamp,\r\n            request,\r\n            idTokenClaims,\r\n            userAssertionHash,\r\n            authCodePayload\r\n        );\r\n        let cacheContext;\r\n        try {\r\n            if (this.persistencePlugin && this.serializableCache) {\r\n                this.logger.verbose(\r\n                    \"Persistence enabled, calling beforeCacheAccess\"\r\n                );\r\n                cacheContext = new TokenCacheContext(\r\n                    this.serializableCache,\r\n                    true\r\n                );\r\n                await this.persistencePlugin.beforeCacheAccess(cacheContext);\r\n            }\r\n            /*\r\n             * When saving a refreshed tokens to the cache, it is expected that the account that was used is present in the cache.\r\n             * If not present, we should return null, as it's the case that another application called removeAccount in between\r\n             * the calls to getAllAccounts and acquireTokenSilent. We should not overwrite that removal, unless explicitly flagged by\r\n             * the developer, as in the case of refresh token flow used in ADAL Node to MSAL Node migration.\r\n             */\r\n            if (\r\n                handlingRefreshTokenResponse &&\r\n                !forceCacheRefreshTokenResponse &&\r\n                cacheRecord.account\r\n            ) {\r\n                const key = cacheRecord.account.generateAccountKey();\r\n                const account = this.cacheStorage.getAccount(key);\r\n                if (!account) {\r\n                    this.logger.warning(\r\n                        \"Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache\"\r\n                    );\r\n                    return await ResponseHandler.generateAuthenticationResult(\r\n                        this.cryptoObj,\r\n                        authority,\r\n                        cacheRecord,\r\n                        false,\r\n                        request,\r\n                        idTokenClaims,\r\n                        requestStateObj,\r\n                        undefined,\r\n                        serverRequestId\r\n                    );\r\n                }\r\n            }\r\n            await this.cacheStorage.saveCacheRecord(\r\n                cacheRecord,\r\n                request.correlationId,\r\n                request.storeInCache\r\n            );\r\n        } finally {\r\n            if (\r\n                this.persistencePlugin &&\r\n                this.serializableCache &&\r\n                cacheContext\r\n            ) {\r\n                this.logger.verbose(\r\n                    \"Persistence enabled, calling afterCacheAccess\"\r\n                );\r\n                await this.persistencePlugin.afterCacheAccess(cacheContext);\r\n            }\r\n        }\r\n\r\n        return ResponseHandler.generateAuthenticationResult(\r\n            this.cryptoObj,\r\n            authority,\r\n            cacheRecord,\r\n            false,\r\n            request,\r\n            idTokenClaims,\r\n            requestStateObj,\r\n            serverTokenResponse,\r\n            serverRequestId\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Generates CacheRecord\r\n     * @param serverTokenResponse\r\n     * @param idTokenObj\r\n     * @param authority\r\n     */\r\n    private generateCacheRecord(\r\n        serverTokenResponse: ServerAuthorizationTokenResponse,\r\n        authority: Authority,\r\n        reqTimestamp: number,\r\n        request: BaseAuthRequest,\r\n        idTokenClaims?: TokenClaims,\r\n        userAssertionHash?: string,\r\n        authCodePayload?: AuthorizationCodePayload\r\n    ): CacheRecord {\r\n        const env = authority.getPreferredCache();\r\n        if (!env) {\r\n            throw createClientAuthError(\r\n                ClientAuthErrorCodes.invalidCacheEnvironment\r\n            );\r\n        }\r\n\r\n        const claimsTenantId = getTenantIdFromIdTokenClaims(idTokenClaims);\r\n\r\n        // IdToken: non AAD scenarios can have empty realm\r\n        let cachedIdToken: IdTokenEntity | undefined;\r\n        let cachedAccount: AccountEntity | undefined;\r\n        if (serverTokenResponse.id_token && !!idTokenClaims) {\r\n            cachedIdToken = CacheHelpers.createIdTokenEntity(\r\n                this.homeAccountIdentifier,\r\n                env,\r\n                serverTokenResponse.id_token,\r\n                this.clientId,\r\n                claimsTenantId || \"\"\r\n            );\r\n\r\n            cachedAccount = buildAccountToCache(\r\n                this.cacheStorage,\r\n                authority,\r\n                this.homeAccountIdentifier,\r\n                this.cryptoObj.base64Decode,\r\n                idTokenClaims,\r\n                serverTokenResponse.client_info,\r\n                env,\r\n                claimsTenantId,\r\n                authCodePayload,\r\n                undefined, // nativeAccountId\r\n                this.logger\r\n            );\r\n        }\r\n\r\n        // AccessToken\r\n        let cachedAccessToken: AccessTokenEntity | null = null;\r\n        if (serverTokenResponse.access_token) {\r\n            // If scopes not returned in server response, use request scopes\r\n            const responseScopes = serverTokenResponse.scope\r\n                ? ScopeSet.fromString(serverTokenResponse.scope)\r\n                : new ScopeSet(request.scopes || []);\r\n\r\n            /*\r\n             * Use timestamp calculated before request\r\n             * Server may return timestamps as strings, parse to numbers if so.\r\n             */\r\n            const expiresIn: number =\r\n                (typeof serverTokenResponse.expires_in === \"string\"\r\n                    ? parseInt(serverTokenResponse.expires_in, 10)\r\n                    : serverTokenResponse.expires_in) || 0;\r\n            const extExpiresIn: number =\r\n                (typeof serverTokenResponse.ext_expires_in === \"string\"\r\n                    ? parseInt(serverTokenResponse.ext_expires_in, 10)\r\n                    : serverTokenResponse.ext_expires_in) || 0;\r\n            const refreshIn: number | undefined =\r\n                (typeof serverTokenResponse.refresh_in === \"string\"\r\n                    ? parseInt(serverTokenResponse.refresh_in, 10)\r\n                    : serverTokenResponse.refresh_in) || undefined;\r\n            const tokenExpirationSeconds = reqTimestamp + expiresIn;\r\n            const extendedTokenExpirationSeconds =\r\n                tokenExpirationSeconds + extExpiresIn;\r\n            const refreshOnSeconds =\r\n                refreshIn && refreshIn > 0\r\n                    ? reqTimestamp + refreshIn\r\n                    : undefined;\r\n\r\n            // non AAD scenarios can have empty realm\r\n            cachedAccessToken = CacheHelpers.createAccessTokenEntity(\r\n                this.homeAccountIdentifier,\r\n                env,\r\n                serverTokenResponse.access_token,\r\n                this.clientId,\r\n                claimsTenantId || authority.tenant || \"\",\r\n                responseScopes.printScopes(),\r\n                tokenExpirationSeconds,\r\n                extendedTokenExpirationSeconds,\r\n                this.cryptoObj.base64Decode,\r\n                refreshOnSeconds,\r\n                serverTokenResponse.token_type,\r\n                userAssertionHash,\r\n                serverTokenResponse.key_id,\r\n                request.claims,\r\n                request.requestedClaimsHash\r\n            );\r\n        }\r\n\r\n        // refreshToken\r\n        let cachedRefreshToken: RefreshTokenEntity | null = null;\r\n        if (serverTokenResponse.refresh_token) {\r\n            let rtExpiresOn: number | undefined;\r\n            if (serverTokenResponse.refresh_token_expires_in) {\r\n                const rtExpiresIn: number =\r\n                    typeof serverTokenResponse.refresh_token_expires_in ===\r\n                    \"string\"\r\n                        ? parseInt(\r\n                              serverTokenResponse.refresh_token_expires_in,\r\n                              10\r\n                          )\r\n                        : serverTokenResponse.refresh_token_expires_in;\r\n                rtExpiresOn = reqTimestamp + rtExpiresIn;\r\n            }\r\n            cachedRefreshToken = CacheHelpers.createRefreshTokenEntity(\r\n                this.homeAccountIdentifier,\r\n                env,\r\n                serverTokenResponse.refresh_token,\r\n                this.clientId,\r\n                serverTokenResponse.foci,\r\n                userAssertionHash,\r\n                rtExpiresOn\r\n            );\r\n        }\r\n\r\n        // appMetadata\r\n        let cachedAppMetadata: AppMetadataEntity | null = null;\r\n        if (serverTokenResponse.foci) {\r\n            cachedAppMetadata = {\r\n                clientId: this.clientId,\r\n                environment: env,\r\n                familyId: serverTokenResponse.foci,\r\n            };\r\n        }\r\n\r\n        return {\r\n            account: cachedAccount,\r\n            idToken: cachedIdToken,\r\n            accessToken: cachedAccessToken,\r\n            refreshToken: cachedRefreshToken,\r\n            appMetadata: cachedAppMetadata,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Creates an @AuthenticationResult from @CacheRecord , @IdToken , and a boolean that states whether or not the result is from cache.\r\n     *\r\n     * Optionally takes a state string that is set as-is in the response.\r\n     *\r\n     * @param cacheRecord\r\n     * @param idTokenObj\r\n     * @param fromTokenCache\r\n     * @param stateString\r\n     */\r\n    static async generateAuthenticationResult(\r\n        cryptoObj: ICrypto,\r\n        authority: Authority,\r\n        cacheRecord: CacheRecord,\r\n        fromTokenCache: boolean,\r\n        request: BaseAuthRequest,\r\n        idTokenClaims?: TokenClaims,\r\n        requestState?: RequestStateObject,\r\n        serverTokenResponse?: ServerAuthorizationTokenResponse,\r\n        requestId?: string\r\n    ): Promise<AuthenticationResult> {\r\n        let accessToken: string = Constants.EMPTY_STRING;\r\n        let responseScopes: Array<string> = [];\r\n        let expiresOn: Date | null = null;\r\n        let extExpiresOn: Date | undefined;\r\n        let refreshOn: Date | undefined;\r\n        let familyId: string = Constants.EMPTY_STRING;\r\n\r\n        if (cacheRecord.accessToken) {\r\n            /*\r\n             * if the request object has `popKid` property, `signPopToken` will be set to false and\r\n             * the token will be returned unsigned\r\n             */\r\n            if (\r\n                cacheRecord.accessToken.tokenType ===\r\n                    AuthenticationScheme.POP &&\r\n                !request.popKid\r\n            ) {\r\n                const popTokenGenerator: PopTokenGenerator =\r\n                    new PopTokenGenerator(cryptoObj);\r\n                const { secret, keyId } = cacheRecord.accessToken;\r\n\r\n                if (!keyId) {\r\n                    throw createClientAuthError(\r\n                        ClientAuthErrorCodes.keyIdMissing\r\n                    );\r\n                }\r\n\r\n                accessToken = await popTokenGenerator.signPopToken(\r\n                    secret,\r\n                    keyId,\r\n                    request\r\n                );\r\n            } else {\r\n                accessToken = cacheRecord.accessToken.secret;\r\n            }\r\n            responseScopes = ScopeSet.fromString(\r\n                cacheRecord.accessToken.target\r\n            ).asArray();\r\n            expiresOn = new Date(\r\n                Number(cacheRecord.accessToken.expiresOn) * 1000\r\n            );\r\n            extExpiresOn = new Date(\r\n                Number(cacheRecord.accessToken.extendedExpiresOn) * 1000\r\n            );\r\n            if (cacheRecord.accessToken.refreshOn) {\r\n                refreshOn = new Date(\r\n                    Number(cacheRecord.accessToken.refreshOn) * 1000\r\n                );\r\n            }\r\n        }\r\n\r\n        if (cacheRecord.appMetadata) {\r\n            familyId =\r\n                cacheRecord.appMetadata.familyId === THE_FAMILY_ID\r\n                    ? THE_FAMILY_ID\r\n                    : \"\";\r\n        }\r\n        const uid = idTokenClaims?.oid || idTokenClaims?.sub || \"\";\r\n        const tid = idTokenClaims?.tid || \"\";\r\n\r\n        // for hybrid + native bridge enablement, send back the native account Id\r\n        if (serverTokenResponse?.spa_accountid && !!cacheRecord.account) {\r\n            cacheRecord.account.nativeAccountId =\r\n                serverTokenResponse?.spa_accountid;\r\n        }\r\n\r\n        const accountInfo: AccountInfo | null = cacheRecord.account\r\n            ? updateAccountTenantProfileData(\r\n                  cacheRecord.account.getAccountInfo(),\r\n                  undefined, // tenantProfile optional\r\n                  idTokenClaims,\r\n                  cacheRecord.idToken?.secret\r\n              )\r\n            : null;\r\n\r\n        return {\r\n            authority: authority.canonicalAuthority,\r\n            uniqueId: uid,\r\n            tenantId: tid,\r\n            scopes: responseScopes,\r\n            account: accountInfo,\r\n            idToken: cacheRecord?.idToken?.secret || \"\",\r\n            idTokenClaims: idTokenClaims || {},\r\n            accessToken: accessToken,\r\n            fromCache: fromTokenCache,\r\n            expiresOn: expiresOn,\r\n            extExpiresOn: extExpiresOn,\r\n            refreshOn: refreshOn,\r\n            correlationId: request.correlationId,\r\n            requestId: requestId || Constants.EMPTY_STRING,\r\n            familyId: familyId,\r\n            tokenType:\r\n                cacheRecord.accessToken?.tokenType || Constants.EMPTY_STRING,\r\n            state: requestState\r\n                ? requestState.userRequestState\r\n                : Constants.EMPTY_STRING,\r\n            cloudGraphHostName:\r\n                cacheRecord.account?.cloudGraphHostName ||\r\n                Constants.EMPTY_STRING,\r\n            msGraphHost:\r\n                cacheRecord.account?.msGraphHost || Constants.EMPTY_STRING,\r\n            code: serverTokenResponse?.spa_code,\r\n            fromNativeBroker: false,\r\n        };\r\n    }\r\n}\r\n\r\nexport function buildAccountToCache(\r\n    cacheStorage: CacheManager,\r\n    authority: Authority,\r\n    homeAccountId: string,\r\n    base64Decode: (input: string) => string,\r\n    idTokenClaims?: TokenClaims,\r\n    clientInfo?: string,\r\n    environment?: string,\r\n    claimsTenantId?: string | null,\r\n    authCodePayload?: AuthorizationCodePayload,\r\n    nativeAccountId?: string,\r\n    logger?: Logger\r\n): AccountEntity {\r\n    logger?.verbose(\"setCachedAccount called\");\r\n\r\n    // Check if base account is already cached\r\n    const accountKeys = cacheStorage.getAccountKeys();\r\n    const baseAccountKey = accountKeys.find((accountKey: string) => {\r\n        return accountKey.startsWith(homeAccountId);\r\n    });\r\n\r\n    let cachedAccount: AccountEntity | null = null;\r\n    if (baseAccountKey) {\r\n        cachedAccount = cacheStorage.getAccount(baseAccountKey);\r\n    }\r\n\r\n    const baseAccount =\r\n        cachedAccount ||\r\n        AccountEntity.createAccount(\r\n            {\r\n                homeAccountId,\r\n                idTokenClaims,\r\n                clientInfo,\r\n                environment,\r\n                cloudGraphHostName: authCodePayload?.cloud_graph_host_name,\r\n                msGraphHost: authCodePayload?.msgraph_host,\r\n                nativeAccountId: nativeAccountId,\r\n            },\r\n            authority,\r\n            base64Decode\r\n        );\r\n\r\n    const tenantProfiles = baseAccount.tenantProfiles || [];\r\n    const tenantId = claimsTenantId || baseAccount.realm;\r\n    if (\r\n        tenantId &&\r\n        !tenantProfiles.find((tenantProfile) => {\r\n            return tenantProfile.tenantId === tenantId;\r\n        })\r\n    ) {\r\n        const newTenantProfile = buildTenantProfile(\r\n            homeAccountId,\r\n            baseAccount.localAccountId,\r\n            tenantId,\r\n            idTokenClaims\r\n        );\r\n        tenantProfiles.push(newTenantProfile);\r\n    }\r\n    baseAccount.tenantProfiles = tenantProfiles;\r\n\r\n    return baseAccount;\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    ClientAssertionCallback,\r\n    ClientAssertionConfig,\r\n} from \"../account/ClientCredentials.js\";\r\n\r\nexport async function getClientAssertion(\r\n    clientAssertion: string | ClientAssertionCallback,\r\n    clientId: string,\r\n    tokenEndpoint?: string\r\n): Promise<string> {\r\n    if (typeof clientAssertion === \"string\") {\r\n        return clientAssertion;\r\n    } else {\r\n        const config: ClientAssertionConfig = {\r\n            clientId: clientId,\r\n            tokenEndpoint: tokenEndpoint,\r\n        };\r\n        return clientAssertion(config);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { BaseClient } from \"./BaseClient.js\";\r\nimport { CommonAuthorizationUrlRequest } from \"../request/CommonAuthorizationUrlRequest.js\";\r\nimport { CommonAuthorizationCodeRequest } from \"../request/CommonAuthorizationCodeRequest.js\";\r\nimport { Authority } from \"../authority/Authority.js\";\r\nimport { RequestParameterBuilder } from \"../request/RequestParameterBuilder.js\";\r\nimport {\r\n    GrantType,\r\n    AuthenticationScheme,\r\n    PromptValue,\r\n    Separators,\r\n    HeaderNames,\r\n} from \"../utils/Constants.js\";\r\nimport * as AADServerParamKeys from \"../constants/AADServerParamKeys.js\";\r\nimport {\r\n    ClientConfiguration,\r\n    isOidcProtocolMode,\r\n} from \"../config/ClientConfiguration.js\";\r\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse.js\";\r\nimport { NetworkResponse } from \"../network/NetworkResponse.js\";\r\nimport { ResponseHandler } from \"../response/ResponseHandler.js\";\r\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\r\nimport { StringUtils } from \"../utils/StringUtils.js\";\r\nimport {\r\n    ClientAuthErrorCodes,\r\n    createClientAuthError,\r\n} from \"../error/ClientAuthError.js\";\r\nimport { UrlString } from \"../url/UrlString.js\";\r\nimport { ServerAuthorizationCodeResponse } from \"../response/ServerAuthorizationCodeResponse.js\";\r\nimport { CommonEndSessionRequest } from \"../request/CommonEndSessionRequest.js\";\r\nimport { PopTokenGenerator } from \"../crypto/PopTokenGenerator.js\";\r\nimport { RequestThumbprint } from \"../network/RequestThumbprint.js\";\r\nimport { AuthorizationCodePayload } from \"../response/AuthorizationCodePayload.js\";\r\nimport * as TimeUtils from \"../utils/TimeUtils.js\";\r\nimport { AccountInfo } from \"../account/AccountInfo.js\";\r\nimport {\r\n    buildClientInfoFromHomeAccountId,\r\n    buildClientInfo,\r\n} from \"../account/ClientInfo.js\";\r\nimport { CcsCredentialType, CcsCredential } from \"../account/CcsCredential.js\";\r\nimport {\r\n    createClientConfigurationError,\r\n    ClientConfigurationErrorCodes,\r\n} from \"../error/ClientConfigurationError.js\";\r\nimport { RequestValidator } from \"../request/RequestValidator.js\";\r\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient.js\";\r\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent.js\";\r\nimport { invokeAsync } from \"../utils/FunctionWrappers.js\";\r\nimport { ClientAssertion } from \"../account/ClientCredentials.js\";\r\nimport { getClientAssertion } from \"../utils/ClientAssertionUtils.js\";\r\n\r\n/**\r\n * Oauth2.0 Authorization Code client\r\n * @internal\r\n */\r\nexport class AuthorizationCodeClient extends BaseClient {\r\n    // Flag to indicate if client is for hybrid spa auth code redemption\r\n    protected includeRedirectUri: boolean = true;\r\n    private oidcDefaultScopes;\r\n\r\n    constructor(\r\n        configuration: ClientConfiguration,\r\n        performanceClient?: IPerformanceClient\r\n    ) {\r\n        super(configuration, performanceClient);\r\n        this.oidcDefaultScopes =\r\n            this.config.authOptions.authority.options.OIDCOptions?.defaultScopes;\r\n    }\r\n\r\n    /**\r\n     * Creates the URL of the authorization request letting the user input credentials and consent to the\r\n     * application. The URL target the /authorize endpoint of the authority configured in the\r\n     * application object.\r\n     *\r\n     * Once the user inputs their credentials and consents, the authority will send a response to the redirect URI\r\n     * sent in the request and should contain an authorization code, which can then be used to acquire tokens via\r\n     * acquireToken(AuthorizationCodeRequest)\r\n     * @param request\r\n     */\r\n    async getAuthCodeUrl(\r\n        request: CommonAuthorizationUrlRequest\r\n    ): Promise<string> {\r\n        this.performanceClient?.addQueueMeasurement(\r\n            PerformanceEvents.GetAuthCodeUrl,\r\n            request.correlationId\r\n        );\r\n\r\n        const queryString = await invokeAsync(\r\n            this.createAuthCodeUrlQueryString.bind(this),\r\n            PerformanceEvents.AuthClientCreateQueryString,\r\n            this.logger,\r\n            this.performanceClient,\r\n            request.correlationId\r\n        )(request);\r\n\r\n        return UrlString.appendQueryString(\r\n            this.authority.authorizationEndpoint,\r\n            queryString\r\n        );\r\n    }\r\n\r\n    /**\r\n     * API to acquire a token in exchange of 'authorization_code` acquired by the user in the first leg of the\r\n     * authorization_code_grant\r\n     * @param request\r\n     */\r\n    async acquireToken(\r\n        request: CommonAuthorizationCodeRequest,\r\n        authCodePayload?: AuthorizationCodePayload\r\n    ): Promise<AuthenticationResult> {\r\n        this.performanceClient?.addQueueMeasurement(\r\n            PerformanceEvents.AuthClientAcquireToken,\r\n            request.correlationId\r\n        );\r\n\r\n        if (!request.code) {\r\n            throw createClientAuthError(\r\n                ClientAuthErrorCodes.requestCannotBeMade\r\n            );\r\n        }\r\n\r\n        const reqTimestamp = TimeUtils.nowSeconds();\r\n        const response = await invokeAsync(\r\n            this.executeTokenRequest.bind(this),\r\n            PerformanceEvents.AuthClientExecuteTokenRequest,\r\n            this.logger,\r\n            this.performanceClient,\r\n            request.correlationId\r\n        )(this.authority, request);\r\n\r\n        // Retrieve requestId from response headers\r\n        const requestId = response.headers?.[HeaderNames.X_MS_REQUEST_ID];\r\n\r\n        const responseHandler = new ResponseHandler(\r\n            this.config.authOptions.clientId,\r\n            this.cacheManager,\r\n            this.cryptoUtils,\r\n            this.logger,\r\n            this.config.serializableCache,\r\n            this.config.persistencePlugin,\r\n            this.performanceClient\r\n        );\r\n\r\n        // Validate response. This function throws a server error if an error is returned by the server.\r\n        responseHandler.validateTokenResponse(response.body);\r\n\r\n        return invokeAsync(\r\n            responseHandler.handleServerTokenResponse.bind(responseHandler),\r\n            PerformanceEvents.HandleServerTokenResponse,\r\n            this.logger,\r\n            this.performanceClient,\r\n            request.correlationId\r\n        )(\r\n            response.body,\r\n            this.authority,\r\n            reqTimestamp,\r\n            request,\r\n            authCodePayload,\r\n            undefined,\r\n            undefined,\r\n            undefined,\r\n            requestId\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Handles the hash fragment response from public client code request. Returns a code response used by\r\n     * the client to exchange for a token in acquireToken.\r\n     * @param hashFragment\r\n     */\r\n    handleFragmentResponse(\r\n        serverParams: ServerAuthorizationCodeResponse,\r\n        cachedState: string\r\n    ): AuthorizationCodePayload {\r\n        // Handle responses.\r\n        const responseHandler = new ResponseHandler(\r\n            this.config.authOptions.clientId,\r\n            this.cacheManager,\r\n            this.cryptoUtils,\r\n            this.logger,\r\n            null,\r\n            null\r\n        );\r\n\r\n        // Get code response\r\n        responseHandler.validateServerAuthorizationCodeResponse(\r\n            serverParams,\r\n            cachedState\r\n        );\r\n\r\n        // throw when there is no auth code in the response\r\n        if (!serverParams.code) {\r\n            throw createClientAuthError(\r\n                ClientAuthErrorCodes.authorizationCodeMissingFromServerResponse\r\n            );\r\n        }\r\n\r\n        return serverParams as AuthorizationCodePayload;\r\n    }\r\n\r\n    /**\r\n     * Used to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param authorityUri\r\n     */\r\n    getLogoutUri(logoutRequest: CommonEndSessionRequest): string {\r\n        // Throw error if logoutRequest is null/undefined\r\n        if (!logoutRequest) {\r\n            throw createClientConfigurationError(\r\n                ClientConfigurationErrorCodes.logoutRequestEmpty\r\n            );\r\n        }\r\n        const queryString = this.createLogoutUrlQueryString(logoutRequest);\r\n\r\n        // Construct logout URI\r\n        return UrlString.appendQueryString(\r\n            this.authority.endSessionEndpoint,\r\n            queryString\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Executes POST request to token endpoint\r\n     * @param authority\r\n     * @param request\r\n     */\r\n    private async executeTokenRequest(\r\n        authority: Authority,\r\n        request: CommonAuthorizationCodeRequest\r\n    ): Promise<NetworkResponse<ServerAuthorizationTokenResponse>> {\r\n        this.performanceClient?.addQueueMeasurement(\r\n            PerformanceEvents.AuthClientExecuteTokenRequest,\r\n            request.correlationId\r\n        );\r\n\r\n        const queryParametersString = this.createTokenQueryParameters(request);\r\n        const endpoint = UrlString.appendQueryString(\r\n            authority.tokenEndpoint,\r\n            queryParametersString\r\n        );\r\n\r\n        const requestBody = await invokeAsync(\r\n            this.createTokenRequestBody.bind(this),\r\n            PerformanceEvents.AuthClientCreateTokenRequestBody,\r\n            this.logger,\r\n            this.performanceClient,\r\n            request.correlationId\r\n        )(request);\r\n\r\n        let ccsCredential: CcsCredential | undefined = undefined;\r\n        if (request.clientInfo) {\r\n            try {\r\n                const clientInfo = buildClientInfo(\r\n                    request.clientInfo,\r\n                    this.cryptoUtils.base64Decode\r\n                );\r\n                ccsCredential = {\r\n                    credential: `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\r\n                    type: CcsCredentialType.HOME_ACCOUNT_ID,\r\n                };\r\n            } catch (e) {\r\n                this.logger.verbose(\r\n                    \"Could not parse client info for CCS Header: \" + e\r\n                );\r\n            }\r\n        }\r\n        const headers: Record<string, string> = this.createTokenRequestHeaders(\r\n            ccsCredential || request.ccsCredential\r\n        );\r\n\r\n        const thumbprint: RequestThumbprint = {\r\n            clientId:\r\n                request.tokenBodyParameters?.clientId ||\r\n                this.config.authOptions.clientId,\r\n            authority: authority.canonicalAuthority,\r\n            scopes: request.scopes,\r\n            claims: request.claims,\r\n            authenticationScheme: request.authenticationScheme,\r\n            resourceRequestMethod: request.resourceRequestMethod,\r\n            resourceRequestUri: request.resourceRequestUri,\r\n            shrClaims: request.shrClaims,\r\n            sshKid: request.sshKid,\r\n        };\r\n\r\n        return invokeAsync(\r\n            this.executePostToTokenEndpoint.bind(this),\r\n            PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint,\r\n            this.logger,\r\n            this.performanceClient,\r\n            request.correlationId\r\n        )(\r\n            endpoint,\r\n            requestBody,\r\n            headers,\r\n            thumbprint,\r\n            request.correlationId,\r\n            PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Generates a map for all the params to be sent to the service\r\n     * @param request\r\n     */\r\n    private async createTokenRequestBody(\r\n        request: CommonAuthorizationCodeRequest\r\n    ): Promise<string> {\r\n        this.performanceClient?.addQueueMeasurement(\r\n            PerformanceEvents.AuthClientCreateTokenRequestBody,\r\n            request.correlationId\r\n        );\r\n\r\n        const parameterBuilder = new RequestParameterBuilder(\r\n            request.correlationId,\r\n            this.performanceClient\r\n        );\r\n\r\n        parameterBuilder.addClientId(\r\n            request.embeddedClientId ||\r\n                request.tokenBodyParameters?.[AADServerParamKeys.CLIENT_ID] ||\r\n                this.config.authOptions.clientId\r\n        );\r\n\r\n        /*\r\n         * For hybrid spa flow, there will be a code but no verifier\r\n         * In this scenario, don't include redirect uri as auth code will not be bound to redirect URI\r\n         */\r\n        if (!this.includeRedirectUri) {\r\n            // Just validate\r\n            RequestValidator.validateRedirectUri(request.redirectUri);\r\n        } else {\r\n            // Validate and include redirect uri\r\n            parameterBuilder.addRedirectUri(request.redirectUri);\r\n        }\r\n\r\n        // Add scope array, parameter builder will add default scopes and dedupe\r\n        parameterBuilder.addScopes(\r\n            request.scopes,\r\n            true,\r\n            this.oidcDefaultScopes\r\n        );\r\n\r\n        // add code: user set, not validated\r\n        parameterBuilder.addAuthorizationCode(request.code);\r\n\r\n        // Add library metadata\r\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\r\n        parameterBuilder.addApplicationTelemetry(\r\n            this.config.telemetry.application\r\n        );\r\n        parameterBuilder.addThrottling();\r\n\r\n        if (this.serverTelemetryManager && !isOidcProtocolMode(this.config)) {\r\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\r\n        }\r\n\r\n        // add code_verifier if passed\r\n        if (request.codeVerifier) {\r\n            parameterBuilder.addCodeVerifier(request.codeVerifier);\r\n        }\r\n\r\n        if (this.config.clientCredentials.clientSecret) {\r\n            parameterBuilder.addClientSecret(\r\n                this.config.clientCredentials.clientSecret\r\n            );\r\n        }\r\n\r\n        if (this.config.clientCredentials.clientAssertion) {\r\n            const clientAssertion: ClientAssertion =\r\n                this.config.clientCredentials.clientAssertion;\r\n\r\n            parameterBuilder.addClientAssertion(\r\n                await getClientAssertion(\r\n                    clientAssertion.assertion,\r\n                    this.config.authOptions.clientId,\r\n                    request.resourceRequestUri\r\n                )\r\n            );\r\n            parameterBuilder.addClientAssertionType(\r\n                clientAssertion.assertionType\r\n            );\r\n        }\r\n\r\n        parameterBuilder.addGrantType(GrantType.AUTHORIZATION_CODE_GRANT);\r\n        parameterBuilder.addClientInfo();\r\n\r\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\r\n            const popTokenGenerator = new PopTokenGenerator(\r\n                this.cryptoUtils,\r\n                this.performanceClient\r\n            );\r\n\r\n            let reqCnfData;\r\n            if (!request.popKid) {\r\n                const generatedReqCnfData = await invokeAsync(\r\n                    popTokenGenerator.generateCnf.bind(popTokenGenerator),\r\n                    PerformanceEvents.PopTokenGenerateCnf,\r\n                    this.logger,\r\n                    this.performanceClient,\r\n                    request.correlationId\r\n                )(request, this.logger);\r\n                reqCnfData = generatedReqCnfData.reqCnfString;\r\n            } else {\r\n                reqCnfData = this.cryptoUtils.encodeKid(request.popKid);\r\n            }\r\n\r\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\r\n            parameterBuilder.addPopToken(reqCnfData);\r\n        } else if (request.authenticationScheme === AuthenticationScheme.SSH) {\r\n            if (request.sshJwk) {\r\n                parameterBuilder.addSshJwk(request.sshJwk);\r\n            } else {\r\n                throw createClientConfigurationError(\r\n                    ClientConfigurationErrorCodes.missingSshJwk\r\n                );\r\n            }\r\n        }\r\n\r\n        if (\r\n            !StringUtils.isEmptyObj(request.claims) ||\r\n            (this.config.authOptions.clientCapabilities &&\r\n                this.config.authOptions.clientCapabilities.length > 0)\r\n        ) {\r\n            parameterBuilder.addClaims(\r\n                request.claims,\r\n                this.config.authOptions.clientCapabilities\r\n            );\r\n        }\r\n\r\n        let ccsCred: CcsCredential | undefined = undefined;\r\n        if (request.clientInfo) {\r\n            try {\r\n                const clientInfo = buildClientInfo(\r\n                    request.clientInfo,\r\n                    this.cryptoUtils.base64Decode\r\n                );\r\n                ccsCred = {\r\n                    credential: `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\r\n                    type: CcsCredentialType.HOME_ACCOUNT_ID,\r\n                };\r\n            } catch (e) {\r\n                this.logger.verbose(\r\n                    \"Could not parse client info for CCS Header: \" + e\r\n                );\r\n            }\r\n        } else {\r\n            ccsCred = request.ccsCredential;\r\n        }\r\n\r\n        // Adds these as parameters in the request instead of headers to prevent CORS preflight request\r\n        if (this.config.systemOptions.preventCorsPreflight && ccsCred) {\r\n            switch (ccsCred.type) {\r\n                case CcsCredentialType.HOME_ACCOUNT_ID:\r\n                    try {\r\n                        const clientInfo = buildClientInfoFromHomeAccountId(\r\n                            ccsCred.credential\r\n                        );\r\n                        parameterBuilder.addCcsOid(clientInfo);\r\n                    } catch (e) {\r\n                        this.logger.verbose(\r\n                            \"Could not parse home account ID for CCS Header: \" +\r\n                                e\r\n                        );\r\n                    }\r\n                    break;\r\n                case CcsCredentialType.UPN:\r\n                    parameterBuilder.addCcsUpn(ccsCred.credential);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if (request.embeddedClientId) {\r\n            parameterBuilder.addBrokerParameters({\r\n                brokerClientId: this.config.authOptions.clientId,\r\n                brokerRedirectUri: this.config.authOptions.redirectUri,\r\n            });\r\n        }\r\n\r\n        if (request.tokenBodyParameters) {\r\n            parameterBuilder.addExtraQueryParameters(\r\n                request.tokenBodyParameters\r\n            );\r\n        }\r\n\r\n        // Add hybrid spa parameters if not already provided\r\n        if (\r\n            request.enableSpaAuthorizationCode &&\r\n            (!request.tokenBodyParameters ||\r\n                !request.tokenBodyParameters[\r\n                    AADServerParamKeys.RETURN_SPA_CODE\r\n                ])\r\n        ) {\r\n            parameterBuilder.addExtraQueryParameters({\r\n                [AADServerParamKeys.RETURN_SPA_CODE]: \"1\",\r\n            });\r\n        }\r\n\r\n        return parameterBuilder.createQueryString();\r\n    }\r\n\r\n    /**\r\n     * This API validates the `AuthorizationCodeUrlRequest` and creates a URL\r\n     * @param request\r\n     */\r\n    private async createAuthCodeUrlQueryString(\r\n        request: CommonAuthorizationUrlRequest\r\n    ): Promise<string> {\r\n        // generate the correlationId if not set by the user and add\r\n        const correlationId =\r\n            request.correlationId ||\r\n            this.config.cryptoInterface.createNewGuid();\r\n\r\n        this.performanceClient?.addQueueMeasurement(\r\n            PerformanceEvents.AuthClientCreateQueryString,\r\n            correlationId\r\n        );\r\n\r\n        const parameterBuilder = new RequestParameterBuilder(\r\n            correlationId,\r\n            this.performanceClient\r\n        );\r\n\r\n        parameterBuilder.addClientId(\r\n            request.embeddedClientId ||\r\n                request.extraQueryParameters?.[AADServerParamKeys.CLIENT_ID] ||\r\n                this.config.authOptions.clientId\r\n        );\r\n\r\n        const requestScopes = [\r\n            ...(request.scopes || []),\r\n            ...(request.extraScopesToConsent || []),\r\n        ];\r\n        parameterBuilder.addScopes(requestScopes, true, this.oidcDefaultScopes);\r\n\r\n        // validate the redirectUri (to be a non null value)\r\n        parameterBuilder.addRedirectUri(request.redirectUri);\r\n\r\n        parameterBuilder.addCorrelationId(correlationId);\r\n\r\n        // add response_mode. If not passed in it defaults to query.\r\n        parameterBuilder.addResponseMode(request.responseMode);\r\n\r\n        // add response_type = code\r\n        parameterBuilder.addResponseTypeCode();\r\n\r\n        // add library info parameters\r\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\r\n        if (!isOidcProtocolMode(this.config)) {\r\n            parameterBuilder.addApplicationTelemetry(\r\n                this.config.telemetry.application\r\n            );\r\n        }\r\n\r\n        // add client_info=1\r\n        parameterBuilder.addClientInfo();\r\n\r\n        if (request.codeChallenge && request.codeChallengeMethod) {\r\n            parameterBuilder.addCodeChallengeParams(\r\n                request.codeChallenge,\r\n                request.codeChallengeMethod\r\n            );\r\n        }\r\n\r\n        if (request.prompt) {\r\n            parameterBuilder.addPrompt(request.prompt);\r\n        }\r\n\r\n        if (request.domainHint) {\r\n            parameterBuilder.addDomainHint(request.domainHint);\r\n            this.performanceClient?.addFields(\r\n                { domainHintFromRequest: true },\r\n                correlationId\r\n            );\r\n        }\r\n\r\n        this.performanceClient?.addFields(\r\n            { prompt: request.prompt },\r\n            correlationId\r\n        );\r\n\r\n        // Add sid or loginHint with preference for login_hint claim (in request) -> sid -> loginHint (upn/email) -> username of AccountInfo object\r\n        if (request.prompt !== PromptValue.SELECT_ACCOUNT) {\r\n            // AAD will throw if prompt=select_account is passed with an account hint\r\n            if (request.sid && request.prompt === PromptValue.NONE) {\r\n                // SessionID is only used in silent calls\r\n                this.logger.verbose(\r\n                    \"createAuthCodeUrlQueryString: Prompt is none, adding sid from request\"\r\n                );\r\n                parameterBuilder.addSid(request.sid);\r\n                this.performanceClient?.addFields(\r\n                    { sidFromRequest: true },\r\n                    correlationId\r\n                );\r\n            } else if (request.account) {\r\n                const accountSid = this.extractAccountSid(request.account);\r\n                let accountLoginHintClaim = this.extractLoginHint(\r\n                    request.account\r\n                );\r\n\r\n                if (accountLoginHintClaim && request.domainHint) {\r\n                    this.logger.warning(\r\n                        `AuthorizationCodeClient.createAuthCodeUrlQueryString: \"domainHint\" param is set, skipping opaque \"login_hint\" claim. Please consider not passing domainHint`\r\n                    );\r\n                    accountLoginHintClaim = null;\r\n                }\r\n\r\n                // If login_hint claim is present, use it over sid/username\r\n                if (accountLoginHintClaim) {\r\n                    this.logger.verbose(\r\n                        \"createAuthCodeUrlQueryString: login_hint claim present on account\"\r\n                    );\r\n                    parameterBuilder.addLoginHint(accountLoginHintClaim);\r\n                    this.performanceClient?.addFields(\r\n                        { loginHintFromClaim: true },\r\n                        correlationId\r\n                    );\r\n                    try {\r\n                        const clientInfo = buildClientInfoFromHomeAccountId(\r\n                            request.account.homeAccountId\r\n                        );\r\n                        parameterBuilder.addCcsOid(clientInfo);\r\n                    } catch (e) {\r\n                        this.logger.verbose(\r\n                            \"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\"\r\n                        );\r\n                    }\r\n                } else if (accountSid && request.prompt === PromptValue.NONE) {\r\n                    /*\r\n                     * If account and loginHint are provided, we will check account first for sid before adding loginHint\r\n                     * SessionId is only used in silent calls\r\n                     */\r\n                    this.logger.verbose(\r\n                        \"createAuthCodeUrlQueryString: Prompt is none, adding sid from account\"\r\n                    );\r\n                    parameterBuilder.addSid(accountSid);\r\n                    this.performanceClient?.addFields(\r\n                        { sidFromClaim: true },\r\n                        correlationId\r\n                    );\r\n                    try {\r\n                        const clientInfo = buildClientInfoFromHomeAccountId(\r\n                            request.account.homeAccountId\r\n                        );\r\n                        parameterBuilder.addCcsOid(clientInfo);\r\n                    } catch (e) {\r\n                        this.logger.verbose(\r\n                            \"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\"\r\n                        );\r\n                    }\r\n                } else if (request.loginHint) {\r\n                    this.logger.verbose(\r\n                        \"createAuthCodeUrlQueryString: Adding login_hint from request\"\r\n                    );\r\n                    parameterBuilder.addLoginHint(request.loginHint);\r\n                    parameterBuilder.addCcsUpn(request.loginHint);\r\n                    this.performanceClient?.addFields(\r\n                        { loginHintFromRequest: true },\r\n                        correlationId\r\n                    );\r\n                } else if (request.account.username) {\r\n                    // Fallback to account username if provided\r\n                    this.logger.verbose(\r\n                        \"createAuthCodeUrlQueryString: Adding login_hint from account\"\r\n                    );\r\n                    parameterBuilder.addLoginHint(request.account.username);\r\n                    this.performanceClient?.addFields(\r\n                        { loginHintFromUpn: true },\r\n                        correlationId\r\n                    );\r\n                    try {\r\n                        const clientInfo = buildClientInfoFromHomeAccountId(\r\n                            request.account.homeAccountId\r\n                        );\r\n                        parameterBuilder.addCcsOid(clientInfo);\r\n                    } catch (e) {\r\n                        this.logger.verbose(\r\n                            \"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\"\r\n                        );\r\n                    }\r\n                }\r\n            } else if (request.loginHint) {\r\n                this.logger.verbose(\r\n                    \"createAuthCodeUrlQueryString: No account, adding login_hint from request\"\r\n                );\r\n                parameterBuilder.addLoginHint(request.loginHint);\r\n                parameterBuilder.addCcsUpn(request.loginHint);\r\n                this.performanceClient?.addFields(\r\n                    { loginHintFromRequest: true },\r\n                    correlationId\r\n                );\r\n            }\r\n        } else {\r\n            this.logger.verbose(\r\n                \"createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints\"\r\n            );\r\n        }\r\n\r\n        if (request.nonce) {\r\n            parameterBuilder.addNonce(request.nonce);\r\n        }\r\n\r\n        if (request.state) {\r\n            parameterBuilder.addState(request.state);\r\n        }\r\n\r\n        if (\r\n            request.claims ||\r\n            (this.config.authOptions.clientCapabilities &&\r\n                this.config.authOptions.clientCapabilities.length > 0)\r\n        ) {\r\n            parameterBuilder.addClaims(\r\n                request.claims,\r\n                this.config.authOptions.clientCapabilities\r\n            );\r\n        }\r\n\r\n        if (request.embeddedClientId) {\r\n            parameterBuilder.addBrokerParameters({\r\n                brokerClientId: this.config.authOptions.clientId,\r\n                brokerRedirectUri: this.config.authOptions.redirectUri,\r\n            });\r\n        }\r\n\r\n        this.addExtraQueryParams(request, parameterBuilder);\r\n\r\n        if (request.platformBroker) {\r\n            // signal ests that this is a WAM call\r\n            parameterBuilder.addNativeBroker();\r\n\r\n            // pass the req_cnf for POP\r\n            if (request.authenticationScheme === AuthenticationScheme.POP) {\r\n                const popTokenGenerator = new PopTokenGenerator(\r\n                    this.cryptoUtils\r\n                );\r\n\r\n                // req_cnf is always sent as a string for SPAs\r\n                let reqCnfData;\r\n                if (!request.popKid) {\r\n                    const generatedReqCnfData = await invokeAsync(\r\n                        popTokenGenerator.generateCnf.bind(popTokenGenerator),\r\n                        PerformanceEvents.PopTokenGenerateCnf,\r\n                        this.logger,\r\n                        this.performanceClient,\r\n                        request.correlationId\r\n                    )(request, this.logger);\r\n                    reqCnfData = generatedReqCnfData.reqCnfString;\r\n                } else {\r\n                    reqCnfData = this.cryptoUtils.encodeKid(request.popKid);\r\n                }\r\n                parameterBuilder.addPopToken(reqCnfData);\r\n            }\r\n        }\r\n\r\n        return parameterBuilder.createQueryString();\r\n    }\r\n\r\n    /**\r\n     * This API validates the `EndSessionRequest` and creates a URL\r\n     * @param request\r\n     */\r\n    private createLogoutUrlQueryString(\r\n        request: CommonEndSessionRequest\r\n    ): string {\r\n        const parameterBuilder = new RequestParameterBuilder(\r\n            request.correlationId,\r\n            this.performanceClient\r\n        );\r\n\r\n        if (request.postLogoutRedirectUri) {\r\n            parameterBuilder.addPostLogoutRedirectUri(\r\n                request.postLogoutRedirectUri\r\n            );\r\n        }\r\n\r\n        if (request.correlationId) {\r\n            parameterBuilder.addCorrelationId(request.correlationId);\r\n        }\r\n\r\n        if (request.idTokenHint) {\r\n            parameterBuilder.addIdTokenHint(request.idTokenHint);\r\n        }\r\n\r\n        if (request.state) {\r\n            parameterBuilder.addState(request.state);\r\n        }\r\n\r\n        if (request.logoutHint) {\r\n            parameterBuilder.addLogoutHint(request.logoutHint);\r\n        }\r\n\r\n        this.addExtraQueryParams(request, parameterBuilder);\r\n\r\n        return parameterBuilder.createQueryString();\r\n    }\r\n\r\n    private addExtraQueryParams(\r\n        request: CommonAuthorizationUrlRequest | CommonEndSessionRequest,\r\n        parameterBuilder: RequestParameterBuilder\r\n    ) {\r\n        const hasRequestInstanceAware =\r\n            request.extraQueryParameters &&\r\n            request.extraQueryParameters.hasOwnProperty(\"instance_aware\");\r\n\r\n        // Set instance_aware flag if config auth param is set\r\n        if (!hasRequestInstanceAware && this.config.authOptions.instanceAware) {\r\n            request.extraQueryParameters = request.extraQueryParameters || {};\r\n            request.extraQueryParameters[\"instance_aware\"] = \"true\";\r\n        }\r\n\r\n        if (request.extraQueryParameters) {\r\n            parameterBuilder.addExtraQueryParameters(\r\n                request.extraQueryParameters\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Helper to get sid from account. Returns null if idTokenClaims are not present or sid is not present.\r\n     * @param account\r\n     */\r\n    private extractAccountSid(account: AccountInfo): string | null {\r\n        return account.idTokenClaims?.sid || null;\r\n    }\r\n\r\n    private extractLoginHint(account: AccountInfo): string | null {\r\n        return account.idTokenClaims?.login_hint || null;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    SERVER_TELEM_CONSTANTS,\r\n    Separators,\r\n    CacheOutcome,\r\n    Constants,\r\n    RegionDiscoverySources,\r\n    RegionDiscoveryOutcomes,\r\n} from \"../../utils/Constants.js\";\r\nimport { CacheManager } from \"../../cache/CacheManager.js\";\r\nimport { AuthError } from \"../../error/AuthError.js\";\r\nimport { ServerTelemetryRequest } from \"./ServerTelemetryRequest.js\";\r\nimport { ServerTelemetryEntity } from \"../../cache/entities/ServerTelemetryEntity.js\";\r\nimport { RegionDiscoveryMetadata } from \"../../authority/RegionDiscoveryMetadata.js\";\r\n\r\nconst skuGroupSeparator = \",\";\r\nconst skuValueSeparator = \"|\";\r\n\r\ntype SkuParams = {\r\n    libraryName?: string;\r\n    libraryVersion?: string;\r\n    extensionName?: string;\r\n    extensionVersion?: string;\r\n    skus?: string;\r\n};\r\n\r\nfunction makeExtraSkuString(params: SkuParams): string {\r\n    const {\r\n        skus,\r\n        libraryName,\r\n        libraryVersion,\r\n        extensionName,\r\n        extensionVersion,\r\n    } = params;\r\n    const skuMap: Map<number, (string | undefined)[]> = new Map([\r\n        [0, [libraryName, libraryVersion]],\r\n        [2, [extensionName, extensionVersion]],\r\n    ]);\r\n    let skuArr: string[] = [];\r\n\r\n    if (skus?.length) {\r\n        skuArr = skus.split(skuGroupSeparator);\r\n\r\n        // Ignore invalid input sku param\r\n        if (skuArr.length < 4) {\r\n            return skus;\r\n        }\r\n    } else {\r\n        skuArr = Array.from({ length: 4 }, () => skuValueSeparator);\r\n    }\r\n\r\n    skuMap.forEach((value, key) => {\r\n        if (value.length === 2 && value[0]?.length && value[1]?.length) {\r\n            setSku({\r\n                skuArr,\r\n                index: key,\r\n                skuName: value[0],\r\n                skuVersion: value[1],\r\n            });\r\n        }\r\n    });\r\n\r\n    return skuArr.join(skuGroupSeparator);\r\n}\r\n\r\nfunction setSku(params: {\r\n    skuArr: string[];\r\n    index: number;\r\n    skuName: string;\r\n    skuVersion: string;\r\n}): void {\r\n    const { skuArr, index, skuName, skuVersion } = params;\r\n    if (index >= skuArr.length) {\r\n        return;\r\n    }\r\n    skuArr[index] = [skuName, skuVersion].join(skuValueSeparator);\r\n}\r\n\r\n/** @internal */\r\nexport class ServerTelemetryManager {\r\n    private cacheManager: CacheManager;\r\n    private apiId: number;\r\n    private correlationId: string;\r\n    private telemetryCacheKey: string;\r\n    private wrapperSKU: String;\r\n    private wrapperVer: String;\r\n    private regionUsed: string | undefined;\r\n    private regionSource: RegionDiscoverySources | undefined;\r\n    private regionOutcome: RegionDiscoveryOutcomes | undefined;\r\n    private cacheOutcome: CacheOutcome = CacheOutcome.NOT_APPLICABLE;\r\n\r\n    constructor(\r\n        telemetryRequest: ServerTelemetryRequest,\r\n        cacheManager: CacheManager\r\n    ) {\r\n        this.cacheManager = cacheManager;\r\n        this.apiId = telemetryRequest.apiId;\r\n        this.correlationId = telemetryRequest.correlationId;\r\n        this.wrapperSKU = telemetryRequest.wrapperSKU || Constants.EMPTY_STRING;\r\n        this.wrapperVer = telemetryRequest.wrapperVer || Constants.EMPTY_STRING;\r\n\r\n        this.telemetryCacheKey =\r\n            SERVER_TELEM_CONSTANTS.CACHE_KEY +\r\n            Separators.CACHE_KEY_SEPARATOR +\r\n            telemetryRequest.clientId;\r\n    }\r\n\r\n    /**\r\n     * API to add MSER Telemetry to request\r\n     */\r\n    generateCurrentRequestHeaderValue(): string {\r\n        const request = `${this.apiId}${SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR}${this.cacheOutcome}`;\r\n        const platformFieldsArr = [this.wrapperSKU, this.wrapperVer];\r\n        const nativeBrokerErrorCode = this.getNativeBrokerErrorCode();\r\n        if (nativeBrokerErrorCode?.length) {\r\n            platformFieldsArr.push(`broker_error=${nativeBrokerErrorCode}`);\r\n        }\r\n        const platformFields = platformFieldsArr.join(\r\n            SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR\r\n        );\r\n        const regionDiscoveryFields = this.getRegionDiscoveryFields();\r\n        const requestWithRegionDiscoveryFields = [\r\n            request,\r\n            regionDiscoveryFields,\r\n        ].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n\r\n        return [\r\n            SERVER_TELEM_CONSTANTS.SCHEMA_VERSION,\r\n            requestWithRegionDiscoveryFields,\r\n            platformFields,\r\n        ].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\r\n    }\r\n\r\n    /**\r\n     * API to add MSER Telemetry for the last failed request\r\n     */\r\n    generateLastRequestHeaderValue(): string {\r\n        const lastRequests = this.getLastRequests();\r\n\r\n        const maxErrors = ServerTelemetryManager.maxErrorsToSend(lastRequests);\r\n        const failedRequests = lastRequests.failedRequests\r\n            .slice(0, 2 * maxErrors)\r\n            .join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        const errors = lastRequests.errors\r\n            .slice(0, maxErrors)\r\n            .join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        const errorCount = lastRequests.errors.length;\r\n\r\n        // Indicate whether this header contains all data or partial data\r\n        const overflow =\r\n            maxErrors < errorCount\r\n                ? SERVER_TELEM_CONSTANTS.OVERFLOW_TRUE\r\n                : SERVER_TELEM_CONSTANTS.OVERFLOW_FALSE;\r\n        const platformFields = [errorCount, overflow].join(\r\n            SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR\r\n        );\r\n\r\n        return [\r\n            SERVER_TELEM_CONSTANTS.SCHEMA_VERSION,\r\n            lastRequests.cacheHits,\r\n            failedRequests,\r\n            errors,\r\n            platformFields,\r\n        ].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\r\n    }\r\n\r\n    /**\r\n     * API to cache token failures for MSER data capture\r\n     * @param error\r\n     */\r\n    cacheFailedRequest(error: unknown): void {\r\n        const lastRequests = this.getLastRequests();\r\n        if (\r\n            lastRequests.errors.length >=\r\n            SERVER_TELEM_CONSTANTS.MAX_CACHED_ERRORS\r\n        ) {\r\n            // Remove a cached error to make room, first in first out\r\n            lastRequests.failedRequests.shift(); // apiId\r\n            lastRequests.failedRequests.shift(); // correlationId\r\n            lastRequests.errors.shift();\r\n        }\r\n\r\n        lastRequests.failedRequests.push(this.apiId, this.correlationId);\r\n\r\n        if (error instanceof Error && !!error && error.toString()) {\r\n            if (error instanceof AuthError) {\r\n                if (error.subError) {\r\n                    lastRequests.errors.push(error.subError);\r\n                } else if (error.errorCode) {\r\n                    lastRequests.errors.push(error.errorCode);\r\n                } else {\r\n                    lastRequests.errors.push(error.toString());\r\n                }\r\n            } else {\r\n                lastRequests.errors.push(error.toString());\r\n            }\r\n        } else {\r\n            lastRequests.errors.push(SERVER_TELEM_CONSTANTS.UNKNOWN_ERROR);\r\n        }\r\n\r\n        this.cacheManager.setServerTelemetry(\r\n            this.telemetryCacheKey,\r\n            lastRequests\r\n        );\r\n\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Update server telemetry cache entry by incrementing cache hit counter\r\n     */\r\n    incrementCacheHits(): number {\r\n        const lastRequests = this.getLastRequests();\r\n        lastRequests.cacheHits += 1;\r\n\r\n        this.cacheManager.setServerTelemetry(\r\n            this.telemetryCacheKey,\r\n            lastRequests\r\n        );\r\n        return lastRequests.cacheHits;\r\n    }\r\n\r\n    /**\r\n     * Get the server telemetry entity from cache or initialize a new one\r\n     */\r\n    getLastRequests(): ServerTelemetryEntity {\r\n        const initialValue: ServerTelemetryEntity = {\r\n            failedRequests: [],\r\n            errors: [],\r\n            cacheHits: 0,\r\n        };\r\n        const lastRequests = this.cacheManager.getServerTelemetry(\r\n            this.telemetryCacheKey\r\n        ) as ServerTelemetryEntity;\r\n\r\n        return lastRequests || initialValue;\r\n    }\r\n\r\n    /**\r\n     * Remove server telemetry cache entry\r\n     */\r\n    clearTelemetryCache(): void {\r\n        const lastRequests = this.getLastRequests();\r\n        const numErrorsFlushed =\r\n            ServerTelemetryManager.maxErrorsToSend(lastRequests);\r\n        const errorCount = lastRequests.errors.length;\r\n        if (numErrorsFlushed === errorCount) {\r\n            // All errors were sent on last request, clear Telemetry cache\r\n            this.cacheManager.removeItem(this.telemetryCacheKey);\r\n        } else {\r\n            // Partial data was flushed to server, construct a new telemetry cache item with errors that were not flushed\r\n            const serverTelemEntity: ServerTelemetryEntity = {\r\n                failedRequests: lastRequests.failedRequests.slice(\r\n                    numErrorsFlushed * 2\r\n                ), // failedRequests contains 2 items for each error\r\n                errors: lastRequests.errors.slice(numErrorsFlushed),\r\n                cacheHits: 0,\r\n            };\r\n\r\n            this.cacheManager.setServerTelemetry(\r\n                this.telemetryCacheKey,\r\n                serverTelemEntity\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the maximum number of errors that can be flushed to the server in the next network request\r\n     * @param serverTelemetryEntity\r\n     */\r\n    static maxErrorsToSend(\r\n        serverTelemetryEntity: ServerTelemetryEntity\r\n    ): number {\r\n        let i;\r\n        let maxErrors = 0;\r\n        let dataSize = 0;\r\n        const errorCount = serverTelemetryEntity.errors.length;\r\n        for (i = 0; i < errorCount; i++) {\r\n            // failedRequests parameter contains pairs of apiId and correlationId, multiply index by 2 to preserve pairs\r\n            const apiId =\r\n                serverTelemetryEntity.failedRequests[2 * i] ||\r\n                Constants.EMPTY_STRING;\r\n            const correlationId =\r\n                serverTelemetryEntity.failedRequests[2 * i + 1] ||\r\n                Constants.EMPTY_STRING;\r\n            const errorCode =\r\n                serverTelemetryEntity.errors[i] || Constants.EMPTY_STRING;\r\n\r\n            // Count number of characters that would be added to header, each character is 1 byte. Add 3 at the end to account for separators\r\n            dataSize +=\r\n                apiId.toString().length +\r\n                correlationId.toString().length +\r\n                errorCode.length +\r\n                3;\r\n\r\n            if (dataSize < SERVER_TELEM_CONSTANTS.MAX_LAST_HEADER_BYTES) {\r\n                // Adding this entry to the header would still keep header size below the limit\r\n                maxErrors += 1;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return maxErrors;\r\n    }\r\n\r\n    /**\r\n     * Get the region discovery fields\r\n     *\r\n     * @returns string\r\n     */\r\n    getRegionDiscoveryFields(): string {\r\n        const regionDiscoveryFields: string[] = [];\r\n\r\n        regionDiscoveryFields.push(this.regionUsed || Constants.EMPTY_STRING);\r\n        regionDiscoveryFields.push(this.regionSource || Constants.EMPTY_STRING);\r\n        regionDiscoveryFields.push(\r\n            this.regionOutcome || Constants.EMPTY_STRING\r\n        );\r\n\r\n        return regionDiscoveryFields.join(\",\");\r\n    }\r\n\r\n    /**\r\n     * Update the region discovery metadata\r\n     *\r\n     * @param regionDiscoveryMetadata\r\n     * @returns void\r\n     */\r\n    updateRegionDiscoveryMetadata(\r\n        regionDiscoveryMetadata: RegionDiscoveryMetadata\r\n    ): void {\r\n        this.regionUsed = regionDiscoveryMetadata.region_used;\r\n        this.regionSource = regionDiscoveryMetadata.region_source;\r\n        this.regionOutcome = regionDiscoveryMetadata.region_outcome;\r\n    }\r\n\r\n    /**\r\n     * Set cache outcome\r\n     */\r\n    setCacheOutcome(cacheOutcome: CacheOutcome): void {\r\n        this.cacheOutcome = cacheOutcome;\r\n    }\r\n\r\n    setNativeBrokerErrorCode(errorCode: string): void {\r\n        const lastRequests = this.getLastRequests();\r\n        lastRequests.nativeBrokerErrorCode = errorCode;\r\n        this.cacheManager.setServerTelemetry(\r\n            this.telemetryCacheKey,\r\n            lastRequests\r\n        );\r\n    }\r\n\r\n    getNativeBrokerErrorCode(): string | undefined {\r\n        return this.getLastRequests().nativeBrokerErrorCode;\r\n    }\r\n\r\n    clearNativeBrokerErrorCode(): void {\r\n        const lastRequests = this.getLastRequests();\r\n        delete lastRequests.nativeBrokerErrorCode;\r\n        this.cacheManager.setServerTelemetry(\r\n            this.telemetryCacheKey,\r\n            lastRequests\r\n        );\r\n    }\r\n\r\n    static makeExtraSkuString(params: SkuParams): string {\r\n        return makeExtraSkuString(params);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    ICrypto,\r\n    INetworkModule,\r\n    Logger,\r\n    AccountInfo,\r\n    AccountEntity,\r\n    UrlString,\r\n    ServerTelemetryManager,\r\n    ServerTelemetryRequest,\r\n    createClientConfigurationError,\r\n    ClientConfigurationErrorCodes,\r\n    Authority,\r\n    AuthorityOptions,\r\n    AuthorityFactory,\r\n    IPerformanceClient,\r\n    PerformanceEvents,\r\n    AzureCloudOptions,\r\n    invokeAsync,\r\n    StringDict,\r\n} from \"@azure/msal-common/browser\";\r\nimport { BrowserConfiguration } from \"../config/Configuration.js\";\r\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager.js\";\r\nimport { EventHandler } from \"../event/EventHandler.js\";\r\nimport { EndSessionRequest } from \"../request/EndSessionRequest.js\";\r\nimport { RedirectRequest } from \"../request/RedirectRequest.js\";\r\nimport { PopupRequest } from \"../request/PopupRequest.js\";\r\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest.js\";\r\nimport { version } from \"../packageMetadata.js\";\r\nimport { BrowserConstants } from \"../utils/BrowserConstants.js\";\r\nimport * as BrowserUtils from \"../utils/BrowserUtils.js\";\r\nimport { INavigationClient } from \"../navigation/INavigationClient.js\";\r\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler.js\";\r\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\r\nimport { ClearCacheRequest } from \"../request/ClearCacheRequest.js\";\r\nimport { createNewGuid } from \"../crypto/BrowserCrypto.js\";\r\n\r\nexport abstract class BaseInteractionClient {\r\n    protected config: BrowserConfiguration;\r\n    protected browserStorage: BrowserCacheManager;\r\n    protected browserCrypto: ICrypto;\r\n    protected networkClient: INetworkModule;\r\n    protected logger: Logger;\r\n    protected eventHandler: EventHandler;\r\n    protected navigationClient: INavigationClient;\r\n    protected nativeMessageHandler: NativeMessageHandler | undefined;\r\n    protected correlationId: string;\r\n    protected performanceClient: IPerformanceClient;\r\n\r\n    constructor(\r\n        config: BrowserConfiguration,\r\n        storageImpl: BrowserCacheManager,\r\n        browserCrypto: ICrypto,\r\n        logger: Logger,\r\n        eventHandler: EventHandler,\r\n        navigationClient: INavigationClient,\r\n        performanceClient: IPerformanceClient,\r\n        nativeMessageHandler?: NativeMessageHandler,\r\n        correlationId?: string\r\n    ) {\r\n        this.config = config;\r\n        this.browserStorage = storageImpl;\r\n        this.browserCrypto = browserCrypto;\r\n        this.networkClient = this.config.system.networkClient;\r\n        this.eventHandler = eventHandler;\r\n        this.navigationClient = navigationClient;\r\n        this.nativeMessageHandler = nativeMessageHandler;\r\n        this.correlationId = correlationId || createNewGuid();\r\n        this.logger = logger.clone(\r\n            BrowserConstants.MSAL_SKU,\r\n            version,\r\n            this.correlationId\r\n        );\r\n        this.performanceClient = performanceClient;\r\n    }\r\n\r\n    abstract acquireToken(\r\n        request: RedirectRequest | PopupRequest | SsoSilentRequest\r\n    ): Promise<AuthenticationResult | void>;\r\n\r\n    abstract logout(\r\n        request: EndSessionRequest | ClearCacheRequest | undefined\r\n    ): Promise<void>;\r\n\r\n    protected async clearCacheOnLogout(\r\n        account?: AccountInfo | null\r\n    ): Promise<void> {\r\n        if (account) {\r\n            if (\r\n                AccountEntity.accountInfoIsEqual(\r\n                    account,\r\n                    this.browserStorage.getActiveAccount(),\r\n                    false\r\n                )\r\n            ) {\r\n                this.logger.verbose(\"Setting active account to null\");\r\n                this.browserStorage.setActiveAccount(null);\r\n            }\r\n            // Clear given account.\r\n            try {\r\n                await this.browserStorage.removeAccount(\r\n                    AccountEntity.generateAccountCacheKey(account)\r\n                );\r\n                this.logger.verbose(\r\n                    \"Cleared cache items belonging to the account provided in the logout request.\"\r\n                );\r\n            } catch (error) {\r\n                this.logger.error(\r\n                    \"Account provided in logout request was not found. Local cache unchanged.\"\r\n                );\r\n            }\r\n        } else {\r\n            try {\r\n                this.logger.verbose(\r\n                    \"No account provided in logout request, clearing all cache items.\",\r\n                    this.correlationId\r\n                );\r\n                // Clear all accounts and tokens\r\n                await this.browserStorage.clear();\r\n                // Clear any stray keys from IndexedDB\r\n                await this.browserCrypto.clearKeystore();\r\n            } catch (e) {\r\n                this.logger.error(\r\n                    \"Attempted to clear all MSAL cache items and failed. Local cache unchanged.\"\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * Use to get the redirect uri configured in MSAL or null.\r\n     * @param requestRedirectUri\r\n     * @returns Redirect URL\r\n     *\r\n     */\r\n    getRedirectUri(requestRedirectUri?: string): string {\r\n        this.logger.verbose(\"getRedirectUri called\");\r\n        const redirectUri = requestRedirectUri || this.config.auth.redirectUri;\r\n        return UrlString.getAbsoluteUrl(\r\n            redirectUri,\r\n            BrowserUtils.getCurrentUri()\r\n        );\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param apiId\r\n     * @param correlationId\r\n     * @param forceRefresh\r\n     */\r\n    protected initializeServerTelemetryManager(\r\n        apiId: number,\r\n        forceRefresh?: boolean\r\n    ): ServerTelemetryManager {\r\n        this.logger.verbose(\"initializeServerTelemetryManager called\");\r\n        const telemetryPayload: ServerTelemetryRequest = {\r\n            clientId: this.config.auth.clientId,\r\n            correlationId: this.correlationId,\r\n            apiId: apiId,\r\n            forceRefresh: forceRefresh || false,\r\n            wrapperSKU: this.browserStorage.getWrapperMetadata()[0],\r\n            wrapperVer: this.browserStorage.getWrapperMetadata()[1],\r\n        };\r\n\r\n        return new ServerTelemetryManager(\r\n            telemetryPayload,\r\n            this.browserStorage\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Used to get a discovered version of the default authority.\r\n     * @param params {\r\n     *         requestAuthority?: string;\r\n     *         requestAzureCloudOptions?: AzureCloudOptions;\r\n     *         requestExtraQueryParameters?: StringDict;\r\n     *         account?: AccountInfo;\r\n     *        }\r\n     */\r\n    protected async getDiscoveredAuthority(params: {\r\n        requestAuthority?: string;\r\n        requestAzureCloudOptions?: AzureCloudOptions;\r\n        requestExtraQueryParameters?: StringDict;\r\n        account?: AccountInfo;\r\n    }): Promise<Authority> {\r\n        const { account } = params;\r\n        const instanceAwareEQ =\r\n            params.requestExtraQueryParameters &&\r\n            params.requestExtraQueryParameters.hasOwnProperty(\"instance_aware\")\r\n                ? params.requestExtraQueryParameters[\"instance_aware\"]\r\n                : undefined;\r\n\r\n        this.performanceClient.addQueueMeasurement(\r\n            PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority,\r\n            this.correlationId\r\n        );\r\n        const authorityOptions: AuthorityOptions = {\r\n            protocolMode: this.config.auth.protocolMode,\r\n            OIDCOptions: this.config.auth.OIDCOptions,\r\n            knownAuthorities: this.config.auth.knownAuthorities,\r\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\r\n            authorityMetadata: this.config.auth.authorityMetadata,\r\n            skipAuthorityMetadataCache:\r\n                this.config.auth.skipAuthorityMetadataCache,\r\n        };\r\n\r\n        // build authority string based on auth params, precedence - azureCloudInstance + tenant >> authority\r\n        const resolvedAuthority =\r\n            params.requestAuthority || this.config.auth.authority;\r\n        const resolvedInstanceAware = instanceAwareEQ?.length\r\n            ? instanceAwareEQ === \"true\"\r\n            : this.config.auth.instanceAware;\r\n\r\n        const userAuthority =\r\n            account && resolvedInstanceAware\r\n                ? this.config.auth.authority.replace(\r\n                      UrlString.getDomainFromUrl(resolvedAuthority),\r\n                      account.environment\r\n                  )\r\n                : resolvedAuthority;\r\n\r\n        // fall back to the authority from config\r\n        const builtAuthority = Authority.generateAuthority(\r\n            userAuthority,\r\n            params.requestAzureCloudOptions ||\r\n                this.config.auth.azureCloudOptions\r\n        );\r\n        const discoveredAuthority = await invokeAsync(\r\n            AuthorityFactory.createDiscoveredInstance,\r\n            PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance,\r\n            this.logger,\r\n            this.performanceClient,\r\n            this.correlationId\r\n        )(\r\n            builtAuthority,\r\n            this.config.system.networkClient,\r\n            this.browserStorage,\r\n            authorityOptions,\r\n            this.logger,\r\n            this.correlationId,\r\n            this.performanceClient\r\n        );\r\n\r\n        if (account && !discoveredAuthority.isAlias(account.environment)) {\r\n            throw createClientConfigurationError(\r\n                ClientConfigurationErrorCodes.authorityMismatch\r\n            );\r\n        }\r\n\r\n        return discoveredAuthority;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    IPerformanceClient,\r\n    Logger,\r\n    PerformanceEvents,\r\n    PkceCodes,\r\n    invoke,\r\n    invokeAsync,\r\n} from \"@azure/msal-common/browser\";\r\nimport {\r\n    createBrowserAuthError,\r\n    BrowserAuthErrorCodes,\r\n} from \"../error/BrowserAuthError.js\";\r\nimport { urlEncodeArr } from \"../encode/Base64Encode.js\";\r\nimport { getRandomValues, sha256Digest } from \"./BrowserCrypto.js\";\r\n\r\n// Constant byte array length\r\nconst RANDOM_BYTE_ARR_LENGTH = 32;\r\n\r\n/**\r\n * This file defines APIs to generate PKCE codes and code verifiers.\r\n */\r\n\r\n/**\r\n * Generates PKCE Codes. See the RFC for more information: https://tools.ietf.org/html/rfc7636\r\n */\r\nexport async function generatePkceCodes(\r\n    performanceClient: IPerformanceClient,\r\n    logger: Logger,\r\n    correlationId: string\r\n): Promise<PkceCodes> {\r\n    performanceClient.addQueueMeasurement(\r\n        PerformanceEvents.GeneratePkceCodes,\r\n        correlationId\r\n    );\r\n    const codeVerifier = invoke(\r\n        generateCodeVerifier,\r\n        PerformanceEvents.GenerateCodeVerifier,\r\n        logger,\r\n        performanceClient,\r\n        correlationId\r\n    )(performanceClient, logger, correlationId);\r\n    const codeChallenge = await invokeAsync(\r\n        generateCodeChallengeFromVerifier,\r\n        PerformanceEvents.GenerateCodeChallengeFromVerifier,\r\n        logger,\r\n        performanceClient,\r\n        correlationId\r\n    )(codeVerifier, performanceClient, logger, correlationId);\r\n    return {\r\n        verifier: codeVerifier,\r\n        challenge: codeChallenge,\r\n    };\r\n}\r\n\r\n/**\r\n * Generates a random 32 byte buffer and returns the base64\r\n * encoded string to be used as a PKCE Code Verifier\r\n */\r\nfunction generateCodeVerifier(\r\n    performanceClient: IPerformanceClient,\r\n    logger: Logger,\r\n    correlationId: string\r\n): string {\r\n    try {\r\n        // Generate random values as utf-8\r\n        const buffer: Uint8Array = new Uint8Array(RANDOM_BYTE_ARR_LENGTH);\r\n        invoke(\r\n            getRandomValues,\r\n            PerformanceEvents.GetRandomValues,\r\n            logger,\r\n            performanceClient,\r\n            correlationId\r\n        )(buffer);\r\n        // encode verifier as base64\r\n        const pkceCodeVerifierB64: string = urlEncodeArr(buffer);\r\n        return pkceCodeVerifierB64;\r\n    } catch (e) {\r\n        throw createBrowserAuthError(BrowserAuthErrorCodes.pkceNotCreated);\r\n    }\r\n}\r\n\r\n/**\r\n * Creates a base64 encoded PKCE Code Challenge string from the\r\n * hash created from the PKCE Code Verifier supplied\r\n */\r\nasync function generateCodeChallengeFromVerifier(\r\n    pkceCodeVerifier: string,\r\n    performanceClient: IPerformanceClient,\r\n    logger: Logger,\r\n    correlationId: string\r\n): Promise<string> {\r\n    performanceClient.addQueueMeasurement(\r\n        PerformanceEvents.GenerateCodeChallengeFromVerifier,\r\n        correlationId\r\n    );\r\n    try {\r\n        // hashed verifier\r\n        const pkceHashedCodeVerifier = await invokeAsync(\r\n            sha256Digest,\r\n            PerformanceEvents.Sha256Digest,\r\n            logger,\r\n            performanceClient,\r\n            correlationId\r\n        )(pkceCodeVerifier, performanceClient, correlationId);\r\n        // encode hash as base64\r\n        return urlEncodeArr(new Uint8Array(pkceHashedCodeVerifier));\r\n    } catch (e) {\r\n        throw createBrowserAuthError(BrowserAuthErrorCodes.pkceNotCreated);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    AccountInfo,\r\n    AuthenticationScheme,\r\n    BaseAuthRequest,\r\n    ClientConfigurationErrorCodes,\r\n    CommonSilentFlowRequest,\r\n    IPerformanceClient,\r\n    Logger,\r\n    PerformanceEvents,\r\n    StringUtils,\r\n    createClientConfigurationError,\r\n    invokeAsync,\r\n} from \"@azure/msal-common/browser\";\r\nimport { BrowserConfiguration } from \"../config/Configuration.js\";\r\nimport { SilentRequest } from \"./SilentRequest.js\";\r\nimport { hashString } from \"../crypto/BrowserCrypto.js\";\r\n\r\n/**\r\n * Initializer function for all request APIs\r\n * @param request\r\n */\r\nexport async function initializeBaseRequest(\r\n    request: Partial<BaseAuthRequest> & { correlationId: string },\r\n    config: BrowserConfiguration,\r\n    performanceClient: IPerformanceClient,\r\n    logger: Logger\r\n): Promise<BaseAuthRequest> {\r\n    performanceClient.addQueueMeasurement(\r\n        PerformanceEvents.InitializeBaseRequest,\r\n        request.correlationId\r\n    );\r\n    const authority = request.authority || config.auth.authority;\r\n\r\n    const scopes = [...((request && request.scopes) || [])];\r\n\r\n    const validatedRequest: BaseAuthRequest = {\r\n        ...request,\r\n        correlationId: request.correlationId,\r\n        authority,\r\n        scopes,\r\n    };\r\n\r\n    // Set authenticationScheme to BEARER if not explicitly set in the request\r\n    if (!validatedRequest.authenticationScheme) {\r\n        validatedRequest.authenticationScheme = AuthenticationScheme.BEARER;\r\n        logger.verbose(\r\n            'Authentication Scheme wasn\\'t explicitly set in request, defaulting to \"Bearer\" request'\r\n        );\r\n    } else {\r\n        if (\r\n            validatedRequest.authenticationScheme === AuthenticationScheme.SSH\r\n        ) {\r\n            if (!request.sshJwk) {\r\n                throw createClientConfigurationError(\r\n                    ClientConfigurationErrorCodes.missingSshJwk\r\n                );\r\n            }\r\n            if (!request.sshKid) {\r\n                throw createClientConfigurationError(\r\n                    ClientConfigurationErrorCodes.missingSshKid\r\n                );\r\n            }\r\n        }\r\n        logger.verbose(\r\n            `Authentication Scheme set to \"${validatedRequest.authenticationScheme}\" as configured in Auth request`\r\n        );\r\n    }\r\n\r\n    // Set requested claims hash if claims-based caching is enabled and claims were requested\r\n    if (\r\n        config.cache.claimsBasedCachingEnabled &&\r\n        request.claims &&\r\n        // Checks for empty stringified object \"{}\" which doesn't qualify as requested claims\r\n        !StringUtils.isEmptyObj(request.claims)\r\n    ) {\r\n        validatedRequest.requestedClaimsHash = await hashString(request.claims);\r\n    }\r\n\r\n    return validatedRequest;\r\n}\r\n\r\nexport async function initializeSilentRequest(\r\n    request: SilentRequest & { correlationId: string },\r\n    account: AccountInfo,\r\n    config: BrowserConfiguration,\r\n    performanceClient: IPerformanceClient,\r\n    logger: Logger\r\n): Promise<CommonSilentFlowRequest> {\r\n    performanceClient.addQueueMeasurement(\r\n        PerformanceEvents.InitializeSilentRequest,\r\n        request.correlationId\r\n    );\r\n\r\n    const baseRequest = await invokeAsync(\r\n        initializeBaseRequest,\r\n        PerformanceEvents.InitializeBaseRequest,\r\n        logger,\r\n        performanceClient,\r\n        request.correlationId\r\n    )(request, config, performanceClient, logger);\r\n    return {\r\n        ...request,\r\n        ...baseRequest,\r\n        account: account,\r\n        forceRefresh: request.forceRefresh || false,\r\n    };\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    ServerTelemetryManager,\r\n    CommonAuthorizationCodeRequest,\r\n    Constants,\r\n    AuthorizationCodeClient,\r\n    ClientConfiguration,\r\n    UrlString,\r\n    CommonEndSessionRequest,\r\n    ProtocolUtils,\r\n    ResponseMode,\r\n    IdTokenClaims,\r\n    AccountInfo,\r\n    AzureCloudOptions,\r\n    PerformanceEvents,\r\n    invokeAsync,\r\n    BaseAuthRequest,\r\n    StringDict,\r\n    PkceCodes,\r\n} from \"@azure/msal-common/browser\";\r\nimport { BaseInteractionClient } from \"./BaseInteractionClient.js\";\r\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest.js\";\r\nimport {\r\n    BrowserConstants,\r\n    InteractionType,\r\n} from \"../utils/BrowserConstants.js\";\r\nimport { version } from \"../packageMetadata.js\";\r\nimport { BrowserStateObject } from \"../utils/BrowserProtocolUtils.js\";\r\nimport { EndSessionRequest } from \"../request/EndSessionRequest.js\";\r\nimport * as BrowserUtils from \"../utils/BrowserUtils.js\";\r\nimport { RedirectRequest } from \"../request/RedirectRequest.js\";\r\nimport { PopupRequest } from \"../request/PopupRequest.js\";\r\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest.js\";\r\nimport { generatePkceCodes } from \"../crypto/PkceGenerator.js\";\r\nimport { createNewGuid } from \"../crypto/BrowserCrypto.js\";\r\nimport { initializeBaseRequest } from \"../request/RequestHelpers.js\";\r\n\r\n/**\r\n * Defines the class structure and helper functions used by the \"standard\", non-brokered auth flows (popup, redirect, silent (RT), silent (iframe))\r\n */\r\nexport abstract class StandardInteractionClient extends BaseInteractionClient {\r\n    /**\r\n     * Generates an auth code request tied to the url request.\r\n     * @param request\r\n     * @param pkceCodes\r\n     */\r\n    protected async initializeAuthorizationCodeRequest(\r\n        request: AuthorizationUrlRequest,\r\n        pkceCodes?: PkceCodes\r\n    ): Promise<CommonAuthorizationCodeRequest> {\r\n        this.performanceClient.addQueueMeasurement(\r\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest,\r\n            this.correlationId\r\n        );\r\n\r\n        const generatedPkceParams: PkceCodes =\r\n            pkceCodes ||\r\n            (await invokeAsync(\r\n                generatePkceCodes,\r\n                PerformanceEvents.GeneratePkceCodes,\r\n                this.logger,\r\n                this.performanceClient,\r\n                this.correlationId\r\n            )(this.performanceClient, this.logger, this.correlationId));\r\n\r\n        const authCodeRequest: CommonAuthorizationCodeRequest = {\r\n            ...request,\r\n            redirectUri: request.redirectUri,\r\n            code: Constants.EMPTY_STRING,\r\n            codeVerifier: generatedPkceParams.verifier,\r\n        };\r\n\r\n        request.codeChallenge = generatedPkceParams.challenge;\r\n        request.codeChallengeMethod = Constants.S256_CODE_CHALLENGE_METHOD;\r\n\r\n        return authCodeRequest;\r\n    }\r\n\r\n    /**\r\n     * Initializer for the logout request.\r\n     * @param logoutRequest\r\n     */\r\n    protected initializeLogoutRequest(\r\n        logoutRequest?: EndSessionRequest\r\n    ): CommonEndSessionRequest {\r\n        this.logger.verbose(\r\n            \"initializeLogoutRequest called\",\r\n            logoutRequest?.correlationId\r\n        );\r\n\r\n        const validLogoutRequest: CommonEndSessionRequest = {\r\n            correlationId: this.correlationId || createNewGuid(),\r\n            ...logoutRequest,\r\n        };\r\n\r\n        /**\r\n         * Set logout_hint to be login_hint from ID Token Claims if present\r\n         * and logoutHint attribute wasn't manually set in logout request\r\n         */\r\n        if (logoutRequest) {\r\n            // If logoutHint isn't set and an account was passed in, try to extract logoutHint from ID Token Claims\r\n            if (!logoutRequest.logoutHint) {\r\n                if (logoutRequest.account) {\r\n                    const logoutHint = this.getLogoutHintFromIdTokenClaims(\r\n                        logoutRequest.account\r\n                    );\r\n                    if (logoutHint) {\r\n                        this.logger.verbose(\r\n                            \"Setting logoutHint to login_hint ID Token Claim value for the account provided\"\r\n                        );\r\n                        validLogoutRequest.logoutHint = logoutHint;\r\n                    }\r\n                } else {\r\n                    this.logger.verbose(\r\n                        \"logoutHint was not set and account was not passed into logout request, logoutHint will not be set\"\r\n                    );\r\n                }\r\n            } else {\r\n                this.logger.verbose(\r\n                    \"logoutHint has already been set in logoutRequest\"\r\n                );\r\n            }\r\n        } else {\r\n            this.logger.verbose(\r\n                \"logoutHint will not be set since no logout request was configured\"\r\n            );\r\n        }\r\n\r\n        /*\r\n         * Only set redirect uri if logout request isn't provided or the set uri isn't null.\r\n         * Otherwise, use passed uri, config, or current page.\r\n         */\r\n        if (!logoutRequest || logoutRequest.postLogoutRedirectUri !== null) {\r\n            if (logoutRequest && logoutRequest.postLogoutRedirectUri) {\r\n                this.logger.verbose(\r\n                    \"Setting postLogoutRedirectUri to uri set on logout request\",\r\n                    validLogoutRequest.correlationId\r\n                );\r\n                validLogoutRequest.postLogoutRedirectUri =\r\n                    UrlString.getAbsoluteUrl(\r\n                        logoutRequest.postLogoutRedirectUri,\r\n                        BrowserUtils.getCurrentUri()\r\n                    );\r\n            } else if (this.config.auth.postLogoutRedirectUri === null) {\r\n                this.logger.verbose(\r\n                    \"postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect\",\r\n                    validLogoutRequest.correlationId\r\n                );\r\n            } else if (this.config.auth.postLogoutRedirectUri) {\r\n                this.logger.verbose(\r\n                    \"Setting postLogoutRedirectUri to configured uri\",\r\n                    validLogoutRequest.correlationId\r\n                );\r\n                validLogoutRequest.postLogoutRedirectUri =\r\n                    UrlString.getAbsoluteUrl(\r\n                        this.config.auth.postLogoutRedirectUri,\r\n                        BrowserUtils.getCurrentUri()\r\n                    );\r\n            } else {\r\n                this.logger.verbose(\r\n                    \"Setting postLogoutRedirectUri to current page\",\r\n                    validLogoutRequest.correlationId\r\n                );\r\n                validLogoutRequest.postLogoutRedirectUri =\r\n                    UrlString.getAbsoluteUrl(\r\n                        BrowserUtils.getCurrentUri(),\r\n                        BrowserUtils.getCurrentUri()\r\n                    );\r\n            }\r\n        } else {\r\n            this.logger.verbose(\r\n                \"postLogoutRedirectUri passed as null, not setting post logout redirect uri\",\r\n                validLogoutRequest.correlationId\r\n            );\r\n        }\r\n\r\n        return validLogoutRequest;\r\n    }\r\n\r\n    /**\r\n     * Parses login_hint ID Token Claim out of AccountInfo object to be used as\r\n     * logout_hint in end session request.\r\n     * @param account\r\n     */\r\n    protected getLogoutHintFromIdTokenClaims(\r\n        account: AccountInfo\r\n    ): string | null {\r\n        const idTokenClaims: IdTokenClaims | undefined = account.idTokenClaims;\r\n        if (idTokenClaims) {\r\n            if (idTokenClaims.login_hint) {\r\n                return idTokenClaims.login_hint;\r\n            } else {\r\n                this.logger.verbose(\r\n                    \"The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request\"\r\n                );\r\n            }\r\n        } else {\r\n            this.logger.verbose(\r\n                \"The provided account does not contain ID Token Claims, logoutHint will not be added to logout request\"\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Creates an Authorization Code Client with the given authority, or the default authority.\r\n     * @param params {\r\n     *         serverTelemetryManager: ServerTelemetryManager;\r\n     *         authorityUrl?: string;\r\n     *         requestAzureCloudOptions?: AzureCloudOptions;\r\n     *         requestExtraQueryParameters?: StringDict;\r\n     *         account?: AccountInfo;\r\n     *        }\r\n     */\r\n    protected async createAuthCodeClient(params: {\r\n        serverTelemetryManager: ServerTelemetryManager;\r\n        requestAuthority?: string;\r\n        requestAzureCloudOptions?: AzureCloudOptions;\r\n        requestExtraQueryParameters?: StringDict;\r\n        account?: AccountInfo;\r\n    }): Promise<AuthorizationCodeClient> {\r\n        this.performanceClient.addQueueMeasurement(\r\n            PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\r\n            this.correlationId\r\n        );\r\n        // Create auth module.\r\n        const clientConfig = await invokeAsync(\r\n            this.getClientConfiguration.bind(this),\r\n            PerformanceEvents.StandardInteractionClientGetClientConfiguration,\r\n            this.logger,\r\n            this.performanceClient,\r\n            this.correlationId\r\n        )(params);\r\n\r\n        return new AuthorizationCodeClient(\r\n            clientConfig,\r\n            this.performanceClient\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Creates a Client Configuration object with the given request authority, or the default authority.\r\n     * @param params {\r\n     *         serverTelemetryManager: ServerTelemetryManager;\r\n     *         requestAuthority?: string;\r\n     *         requestAzureCloudOptions?: AzureCloudOptions;\r\n     *         requestExtraQueryParameters?: boolean;\r\n     *         account?: AccountInfo;\r\n     *        }\r\n     */\r\n    protected async getClientConfiguration(params: {\r\n        serverTelemetryManager: ServerTelemetryManager;\r\n        requestAuthority?: string;\r\n        requestAzureCloudOptions?: AzureCloudOptions;\r\n        requestExtraQueryParameters?: StringDict;\r\n        account?: AccountInfo;\r\n    }): Promise<ClientConfiguration> {\r\n        const {\r\n            serverTelemetryManager,\r\n            requestAuthority,\r\n            requestAzureCloudOptions,\r\n            requestExtraQueryParameters,\r\n            account,\r\n        } = params;\r\n\r\n        this.performanceClient.addQueueMeasurement(\r\n            PerformanceEvents.StandardInteractionClientGetClientConfiguration,\r\n            this.correlationId\r\n        );\r\n        const discoveredAuthority = await invokeAsync(\r\n            this.getDiscoveredAuthority.bind(this),\r\n            PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority,\r\n            this.logger,\r\n            this.performanceClient,\r\n            this.correlationId\r\n        )({\r\n            requestAuthority,\r\n            requestAzureCloudOptions,\r\n            requestExtraQueryParameters,\r\n            account,\r\n        });\r\n        const logger = this.config.system.loggerOptions;\r\n\r\n        return {\r\n            authOptions: {\r\n                clientId: this.config.auth.clientId,\r\n                authority: discoveredAuthority,\r\n                clientCapabilities: this.config.auth.clientCapabilities,\r\n                redirectUri: this.config.auth.redirectUri,\r\n            },\r\n            systemOptions: {\r\n                tokenRenewalOffsetSeconds:\r\n                    this.config.system.tokenRenewalOffsetSeconds,\r\n                preventCorsPreflight: true,\r\n            },\r\n            loggerOptions: {\r\n                loggerCallback: logger.loggerCallback,\r\n                piiLoggingEnabled: logger.piiLoggingEnabled,\r\n                logLevel: logger.logLevel,\r\n                correlationId: this.correlationId,\r\n            },\r\n            cacheOptions: {\r\n                claimsBasedCachingEnabled:\r\n                    this.config.cache.claimsBasedCachingEnabled,\r\n            },\r\n            cryptoInterface: this.browserCrypto,\r\n            networkInterface: this.networkClient,\r\n            storageInterface: this.browserStorage,\r\n            serverTelemetryManager: serverTelemetryManager,\r\n            libraryInfo: {\r\n                sku: BrowserConstants.MSAL_SKU,\r\n                version: version,\r\n                cpu: Constants.EMPTY_STRING,\r\n                os: Constants.EMPTY_STRING,\r\n            },\r\n            telemetry: this.config.telemetry,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Helper to initialize required request parameters for interactive APIs and ssoSilent()\r\n     * @param request\r\n     * @param interactionType\r\n     */\r\n    protected async initializeAuthorizationRequest(\r\n        request: RedirectRequest | PopupRequest | SsoSilentRequest,\r\n        interactionType: InteractionType\r\n    ): Promise<AuthorizationUrlRequest> {\r\n        this.performanceClient.addQueueMeasurement(\r\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\r\n            this.correlationId\r\n        );\r\n\r\n        const redirectUri = this.getRedirectUri(request.redirectUri);\r\n        const browserState: BrowserStateObject = {\r\n            interactionType: interactionType,\r\n        };\r\n        const state = ProtocolUtils.setRequestState(\r\n            this.browserCrypto,\r\n            (request && request.state) || Constants.EMPTY_STRING,\r\n            browserState\r\n        );\r\n\r\n        const baseRequest: BaseAuthRequest = await invokeAsync(\r\n            initializeBaseRequest,\r\n            PerformanceEvents.InitializeBaseRequest,\r\n            this.logger,\r\n            this.performanceClient,\r\n            this.correlationId\r\n        )(\r\n            { ...request, correlationId: this.correlationId },\r\n            this.config,\r\n            this.performanceClient,\r\n            this.logger\r\n        );\r\n\r\n        const validatedRequest: AuthorizationUrlRequest = {\r\n            ...baseRequest,\r\n            redirectUri: redirectUri,\r\n            state: state,\r\n            nonce: request.nonce || createNewGuid(),\r\n            responseMode: this.config.auth.OIDCOptions\r\n                .serverResponseType as ResponseMode,\r\n        };\r\n\r\n        // Skip active account lookup if either login hint or session id is set\r\n        if (request.loginHint || request.sid) {\r\n            return validatedRequest;\r\n        }\r\n\r\n        const account =\r\n            request.account || this.browserStorage.getActiveAccount();\r\n        if (account) {\r\n            this.logger.verbose(\r\n                \"Setting validated request account\",\r\n                this.correlationId\r\n            );\r\n            this.logger.verbosePii(\r\n                `Setting validated request account: ${account.homeAccountId}`,\r\n                this.correlationId\r\n            );\r\n            validatedRequest.account = account;\r\n        }\r\n\r\n        return validatedRequest;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nexport const contentError = \"ContentError\";\r\nexport const userSwitch = \"user_switch\";\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    AuthError,\r\n    InteractionRequiredAuthError,\r\n    InteractionRequiredAuthErrorCodes,\r\n    createInteractionRequiredAuthError,\r\n} from \"@azure/msal-common/browser\";\r\nimport {\r\n    createBrowserAuthError,\r\n    BrowserAuthErrorCodes,\r\n} from \"./BrowserAuthError.js\";\r\n\r\nimport * as NativeAuthErrorCodes from \"./NativeAuthErrorCodes.js\";\r\nimport * as NativeStatusCodes from \"../broker/nativeBroker/NativeStatusCodes.js\";\r\nexport { NativeAuthErrorCodes };\r\n\r\nexport type OSError = {\r\n    error?: number;\r\n    protocol_error?: string;\r\n    properties?: object;\r\n    status?: string;\r\n    retryable?: boolean;\r\n};\r\n\r\nconst INVALID_METHOD_ERROR = -2147186943;\r\n\r\nexport const NativeAuthErrorMessages = {\r\n    [NativeAuthErrorCodes.userSwitch]:\r\n        \"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.\",\r\n};\r\n\r\nexport class NativeAuthError extends AuthError {\r\n    ext: OSError | undefined;\r\n\r\n    constructor(errorCode: string, description?: string, ext?: OSError) {\r\n        super(errorCode, description);\r\n\r\n        Object.setPrototypeOf(this, NativeAuthError.prototype);\r\n        this.name = \"NativeAuthError\";\r\n        this.ext = ext;\r\n    }\r\n}\r\n\r\n/**\r\n * These errors should result in a fallback to the 'standard' browser based auth flow.\r\n */\r\nexport function isFatalNativeAuthError(error: NativeAuthError): boolean {\r\n    if (\r\n        error.ext &&\r\n        error.ext.status &&\r\n        (error.ext.status === NativeStatusCodes.PERSISTENT_ERROR ||\r\n            error.ext.status === NativeStatusCodes.DISABLED)\r\n    ) {\r\n        return true;\r\n    }\r\n\r\n    if (\r\n        error.ext &&\r\n        error.ext.error &&\r\n        error.ext.error === INVALID_METHOD_ERROR\r\n    ) {\r\n        return true;\r\n    }\r\n\r\n    switch (error.errorCode) {\r\n        case NativeAuthErrorCodes.contentError:\r\n            return true;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\n\r\n/**\r\n * Create the appropriate error object based on the WAM status code.\r\n * @param code\r\n * @param description\r\n * @param ext\r\n * @returns\r\n */\r\nexport function createNativeAuthError(\r\n    code: string,\r\n    description?: string,\r\n    ext?: OSError\r\n): AuthError {\r\n    if (ext && ext.status) {\r\n        switch (ext.status) {\r\n            case NativeStatusCodes.ACCOUNT_UNAVAILABLE:\r\n                return createInteractionRequiredAuthError(\r\n                    InteractionRequiredAuthErrorCodes.nativeAccountUnavailable\r\n                );\r\n            case NativeStatusCodes.USER_INTERACTION_REQUIRED:\r\n                return new InteractionRequiredAuthError(code, description);\r\n            case NativeStatusCodes.USER_CANCEL:\r\n                return createBrowserAuthError(\r\n                    BrowserAuthErrorCodes.userCancelled\r\n                );\r\n            case NativeStatusCodes.NO_NETWORK:\r\n                return createBrowserAuthError(\r\n                    BrowserAuthErrorCodes.noNetworkConnectivity\r\n                );\r\n        }\r\n    }\r\n\r\n    return new NativeAuthError(\r\n        code,\r\n        NativeAuthErrorMessages[code] || description,\r\n        ext\r\n    );\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n// Status Codes that can be thrown by WAM\r\nexport const USER_INTERACTION_REQUIRED = \"USER_INTERACTION_REQUIRED\";\r\nexport const USER_CANCEL = \"USER_CANCEL\";\r\nexport const NO_NETWORK = \"NO_NETWORK\";\r\nexport const TRANSIENT_ERROR = \"TRANSIENT_ERROR\";\r\nexport const PERSISTENT_ERROR = \"PERSISTENT_ERROR\";\r\nexport const DISABLED = \"DISABLED\";\r\nexport const ACCOUNT_UNAVAILABLE = \"ACCOUNT_UNAVAILABLE\";\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { BaseClient } from \"./BaseClient.js\";\r\nimport { ClientConfiguration } from \"../config/ClientConfiguration.js\";\r\nimport { CommonSilentFlowRequest } from \"../request/CommonSilentFlowRequest.js\";\r\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\r\nimport * as TimeUtils from \"../utils/TimeUtils.js\";\r\nimport {\r\n    ClientAuthErrorCodes,\r\n    createClientAuthError,\r\n} from \"../error/ClientAuthError.js\";\r\nimport { ResponseHandler } from \"../response/ResponseHandler.js\";\r\nimport { CacheRecord } from \"../cache/entities/CacheRecord.js\";\r\nimport { CacheOutcome } from \"../utils/Constants.js\";\r\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient.js\";\r\nimport { StringUtils } from \"../utils/StringUtils.js\";\r\nimport { checkMaxAge, extractTokenClaims } from \"../account/AuthToken.js\";\r\nimport { TokenClaims } from \"../account/TokenClaims.js\";\r\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent.js\";\r\nimport { invokeAsync } from \"../utils/FunctionWrappers.js\";\r\nimport { getTenantFromAuthorityString } from \"../authority/Authority.js\";\r\n\r\n/** @internal */\r\nexport class SilentFlowClient extends BaseClient {\r\n    constructor(\r\n        configuration: ClientConfiguration,\r\n        performanceClient?: IPerformanceClient\r\n    ) {\r\n        super(configuration, performanceClient);\r\n    }\r\n\r\n    /**\r\n     * Retrieves token from cache or throws an error if it must be refreshed.\r\n     * @param request\r\n     */\r\n    async acquireCachedToken(\r\n        request: CommonSilentFlowRequest\r\n    ): Promise<[AuthenticationResult, CacheOutcome]> {\r\n        this.performanceClient?.addQueueMeasurement(\r\n            PerformanceEvents.SilentFlowClientAcquireCachedToken,\r\n            request.correlationId\r\n        );\r\n        let lastCacheOutcome: CacheOutcome = CacheOutcome.NOT_APPLICABLE;\r\n\r\n        if (\r\n            request.forceRefresh ||\r\n            (!this.config.cacheOptions.claimsBasedCachingEnabled &&\r\n                !StringUtils.isEmptyObj(request.claims))\r\n        ) {\r\n            // Must refresh due to present force_refresh flag.\r\n            this.setCacheOutcome(\r\n                CacheOutcome.FORCE_REFRESH_OR_CLAIMS,\r\n                request.correlationId\r\n            );\r\n            throw createClientAuthError(\r\n                ClientAuthErrorCodes.tokenRefreshRequired\r\n            );\r\n        }\r\n\r\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\r\n        if (!request.account) {\r\n            throw createClientAuthError(\r\n                ClientAuthErrorCodes.noAccountInSilentRequest\r\n            );\r\n        }\r\n\r\n        const requestTenantId =\r\n            request.account.tenantId ||\r\n            getTenantFromAuthorityString(request.authority);\r\n        const tokenKeys = this.cacheManager.getTokenKeys();\r\n        const cachedAccessToken = this.cacheManager.getAccessToken(\r\n            request.account,\r\n            request,\r\n            tokenKeys,\r\n            requestTenantId,\r\n            this.performanceClient,\r\n            request.correlationId\r\n        );\r\n\r\n        if (!cachedAccessToken) {\r\n            // must refresh due to non-existent access_token\r\n            this.setCacheOutcome(\r\n                CacheOutcome.NO_CACHED_ACCESS_TOKEN,\r\n                request.correlationId\r\n            );\r\n            throw createClientAuthError(\r\n                ClientAuthErrorCodes.tokenRefreshRequired\r\n            );\r\n        } else if (\r\n            TimeUtils.wasClockTurnedBack(cachedAccessToken.cachedAt) ||\r\n            TimeUtils.isTokenExpired(\r\n                cachedAccessToken.expiresOn,\r\n                this.config.systemOptions.tokenRenewalOffsetSeconds\r\n            )\r\n        ) {\r\n            // must refresh due to the expires_in value\r\n            this.setCacheOutcome(\r\n                CacheOutcome.CACHED_ACCESS_TOKEN_EXPIRED,\r\n                request.correlationId\r\n            );\r\n            throw createClientAuthError(\r\n                ClientAuthErrorCodes.tokenRefreshRequired\r\n            );\r\n        } else if (\r\n            cachedAccessToken.refreshOn &&\r\n            TimeUtils.isTokenExpired(cachedAccessToken.refreshOn, 0)\r\n        ) {\r\n            // must refresh (in the background) due to the refresh_in value\r\n            lastCacheOutcome = CacheOutcome.PROACTIVELY_REFRESHED;\r\n\r\n            // don't throw ClientAuthError.createRefreshRequiredError(), return cached token instead\r\n        }\r\n\r\n        const environment =\r\n            request.authority || this.authority.getPreferredCache();\r\n        const cacheRecord: CacheRecord = {\r\n            account: this.cacheManager.readAccountFromCache(request.account),\r\n            accessToken: cachedAccessToken,\r\n            idToken: this.cacheManager.getIdToken(\r\n                request.account,\r\n                tokenKeys,\r\n                requestTenantId,\r\n                this.performanceClient,\r\n                request.correlationId\r\n            ),\r\n            refreshToken: null,\r\n            appMetadata:\r\n                this.cacheManager.readAppMetadataFromCache(environment),\r\n        };\r\n\r\n        this.setCacheOutcome(lastCacheOutcome, request.correlationId);\r\n\r\n        if (this.config.serverTelemetryManager) {\r\n            this.config.serverTelemetryManager.incrementCacheHits();\r\n        }\r\n\r\n        return [\r\n            await invokeAsync(\r\n                this.generateResultFromCacheRecord.bind(this),\r\n                PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord,\r\n                this.logger,\r\n                this.performanceClient,\r\n                request.correlationId\r\n            )(cacheRecord, request),\r\n            lastCacheOutcome,\r\n        ];\r\n    }\r\n\r\n    private setCacheOutcome(\r\n        cacheOutcome: CacheOutcome,\r\n        correlationId: string\r\n    ): void {\r\n        this.serverTelemetryManager?.setCacheOutcome(cacheOutcome);\r\n        this.performanceClient?.addFields(\r\n            {\r\n                cacheOutcome: cacheOutcome,\r\n            },\r\n            correlationId\r\n        );\r\n        if (cacheOutcome !== CacheOutcome.NOT_APPLICABLE) {\r\n            this.logger.info(\r\n                `Token refresh is required due to cache outcome: ${cacheOutcome}`\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Helper function to build response object from the CacheRecord\r\n     * @param cacheRecord\r\n     */\r\n    private async generateResultFromCacheRecord(\r\n        cacheRecord: CacheRecord,\r\n        request: CommonSilentFlowRequest\r\n    ): Promise<AuthenticationResult> {\r\n        this.performanceClient?.addQueueMeasurement(\r\n            PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord,\r\n            request.correlationId\r\n        );\r\n        let idTokenClaims: TokenClaims | undefined;\r\n        if (cacheRecord.idToken) {\r\n            idTokenClaims = extractTokenClaims(\r\n                cacheRecord.idToken.secret,\r\n                this.config.cryptoInterface.base64Decode\r\n            );\r\n        }\r\n\r\n        // token max_age check\r\n        if (request.maxAge || request.maxAge === 0) {\r\n            const authTime = idTokenClaims?.auth_time;\r\n            if (!authTime) {\r\n                throw createClientAuthError(\r\n                    ClientAuthErrorCodes.authTimeNotFound\r\n                );\r\n            }\r\n\r\n            checkMaxAge(authTime, request.maxAge);\r\n        }\r\n\r\n        return ResponseHandler.generateAuthenticationResult(\r\n            this.cryptoUtils,\r\n            this.authority,\r\n            cacheRecord,\r\n            true,\r\n            request,\r\n            idTokenClaims\r\n        );\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { StandardInteractionClient } from \"./StandardInteractionClient.js\";\r\nimport {\r\n    CommonSilentFlowRequest,\r\n    SilentFlowClient,\r\n    PerformanceEvents,\r\n    invokeAsync,\r\n} from \"@azure/msal-common/browser\";\r\nimport { ApiId } from \"../utils/BrowserConstants.js\";\r\nimport {\r\n    BrowserAuthError,\r\n    BrowserAuthErrorCodes,\r\n} from \"../error/BrowserAuthError.js\";\r\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\r\nimport { ClearCacheRequest } from \"../request/ClearCacheRequest.js\";\r\n\r\nexport class SilentCacheClient extends StandardInteractionClient {\r\n    /**\r\n     * Returns unexpired tokens from the cache, if available\r\n     * @param silentRequest\r\n     */\r\n    async acquireToken(\r\n        silentRequest: CommonSilentFlowRequest\r\n    ): Promise<AuthenticationResult> {\r\n        this.performanceClient.addQueueMeasurement(\r\n            PerformanceEvents.SilentCacheClientAcquireToken,\r\n            silentRequest.correlationId\r\n        );\r\n        // Telemetry manager only used to increment cacheHits here\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\r\n            ApiId.acquireTokenSilent_silentFlow\r\n        );\r\n\r\n        const clientConfig = await invokeAsync(\r\n            this.getClientConfiguration.bind(this),\r\n            PerformanceEvents.StandardInteractionClientGetClientConfiguration,\r\n            this.logger,\r\n            this.performanceClient,\r\n            this.correlationId\r\n        )({\r\n            serverTelemetryManager,\r\n            requestAuthority: silentRequest.authority,\r\n            requestAzureCloudOptions: silentRequest.azureCloudOptions,\r\n            account: silentRequest.account,\r\n        });\r\n        const silentAuthClient = new SilentFlowClient(\r\n            clientConfig,\r\n            this.performanceClient\r\n        );\r\n        this.logger.verbose(\"Silent auth client created\");\r\n\r\n        try {\r\n            const response = await invokeAsync(\r\n                silentAuthClient.acquireCachedToken.bind(silentAuthClient),\r\n                PerformanceEvents.SilentFlowClientAcquireCachedToken,\r\n                this.logger,\r\n                this.performanceClient,\r\n                silentRequest.correlationId\r\n            )(silentRequest);\r\n            const authResponse = response[0] as AuthenticationResult;\r\n\r\n            this.performanceClient.addFields(\r\n                {\r\n                    fromCache: true,\r\n                },\r\n                silentRequest.correlationId\r\n            );\r\n            return authResponse;\r\n        } catch (error) {\r\n            if (\r\n                error instanceof BrowserAuthError &&\r\n                error.errorCode === BrowserAuthErrorCodes.cryptoKeyNotFound\r\n            ) {\r\n                this.logger.verbose(\r\n                    \"Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair.\"\r\n                );\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * API to silenty clear the browser cache.\r\n     * @param logoutRequest\r\n     */\r\n    logout(logoutRequest?: ClearCacheRequest): Promise<void> {\r\n        this.logger.verbose(\"logoutRedirect called\");\r\n        const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\r\n        return this.clearCacheOnLogout(validLogoutRequest?.account);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    Logger,\r\n    ICrypto,\r\n    PromptValue,\r\n    AuthToken,\r\n    Constants,\r\n    AccountEntity,\r\n    AuthorityType,\r\n    ScopeSet,\r\n    TimeUtils,\r\n    AuthenticationScheme,\r\n    UrlString,\r\n    OIDC_DEFAULT_SCOPES,\r\n    PopTokenGenerator,\r\n    SignedHttpRequestParameters,\r\n    IPerformanceClient,\r\n    PerformanceEvents,\r\n    IdTokenEntity,\r\n    AccessTokenEntity,\r\n    AuthError,\r\n    CommonSilentFlowRequest,\r\n    AccountInfo,\r\n    AADServerParamKeys,\r\n    TokenClaims,\r\n    createClientAuthError,\r\n    ClientAuthErrorCodes,\r\n    invokeAsync,\r\n    createAuthError,\r\n    AuthErrorCodes,\r\n    updateAccountTenantProfileData,\r\n    CacheHelpers,\r\n    buildAccountToCache,\r\n    InProgressPerformanceEvent,\r\n    ServerTelemetryManager,\r\n} from \"@azure/msal-common/browser\";\r\nimport { BaseInteractionClient } from \"./BaseInteractionClient.js\";\r\nimport { BrowserConfiguration } from \"../config/Configuration.js\";\r\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager.js\";\r\nimport { EventHandler } from \"../event/EventHandler.js\";\r\nimport { PopupRequest } from \"../request/PopupRequest.js\";\r\nimport { SilentRequest } from \"../request/SilentRequest.js\";\r\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest.js\";\r\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler.js\";\r\nimport {\r\n    NativeExtensionMethod,\r\n    ApiId,\r\n    TemporaryCacheKeys,\r\n    NativeConstants,\r\n    BrowserConstants,\r\n} from \"../utils/BrowserConstants.js\";\r\nimport {\r\n    NativeExtensionRequestBody,\r\n    NativeTokenRequest,\r\n} from \"../broker/nativeBroker/NativeRequest.js\";\r\nimport { MATS, NativeResponse } from \"../broker/nativeBroker/NativeResponse.js\";\r\nimport {\r\n    NativeAuthError,\r\n    NativeAuthErrorCodes,\r\n    createNativeAuthError,\r\n    isFatalNativeAuthError,\r\n} from \"../error/NativeAuthError.js\";\r\nimport { RedirectRequest } from \"../request/RedirectRequest.js\";\r\nimport { NavigationOptions } from \"../navigation/NavigationOptions.js\";\r\nimport { INavigationClient } from \"../navigation/INavigationClient.js\";\r\nimport {\r\n    createBrowserAuthError,\r\n    BrowserAuthErrorCodes,\r\n} from \"../error/BrowserAuthError.js\";\r\nimport { SilentCacheClient } from \"./SilentCacheClient.js\";\r\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\r\nimport { base64Decode } from \"../encode/Base64Decode.js\";\r\nimport { version } from \"../packageMetadata.js\";\r\n\r\nexport class NativeInteractionClient extends BaseInteractionClient {\r\n    protected apiId: ApiId;\r\n    protected accountId: string;\r\n    protected nativeMessageHandler: NativeMessageHandler;\r\n    protected silentCacheClient: SilentCacheClient;\r\n    protected nativeStorageManager: BrowserCacheManager;\r\n    protected skus: string;\r\n\r\n    constructor(\r\n        config: BrowserConfiguration,\r\n        browserStorage: BrowserCacheManager,\r\n        browserCrypto: ICrypto,\r\n        logger: Logger,\r\n        eventHandler: EventHandler,\r\n        navigationClient: INavigationClient,\r\n        apiId: ApiId,\r\n        performanceClient: IPerformanceClient,\r\n        provider: NativeMessageHandler,\r\n        accountId: string,\r\n        nativeStorageImpl: BrowserCacheManager,\r\n        correlationId?: string\r\n    ) {\r\n        super(\r\n            config,\r\n            browserStorage,\r\n            browserCrypto,\r\n            logger,\r\n            eventHandler,\r\n            navigationClient,\r\n            performanceClient,\r\n            provider,\r\n            correlationId\r\n        );\r\n        this.apiId = apiId;\r\n        this.accountId = accountId;\r\n        this.nativeMessageHandler = provider;\r\n        this.nativeStorageManager = nativeStorageImpl;\r\n        this.silentCacheClient = new SilentCacheClient(\r\n            config,\r\n            this.nativeStorageManager,\r\n            browserCrypto,\r\n            logger,\r\n            eventHandler,\r\n            navigationClient,\r\n            performanceClient,\r\n            provider,\r\n            correlationId\r\n        );\r\n\r\n        const extensionName =\r\n            this.nativeMessageHandler.getExtensionId() ===\r\n            NativeConstants.PREFERRED_EXTENSION_ID\r\n                ? \"chrome\"\r\n                : this.nativeMessageHandler.getExtensionId()?.length\r\n                ? \"unknown\"\r\n                : undefined;\r\n        this.skus = ServerTelemetryManager.makeExtraSkuString({\r\n            libraryName: BrowserConstants.MSAL_SKU,\r\n            libraryVersion: version,\r\n            extensionName: extensionName,\r\n            extensionVersion: this.nativeMessageHandler.getExtensionVersion(),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Adds SKUs to request extra query parameters\r\n     * @param request {NativeTokenRequest}\r\n     * @private\r\n     */\r\n    private addRequestSKUs(request: NativeTokenRequest) {\r\n        request.extraParameters = {\r\n            ...request.extraParameters,\r\n            [AADServerParamKeys.X_CLIENT_EXTRA_SKU]: this.skus,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Acquire token from native platform via browser extension\r\n     * @param request\r\n     */\r\n    async acquireToken(\r\n        request: PopupRequest | SilentRequest | SsoSilentRequest\r\n    ): Promise<AuthenticationResult> {\r\n        this.performanceClient.addQueueMeasurement(\r\n            PerformanceEvents.NativeInteractionClientAcquireToken,\r\n            request.correlationId\r\n        );\r\n        this.logger.trace(\"NativeInteractionClient - acquireToken called.\");\r\n\r\n        // start the perf measurement\r\n        const nativeATMeasurement = this.performanceClient.startMeasurement(\r\n            PerformanceEvents.NativeInteractionClientAcquireToken,\r\n            request.correlationId\r\n        );\r\n        const reqTimestamp = TimeUtils.nowSeconds();\r\n\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\r\n            this.apiId\r\n        );\r\n        try {\r\n            // initialize native request\r\n            const nativeRequest = await this.initializeNativeRequest(request);\r\n\r\n            // check if the tokens can be retrieved from internal cache\r\n            try {\r\n                const result = await this.acquireTokensFromCache(\r\n                    this.accountId,\r\n                    nativeRequest\r\n                );\r\n                nativeATMeasurement.end({\r\n                    success: true,\r\n                    isNativeBroker: false, // Should be true only when the result is coming directly from the broker\r\n                    fromCache: true,\r\n                });\r\n                return result;\r\n            } catch (e) {\r\n                // continue with a native call for any and all errors\r\n                this.logger.info(\r\n                    \"MSAL internal Cache does not contain tokens, proceed to make a native call\"\r\n                );\r\n            }\r\n\r\n            const { ...nativeTokenRequest } = nativeRequest;\r\n\r\n            // fall back to native calls\r\n            const messageBody: NativeExtensionRequestBody = {\r\n                method: NativeExtensionMethod.GetToken,\r\n                request: nativeTokenRequest,\r\n            };\r\n\r\n            const response: object =\r\n                await this.nativeMessageHandler.sendMessage(messageBody);\r\n            const validatedResponse: NativeResponse =\r\n                this.validateNativeResponse(response);\r\n\r\n            return await this.handleNativeResponse(\r\n                validatedResponse,\r\n                nativeRequest,\r\n                reqTimestamp\r\n            )\r\n                .then((result: AuthenticationResult) => {\r\n                    nativeATMeasurement.end({\r\n                        success: true,\r\n                        isNativeBroker: true,\r\n                        requestId: result.requestId,\r\n                    });\r\n                    serverTelemetryManager.clearNativeBrokerErrorCode();\r\n                    return result;\r\n                })\r\n                .catch((error: AuthError) => {\r\n                    nativeATMeasurement.end({\r\n                        success: false,\r\n                        errorCode: error.errorCode,\r\n                        subErrorCode: error.subError,\r\n                        isNativeBroker: true,\r\n                    });\r\n                    throw error;\r\n                });\r\n        } catch (e) {\r\n            if (e instanceof NativeAuthError) {\r\n                serverTelemetryManager.setNativeBrokerErrorCode(e.errorCode);\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates silent flow request\r\n     * @param request\r\n     * @param cachedAccount\r\n     * @returns CommonSilentFlowRequest\r\n     */\r\n    private createSilentCacheRequest(\r\n        request: NativeTokenRequest,\r\n        cachedAccount: AccountInfo\r\n    ): CommonSilentFlowRequest {\r\n        return {\r\n            authority: request.authority,\r\n            correlationId: this.correlationId,\r\n            scopes: ScopeSet.fromString(request.scope).asArray(),\r\n            account: cachedAccount,\r\n            forceRefresh: false,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Fetches the tokens from the cache if un-expired\r\n     * @param nativeAccountId\r\n     * @param request\r\n     * @returns authenticationResult\r\n     */\r\n    protected async acquireTokensFromCache(\r\n        nativeAccountId: string,\r\n        request: NativeTokenRequest\r\n    ): Promise<AuthenticationResult> {\r\n        if (!nativeAccountId) {\r\n            this.logger.warning(\r\n                \"NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided\"\r\n            );\r\n            throw createClientAuthError(ClientAuthErrorCodes.noAccountFound);\r\n        }\r\n        // fetch the account from browser cache\r\n        const account = this.browserStorage.getBaseAccountInfo({\r\n            nativeAccountId,\r\n        });\r\n\r\n        if (!account) {\r\n            throw createClientAuthError(ClientAuthErrorCodes.noAccountFound);\r\n        }\r\n\r\n        // leverage silent flow for cached tokens retrieval\r\n        try {\r\n            const silentRequest = this.createSilentCacheRequest(\r\n                request,\r\n                account\r\n            );\r\n            const result = await this.silentCacheClient.acquireToken(\r\n                silentRequest\r\n            );\r\n\r\n            const fullAccount = {\r\n                ...account,\r\n                idTokenClaims: result?.idTokenClaims as TokenClaims,\r\n                idToken: result?.idToken,\r\n            };\r\n\r\n            return {\r\n                ...result,\r\n                account: fullAccount,\r\n            };\r\n        } catch (e) {\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Acquires a token from native platform then redirects to the redirectUri instead of returning the response\r\n     * @param {RedirectRequest} request\r\n     * @param {InProgressPerformanceEvent} rootMeasurement\r\n     */\r\n    async acquireTokenRedirect(\r\n        request: RedirectRequest,\r\n        rootMeasurement: InProgressPerformanceEvent\r\n    ): Promise<void> {\r\n        this.logger.trace(\r\n            \"NativeInteractionClient - acquireTokenRedirect called.\"\r\n        );\r\n\r\n        const { ...remainingParameters } = request;\r\n        delete remainingParameters.onRedirectNavigate;\r\n\r\n        const nativeRequest = await this.initializeNativeRequest(\r\n            remainingParameters\r\n        );\r\n\r\n        const messageBody: NativeExtensionRequestBody = {\r\n            method: NativeExtensionMethod.GetToken,\r\n            request: nativeRequest,\r\n        };\r\n\r\n        try {\r\n            const response: object =\r\n                await this.nativeMessageHandler.sendMessage(messageBody);\r\n            this.validateNativeResponse(response);\r\n        } catch (e) {\r\n            // Only throw fatal errors here to allow application to fallback to regular redirect. Otherwise proceed and the error will be thrown in handleRedirectPromise\r\n            if (e instanceof NativeAuthError) {\r\n                const serverTelemetryManager =\r\n                    this.initializeServerTelemetryManager(this.apiId);\r\n                serverTelemetryManager.setNativeBrokerErrorCode(e.errorCode);\r\n                if (isFatalNativeAuthError(e)) {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        this.browserStorage.setTemporaryCache(\r\n            TemporaryCacheKeys.NATIVE_REQUEST,\r\n            JSON.stringify(nativeRequest),\r\n            true\r\n        );\r\n\r\n        const navigationOptions: NavigationOptions = {\r\n            apiId: ApiId.acquireTokenRedirect,\r\n            timeout: this.config.system.redirectNavigationTimeout,\r\n            noHistory: false,\r\n        };\r\n        const redirectUri = this.config.auth.navigateToLoginRequestUrl\r\n            ? window.location.href\r\n            : this.getRedirectUri(request.redirectUri);\r\n        rootMeasurement.end({ success: true });\r\n        await this.navigationClient.navigateExternal(\r\n            redirectUri,\r\n            navigationOptions\r\n        ); // Need to treat this as external to ensure handleRedirectPromise is run again\r\n    }\r\n\r\n    /**\r\n     * If the previous page called native platform for a token using redirect APIs, send the same request again and return the response\r\n     * @param performanceClient {IPerformanceClient?}\r\n     * @param correlationId {string?} correlation identifier\r\n     */\r\n    async handleRedirectPromise(\r\n        performanceClient?: IPerformanceClient,\r\n        correlationId?: string\r\n    ): Promise<AuthenticationResult | null> {\r\n        this.logger.trace(\r\n            \"NativeInteractionClient - handleRedirectPromise called.\"\r\n        );\r\n        if (!this.browserStorage.isInteractionInProgress(true)) {\r\n            this.logger.info(\r\n                \"handleRedirectPromise called but there is no interaction in progress, returning null.\"\r\n            );\r\n            return null;\r\n        }\r\n\r\n        // remove prompt from the request to prevent WAM from prompting twice\r\n        const cachedRequest = this.browserStorage.getCachedNativeRequest();\r\n        if (!cachedRequest) {\r\n            this.logger.verbose(\r\n                \"NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null.\"\r\n            );\r\n            if (performanceClient && correlationId) {\r\n                performanceClient?.addFields(\r\n                    { errorCode: \"no_cached_request\" },\r\n                    correlationId\r\n                );\r\n            }\r\n            return null;\r\n        }\r\n\r\n        const { prompt, ...request } = cachedRequest;\r\n        if (prompt) {\r\n            this.logger.verbose(\r\n                \"NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window.\"\r\n            );\r\n        }\r\n\r\n        this.browserStorage.removeItem(\r\n            this.browserStorage.generateCacheKey(\r\n                TemporaryCacheKeys.NATIVE_REQUEST\r\n            )\r\n        );\r\n\r\n        const messageBody: NativeExtensionRequestBody = {\r\n            method: NativeExtensionMethod.GetToken,\r\n            request: request,\r\n        };\r\n\r\n        const reqTimestamp = TimeUtils.nowSeconds();\r\n\r\n        try {\r\n            this.logger.verbose(\r\n                \"NativeInteractionClient - handleRedirectPromise sending message to native broker.\"\r\n            );\r\n            const response: object =\r\n                await this.nativeMessageHandler.sendMessage(messageBody);\r\n            this.validateNativeResponse(response);\r\n            const result = this.handleNativeResponse(\r\n                response as NativeResponse,\r\n                request,\r\n                reqTimestamp\r\n            );\r\n            this.browserStorage.setInteractionInProgress(false);\r\n            const res = await result;\r\n            const serverTelemetryManager =\r\n                this.initializeServerTelemetryManager(this.apiId);\r\n            serverTelemetryManager.clearNativeBrokerErrorCode();\r\n            return res;\r\n        } catch (e) {\r\n            this.browserStorage.setInteractionInProgress(false);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Logout from native platform via browser extension\r\n     * @param request\r\n     */\r\n    logout(): Promise<void> {\r\n        this.logger.trace(\"NativeInteractionClient - logout called.\");\r\n        return Promise.reject(\"Logout not implemented yet\");\r\n    }\r\n\r\n    /**\r\n     * Transform response from native platform into AuthenticationResult object which will be returned to the end user\r\n     * @param response\r\n     * @param request\r\n     * @param reqTimestamp\r\n     */\r\n    protected async handleNativeResponse(\r\n        response: NativeResponse,\r\n        request: NativeTokenRequest,\r\n        reqTimestamp: number\r\n    ): Promise<AuthenticationResult> {\r\n        this.logger.trace(\r\n            \"NativeInteractionClient - handleNativeResponse called.\"\r\n        );\r\n\r\n        // generate identifiers\r\n        const idTokenClaims = AuthToken.extractTokenClaims(\r\n            response.id_token,\r\n            base64Decode\r\n        );\r\n\r\n        const homeAccountIdentifier = this.createHomeAccountIdentifier(\r\n            response,\r\n            idTokenClaims\r\n        );\r\n\r\n        const cachedhomeAccountId =\r\n            this.browserStorage.getAccountInfoFilteredBy({\r\n                nativeAccountId: request.accountId,\r\n            })?.homeAccountId;\r\n\r\n        if (\r\n            homeAccountIdentifier !== cachedhomeAccountId &&\r\n            response.account.id !== request.accountId\r\n        ) {\r\n            // User switch in native broker prompt is not supported. All users must first sign in through web flow to ensure server state is in sync\r\n            throw createNativeAuthError(NativeAuthErrorCodes.userSwitch);\r\n        }\r\n\r\n        // Get the preferred_cache domain for the given authority\r\n        const authority = await this.getDiscoveredAuthority({\r\n            requestAuthority: request.authority,\r\n        });\r\n\r\n        const baseAccount = buildAccountToCache(\r\n            this.browserStorage,\r\n            authority,\r\n            homeAccountIdentifier,\r\n            base64Decode,\r\n            idTokenClaims,\r\n            response.client_info,\r\n            undefined, // environment\r\n            idTokenClaims.tid,\r\n            undefined, // auth code payload\r\n            response.account.id,\r\n            this.logger\r\n        );\r\n\r\n        // generate authenticationResult\r\n        const result = await this.generateAuthenticationResult(\r\n            response,\r\n            request,\r\n            idTokenClaims,\r\n            baseAccount,\r\n            authority.canonicalAuthority,\r\n            reqTimestamp\r\n        );\r\n\r\n        // cache accounts and tokens in the appropriate storage\r\n        await this.cacheAccount(baseAccount);\r\n        await this.cacheNativeTokens(\r\n            response,\r\n            request,\r\n            homeAccountIdentifier,\r\n            idTokenClaims,\r\n            response.access_token,\r\n            result.tenantId,\r\n            reqTimestamp\r\n        );\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * creates an homeAccountIdentifier for the account\r\n     * @param response\r\n     * @param idTokenObj\r\n     * @returns\r\n     */\r\n    protected createHomeAccountIdentifier(\r\n        response: NativeResponse,\r\n        idTokenClaims: TokenClaims\r\n    ): string {\r\n        // Save account in browser storage\r\n        const homeAccountIdentifier = AccountEntity.generateHomeAccountId(\r\n            response.client_info || Constants.EMPTY_STRING,\r\n            AuthorityType.Default,\r\n            this.logger,\r\n            this.browserCrypto,\r\n            idTokenClaims\r\n        );\r\n\r\n        return homeAccountIdentifier;\r\n    }\r\n\r\n    /**\r\n     * Helper to generate scopes\r\n     * @param response\r\n     * @param request\r\n     * @returns\r\n     */\r\n    generateScopes(\r\n        response: NativeResponse,\r\n        request: NativeTokenRequest\r\n    ): ScopeSet {\r\n        return response.scope\r\n            ? ScopeSet.fromString(response.scope)\r\n            : ScopeSet.fromString(request.scope);\r\n    }\r\n\r\n    /**\r\n     * If PoP token is requesred, records the PoP token if returned from the WAM, else generates one in the browser\r\n     * @param request\r\n     * @param response\r\n     */\r\n    async generatePopAccessToken(\r\n        response: NativeResponse,\r\n        request: NativeTokenRequest\r\n    ): Promise<string> {\r\n        if (\r\n            request.tokenType === AuthenticationScheme.POP &&\r\n            request.signPopToken\r\n        ) {\r\n            /**\r\n             * This code prioritizes SHR returned from the native layer. In case of error/SHR not calculated from WAM and the AT\r\n             * is still received, SHR is calculated locally\r\n             */\r\n\r\n            // Check if native layer returned an SHR token\r\n            if (response.shr) {\r\n                this.logger.trace(\r\n                    \"handleNativeServerResponse: SHR is enabled in native layer\"\r\n                );\r\n                return response.shr;\r\n            }\r\n\r\n            // Generate SHR in msal js if WAM does not compute it when POP is enabled\r\n            const popTokenGenerator: PopTokenGenerator = new PopTokenGenerator(\r\n                this.browserCrypto\r\n            );\r\n            const shrParameters: SignedHttpRequestParameters = {\r\n                resourceRequestMethod: request.resourceRequestMethod,\r\n                resourceRequestUri: request.resourceRequestUri,\r\n                shrClaims: request.shrClaims,\r\n                shrNonce: request.shrNonce,\r\n            };\r\n\r\n            /**\r\n             * KeyID must be present in the native request from when the PoP key was generated in order for\r\n             * PopTokenGenerator to query the full key for signing\r\n             */\r\n            if (!request.keyId) {\r\n                throw createClientAuthError(ClientAuthErrorCodes.keyIdMissing);\r\n            }\r\n            return popTokenGenerator.signPopToken(\r\n                response.access_token,\r\n                request.keyId,\r\n                shrParameters\r\n            );\r\n        } else {\r\n            return response.access_token;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generates authentication result\r\n     * @param response\r\n     * @param request\r\n     * @param idTokenObj\r\n     * @param accountEntity\r\n     * @param authority\r\n     * @param reqTimestamp\r\n     * @returns\r\n     */\r\n    protected async generateAuthenticationResult(\r\n        response: NativeResponse,\r\n        request: NativeTokenRequest,\r\n        idTokenClaims: TokenClaims,\r\n        accountEntity: AccountEntity,\r\n        authority: string,\r\n        reqTimestamp: number\r\n    ): Promise<AuthenticationResult> {\r\n        // Add Native Broker fields to Telemetry\r\n        const mats = this.addTelemetryFromNativeResponse(response);\r\n\r\n        // If scopes not returned in server response, use request scopes\r\n        const responseScopes = response.scope\r\n            ? ScopeSet.fromString(response.scope)\r\n            : ScopeSet.fromString(request.scope);\r\n\r\n        const accountProperties = response.account.properties || {};\r\n        const uid =\r\n            accountProperties[\"UID\"] ||\r\n            idTokenClaims.oid ||\r\n            idTokenClaims.sub ||\r\n            Constants.EMPTY_STRING;\r\n        const tid =\r\n            accountProperties[\"TenantId\"] ||\r\n            idTokenClaims.tid ||\r\n            Constants.EMPTY_STRING;\r\n\r\n        const accountInfo: AccountInfo | null = updateAccountTenantProfileData(\r\n            accountEntity.getAccountInfo(),\r\n            undefined, // tenantProfile optional\r\n            idTokenClaims,\r\n            response.id_token\r\n        );\r\n\r\n        /**\r\n         * In pairwise broker flows, this check prevents the broker's native account id\r\n         * from being returned over the embedded app's account id.\r\n         */\r\n        if (accountInfo.nativeAccountId !== response.account.id) {\r\n            accountInfo.nativeAccountId = response.account.id;\r\n        }\r\n\r\n        // generate PoP token as needed\r\n        const responseAccessToken = await this.generatePopAccessToken(\r\n            response,\r\n            request\r\n        );\r\n        const tokenType =\r\n            request.tokenType === AuthenticationScheme.POP\r\n                ? AuthenticationScheme.POP\r\n                : AuthenticationScheme.BEARER;\r\n\r\n        const result: AuthenticationResult = {\r\n            authority: authority,\r\n            uniqueId: uid,\r\n            tenantId: tid,\r\n            scopes: responseScopes.asArray(),\r\n            account: accountInfo,\r\n            idToken: response.id_token,\r\n            idTokenClaims: idTokenClaims,\r\n            accessToken: responseAccessToken,\r\n            fromCache: mats ? this.isResponseFromCache(mats) : false,\r\n            expiresOn: new Date(\r\n                Number(reqTimestamp + response.expires_in) * 1000\r\n            ),\r\n            tokenType: tokenType,\r\n            correlationId: this.correlationId,\r\n            state: response.state,\r\n            fromNativeBroker: true,\r\n        };\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * cache the account entity in browser storage\r\n     * @param accountEntity\r\n     */\r\n    async cacheAccount(accountEntity: AccountEntity): Promise<void> {\r\n        // Store the account info and hence `nativeAccountId` in browser cache\r\n        await this.browserStorage.setAccount(accountEntity, this.correlationId);\r\n\r\n        // Remove any existing cached tokens for this account in browser storage\r\n        this.browserStorage.removeAccountContext(accountEntity).catch((e) => {\r\n            this.logger.error(\r\n                `Error occurred while removing account context from browser storage. ${e}`\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Stores the access_token and id_token in inmemory storage\r\n     * @param response\r\n     * @param request\r\n     * @param homeAccountIdentifier\r\n     * @param idTokenObj\r\n     * @param responseAccessToken\r\n     * @param tenantId\r\n     * @param reqTimestamp\r\n     */\r\n    cacheNativeTokens(\r\n        response: NativeResponse,\r\n        request: NativeTokenRequest,\r\n        homeAccountIdentifier: string,\r\n        idTokenClaims: TokenClaims,\r\n        responseAccessToken: string,\r\n        tenantId: string,\r\n        reqTimestamp: number\r\n    ): Promise<void> {\r\n        const cachedIdToken: IdTokenEntity | null =\r\n            CacheHelpers.createIdTokenEntity(\r\n                homeAccountIdentifier,\r\n                request.authority,\r\n                response.id_token || \"\",\r\n                request.clientId,\r\n                idTokenClaims.tid || \"\"\r\n            );\r\n\r\n        // cache accessToken in inmemory storage\r\n        const expiresIn: number =\r\n            request.tokenType === AuthenticationScheme.POP\r\n                ? Constants.SHR_NONCE_VALIDITY\r\n                : (typeof response.expires_in === \"string\"\r\n                      ? parseInt(response.expires_in, 10)\r\n                      : response.expires_in) || 0;\r\n        const tokenExpirationSeconds = reqTimestamp + expiresIn;\r\n        const responseScopes = this.generateScopes(response, request);\r\n\r\n        const cachedAccessToken: AccessTokenEntity | null =\r\n            CacheHelpers.createAccessTokenEntity(\r\n                homeAccountIdentifier,\r\n                request.authority,\r\n                responseAccessToken,\r\n                request.clientId,\r\n                idTokenClaims.tid || tenantId,\r\n                responseScopes.printScopes(),\r\n                tokenExpirationSeconds,\r\n                0,\r\n                base64Decode,\r\n                undefined,\r\n                request.tokenType as AuthenticationScheme,\r\n                undefined,\r\n                request.keyId\r\n            );\r\n\r\n        const nativeCacheRecord = {\r\n            idToken: cachedIdToken,\r\n            accessToken: cachedAccessToken,\r\n        };\r\n\r\n        return this.nativeStorageManager.saveCacheRecord(\r\n            nativeCacheRecord,\r\n            this.correlationId,\r\n            request.storeInCache\r\n        );\r\n    }\r\n\r\n    protected addTelemetryFromNativeResponse(\r\n        response: NativeResponse\r\n    ): MATS | null {\r\n        const mats = this.getMATSFromResponse(response);\r\n\r\n        if (!mats) {\r\n            return null;\r\n        }\r\n\r\n        this.performanceClient.addFields(\r\n            {\r\n                extensionId: this.nativeMessageHandler.getExtensionId(),\r\n                extensionVersion:\r\n                    this.nativeMessageHandler.getExtensionVersion(),\r\n                matsBrokerVersion: mats.broker_version,\r\n                matsAccountJoinOnStart: mats.account_join_on_start,\r\n                matsAccountJoinOnEnd: mats.account_join_on_end,\r\n                matsDeviceJoin: mats.device_join,\r\n                matsPromptBehavior: mats.prompt_behavior,\r\n                matsApiErrorCode: mats.api_error_code,\r\n                matsUiVisible: mats.ui_visible,\r\n                matsSilentCode: mats.silent_code,\r\n                matsSilentBiSubCode: mats.silent_bi_sub_code,\r\n                matsSilentMessage: mats.silent_message,\r\n                matsSilentStatus: mats.silent_status,\r\n                matsHttpStatus: mats.http_status,\r\n                matsHttpEventCount: mats.http_event_count,\r\n            },\r\n            this.correlationId\r\n        );\r\n\r\n        return mats;\r\n    }\r\n\r\n    /**\r\n     * Validates native platform response before processing\r\n     * @param response\r\n     */\r\n    private validateNativeResponse(response: object): NativeResponse {\r\n        if (\r\n            response.hasOwnProperty(\"access_token\") &&\r\n            response.hasOwnProperty(\"id_token\") &&\r\n            response.hasOwnProperty(\"client_info\") &&\r\n            response.hasOwnProperty(\"account\") &&\r\n            response.hasOwnProperty(\"scope\") &&\r\n            response.hasOwnProperty(\"expires_in\")\r\n        ) {\r\n            return response as NativeResponse;\r\n        } else {\r\n            throw createAuthError(\r\n                AuthErrorCodes.unexpectedError,\r\n                \"Response missing expected properties.\"\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets MATS telemetry from native response\r\n     * @param response\r\n     * @returns\r\n     */\r\n    private getMATSFromResponse(response: NativeResponse): MATS | null {\r\n        if (response.properties.MATS) {\r\n            try {\r\n                return JSON.parse(response.properties.MATS);\r\n            } catch (e) {\r\n                this.logger.error(\r\n                    \"NativeInteractionClient - Error parsing MATS telemetry, returning null instead\"\r\n                );\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not response came from native cache\r\n     * @param response\r\n     * @returns\r\n     */\r\n    protected isResponseFromCache(mats: MATS): boolean {\r\n        if (typeof mats.is_cached === \"undefined\") {\r\n            this.logger.verbose(\r\n                \"NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false.\"\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return !!mats.is_cached;\r\n    }\r\n\r\n    /**\r\n     * Translates developer provided request object into NativeRequest object\r\n     * @param request\r\n     */\r\n    protected async initializeNativeRequest(\r\n        request: PopupRequest | SsoSilentRequest\r\n    ): Promise<NativeTokenRequest> {\r\n        this.logger.trace(\r\n            \"NativeInteractionClient - initializeNativeRequest called\"\r\n        );\r\n\r\n        const requestAuthority =\r\n            request.authority || this.config.auth.authority;\r\n\r\n        if (request.account) {\r\n            // validate authority\r\n            await this.getDiscoveredAuthority({\r\n                requestAuthority,\r\n                requestAzureCloudOptions: request.azureCloudOptions,\r\n                account: request.account,\r\n            });\r\n        }\r\n\r\n        const canonicalAuthority = new UrlString(requestAuthority);\r\n        canonicalAuthority.validateAsUri();\r\n\r\n        // scopes are expected to be received by the native broker as \"scope\" and will be added to the request below. Other properties that should be dropped from the request to the native broker can be included in the object destructuring here.\r\n        const { scopes, ...remainingProperties } = request;\r\n        const scopeSet = new ScopeSet(scopes || []);\r\n        scopeSet.appendScopes(OIDC_DEFAULT_SCOPES);\r\n\r\n        const getPrompt = () => {\r\n            // If request is silent, prompt is always none\r\n            switch (this.apiId) {\r\n                case ApiId.ssoSilent:\r\n                case ApiId.acquireTokenSilent_silentFlow:\r\n                    this.logger.trace(\r\n                        \"initializeNativeRequest: silent request sets prompt to none\"\r\n                    );\r\n                    return PromptValue.NONE;\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            // Prompt not provided, request may proceed and native broker decides if it needs to prompt\r\n            if (!request.prompt) {\r\n                this.logger.trace(\r\n                    \"initializeNativeRequest: prompt was not provided\"\r\n                );\r\n                return undefined;\r\n            }\r\n\r\n            // If request is interactive, check if prompt provided is allowed to go directly to native broker\r\n            switch (request.prompt) {\r\n                case PromptValue.NONE:\r\n                case PromptValue.CONSENT:\r\n                case PromptValue.LOGIN:\r\n                    this.logger.trace(\r\n                        \"initializeNativeRequest: prompt is compatible with native flow\"\r\n                    );\r\n                    return request.prompt;\r\n                default:\r\n                    this.logger.trace(\r\n                        `initializeNativeRequest: prompt = ${request.prompt} is not compatible with native flow`\r\n                    );\r\n                    throw createBrowserAuthError(\r\n                        BrowserAuthErrorCodes.nativePromptNotSupported\r\n                    );\r\n            }\r\n        };\r\n\r\n        const validatedRequest: NativeTokenRequest = {\r\n            ...remainingProperties,\r\n            accountId: this.accountId,\r\n            clientId: this.config.auth.clientId,\r\n            authority: canonicalAuthority.urlString,\r\n            scope: scopeSet.printScopes(),\r\n            redirectUri: this.getRedirectUri(request.redirectUri),\r\n            prompt: getPrompt(),\r\n            correlationId: this.correlationId,\r\n            tokenType: request.authenticationScheme,\r\n            windowTitleSubstring: document.title,\r\n            extraParameters: {\r\n                ...request.extraQueryParameters,\r\n                ...request.tokenQueryParameters,\r\n            },\r\n            extendedExpiryToken: false, // Make this configurable?\r\n            keyId: request.popKid,\r\n        };\r\n\r\n        // Check for PoP token requests: signPopToken should only be set to true if popKid is not set\r\n        if (validatedRequest.signPopToken && !!request.popKid) {\r\n            throw createBrowserAuthError(\r\n                BrowserAuthErrorCodes.invalidPopTokenRequest\r\n            );\r\n        }\r\n\r\n        this.handleExtraBrokerParams(validatedRequest);\r\n        validatedRequest.extraParameters =\r\n            validatedRequest.extraParameters || {};\r\n        validatedRequest.extraParameters.telemetry =\r\n            NativeConstants.MATS_TELEMETRY;\r\n\r\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\r\n            // add POP request type\r\n            const shrParameters: SignedHttpRequestParameters = {\r\n                resourceRequestUri: request.resourceRequestUri,\r\n                resourceRequestMethod: request.resourceRequestMethod,\r\n                shrClaims: request.shrClaims,\r\n                shrNonce: request.shrNonce,\r\n            };\r\n\r\n            const popTokenGenerator = new PopTokenGenerator(this.browserCrypto);\r\n\r\n            // generate reqCnf if not provided in the request\r\n            let reqCnfData;\r\n            if (!validatedRequest.keyId) {\r\n                const generatedReqCnfData = await invokeAsync(\r\n                    popTokenGenerator.generateCnf.bind(popTokenGenerator),\r\n                    PerformanceEvents.PopTokenGenerateCnf,\r\n                    this.logger,\r\n                    this.performanceClient,\r\n                    request.correlationId\r\n                )(shrParameters, this.logger);\r\n                reqCnfData = generatedReqCnfData.reqCnfString;\r\n                validatedRequest.keyId = generatedReqCnfData.kid;\r\n                validatedRequest.signPopToken = true;\r\n            } else {\r\n                reqCnfData = this.browserCrypto.base64UrlEncode(\r\n                    JSON.stringify({ kid: validatedRequest.keyId })\r\n                );\r\n                validatedRequest.signPopToken = false;\r\n            }\r\n\r\n            // SPAs require whole string to be passed to broker\r\n            validatedRequest.reqCnf = reqCnfData;\r\n        }\r\n        this.addRequestSKUs(validatedRequest);\r\n\r\n        return validatedRequest;\r\n    }\r\n\r\n    /**\r\n     * Handles extra broker request parameters\r\n     * @param request {NativeTokenRequest}\r\n     * @private\r\n     */\r\n    private handleExtraBrokerParams(request: NativeTokenRequest): void {\r\n        const hasExtraBrokerParams =\r\n            request.extraParameters &&\r\n            request.extraParameters.hasOwnProperty(\r\n                AADServerParamKeys.BROKER_CLIENT_ID\r\n            ) &&\r\n            request.extraParameters.hasOwnProperty(\r\n                AADServerParamKeys.BROKER_REDIRECT_URI\r\n            ) &&\r\n            request.extraParameters.hasOwnProperty(\r\n                AADServerParamKeys.CLIENT_ID\r\n            );\r\n\r\n        if (!request.embeddedClientId && !hasExtraBrokerParams) {\r\n            return;\r\n        }\r\n\r\n        let child_client_id: string = \"\";\r\n        const child_redirect_uri = request.redirectUri;\r\n\r\n        if (request.embeddedClientId) {\r\n            request.redirectUri = this.config.auth.redirectUri;\r\n            child_client_id = request.embeddedClientId;\r\n        } else if (request.extraParameters) {\r\n            request.redirectUri =\r\n                request.extraParameters[AADServerParamKeys.BROKER_REDIRECT_URI];\r\n            child_client_id =\r\n                request.extraParameters[AADServerParamKeys.CLIENT_ID];\r\n        }\r\n\r\n        request.extraParameters = {\r\n            child_client_id,\r\n            child_redirect_uri,\r\n        };\r\n\r\n        this.performanceClient?.addFields(\r\n            {\r\n                embeddedClientId: child_client_id,\r\n                embeddedRedirectUri: child_redirect_uri,\r\n            },\r\n            request.correlationId\r\n        );\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    NativeConstants,\r\n    NativeExtensionMethod,\r\n} from \"../../utils/BrowserConstants.js\";\r\nimport {\r\n    Logger,\r\n    AuthError,\r\n    createAuthError,\r\n    AuthErrorCodes,\r\n    AuthenticationScheme,\r\n    InProgressPerformanceEvent,\r\n    PerformanceEvents,\r\n    IPerformanceClient,\r\n} from \"@azure/msal-common/browser\";\r\nimport {\r\n    NativeExtensionRequest,\r\n    NativeExtensionRequestBody,\r\n} from \"./NativeRequest.js\";\r\nimport { createNativeAuthError } from \"../../error/NativeAuthError.js\";\r\nimport {\r\n    createBrowserAuthError,\r\n    BrowserAuthErrorCodes,\r\n} from \"../../error/BrowserAuthError.js\";\r\nimport { BrowserConfiguration } from \"../../config/Configuration.js\";\r\nimport { createNewGuid } from \"../../crypto/BrowserCrypto.js\";\r\n\r\ntype ResponseResolvers<T> = {\r\n    resolve: (value: T | PromiseLike<T>) => void;\r\n    reject: (\r\n        value: AuthError | Error | PromiseLike<Error> | PromiseLike<AuthError>\r\n    ) => void;\r\n};\r\n\r\nexport class NativeMessageHandler {\r\n    private extensionId: string | undefined;\r\n    private extensionVersion: string | undefined;\r\n    private logger: Logger;\r\n    private readonly handshakeTimeoutMs: number;\r\n    private timeoutId: number | undefined;\r\n    private resolvers: Map<string, ResponseResolvers<object>>;\r\n    private handshakeResolvers: Map<string, ResponseResolvers<void>>;\r\n    private messageChannel: MessageChannel;\r\n    private readonly windowListener: (event: MessageEvent) => void;\r\n    private readonly performanceClient: IPerformanceClient;\r\n    private readonly handshakeEvent: InProgressPerformanceEvent;\r\n\r\n    constructor(\r\n        logger: Logger,\r\n        handshakeTimeoutMs: number,\r\n        performanceClient: IPerformanceClient,\r\n        extensionId?: string\r\n    ) {\r\n        this.logger = logger;\r\n        this.handshakeTimeoutMs = handshakeTimeoutMs;\r\n        this.extensionId = extensionId;\r\n        this.resolvers = new Map(); // Used for non-handshake messages\r\n        this.handshakeResolvers = new Map(); // Used for handshake messages\r\n        this.messageChannel = new MessageChannel();\r\n        this.windowListener = this.onWindowMessage.bind(this); // Window event callback doesn't have access to 'this' unless it's bound\r\n        this.performanceClient = performanceClient;\r\n        this.handshakeEvent = performanceClient.startMeasurement(\r\n            PerformanceEvents.NativeMessageHandlerHandshake\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Sends a given message to the extension and resolves with the extension response\r\n     * @param body\r\n     */\r\n    async sendMessage(body: NativeExtensionRequestBody): Promise<object> {\r\n        this.logger.trace(\"NativeMessageHandler - sendMessage called.\");\r\n        const req: NativeExtensionRequest = {\r\n            channel: NativeConstants.CHANNEL_ID,\r\n            extensionId: this.extensionId,\r\n            responseId: createNewGuid(),\r\n            body: body,\r\n        };\r\n\r\n        this.logger.trace(\r\n            \"NativeMessageHandler - Sending request to browser extension\"\r\n        );\r\n        this.logger.tracePii(\r\n            `NativeMessageHandler - Sending request to browser extension: ${JSON.stringify(\r\n                req\r\n            )}`\r\n        );\r\n        this.messageChannel.port1.postMessage(req);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this.resolvers.set(req.responseId, { resolve, reject });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Returns an instance of the MessageHandler that has successfully established a connection with an extension\r\n     * @param {Logger} logger\r\n     * @param {number} handshakeTimeoutMs\r\n     * @param {IPerformanceClient} performanceClient\r\n     * @param {ICrypto} crypto\r\n     */\r\n    static async createProvider(\r\n        logger: Logger,\r\n        handshakeTimeoutMs: number,\r\n        performanceClient: IPerformanceClient\r\n    ): Promise<NativeMessageHandler> {\r\n        logger.trace(\"NativeMessageHandler - createProvider called.\");\r\n        try {\r\n            const preferredProvider = new NativeMessageHandler(\r\n                logger,\r\n                handshakeTimeoutMs,\r\n                performanceClient,\r\n                NativeConstants.PREFERRED_EXTENSION_ID\r\n            );\r\n            await preferredProvider.sendHandshakeRequest();\r\n            return preferredProvider;\r\n        } catch (e) {\r\n            // If preferred extension fails for whatever reason, fallback to using any installed extension\r\n            const backupProvider = new NativeMessageHandler(\r\n                logger,\r\n                handshakeTimeoutMs,\r\n                performanceClient\r\n            );\r\n            await backupProvider.sendHandshakeRequest();\r\n            return backupProvider;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send handshake request helper.\r\n     */\r\n    private async sendHandshakeRequest(): Promise<void> {\r\n        this.logger.trace(\r\n            \"NativeMessageHandler - sendHandshakeRequest called.\"\r\n        );\r\n        // Register this event listener before sending handshake\r\n        window.addEventListener(\"message\", this.windowListener, false); // false is important, because content script message processing should work first\r\n\r\n        const req: NativeExtensionRequest = {\r\n            channel: NativeConstants.CHANNEL_ID,\r\n            extensionId: this.extensionId,\r\n            responseId: createNewGuid(),\r\n            body: {\r\n                method: NativeExtensionMethod.HandshakeRequest,\r\n            },\r\n        };\r\n        this.handshakeEvent.add({\r\n            extensionId: this.extensionId,\r\n            extensionHandshakeTimeoutMs: this.handshakeTimeoutMs,\r\n        });\r\n\r\n        this.messageChannel.port1.onmessage = (event) => {\r\n            this.onChannelMessage(event);\r\n        };\r\n\r\n        window.postMessage(req, window.origin, [this.messageChannel.port2]);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this.handshakeResolvers.set(req.responseId, { resolve, reject });\r\n            this.timeoutId = window.setTimeout(() => {\r\n                /*\r\n                 * Throw an error if neither HandshakeResponse nor original Handshake request are received in a reasonable timeframe.\r\n                 * This typically suggests an event handler stopped propagation of the Handshake request but did not respond to it on the MessageChannel port\r\n                 */\r\n                window.removeEventListener(\r\n                    \"message\",\r\n                    this.windowListener,\r\n                    false\r\n                );\r\n                this.messageChannel.port1.close();\r\n                this.messageChannel.port2.close();\r\n                this.handshakeEvent.end({\r\n                    extensionHandshakeTimedOut: true,\r\n                    success: false,\r\n                });\r\n                reject(\r\n                    createBrowserAuthError(\r\n                        BrowserAuthErrorCodes.nativeHandshakeTimeout\r\n                    )\r\n                );\r\n                this.handshakeResolvers.delete(req.responseId);\r\n            }, this.handshakeTimeoutMs); // Use a reasonable timeout in milliseconds here\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Invoked when a message is posted to the window. If a handshake request is received it means the extension is not installed.\r\n     * @param event\r\n     */\r\n    private onWindowMessage(event: MessageEvent): void {\r\n        this.logger.trace(\"NativeMessageHandler - onWindowMessage called\");\r\n        // We only accept messages from ourselves\r\n        if (event.source !== window) {\r\n            return;\r\n        }\r\n\r\n        const request = event.data;\r\n\r\n        if (\r\n            !request.channel ||\r\n            request.channel !== NativeConstants.CHANNEL_ID\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (request.extensionId && request.extensionId !== this.extensionId) {\r\n            return;\r\n        }\r\n\r\n        if (request.body.method === NativeExtensionMethod.HandshakeRequest) {\r\n            const handshakeResolver = this.handshakeResolvers.get(\r\n                request.responseId\r\n            );\r\n            /*\r\n             * Filter out responses with no matched resolvers sooner to keep channel ports open while waiting for\r\n             * the proper response.\r\n             */\r\n            if (!handshakeResolver) {\r\n                this.logger.trace(\r\n                    `NativeMessageHandler.onWindowMessage - resolver can't be found for request ${request.responseId}`\r\n                );\r\n                return;\r\n            }\r\n\r\n            // If we receive this message back it means no extension intercepted the request, meaning no extension supporting handshake protocol is installed\r\n            this.logger.verbose(\r\n                request.extensionId\r\n                    ? `Extension with id: ${request.extensionId} not installed`\r\n                    : \"No extension installed\"\r\n            );\r\n            clearTimeout(this.timeoutId);\r\n            this.messageChannel.port1.close();\r\n            this.messageChannel.port2.close();\r\n            window.removeEventListener(\"message\", this.windowListener, false);\r\n            this.handshakeEvent.end({\r\n                success: false,\r\n                extensionInstalled: false,\r\n            });\r\n            handshakeResolver.reject(\r\n                createBrowserAuthError(\r\n                    BrowserAuthErrorCodes.nativeExtensionNotInstalled\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Invoked when a message is received from the extension on the MessageChannel port\r\n     * @param event\r\n     */\r\n    private onChannelMessage(event: MessageEvent): void {\r\n        this.logger.trace(\"NativeMessageHandler - onChannelMessage called.\");\r\n        const request = event.data;\r\n\r\n        const resolver = this.resolvers.get(request.responseId);\r\n        const handshakeResolver = this.handshakeResolvers.get(\r\n            request.responseId\r\n        );\r\n\r\n        try {\r\n            const method = request.body.method;\r\n\r\n            if (method === NativeExtensionMethod.Response) {\r\n                if (!resolver) {\r\n                    return;\r\n                }\r\n                const response = request.body.response;\r\n                this.logger.trace(\r\n                    \"NativeMessageHandler - Received response from browser extension\"\r\n                );\r\n                this.logger.tracePii(\r\n                    `NativeMessageHandler - Received response from browser extension: ${JSON.stringify(\r\n                        response\r\n                    )}`\r\n                );\r\n                if (response.status !== \"Success\") {\r\n                    resolver.reject(\r\n                        createNativeAuthError(\r\n                            response.code,\r\n                            response.description,\r\n                            response.ext\r\n                        )\r\n                    );\r\n                } else if (response.result) {\r\n                    if (\r\n                        response.result[\"code\"] &&\r\n                        response.result[\"description\"]\r\n                    ) {\r\n                        resolver.reject(\r\n                            createNativeAuthError(\r\n                                response.result[\"code\"],\r\n                                response.result[\"description\"],\r\n                                response.result[\"ext\"]\r\n                            )\r\n                        );\r\n                    } else {\r\n                        resolver.resolve(response.result);\r\n                    }\r\n                } else {\r\n                    throw createAuthError(\r\n                        AuthErrorCodes.unexpectedError,\r\n                        \"Event does not contain result.\"\r\n                    );\r\n                }\r\n                this.resolvers.delete(request.responseId);\r\n            } else if (method === NativeExtensionMethod.HandshakeResponse) {\r\n                if (!handshakeResolver) {\r\n                    this.logger.trace(\r\n                        `NativeMessageHandler.onChannelMessage - resolver can't be found for request ${request.responseId}`\r\n                    );\r\n                    return;\r\n                }\r\n                clearTimeout(this.timeoutId); // Clear setTimeout\r\n                window.removeEventListener(\r\n                    \"message\",\r\n                    this.windowListener,\r\n                    false\r\n                ); // Remove 'No extension' listener\r\n                this.extensionId = request.extensionId;\r\n                this.extensionVersion = request.body.version;\r\n                this.logger.verbose(\r\n                    `NativeMessageHandler - Received HandshakeResponse from extension: ${this.extensionId}`\r\n                );\r\n                this.handshakeEvent.end({\r\n                    extensionInstalled: true,\r\n                    success: true,\r\n                });\r\n\r\n                handshakeResolver.resolve();\r\n                this.handshakeResolvers.delete(request.responseId);\r\n            }\r\n            // Do nothing if method is not Response or HandshakeResponse\r\n        } catch (err) {\r\n            this.logger.error(\"Error parsing response from WAM Extension\");\r\n            this.logger.errorPii(\r\n                `Error parsing response from WAM Extension: ${err as string}`\r\n            );\r\n            this.logger.errorPii(`Unable to parse ${event}`);\r\n\r\n            if (resolver) {\r\n                resolver.reject(err as AuthError);\r\n            } else if (handshakeResolver) {\r\n                handshakeResolver.reject(err as AuthError);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the Id for the browser extension this handler is communicating with\r\n     * @returns\r\n     */\r\n    getExtensionId(): string | undefined {\r\n        return this.extensionId;\r\n    }\r\n\r\n    /**\r\n     * Returns the version for the browser extension this handler is communicating with\r\n     * @returns\r\n     */\r\n    getExtensionVersion(): string | undefined {\r\n        return this.extensionVersion;\r\n    }\r\n\r\n    /**\r\n     * Returns boolean indicating whether or not the request should attempt to use native broker\r\n     * @param logger\r\n     * @param config\r\n     * @param nativeExtensionProvider\r\n     * @param authenticationScheme\r\n     */\r\n    static isPlatformBrokerAvailable(\r\n        config: BrowserConfiguration,\r\n        logger: Logger,\r\n        nativeExtensionProvider?: NativeMessageHandler,\r\n        authenticationScheme?: AuthenticationScheme\r\n    ): boolean {\r\n        logger.trace(\"isPlatformBrokerAvailable called\");\r\n        if (!config.system.allowPlatformBroker) {\r\n            logger.trace(\r\n                \"isPlatformBrokerAvailable: allowPlatformBroker is not enabled, returning false\"\r\n            );\r\n            // Developer disabled WAM\r\n            return false;\r\n        }\r\n\r\n        if (!nativeExtensionProvider) {\r\n            logger.trace(\r\n                \"isPlatformBrokerAvailable: Platform extension provider is not initialized, returning false\"\r\n            );\r\n            // Extension is not available\r\n            return false;\r\n        }\r\n\r\n        if (authenticationScheme) {\r\n            switch (authenticationScheme) {\r\n                case AuthenticationScheme.BEARER:\r\n                case AuthenticationScheme.POP:\r\n                    logger.trace(\r\n                        \"isPlatformBrokerAvailable: authenticationScheme is supported, returning true\"\r\n                    );\r\n                    return true;\r\n                default:\r\n                    logger.trace(\r\n                        \"isPlatformBrokerAvailable: authenticationScheme is not supported, returning false\"\r\n                    );\r\n                    return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    AuthorizationCodePayload,\r\n    CommonAuthorizationCodeRequest,\r\n    AuthorizationCodeClient,\r\n    CcsCredential,\r\n    Logger,\r\n    ServerError,\r\n    IPerformanceClient,\r\n    PerformanceEvents,\r\n    invokeAsync,\r\n    CcsCredentialType,\r\n    ServerAuthorizationCodeResponse,\r\n} from \"@azure/msal-common/browser\";\r\n\r\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager.js\";\r\nimport {\r\n    createBrowserAuthError,\r\n    BrowserAuthErrorCodes,\r\n} from \"../error/BrowserAuthError.js\";\r\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\r\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest.js\";\r\n\r\n/**\r\n * Abstract class which defines operations for a browser interaction handling class.\r\n */\r\nexport class InteractionHandler {\r\n    protected authModule: AuthorizationCodeClient;\r\n    protected browserStorage: BrowserCacheManager;\r\n    protected authCodeRequest: CommonAuthorizationCodeRequest;\r\n    protected logger: Logger;\r\n    protected performanceClient: IPerformanceClient;\r\n\r\n    constructor(\r\n        authCodeModule: AuthorizationCodeClient,\r\n        storageImpl: BrowserCacheManager,\r\n        authCodeRequest: CommonAuthorizationCodeRequest,\r\n        logger: Logger,\r\n        performanceClient: IPerformanceClient\r\n    ) {\r\n        this.authModule = authCodeModule;\r\n        this.browserStorage = storageImpl;\r\n        this.authCodeRequest = authCodeRequest;\r\n        this.logger = logger;\r\n        this.performanceClient = performanceClient;\r\n    }\r\n\r\n    /**\r\n     * Function to handle response parameters from hash.\r\n     * @param locationHash\r\n     */\r\n    async handleCodeResponse(\r\n        response: ServerAuthorizationCodeResponse,\r\n        request: AuthorizationUrlRequest\r\n    ): Promise<AuthenticationResult> {\r\n        this.performanceClient.addQueueMeasurement(\r\n            PerformanceEvents.HandleCodeResponse,\r\n            request.correlationId\r\n        );\r\n\r\n        let authCodeResponse;\r\n        try {\r\n            authCodeResponse = this.authModule.handleFragmentResponse(\r\n                response,\r\n                request.state\r\n            );\r\n        } catch (e) {\r\n            if (\r\n                e instanceof ServerError &&\r\n                e.subError === BrowserAuthErrorCodes.userCancelled\r\n            ) {\r\n                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\r\n                throw createBrowserAuthError(\r\n                    BrowserAuthErrorCodes.userCancelled\r\n                );\r\n            } else {\r\n                throw e;\r\n            }\r\n        }\r\n\r\n        return invokeAsync(\r\n            this.handleCodeResponseFromServer.bind(this),\r\n            PerformanceEvents.HandleCodeResponseFromServer,\r\n            this.logger,\r\n            this.performanceClient,\r\n            request.correlationId\r\n        )(authCodeResponse, request);\r\n    }\r\n\r\n    /**\r\n     * Process auth code response from AAD\r\n     * @param authCodeResponse\r\n     * @param state\r\n     * @param authority\r\n     * @param networkModule\r\n     * @returns\r\n     */\r\n    async handleCodeResponseFromServer(\r\n        authCodeResponse: AuthorizationCodePayload,\r\n        request: AuthorizationUrlRequest,\r\n        validateNonce: boolean = true\r\n    ): Promise<AuthenticationResult> {\r\n        this.performanceClient.addQueueMeasurement(\r\n            PerformanceEvents.HandleCodeResponseFromServer,\r\n            request.correlationId\r\n        );\r\n        this.logger.trace(\r\n            \"InteractionHandler.handleCodeResponseFromServer called\"\r\n        );\r\n\r\n        // Assign code to request\r\n        this.authCodeRequest.code = authCodeResponse.code;\r\n\r\n        // Check for new cloud instance\r\n        if (authCodeResponse.cloud_instance_host_name) {\r\n            await invokeAsync(\r\n                this.authModule.updateAuthority.bind(this.authModule),\r\n                PerformanceEvents.UpdateTokenEndpointAuthority,\r\n                this.logger,\r\n                this.performanceClient,\r\n                request.correlationId\r\n            )(authCodeResponse.cloud_instance_host_name, request.correlationId);\r\n        }\r\n\r\n        // Nonce validation not needed when redirect not involved (e.g. hybrid spa, renewing token via rt)\r\n        if (validateNonce) {\r\n            // TODO: Assigning \"response nonce\" to \"request nonce\" is confusing. Refactor the function doing validation to accept request nonce directly\r\n            authCodeResponse.nonce = request.nonce || undefined;\r\n        }\r\n\r\n        authCodeResponse.state = request.state;\r\n\r\n        // Add CCS parameters if available\r\n        if (authCodeResponse.client_info) {\r\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\r\n        } else {\r\n            const ccsCred = this.createCcsCredentials(request);\r\n            if (ccsCred) {\r\n                this.authCodeRequest.ccsCredential = ccsCred;\r\n            }\r\n        }\r\n\r\n        // Acquire token with retrieved code.\r\n        const tokenResponse = (await invokeAsync(\r\n            this.authModule.acquireToken.bind(this.authModule),\r\n            PerformanceEvents.AuthClientAcquireToken,\r\n            this.logger,\r\n            this.performanceClient,\r\n            request.correlationId\r\n        )(this.authCodeRequest, authCodeResponse)) as AuthenticationResult;\r\n        return tokenResponse;\r\n    }\r\n\r\n    /**\r\n     * Build ccs creds if available\r\n     */\r\n    protected createCcsCredentials(\r\n        request: AuthorizationUrlRequest\r\n    ): CcsCredential | null {\r\n        if (request.account) {\r\n            return {\r\n                credential: request.account.homeAccountId,\r\n                type: CcsCredentialType.HOME_ACCOUNT_ID,\r\n            };\r\n        } else if (request.loginHint) {\r\n            return {\r\n                credential: request.loginHint,\r\n                type: CcsCredentialType.UPN,\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    ICrypto,\r\n    Logger,\r\n    ServerAuthorizationCodeResponse,\r\n    UrlUtils,\r\n} from \"@azure/msal-common/browser\";\r\nimport {\r\n    BrowserAuthErrorCodes,\r\n    createBrowserAuthError,\r\n} from \"../error/BrowserAuthError.js\";\r\nimport { extractBrowserRequestState } from \"../utils/BrowserProtocolUtils.js\";\r\nimport { InteractionType } from \"../utils/BrowserConstants.js\";\r\n\r\nexport function deserializeResponse(\r\n    responseString: string,\r\n    responseLocation: string,\r\n    logger: Logger\r\n): ServerAuthorizationCodeResponse {\r\n    // Deserialize hash fragment response parameters.\r\n    const serverParams = UrlUtils.getDeserializedResponse(responseString);\r\n    if (!serverParams) {\r\n        if (!UrlUtils.stripLeadingHashOrQuery(responseString)) {\r\n            // Hash or Query string is empty\r\n            logger.error(\r\n                `The request has returned to the redirectUri but a ${responseLocation} is not present. It's likely that the ${responseLocation} has been removed or the page has been redirected by code running on the redirectUri page.`\r\n            );\r\n            throw createBrowserAuthError(BrowserAuthErrorCodes.hashEmptyError);\r\n        } else {\r\n            logger.error(\r\n                `A ${responseLocation} is present in the iframe but it does not contain known properties. It's likely that the ${responseLocation} has been replaced by code running on the redirectUri page.`\r\n            );\r\n            logger.errorPii(\r\n                `The ${responseLocation} detected is: ${responseString}`\r\n            );\r\n            throw createBrowserAuthError(\r\n                BrowserAuthErrorCodes.hashDoesNotContainKnownProperties\r\n            );\r\n        }\r\n    }\r\n    return serverParams;\r\n}\r\n\r\n/**\r\n * Returns the interaction type that the response object belongs to\r\n */\r\nexport function validateInteractionType(\r\n    response: ServerAuthorizationCodeResponse,\r\n    browserCrypto: ICrypto,\r\n    interactionType: InteractionType\r\n): void {\r\n    if (!response.state) {\r\n        throw createBrowserAuthError(BrowserAuthErrorCodes.noStateInHash);\r\n    }\r\n\r\n    const platformStateObj = extractBrowserRequestState(\r\n        browserCrypto,\r\n        response.state\r\n    );\r\n    if (!platformStateObj) {\r\n        throw createBrowserAuthError(BrowserAuthErrorCodes.unableToParseState);\r\n    }\r\n\r\n    if (platformStateObj.interactionType !== interactionType) {\r\n        throw createBrowserAuthError(\r\n            BrowserAuthErrorCodes.stateInteractionTypeMismatch\r\n        );\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    CommonAuthorizationCodeRequest,\r\n    AuthorizationCodeClient,\r\n    ThrottlingUtils,\r\n    CommonEndSessionRequest,\r\n    UrlString,\r\n    AuthError,\r\n    OIDC_DEFAULT_SCOPES,\r\n    ProtocolUtils,\r\n    PerformanceEvents,\r\n    IPerformanceClient,\r\n    Logger,\r\n    ICrypto,\r\n    ProtocolMode,\r\n    ServerResponseType,\r\n    invokeAsync,\r\n    invoke,\r\n    PkceCodes,\r\n} from \"@azure/msal-common/browser\";\r\nimport { StandardInteractionClient } from \"./StandardInteractionClient.js\";\r\nimport { EventType } from \"../event/EventType.js\";\r\nimport {\r\n    InteractionType,\r\n    ApiId,\r\n    BrowserConstants,\r\n} from \"../utils/BrowserConstants.js\";\r\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest.js\";\r\nimport { NavigationOptions } from \"../navigation/NavigationOptions.js\";\r\nimport * as BrowserUtils from \"../utils/BrowserUtils.js\";\r\nimport { PopupRequest } from \"../request/PopupRequest.js\";\r\nimport { NativeInteractionClient } from \"./NativeInteractionClient.js\";\r\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler.js\";\r\nimport {\r\n    createBrowserAuthError,\r\n    BrowserAuthErrorCodes,\r\n} from \"../error/BrowserAuthError.js\";\r\nimport { INavigationClient } from \"../navigation/INavigationClient.js\";\r\nimport { EventHandler } from \"../event/EventHandler.js\";\r\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager.js\";\r\nimport { BrowserConfiguration } from \"../config/Configuration.js\";\r\nimport { InteractionHandler } from \"../interaction_handler/InteractionHandler.js\";\r\nimport { PopupWindowAttributes } from \"../request/PopupWindowAttributes.js\";\r\nimport { EventError } from \"../event/EventMessage.js\";\r\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\r\nimport * as ResponseHandler from \"../response/ResponseHandler.js\";\r\n\r\nexport type PopupParams = {\r\n    popup?: Window | null;\r\n    popupName: string;\r\n    popupWindowAttributes: PopupWindowAttributes;\r\n    popupWindowParent: Window;\r\n};\r\n\r\nexport class PopupClient extends StandardInteractionClient {\r\n    private currentWindow: Window | undefined;\r\n    protected nativeStorage: BrowserCacheManager;\r\n\r\n    constructor(\r\n        config: BrowserConfiguration,\r\n        storageImpl: BrowserCacheManager,\r\n        browserCrypto: ICrypto,\r\n        logger: Logger,\r\n        eventHandler: EventHandler,\r\n        navigationClient: INavigationClient,\r\n        performanceClient: IPerformanceClient,\r\n        nativeStorageImpl: BrowserCacheManager,\r\n        nativeMessageHandler?: NativeMessageHandler,\r\n        correlationId?: string\r\n    ) {\r\n        super(\r\n            config,\r\n            storageImpl,\r\n            browserCrypto,\r\n            logger,\r\n            eventHandler,\r\n            navigationClient,\r\n            performanceClient,\r\n            nativeMessageHandler,\r\n            correlationId\r\n        );\r\n        // Properly sets this reference for the unload event.\r\n        this.unloadWindow = this.unloadWindow.bind(this);\r\n        this.nativeStorage = nativeStorageImpl;\r\n    }\r\n\r\n    /**\r\n     * Acquires tokens by opening a popup window to the /authorize endpoint of the authority\r\n     * @param request\r\n     * @param pkceCodes\r\n     */\r\n    acquireToken(\r\n        request: PopupRequest,\r\n        pkceCodes?: PkceCodes\r\n    ): Promise<AuthenticationResult> {\r\n        try {\r\n            const popupName = this.generatePopupName(\r\n                request.scopes || OIDC_DEFAULT_SCOPES,\r\n                request.authority || this.config.auth.authority\r\n            );\r\n            const popupParams: PopupParams = {\r\n                popupName,\r\n                popupWindowAttributes: request.popupWindowAttributes || {},\r\n                popupWindowParent: request.popupWindowParent ?? window,\r\n            };\r\n\r\n            this.performanceClient.addFields(\r\n                { isAsyncPopup: this.config.system.asyncPopups },\r\n                this.correlationId\r\n            );\r\n\r\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\r\n            if (this.config.system.asyncPopups) {\r\n                this.logger.verbose(\"asyncPopups set to true, acquiring token\");\r\n                // Passes on popup position and dimensions if in request\r\n                return this.acquireTokenPopupAsync(\r\n                    request,\r\n                    popupParams,\r\n                    pkceCodes\r\n                );\r\n            } else {\r\n                // asyncPopups flag is set to false. Opens popup before acquiring token.\r\n                this.logger.verbose(\r\n                    \"asyncPopup set to false, opening popup before acquiring token\"\r\n                );\r\n                popupParams.popup = this.openSizedPopup(\r\n                    \"about:blank\",\r\n                    popupParams\r\n                );\r\n                return this.acquireTokenPopupAsync(\r\n                    request,\r\n                    popupParams,\r\n                    pkceCodes\r\n                );\r\n            }\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\r\n     * @param logoutRequest\r\n     */\r\n    logout(logoutRequest?: EndSessionPopupRequest): Promise<void> {\r\n        try {\r\n            this.logger.verbose(\"logoutPopup called\");\r\n            const validLogoutRequest =\r\n                this.initializeLogoutRequest(logoutRequest);\r\n            const popupParams: PopupParams = {\r\n                popupName: this.generateLogoutPopupName(validLogoutRequest),\r\n                popupWindowAttributes:\r\n                    logoutRequest?.popupWindowAttributes || {},\r\n                popupWindowParent: logoutRequest?.popupWindowParent ?? window,\r\n            };\r\n            const authority = logoutRequest && logoutRequest.authority;\r\n            const mainWindowRedirectUri =\r\n                logoutRequest && logoutRequest.mainWindowRedirectUri;\r\n\r\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\r\n            if (this.config.system.asyncPopups) {\r\n                this.logger.verbose(\"asyncPopups set to true\");\r\n                // Passes on popup position and dimensions if in request\r\n                return this.logoutPopupAsync(\r\n                    validLogoutRequest,\r\n                    popupParams,\r\n                    authority,\r\n                    mainWindowRedirectUri\r\n                );\r\n            } else {\r\n                // asyncPopups flag is set to false. Opens popup before logging out.\r\n                this.logger.verbose(\"asyncPopup set to false, opening popup\");\r\n                popupParams.popup = this.openSizedPopup(\r\n                    \"about:blank\",\r\n                    popupParams\r\n                );\r\n                return this.logoutPopupAsync(\r\n                    validLogoutRequest,\r\n                    popupParams,\r\n                    authority,\r\n                    mainWindowRedirectUri\r\n                );\r\n            }\r\n        } catch (e) {\r\n            // Since this function is synchronous we need to reject\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Helper which obtains an access_token for your API via opening a popup window in the user's browser\r\n     * @param request\r\n     * @param popupParams\r\n     * @param pkceCodes\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    protected async acquireTokenPopupAsync(\r\n        request: PopupRequest,\r\n        popupParams: PopupParams,\r\n        pkceCodes?: PkceCodes\r\n    ): Promise<AuthenticationResult> {\r\n        this.logger.verbose(\"acquireTokenPopupAsync called\");\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\r\n            ApiId.acquireTokenPopup\r\n        );\r\n\r\n        const validRequest = await invokeAsync(\r\n            this.initializeAuthorizationRequest.bind(this),\r\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\r\n            this.logger,\r\n            this.performanceClient,\r\n            this.correlationId\r\n        )(request, InteractionType.Popup);\r\n\r\n        /*\r\n         * Skip pre-connect for async popups to reduce time between user interaction and popup window creation to avoid\r\n         * popup from being blocked by browsers with shorter popup timers\r\n         */\r\n        if (popupParams.popup) {\r\n            BrowserUtils.preconnect(validRequest.authority);\r\n        }\r\n\r\n        try {\r\n            // Create auth code request and generate PKCE params\r\n            const authCodeRequest: CommonAuthorizationCodeRequest =\r\n                await invokeAsync(\r\n                    this.initializeAuthorizationCodeRequest.bind(this),\r\n                    PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest,\r\n                    this.logger,\r\n                    this.performanceClient,\r\n                    this.correlationId\r\n                )(validRequest, pkceCodes);\r\n\r\n            // Initialize the client\r\n            const authClient: AuthorizationCodeClient = await invokeAsync(\r\n                this.createAuthCodeClient.bind(this),\r\n                PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\r\n                this.logger,\r\n                this.performanceClient,\r\n                this.correlationId\r\n            )({\r\n                serverTelemetryManager,\r\n                requestAuthority: validRequest.authority,\r\n                requestAzureCloudOptions: validRequest.azureCloudOptions,\r\n                requestExtraQueryParameters: validRequest.extraQueryParameters,\r\n                account: validRequest.account,\r\n            });\r\n\r\n            const isPlatformBroker =\r\n                NativeMessageHandler.isPlatformBrokerAvailable(\r\n                    this.config,\r\n                    this.logger,\r\n                    this.nativeMessageHandler,\r\n                    request.authenticationScheme\r\n                );\r\n            // Start measurement for server calls with native brokering enabled\r\n            let fetchNativeAccountIdMeasurement;\r\n            if (isPlatformBroker) {\r\n                fetchNativeAccountIdMeasurement =\r\n                    this.performanceClient.startMeasurement(\r\n                        PerformanceEvents.FetchAccountIdWithNativeBroker,\r\n                        request.correlationId\r\n                    );\r\n            }\r\n\r\n            // Create acquire token url.\r\n            const navigateUrl = await authClient.getAuthCodeUrl({\r\n                ...validRequest,\r\n                platformBroker: isPlatformBroker,\r\n            });\r\n\r\n            // Create popup interaction handler.\r\n            const interactionHandler = new InteractionHandler(\r\n                authClient,\r\n                this.browserStorage,\r\n                authCodeRequest,\r\n                this.logger,\r\n                this.performanceClient\r\n            );\r\n\r\n            // Show the UI once the url has been created. Get the window handle for the popup.\r\n            const popupWindow: Window = this.initiateAuthRequest(\r\n                navigateUrl,\r\n                popupParams\r\n            );\r\n            this.eventHandler.emitEvent(\r\n                EventType.POPUP_OPENED,\r\n                InteractionType.Popup,\r\n                { popupWindow },\r\n                null\r\n            );\r\n\r\n            // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\r\n            const responseString = await this.monitorPopupForHash(\r\n                popupWindow,\r\n                popupParams.popupWindowParent\r\n            );\r\n\r\n            const serverParams = invoke(\r\n                ResponseHandler.deserializeResponse,\r\n                PerformanceEvents.DeserializeResponse,\r\n                this.logger,\r\n                this.performanceClient,\r\n                this.correlationId\r\n            )(\r\n                responseString,\r\n                this.config.auth.OIDCOptions.serverResponseType,\r\n                this.logger\r\n            );\r\n            // Remove throttle if it exists\r\n            ThrottlingUtils.removeThrottle(\r\n                this.browserStorage,\r\n                this.config.auth.clientId,\r\n                authCodeRequest\r\n            );\r\n\r\n            if (serverParams.accountId) {\r\n                this.logger.verbose(\r\n                    \"Account id found in hash, calling WAM for token\"\r\n                );\r\n                // end measurement for server call with native brokering enabled\r\n                if (fetchNativeAccountIdMeasurement) {\r\n                    fetchNativeAccountIdMeasurement.end({\r\n                        success: true,\r\n                        isNativeBroker: true,\r\n                    });\r\n                }\r\n\r\n                if (!this.nativeMessageHandler) {\r\n                    throw createBrowserAuthError(\r\n                        BrowserAuthErrorCodes.nativeConnectionNotEstablished\r\n                    );\r\n                }\r\n                const nativeInteractionClient = new NativeInteractionClient(\r\n                    this.config,\r\n                    this.browserStorage,\r\n                    this.browserCrypto,\r\n                    this.logger,\r\n                    this.eventHandler,\r\n                    this.navigationClient,\r\n                    ApiId.acquireTokenPopup,\r\n                    this.performanceClient,\r\n                    this.nativeMessageHandler,\r\n                    serverParams.accountId,\r\n                    this.nativeStorage,\r\n                    validRequest.correlationId\r\n                );\r\n                const { userRequestState } = ProtocolUtils.parseRequestState(\r\n                    this.browserCrypto,\r\n                    validRequest.state\r\n                );\r\n                return await nativeInteractionClient.acquireToken({\r\n                    ...validRequest,\r\n                    state: userRequestState,\r\n                    prompt: undefined, // Server should handle the prompt, ideally native broker can do this part silently\r\n                });\r\n            }\r\n\r\n            // Handle response from hash string.\r\n            const result = await interactionHandler.handleCodeResponse(\r\n                serverParams,\r\n                validRequest\r\n            );\r\n\r\n            return result;\r\n        } catch (e) {\r\n            // Close the synchronous popup if an error is thrown before the window unload event is registered\r\n            popupParams.popup?.close();\r\n\r\n            if (e instanceof AuthError) {\r\n                (e as AuthError).setCorrelationId(this.correlationId);\r\n                serverTelemetryManager.cacheFailedRequest(e);\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param validRequest\r\n     * @param popupName\r\n     * @param requestAuthority\r\n     * @param popup\r\n     * @param mainWindowRedirectUri\r\n     * @param popupWindowAttributes\r\n     */\r\n    protected async logoutPopupAsync(\r\n        validRequest: CommonEndSessionRequest,\r\n        popupParams: PopupParams,\r\n        requestAuthority?: string,\r\n        mainWindowRedirectUri?: string\r\n    ): Promise<void> {\r\n        this.logger.verbose(\"logoutPopupAsync called\");\r\n        this.eventHandler.emitEvent(\r\n            EventType.LOGOUT_START,\r\n            InteractionType.Popup,\r\n            validRequest\r\n        );\r\n\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\r\n            ApiId.logoutPopup\r\n        );\r\n\r\n        try {\r\n            // Clear cache on logout\r\n            await this.clearCacheOnLogout(validRequest.account);\r\n\r\n            // Initialize the client\r\n            const authClient = await invokeAsync(\r\n                this.createAuthCodeClient.bind(this),\r\n                PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\r\n                this.logger,\r\n                this.performanceClient,\r\n                this.correlationId\r\n            )({\r\n                serverTelemetryManager,\r\n                requestAuthority: requestAuthority,\r\n                account: validRequest.account || undefined,\r\n            });\r\n\r\n            try {\r\n                authClient.authority.endSessionEndpoint;\r\n            } catch {\r\n                if (\r\n                    validRequest.account?.homeAccountId &&\r\n                    validRequest.postLogoutRedirectUri &&\r\n                    authClient.authority.protocolMode === ProtocolMode.OIDC\r\n                ) {\r\n                    void this.browserStorage.removeAccount(\r\n                        validRequest.account?.homeAccountId\r\n                    );\r\n\r\n                    this.eventHandler.emitEvent(\r\n                        EventType.LOGOUT_SUCCESS,\r\n                        InteractionType.Popup,\r\n                        validRequest\r\n                    );\r\n\r\n                    if (mainWindowRedirectUri) {\r\n                        const navigationOptions: NavigationOptions = {\r\n                            apiId: ApiId.logoutPopup,\r\n                            timeout:\r\n                                this.config.system.redirectNavigationTimeout,\r\n                            noHistory: false,\r\n                        };\r\n                        const absoluteUrl = UrlString.getAbsoluteUrl(\r\n                            mainWindowRedirectUri,\r\n                            BrowserUtils.getCurrentUri()\r\n                        );\r\n                        await this.navigationClient.navigateInternal(\r\n                            absoluteUrl,\r\n                            navigationOptions\r\n                        );\r\n                    }\r\n\r\n                    popupParams.popup?.close();\r\n\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // Create logout string and navigate user window to logout.\r\n            const logoutUri: string = authClient.getLogoutUri(validRequest);\r\n\r\n            this.eventHandler.emitEvent(\r\n                EventType.LOGOUT_SUCCESS,\r\n                InteractionType.Popup,\r\n                validRequest\r\n            );\r\n\r\n            // Open the popup window to requestUrl.\r\n            const popupWindow = this.openPopup(logoutUri, popupParams);\r\n            this.eventHandler.emitEvent(\r\n                EventType.POPUP_OPENED,\r\n                InteractionType.Popup,\r\n                { popupWindow },\r\n                null\r\n            );\r\n\r\n            await this.monitorPopupForHash(\r\n                popupWindow,\r\n                popupParams.popupWindowParent\r\n            ).catch(() => {\r\n                // Swallow any errors related to monitoring the window. Server logout is best effort\r\n            });\r\n\r\n            if (mainWindowRedirectUri) {\r\n                const navigationOptions: NavigationOptions = {\r\n                    apiId: ApiId.logoutPopup,\r\n                    timeout: this.config.system.redirectNavigationTimeout,\r\n                    noHistory: false,\r\n                };\r\n                const absoluteUrl = UrlString.getAbsoluteUrl(\r\n                    mainWindowRedirectUri,\r\n                    BrowserUtils.getCurrentUri()\r\n                );\r\n\r\n                this.logger.verbose(\r\n                    \"Redirecting main window to url specified in the request\"\r\n                );\r\n                this.logger.verbosePii(\r\n                    `Redirecting main window to: ${absoluteUrl}`\r\n                );\r\n                await this.navigationClient.navigateInternal(\r\n                    absoluteUrl,\r\n                    navigationOptions\r\n                );\r\n            } else {\r\n                this.logger.verbose(\"No main window navigation requested\");\r\n            }\r\n        } catch (e) {\r\n            // Close the synchronous popup if an error is thrown before the window unload event is registered\r\n            popupParams.popup?.close();\r\n\r\n            if (e instanceof AuthError) {\r\n                (e as AuthError).setCorrelationId(this.correlationId);\r\n                serverTelemetryManager.cacheFailedRequest(e);\r\n            }\r\n            this.browserStorage.setInteractionInProgress(false);\r\n            this.eventHandler.emitEvent(\r\n                EventType.LOGOUT_FAILURE,\r\n                InteractionType.Popup,\r\n                null,\r\n                e as EventError\r\n            );\r\n            this.eventHandler.emitEvent(\r\n                EventType.LOGOUT_END,\r\n                InteractionType.Popup\r\n            );\r\n            throw e;\r\n        }\r\n\r\n        this.eventHandler.emitEvent(\r\n            EventType.LOGOUT_END,\r\n            InteractionType.Popup\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Opens a popup window with given request Url.\r\n     * @param requestUrl\r\n     */\r\n    initiateAuthRequest(requestUrl: string, params: PopupParams): Window {\r\n        // Check that request url is not empty.\r\n        if (requestUrl) {\r\n            this.logger.infoPii(`Navigate to: ${requestUrl}`);\r\n            // Open the popup window to requestUrl.\r\n            return this.openPopup(requestUrl, params);\r\n        } else {\r\n            // Throw error if request URL is empty.\r\n            this.logger.error(\"Navigate url is empty\");\r\n            throw createBrowserAuthError(\r\n                BrowserAuthErrorCodes.emptyNavigateUri\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Monitors a window until it loads a url with the same origin.\r\n     * @param popupWindow - window that is being monitored\r\n     * @param timeout - timeout for processing hash once popup is redirected back to application\r\n     */\r\n    monitorPopupForHash(\r\n        popupWindow: Window,\r\n        popupWindowParent: Window\r\n    ): Promise<string> {\r\n        return new Promise<string>((resolve, reject) => {\r\n            this.logger.verbose(\r\n                \"PopupHandler.monitorPopupForHash - polling started\"\r\n            );\r\n\r\n            const intervalId = setInterval(() => {\r\n                // Window is closed\r\n                if (popupWindow.closed) {\r\n                    this.logger.error(\r\n                        \"PopupHandler.monitorPopupForHash - window closed\"\r\n                    );\r\n                    clearInterval(intervalId);\r\n                    reject(\r\n                        createBrowserAuthError(\r\n                            BrowserAuthErrorCodes.userCancelled\r\n                        )\r\n                    );\r\n                    return;\r\n                }\r\n\r\n                let href = \"\";\r\n                try {\r\n                    /*\r\n                     * Will throw if cross origin,\r\n                     * which should be caught and ignored\r\n                     * since we need the interval to keep running while on STS UI.\r\n                     */\r\n                    href = popupWindow.location.href;\r\n                } catch (e) {}\r\n\r\n                // Don't process blank pages or cross domain\r\n                if (!href || href === \"about:blank\") {\r\n                    return;\r\n                }\r\n                clearInterval(intervalId);\r\n\r\n                let responseString = \"\";\r\n                const responseType =\r\n                    this.config.auth.OIDCOptions.serverResponseType;\r\n                if (popupWindow) {\r\n                    if (responseType === ServerResponseType.QUERY) {\r\n                        responseString = popupWindow.location.search;\r\n                    } else {\r\n                        responseString = popupWindow.location.hash;\r\n                    }\r\n                }\r\n\r\n                this.logger.verbose(\r\n                    \"PopupHandler.monitorPopupForHash - popup window is on same origin as caller\"\r\n                );\r\n\r\n                resolve(responseString);\r\n            }, this.config.system.pollIntervalMilliseconds);\r\n        }).finally(() => {\r\n            this.cleanPopup(popupWindow, popupWindowParent);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Configures popup window for login.\r\n     *\r\n     * @param urlNavigate\r\n     * @param title\r\n     * @param popUpWidth\r\n     * @param popUpHeight\r\n     * @param popupWindowAttributes\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    openPopup(urlNavigate: string, popupParams: PopupParams): Window {\r\n        try {\r\n            let popupWindow;\r\n            // Popup window passed in, setting url to navigate to\r\n            if (popupParams.popup) {\r\n                popupWindow = popupParams.popup;\r\n                this.logger.verbosePii(\r\n                    `Navigating popup window to: ${urlNavigate}`\r\n                );\r\n                popupWindow.location.assign(urlNavigate);\r\n            } else if (typeof popupParams.popup === \"undefined\") {\r\n                // Popup will be undefined if it was not passed in\r\n                this.logger.verbosePii(\r\n                    `Opening popup window to: ${urlNavigate}`\r\n                );\r\n                popupWindow = this.openSizedPopup(urlNavigate, popupParams);\r\n            }\r\n\r\n            // Popup will be null if popups are blocked\r\n            if (!popupWindow) {\r\n                throw createBrowserAuthError(\r\n                    BrowserAuthErrorCodes.emptyWindowError\r\n                );\r\n            }\r\n            if (popupWindow.focus) {\r\n                popupWindow.focus();\r\n            }\r\n            this.currentWindow = popupWindow;\r\n            popupParams.popupWindowParent.addEventListener(\r\n                \"beforeunload\",\r\n                this.unloadWindow\r\n            );\r\n\r\n            return popupWindow;\r\n        } catch (e) {\r\n            this.logger.error(\r\n                \"error opening popup \" + (e as AuthError).message\r\n            );\r\n            this.browserStorage.setInteractionInProgress(false);\r\n            throw createBrowserAuthError(\r\n                BrowserAuthErrorCodes.popupWindowError\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Helper function to set popup window dimensions and position\r\n     * @param urlNavigate\r\n     * @param popupName\r\n     * @param popupWindowAttributes\r\n     * @returns\r\n     */\r\n    openSizedPopup(\r\n        urlNavigate: string,\r\n        { popupName, popupWindowAttributes, popupWindowParent }: PopupParams\r\n    ): Window | null {\r\n        /**\r\n         * adding winLeft and winTop to account for dual monitor\r\n         * using screenLeft and screenTop for IE8 and earlier\r\n         */\r\n        const winLeft = popupWindowParent.screenLeft\r\n            ? popupWindowParent.screenLeft\r\n            : popupWindowParent.screenX;\r\n        const winTop = popupWindowParent.screenTop\r\n            ? popupWindowParent.screenTop\r\n            : popupWindowParent.screenY;\r\n        /**\r\n         * window.innerWidth displays browser window\"s height and width excluding toolbars\r\n         * using document.documentElement.clientWidth for IE8 and earlier\r\n         */\r\n        const winWidth =\r\n            popupWindowParent.innerWidth ||\r\n            document.documentElement.clientWidth ||\r\n            document.body.clientWidth;\r\n        const winHeight =\r\n            popupWindowParent.innerHeight ||\r\n            document.documentElement.clientHeight ||\r\n            document.body.clientHeight;\r\n\r\n        let width = popupWindowAttributes.popupSize?.width;\r\n        let height = popupWindowAttributes.popupSize?.height;\r\n        let top = popupWindowAttributes.popupPosition?.top;\r\n        let left = popupWindowAttributes.popupPosition?.left;\r\n\r\n        if (!width || width < 0 || width > winWidth) {\r\n            this.logger.verbose(\r\n                \"Default popup window width used. Window width not configured or invalid.\"\r\n            );\r\n            width = BrowserConstants.POPUP_WIDTH;\r\n        }\r\n\r\n        if (!height || height < 0 || height > winHeight) {\r\n            this.logger.verbose(\r\n                \"Default popup window height used. Window height not configured or invalid.\"\r\n            );\r\n            height = BrowserConstants.POPUP_HEIGHT;\r\n        }\r\n\r\n        if (!top || top < 0 || top > winHeight) {\r\n            this.logger.verbose(\r\n                \"Default popup window top position used. Window top not configured or invalid.\"\r\n            );\r\n            top = Math.max(\r\n                0,\r\n                winHeight / 2 - BrowserConstants.POPUP_HEIGHT / 2 + winTop\r\n            );\r\n        }\r\n\r\n        if (!left || left < 0 || left > winWidth) {\r\n            this.logger.verbose(\r\n                \"Default popup window left position used. Window left not configured or invalid.\"\r\n            );\r\n            left = Math.max(\r\n                0,\r\n                winWidth / 2 - BrowserConstants.POPUP_WIDTH / 2 + winLeft\r\n            );\r\n        }\r\n\r\n        return popupWindowParent.open(\r\n            urlNavigate,\r\n            popupName,\r\n            `width=${width}, height=${height}, top=${top}, left=${left}, scrollbars=yes`\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Event callback to unload main window.\r\n     */\r\n    unloadWindow(e: Event): void {\r\n        this.browserStorage.cleanRequestByInteractionType(\r\n            InteractionType.Popup\r\n        );\r\n        if (this.currentWindow) {\r\n            this.currentWindow.close();\r\n        }\r\n        // Guarantees browser unload will happen, so no other errors will be thrown.\r\n        e.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * Closes popup, removes any state vars created during popup calls.\r\n     * @param popupWindow\r\n     */\r\n    cleanPopup(popupWindow: Window, popupWindowParent: Window): void {\r\n        // Close window.\r\n        popupWindow.close();\r\n\r\n        // Remove window unload function\r\n        popupWindowParent.removeEventListener(\r\n            \"beforeunload\",\r\n            this.unloadWindow\r\n        );\r\n\r\n        // Interaction is completed - remove interaction status.\r\n        this.browserStorage.setInteractionInProgress(false);\r\n    }\r\n\r\n    /**\r\n     * Generates the name for the popup based on the client id and request\r\n     * @param clientId\r\n     * @param request\r\n     */\r\n    generatePopupName(scopes: Array<string>, authority: string): string {\r\n        return `${BrowserConstants.POPUP_NAME_PREFIX}.${\r\n            this.config.auth.clientId\r\n        }.${scopes.join(\"-\")}.${authority}.${this.correlationId}`;\r\n    }\r\n\r\n    /**\r\n     * Generates the name for the popup based on the client id and request for logouts\r\n     * @param clientId\r\n     * @param request\r\n     */\r\n    generateLogoutPopupName(request: CommonEndSessionRequest): string {\r\n        const homeAccountId = request.account && request.account.homeAccountId;\r\n        return `${BrowserConstants.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${homeAccountId}.${this.correlationId}`;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    AuthorizationCodeClient,\r\n    CommonAuthorizationCodeRequest,\r\n    Logger,\r\n    ServerError,\r\n    IPerformanceClient,\r\n    createClientAuthError,\r\n    ClientAuthErrorCodes,\r\n    CcsCredential,\r\n    invokeAsync,\r\n    PerformanceEvents,\r\n    ServerAuthorizationCodeResponse,\r\n} from \"@azure/msal-common/browser\";\r\nimport {\r\n    createBrowserAuthError,\r\n    BrowserAuthErrorCodes,\r\n} from \"../error/BrowserAuthError.js\";\r\nimport { ApiId, TemporaryCacheKeys } from \"../utils/BrowserConstants.js\";\r\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager.js\";\r\nimport { INavigationClient } from \"../navigation/INavigationClient.js\";\r\nimport { NavigationOptions } from \"../navigation/NavigationOptions.js\";\r\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\r\n\r\nexport type RedirectParams = {\r\n    navigationClient: INavigationClient;\r\n    redirectTimeout: number;\r\n    redirectStartPage: string;\r\n    onRedirectNavigate?: (url: string) => void | boolean;\r\n};\r\n\r\nexport class RedirectHandler {\r\n    authModule: AuthorizationCodeClient;\r\n    browserStorage: BrowserCacheManager;\r\n    authCodeRequest: CommonAuthorizationCodeRequest;\r\n    logger: Logger;\r\n    performanceClient: IPerformanceClient;\r\n\r\n    constructor(\r\n        authCodeModule: AuthorizationCodeClient,\r\n        storageImpl: BrowserCacheManager,\r\n        authCodeRequest: CommonAuthorizationCodeRequest,\r\n        logger: Logger,\r\n        performanceClient: IPerformanceClient\r\n    ) {\r\n        this.authModule = authCodeModule;\r\n        this.browserStorage = storageImpl;\r\n        this.authCodeRequest = authCodeRequest;\r\n        this.logger = logger;\r\n        this.performanceClient = performanceClient;\r\n    }\r\n\r\n    /**\r\n     * Redirects window to given URL.\r\n     * @param urlNavigate\r\n     */\r\n    async initiateAuthRequest(\r\n        requestUrl: string,\r\n        params: RedirectParams\r\n    ): Promise<void> {\r\n        this.logger.verbose(\"RedirectHandler.initiateAuthRequest called\");\r\n        // Navigate if valid URL\r\n        if (requestUrl) {\r\n            // Cache start page, returns to this page after redirectUri if navigateToLoginRequestUrl is true\r\n            if (params.redirectStartPage) {\r\n                this.logger.verbose(\r\n                    \"RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page\"\r\n                );\r\n                this.browserStorage.setTemporaryCache(\r\n                    TemporaryCacheKeys.ORIGIN_URI,\r\n                    params.redirectStartPage,\r\n                    true\r\n                );\r\n            }\r\n\r\n            // Set interaction status in the library.\r\n            this.browserStorage.setTemporaryCache(\r\n                TemporaryCacheKeys.CORRELATION_ID,\r\n                this.authCodeRequest.correlationId,\r\n                true\r\n            );\r\n            this.browserStorage.cacheCodeRequest(this.authCodeRequest);\r\n            this.logger.infoPii(\r\n                `RedirectHandler.initiateAuthRequest: Navigate to: ${requestUrl}`\r\n            );\r\n            const navigationOptions: NavigationOptions = {\r\n                apiId: ApiId.acquireTokenRedirect,\r\n                timeout: params.redirectTimeout,\r\n                noHistory: false,\r\n            };\r\n\r\n            // If onRedirectNavigate is implemented, invoke it and provide requestUrl\r\n            if (typeof params.onRedirectNavigate === \"function\") {\r\n                this.logger.verbose(\r\n                    \"RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback\"\r\n                );\r\n                const navigate = params.onRedirectNavigate(requestUrl);\r\n\r\n                // Returning false from onRedirectNavigate will stop navigation\r\n                if (navigate !== false) {\r\n                    this.logger.verbose(\r\n                        \"RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating\"\r\n                    );\r\n                    await params.navigationClient.navigateExternal(\r\n                        requestUrl,\r\n                        navigationOptions\r\n                    );\r\n                    return;\r\n                } else {\r\n                    this.logger.verbose(\r\n                        \"RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation\"\r\n                    );\r\n                    return;\r\n                }\r\n            } else {\r\n                // Navigate window to request URL\r\n                this.logger.verbose(\r\n                    \"RedirectHandler.initiateAuthRequest: Navigating window to navigate url\"\r\n                );\r\n                await params.navigationClient.navigateExternal(\r\n                    requestUrl,\r\n                    navigationOptions\r\n                );\r\n                return;\r\n            }\r\n        } else {\r\n            // Throw error if request URL is empty.\r\n            this.logger.info(\r\n                \"RedirectHandler.initiateAuthRequest: Navigate url is empty\"\r\n            );\r\n            throw createBrowserAuthError(\r\n                BrowserAuthErrorCodes.emptyNavigateUri\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle authorization code response in the window.\r\n     * @param hash\r\n     */\r\n    async handleCodeResponse(\r\n        response: ServerAuthorizationCodeResponse,\r\n        state: string\r\n    ): Promise<AuthenticationResult> {\r\n        this.logger.verbose(\"RedirectHandler.handleCodeResponse called\");\r\n\r\n        // Interaction is completed - remove interaction status.\r\n        this.browserStorage.setInteractionInProgress(false);\r\n\r\n        // Handle code response.\r\n        const stateKey = this.browserStorage.generateStateKey(state);\r\n        const requestState = this.browserStorage.getTemporaryCache(stateKey);\r\n        if (!requestState) {\r\n            throw createClientAuthError(\r\n                ClientAuthErrorCodes.stateNotFound,\r\n                \"Cached State\"\r\n            );\r\n        }\r\n\r\n        let authCodeResponse;\r\n        try {\r\n            authCodeResponse = this.authModule.handleFragmentResponse(\r\n                response,\r\n                requestState\r\n            );\r\n        } catch (e) {\r\n            if (\r\n                e instanceof ServerError &&\r\n                e.subError === BrowserAuthErrorCodes.userCancelled\r\n            ) {\r\n                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\r\n                throw createBrowserAuthError(\r\n                    BrowserAuthErrorCodes.userCancelled\r\n                );\r\n            } else {\r\n                throw e;\r\n            }\r\n        }\r\n\r\n        // Get cached items\r\n        const nonceKey = this.browserStorage.generateNonceKey(requestState);\r\n        const cachedNonce = this.browserStorage.getTemporaryCache(nonceKey);\r\n\r\n        // Assign code to request\r\n        this.authCodeRequest.code = authCodeResponse.code;\r\n\r\n        // Check for new cloud instance\r\n        if (authCodeResponse.cloud_instance_host_name) {\r\n            await invokeAsync(\r\n                this.authModule.updateAuthority.bind(this.authModule),\r\n                PerformanceEvents.UpdateTokenEndpointAuthority,\r\n                this.logger,\r\n                this.performanceClient,\r\n                this.authCodeRequest.correlationId\r\n            )(\r\n                authCodeResponse.cloud_instance_host_name,\r\n                this.authCodeRequest.correlationId\r\n            );\r\n        }\r\n\r\n        authCodeResponse.nonce = cachedNonce || undefined;\r\n        authCodeResponse.state = requestState;\r\n\r\n        // Add CCS parameters if available\r\n        if (authCodeResponse.client_info) {\r\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\r\n        } else {\r\n            const cachedCcsCred = this.checkCcsCredentials();\r\n            if (cachedCcsCred) {\r\n                this.authCodeRequest.ccsCredential = cachedCcsCred;\r\n            }\r\n        }\r\n\r\n        // Acquire token with retrieved code.\r\n        const tokenResponse = (await this.authModule.acquireToken(\r\n            this.authCodeRequest,\r\n            authCodeResponse\r\n        )) as AuthenticationResult;\r\n\r\n        this.browserStorage.cleanRequestByState(state);\r\n        return tokenResponse;\r\n    }\r\n\r\n    /**\r\n     * Looks up ccs creds in the cache\r\n     */\r\n    protected checkCcsCredentials(): CcsCredential | null {\r\n        // Look up ccs credential in temp cache\r\n        const cachedCcsCred = this.browserStorage.getTemporaryCache(\r\n            TemporaryCacheKeys.CCS_CREDENTIAL,\r\n            true\r\n        );\r\n        if (cachedCcsCred) {\r\n            try {\r\n                return JSON.parse(cachedCcsCred) as CcsCredential;\r\n            } catch (e) {\r\n                this.authModule.logger.error(\r\n                    \"Cache credential could not be parsed\"\r\n                );\r\n                this.authModule.logger.errorPii(\r\n                    `Cache credential could not be parsed: ${cachedCcsCred}`\r\n                );\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    CommonAuthorizationCodeRequest,\r\n    AuthorizationCodeClient,\r\n    UrlString,\r\n    AuthError,\r\n    ServerTelemetryManager,\r\n    Constants,\r\n    ProtocolUtils,\r\n    ServerAuthorizationCodeResponse,\r\n    ThrottlingUtils,\r\n    ICrypto,\r\n    Logger,\r\n    IPerformanceClient,\r\n    PerformanceEvents,\r\n    ProtocolMode,\r\n    invokeAsync,\r\n    ServerResponseType,\r\n    UrlUtils,\r\n    InProgressPerformanceEvent,\r\n} from \"@azure/msal-common/browser\";\r\nimport { StandardInteractionClient } from \"./StandardInteractionClient.js\";\r\nimport {\r\n    ApiId,\r\n    InteractionType,\r\n    TemporaryCacheKeys,\r\n} from \"../utils/BrowserConstants.js\";\r\nimport { RedirectHandler } from \"../interaction_handler/RedirectHandler.js\";\r\nimport * as BrowserUtils from \"../utils/BrowserUtils.js\";\r\nimport { EndSessionRequest } from \"../request/EndSessionRequest.js\";\r\nimport { EventType } from \"../event/EventType.js\";\r\nimport { NavigationOptions } from \"../navigation/NavigationOptions.js\";\r\nimport {\r\n    createBrowserAuthError,\r\n    BrowserAuthErrorCodes,\r\n} from \"../error/BrowserAuthError.js\";\r\nimport { RedirectRequest } from \"../request/RedirectRequest.js\";\r\nimport { NativeInteractionClient } from \"./NativeInteractionClient.js\";\r\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler.js\";\r\nimport { BrowserConfiguration } from \"../config/Configuration.js\";\r\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager.js\";\r\nimport { EventHandler } from \"../event/EventHandler.js\";\r\nimport { INavigationClient } from \"../navigation/INavigationClient.js\";\r\nimport { EventError } from \"../event/EventMessage.js\";\r\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\r\nimport * as ResponseHandler from \"../response/ResponseHandler.js\";\r\n\r\nfunction getNavigationType(): NavigationTimingType | undefined {\r\n    if (\r\n        typeof window === \"undefined\" ||\r\n        typeof window.performance === \"undefined\" ||\r\n        typeof window.performance.getEntriesByType !== \"function\"\r\n    ) {\r\n        return undefined;\r\n    }\r\n\r\n    const navigationEntries = window.performance.getEntriesByType(\"navigation\");\r\n    const navigation = navigationEntries.length\r\n        ? (navigationEntries[0] as PerformanceNavigationTiming)\r\n        : undefined;\r\n    return navigation?.type;\r\n}\r\n\r\nexport class RedirectClient extends StandardInteractionClient {\r\n    protected nativeStorage: BrowserCacheManager;\r\n\r\n    constructor(\r\n        config: BrowserConfiguration,\r\n        storageImpl: BrowserCacheManager,\r\n        browserCrypto: ICrypto,\r\n        logger: Logger,\r\n        eventHandler: EventHandler,\r\n        navigationClient: INavigationClient,\r\n        performanceClient: IPerformanceClient,\r\n        nativeStorageImpl: BrowserCacheManager,\r\n        nativeMessageHandler?: NativeMessageHandler,\r\n        correlationId?: string\r\n    ) {\r\n        super(\r\n            config,\r\n            storageImpl,\r\n            browserCrypto,\r\n            logger,\r\n            eventHandler,\r\n            navigationClient,\r\n            performanceClient,\r\n            nativeMessageHandler,\r\n            correlationId\r\n        );\r\n        this.nativeStorage = nativeStorageImpl;\r\n    }\r\n\r\n    /**\r\n     * Redirects the page to the /authorize endpoint of the IDP\r\n     * @param request\r\n     */\r\n    async acquireToken(request: RedirectRequest): Promise<void> {\r\n        const validRequest = await invokeAsync(\r\n            this.initializeAuthorizationRequest.bind(this),\r\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\r\n            this.logger,\r\n            this.performanceClient,\r\n            this.correlationId\r\n        )(request, InteractionType.Redirect);\r\n\r\n        this.browserStorage.updateCacheEntries(\r\n            validRequest.state,\r\n            validRequest.nonce,\r\n            validRequest.authority,\r\n            validRequest.loginHint || \"\",\r\n            validRequest.account || null\r\n        );\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\r\n            ApiId.acquireTokenRedirect\r\n        );\r\n\r\n        const handleBackButton = (event: PageTransitionEvent) => {\r\n            // Clear temporary cache if the back button is clicked during the redirect flow.\r\n            if (event.persisted) {\r\n                this.logger.verbose(\r\n                    \"Page was restored from back/forward cache. Clearing temporary cache.\"\r\n                );\r\n                this.browserStorage.cleanRequestByState(validRequest.state);\r\n                this.eventHandler.emitEvent(\r\n                    EventType.RESTORE_FROM_BFCACHE,\r\n                    InteractionType.Redirect\r\n                );\r\n            }\r\n        };\r\n\r\n        try {\r\n            // Create auth code request and generate PKCE params\r\n            const authCodeRequest: CommonAuthorizationCodeRequest =\r\n                await invokeAsync(\r\n                    this.initializeAuthorizationCodeRequest.bind(this),\r\n                    PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest,\r\n                    this.logger,\r\n                    this.performanceClient,\r\n                    this.correlationId\r\n                )(validRequest);\r\n\r\n            // Initialize the client\r\n            const authClient: AuthorizationCodeClient = await invokeAsync(\r\n                this.createAuthCodeClient.bind(this),\r\n                PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\r\n                this.logger,\r\n                this.performanceClient,\r\n                this.correlationId\r\n            )({\r\n                serverTelemetryManager,\r\n                requestAuthority: validRequest.authority,\r\n                requestAzureCloudOptions: validRequest.azureCloudOptions,\r\n                requestExtraQueryParameters: validRequest.extraQueryParameters,\r\n                account: validRequest.account,\r\n            });\r\n\r\n            // Create redirect interaction handler.\r\n            const interactionHandler = new RedirectHandler(\r\n                authClient,\r\n                this.browserStorage,\r\n                authCodeRequest,\r\n                this.logger,\r\n                this.performanceClient\r\n            );\r\n\r\n            // Create acquire token url.\r\n            const navigateUrl = await authClient.getAuthCodeUrl({\r\n                ...validRequest,\r\n                platformBroker: NativeMessageHandler.isPlatformBrokerAvailable(\r\n                    this.config,\r\n                    this.logger,\r\n                    this.nativeMessageHandler,\r\n                    request.authenticationScheme\r\n                ),\r\n            });\r\n\r\n            const redirectStartPage = this.getRedirectStartPage(\r\n                request.redirectStartPage\r\n            );\r\n            this.logger.verbosePii(`Redirect start page: ${redirectStartPage}`);\r\n\r\n            // Clear temporary cache if the back button is clicked during the redirect flow.\r\n            window.addEventListener(\"pageshow\", handleBackButton);\r\n\r\n            // Show the UI once the url has been created. Response will come back in the hash, which will be handled in the handleRedirectCallback function.\r\n            return await interactionHandler.initiateAuthRequest(navigateUrl, {\r\n                navigationClient: this.navigationClient,\r\n                redirectTimeout: this.config.system.redirectNavigationTimeout,\r\n                redirectStartPage: redirectStartPage,\r\n                onRedirectNavigate:\r\n                    request.onRedirectNavigate ||\r\n                    this.config.auth.onRedirectNavigate,\r\n            });\r\n        } catch (e) {\r\n            if (e instanceof AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n                serverTelemetryManager.cacheFailedRequest(e);\r\n            }\r\n            window.removeEventListener(\"pageshow\", handleBackButton);\r\n            this.browserStorage.cleanRequestByState(validRequest.state);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if navigateToLoginRequestUrl is set, and:\r\n     * - if true, performs logic to cache and navigate\r\n     * - if false, handles hash string and parses response\r\n     * @param hash {string} url hash\r\n     * @param parentMeasurement {InProgressPerformanceEvent} parent measurement\r\n     */\r\n    async handleRedirectPromise(\r\n        hash: string = \"\",\r\n        parentMeasurement: InProgressPerformanceEvent\r\n    ): Promise<AuthenticationResult | null> {\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\r\n            ApiId.handleRedirectPromise\r\n        );\r\n\r\n        try {\r\n            if (!this.browserStorage.isInteractionInProgress(true)) {\r\n                this.logger.info(\r\n                    \"handleRedirectPromise called but there is no interaction in progress, returning null.\"\r\n                );\r\n                return null;\r\n            }\r\n            const [serverParams, responseString] = this.getRedirectResponse(\r\n                hash || \"\"\r\n            );\r\n            if (!serverParams) {\r\n                // Not a recognized server response hash or hash not associated with a redirect request\r\n                this.logger.info(\r\n                    \"handleRedirectPromise did not detect a response as a result of a redirect. Cleaning temporary cache.\"\r\n                );\r\n                this.browserStorage.cleanRequestByInteractionType(\r\n                    InteractionType.Redirect\r\n                );\r\n\r\n                // Do not instrument \"no_server_response\" if user clicked back button\r\n                if (getNavigationType() !== \"back_forward\") {\r\n                    parentMeasurement.event.errorCode = \"no_server_response\";\r\n                } else {\r\n                    this.logger.verbose(\r\n                        \"Back navigation event detected. Muting no_server_response error\"\r\n                    );\r\n                }\r\n                return null;\r\n            }\r\n\r\n            // If navigateToLoginRequestUrl is true, get the url where the redirect request was initiated\r\n            const loginRequestUrl =\r\n                this.browserStorage.getTemporaryCache(\r\n                    TemporaryCacheKeys.ORIGIN_URI,\r\n                    true\r\n                ) || Constants.EMPTY_STRING;\r\n            const loginRequestUrlNormalized =\r\n                UrlString.removeHashFromUrl(loginRequestUrl);\r\n            const currentUrlNormalized = UrlString.removeHashFromUrl(\r\n                window.location.href\r\n            );\r\n\r\n            if (\r\n                loginRequestUrlNormalized === currentUrlNormalized &&\r\n                this.config.auth.navigateToLoginRequestUrl\r\n            ) {\r\n                // We are on the page we need to navigate to - handle hash\r\n                this.logger.verbose(\r\n                    \"Current page is loginRequestUrl, handling response\"\r\n                );\r\n\r\n                if (loginRequestUrl.indexOf(\"#\") > -1) {\r\n                    // Replace current hash with non-msal hash, if present\r\n                    BrowserUtils.replaceHash(loginRequestUrl);\r\n                }\r\n\r\n                const handleHashResult = await this.handleResponse(\r\n                    serverParams,\r\n                    serverTelemetryManager\r\n                );\r\n\r\n                return handleHashResult;\r\n            } else if (!this.config.auth.navigateToLoginRequestUrl) {\r\n                this.logger.verbose(\r\n                    \"NavigateToLoginRequestUrl set to false, handling response\"\r\n                );\r\n                return await this.handleResponse(\r\n                    serverParams,\r\n                    serverTelemetryManager\r\n                );\r\n            } else if (\r\n                !BrowserUtils.isInIframe() ||\r\n                this.config.system.allowRedirectInIframe\r\n            ) {\r\n                /*\r\n                 * Returned from authority using redirect - need to perform navigation before processing response\r\n                 * Cache the hash to be retrieved after the next redirect\r\n                 */\r\n                this.browserStorage.setTemporaryCache(\r\n                    TemporaryCacheKeys.URL_HASH,\r\n                    responseString,\r\n                    true\r\n                );\r\n                const navigationOptions: NavigationOptions = {\r\n                    apiId: ApiId.handleRedirectPromise,\r\n                    timeout: this.config.system.redirectNavigationTimeout,\r\n                    noHistory: true,\r\n                };\r\n\r\n                /**\r\n                 * Default behavior is to redirect to the start page and not process the hash now.\r\n                 * The start page is expected to also call handleRedirectPromise which will process the hash in one of the checks above.\r\n                 */\r\n                let processHashOnRedirect: boolean = true;\r\n                if (!loginRequestUrl || loginRequestUrl === \"null\") {\r\n                    // Redirect to home page if login request url is null (real null or the string null)\r\n                    const homepage = BrowserUtils.getHomepage();\r\n                    // Cache the homepage under ORIGIN_URI to ensure cached hash is processed on homepage\r\n                    this.browserStorage.setTemporaryCache(\r\n                        TemporaryCacheKeys.ORIGIN_URI,\r\n                        homepage,\r\n                        true\r\n                    );\r\n                    this.logger.warning(\r\n                        \"Unable to get valid login request url from cache, redirecting to home page\"\r\n                    );\r\n                    processHashOnRedirect =\r\n                        await this.navigationClient.navigateInternal(\r\n                            homepage,\r\n                            navigationOptions\r\n                        );\r\n                } else {\r\n                    // Navigate to page that initiated the redirect request\r\n                    this.logger.verbose(\r\n                        `Navigating to loginRequestUrl: ${loginRequestUrl}`\r\n                    );\r\n                    processHashOnRedirect =\r\n                        await this.navigationClient.navigateInternal(\r\n                            loginRequestUrl,\r\n                            navigationOptions\r\n                        );\r\n                }\r\n\r\n                // If navigateInternal implementation returns false, handle the hash now\r\n                if (!processHashOnRedirect) {\r\n                    return await this.handleResponse(\r\n                        serverParams,\r\n                        serverTelemetryManager\r\n                    );\r\n                }\r\n            }\r\n\r\n            return null;\r\n        } catch (e) {\r\n            if (e instanceof AuthError) {\r\n                (e as AuthError).setCorrelationId(this.correlationId);\r\n                serverTelemetryManager.cacheFailedRequest(e);\r\n            }\r\n            this.browserStorage.cleanRequestByInteractionType(\r\n                InteractionType.Redirect\r\n            );\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets the response hash for a redirect request\r\n     * Returns null if interactionType in the state value is not \"redirect\" or the hash does not contain known properties\r\n     * @param hash\r\n     */\r\n    protected getRedirectResponse(\r\n        userProvidedResponse: string\r\n    ): [ServerAuthorizationCodeResponse | null, string] {\r\n        this.logger.verbose(\"getRedirectResponseHash called\");\r\n        // Get current location hash from window or cache.\r\n        let responseString = userProvidedResponse;\r\n        if (!responseString) {\r\n            if (\r\n                this.config.auth.OIDCOptions.serverResponseType ===\r\n                ServerResponseType.QUERY\r\n            ) {\r\n                responseString = window.location.search;\r\n            } else {\r\n                responseString = window.location.hash;\r\n            }\r\n        }\r\n        let response = UrlUtils.getDeserializedResponse(responseString);\r\n\r\n        if (response) {\r\n            try {\r\n                ResponseHandler.validateInteractionType(\r\n                    response,\r\n                    this.browserCrypto,\r\n                    InteractionType.Redirect\r\n                );\r\n            } catch (e) {\r\n                if (e instanceof AuthError) {\r\n                    this.logger.error(\r\n                        `Interaction type validation failed due to ${e.errorCode}: ${e.errorMessage}`\r\n                    );\r\n                }\r\n                return [null, \"\"];\r\n            }\r\n\r\n            BrowserUtils.clearHash(window);\r\n            this.logger.verbose(\r\n                \"Hash contains known properties, returning response hash\"\r\n            );\r\n            return [response, responseString];\r\n        }\r\n\r\n        const cachedHash = this.browserStorage.getTemporaryCache(\r\n            TemporaryCacheKeys.URL_HASH,\r\n            true\r\n        );\r\n        this.browserStorage.removeItem(\r\n            this.browserStorage.generateCacheKey(TemporaryCacheKeys.URL_HASH)\r\n        );\r\n\r\n        if (cachedHash) {\r\n            response = UrlUtils.getDeserializedResponse(cachedHash);\r\n            if (response) {\r\n                this.logger.verbose(\r\n                    \"Hash does not contain known properties, returning cached hash\"\r\n                );\r\n                return [response, cachedHash];\r\n            }\r\n        }\r\n\r\n        return [null, \"\"];\r\n    }\r\n\r\n    /**\r\n     * Checks if hash exists and handles in window.\r\n     * @param hash\r\n     * @param state\r\n     */\r\n    protected async handleResponse(\r\n        serverParams: ServerAuthorizationCodeResponse,\r\n        serverTelemetryManager: ServerTelemetryManager\r\n    ): Promise<AuthenticationResult> {\r\n        const state = serverParams.state;\r\n        if (!state) {\r\n            throw createBrowserAuthError(BrowserAuthErrorCodes.noStateInHash);\r\n        }\r\n\r\n        const cachedRequest = this.browserStorage.getCachedRequest(state);\r\n        this.logger.verbose(\"handleResponse called, retrieved cached request\");\r\n\r\n        if (serverParams.accountId) {\r\n            this.logger.verbose(\r\n                \"Account id found in hash, calling WAM for token\"\r\n            );\r\n            if (!this.nativeMessageHandler) {\r\n                throw createBrowserAuthError(\r\n                    BrowserAuthErrorCodes.nativeConnectionNotEstablished\r\n                );\r\n            }\r\n            const nativeInteractionClient = new NativeInteractionClient(\r\n                this.config,\r\n                this.browserStorage,\r\n                this.browserCrypto,\r\n                this.logger,\r\n                this.eventHandler,\r\n                this.navigationClient,\r\n                ApiId.acquireTokenPopup,\r\n                this.performanceClient,\r\n                this.nativeMessageHandler,\r\n                serverParams.accountId,\r\n                this.nativeStorage,\r\n                cachedRequest.correlationId\r\n            );\r\n            const { userRequestState } = ProtocolUtils.parseRequestState(\r\n                this.browserCrypto,\r\n                state\r\n            );\r\n            return nativeInteractionClient\r\n                .acquireToken({\r\n                    ...cachedRequest,\r\n                    state: userRequestState,\r\n                    prompt: undefined, // Server should handle the prompt, ideally native broker can do this part silently\r\n                })\r\n                .finally(() => {\r\n                    this.browserStorage.cleanRequestByState(state);\r\n                });\r\n        }\r\n\r\n        // Hash contains known properties - handle and return in callback\r\n        const currentAuthority = this.browserStorage.getCachedAuthority(state);\r\n        if (!currentAuthority) {\r\n            throw createBrowserAuthError(\r\n                BrowserAuthErrorCodes.noCachedAuthorityError\r\n            );\r\n        }\r\n\r\n        const authClient = await invokeAsync(\r\n            this.createAuthCodeClient.bind(this),\r\n            PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\r\n            this.logger,\r\n            this.performanceClient,\r\n            this.correlationId\r\n        )({ serverTelemetryManager, requestAuthority: currentAuthority });\r\n\r\n        ThrottlingUtils.removeThrottle(\r\n            this.browserStorage,\r\n            this.config.auth.clientId,\r\n            cachedRequest\r\n        );\r\n        const interactionHandler = new RedirectHandler(\r\n            authClient,\r\n            this.browserStorage,\r\n            cachedRequest,\r\n            this.logger,\r\n            this.performanceClient\r\n        );\r\n        return interactionHandler.handleCodeResponse(serverParams, state);\r\n    }\r\n\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param logoutRequest\r\n     */\r\n    async logout(logoutRequest?: EndSessionRequest): Promise<void> {\r\n        this.logger.verbose(\"logoutRedirect called\");\r\n        const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\r\n            ApiId.logout\r\n        );\r\n\r\n        try {\r\n            this.eventHandler.emitEvent(\r\n                EventType.LOGOUT_START,\r\n                InteractionType.Redirect,\r\n                logoutRequest\r\n            );\r\n\r\n            // Clear cache on logout\r\n            await this.clearCacheOnLogout(validLogoutRequest.account);\r\n\r\n            const navigationOptions: NavigationOptions = {\r\n                apiId: ApiId.logout,\r\n                timeout: this.config.system.redirectNavigationTimeout,\r\n                noHistory: false,\r\n            };\r\n\r\n            const authClient = await invokeAsync(\r\n                this.createAuthCodeClient.bind(this),\r\n                PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\r\n                this.logger,\r\n                this.performanceClient,\r\n                this.correlationId\r\n            )({\r\n                serverTelemetryManager,\r\n                requestAuthority: logoutRequest && logoutRequest.authority,\r\n                requestExtraQueryParameters:\r\n                    logoutRequest?.extraQueryParameters,\r\n                account: (logoutRequest && logoutRequest.account) || undefined,\r\n            });\r\n\r\n            if (authClient.authority.protocolMode === ProtocolMode.OIDC) {\r\n                try {\r\n                    authClient.authority.endSessionEndpoint;\r\n                } catch {\r\n                    if (validLogoutRequest.account?.homeAccountId) {\r\n                        void this.browserStorage.removeAccount(\r\n                            validLogoutRequest.account?.homeAccountId\r\n                        );\r\n\r\n                        this.eventHandler.emitEvent(\r\n                            EventType.LOGOUT_SUCCESS,\r\n                            InteractionType.Redirect,\r\n                            validLogoutRequest\r\n                        );\r\n\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Create logout string and navigate user window to logout.\r\n            const logoutUri: string =\r\n                authClient.getLogoutUri(validLogoutRequest);\r\n\r\n            this.eventHandler.emitEvent(\r\n                EventType.LOGOUT_SUCCESS,\r\n                InteractionType.Redirect,\r\n                validLogoutRequest\r\n            );\r\n            // Check if onRedirectNavigate is implemented, and invoke it if so\r\n            if (\r\n                logoutRequest &&\r\n                typeof logoutRequest.onRedirectNavigate === \"function\"\r\n            ) {\r\n                const navigate = logoutRequest.onRedirectNavigate(logoutUri);\r\n\r\n                if (navigate !== false) {\r\n                    this.logger.verbose(\r\n                        \"Logout onRedirectNavigate did not return false, navigating\"\r\n                    );\r\n                    // Ensure interaction is in progress\r\n                    if (!this.browserStorage.getInteractionInProgress()) {\r\n                        this.browserStorage.setInteractionInProgress(true);\r\n                    }\r\n                    await this.navigationClient.navigateExternal(\r\n                        logoutUri,\r\n                        navigationOptions\r\n                    );\r\n                    return;\r\n                } else {\r\n                    // Ensure interaction is not in progress\r\n                    this.browserStorage.setInteractionInProgress(false);\r\n                    this.logger.verbose(\r\n                        \"Logout onRedirectNavigate returned false, stopping navigation\"\r\n                    );\r\n                }\r\n            } else {\r\n                // Ensure interaction is in progress\r\n                if (!this.browserStorage.getInteractionInProgress()) {\r\n                    this.browserStorage.setInteractionInProgress(true);\r\n                }\r\n                await this.navigationClient.navigateExternal(\r\n                    logoutUri,\r\n                    navigationOptions\r\n                );\r\n                return;\r\n            }\r\n        } catch (e) {\r\n            if (e instanceof AuthError) {\r\n                (e as AuthError).setCorrelationId(this.correlationId);\r\n                serverTelemetryManager.cacheFailedRequest(e);\r\n            }\r\n            this.eventHandler.emitEvent(\r\n                EventType.LOGOUT_FAILURE,\r\n                InteractionType.Redirect,\r\n                null,\r\n                e as EventError\r\n            );\r\n            this.eventHandler.emitEvent(\r\n                EventType.LOGOUT_END,\r\n                InteractionType.Redirect\r\n            );\r\n            throw e;\r\n        }\r\n\r\n        this.eventHandler.emitEvent(\r\n            EventType.LOGOUT_END,\r\n            InteractionType.Redirect\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Use to get the redirectStartPage either from request or use current window\r\n     * @param requestStartPage\r\n     */\r\n    protected getRedirectStartPage(requestStartPage?: string): string {\r\n        const redirectStartPage = requestStartPage || window.location.href;\r\n        return UrlString.getAbsoluteUrl(\r\n            redirectStartPage,\r\n            BrowserUtils.getCurrentUri()\r\n        );\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    Logger,\r\n    IPerformanceClient,\r\n    PerformanceEvents,\r\n    invokeAsync,\r\n    invoke,\r\n    ServerResponseType,\r\n} from \"@azure/msal-common/browser\";\r\nimport {\r\n    createBrowserAuthError,\r\n    BrowserAuthErrorCodes,\r\n} from \"../error/BrowserAuthError.js\";\r\nimport { DEFAULT_IFRAME_TIMEOUT_MS } from \"../config/Configuration.js\";\r\n\r\n/**\r\n * Creates a hidden iframe to given URL using user-requested scopes as an id.\r\n * @param urlNavigate\r\n * @param userRequestScopes\r\n */\r\nexport async function initiateAuthRequest(\r\n    requestUrl: string,\r\n    performanceClient: IPerformanceClient,\r\n    logger: Logger,\r\n    correlationId: string,\r\n    navigateFrameWait?: number\r\n): Promise<HTMLIFrameElement> {\r\n    performanceClient.addQueueMeasurement(\r\n        PerformanceEvents.SilentHandlerInitiateAuthRequest,\r\n        correlationId\r\n    );\r\n\r\n    if (!requestUrl) {\r\n        // Throw error if request URL is empty.\r\n        logger.info(\"Navigate url is empty\");\r\n        throw createBrowserAuthError(BrowserAuthErrorCodes.emptyNavigateUri);\r\n    }\r\n    if (navigateFrameWait) {\r\n        return invokeAsync(\r\n            loadFrame,\r\n            PerformanceEvents.SilentHandlerLoadFrame,\r\n            logger,\r\n            performanceClient,\r\n            correlationId\r\n        )(requestUrl, navigateFrameWait, performanceClient, correlationId);\r\n    }\r\n    return invoke(\r\n        loadFrameSync,\r\n        PerformanceEvents.SilentHandlerLoadFrameSync,\r\n        logger,\r\n        performanceClient,\r\n        correlationId\r\n    )(requestUrl);\r\n}\r\n\r\n/**\r\n * Monitors an iframe content window until it loads a url with a known hash, or hits a specified timeout.\r\n * @param iframe\r\n * @param timeout\r\n */\r\nexport async function monitorIframeForHash(\r\n    iframe: HTMLIFrameElement,\r\n    timeout: number,\r\n    pollIntervalMilliseconds: number,\r\n    performanceClient: IPerformanceClient,\r\n    logger: Logger,\r\n    correlationId: string,\r\n    responseType: ServerResponseType\r\n): Promise<string> {\r\n    performanceClient.addQueueMeasurement(\r\n        PerformanceEvents.SilentHandlerMonitorIframeForHash,\r\n        correlationId\r\n    );\r\n\r\n    return new Promise<string>((resolve, reject) => {\r\n        if (timeout < DEFAULT_IFRAME_TIMEOUT_MS) {\r\n            logger.warning(\r\n                `system.loadFrameTimeout or system.iframeHashTimeout set to lower (${timeout}ms) than the default (${DEFAULT_IFRAME_TIMEOUT_MS}ms). This may result in timeouts.`\r\n            );\r\n        }\r\n\r\n        /*\r\n         * Polling for iframes can be purely timing based,\r\n         * since we don't need to account for interaction.\r\n         */\r\n        const timeoutId = window.setTimeout(() => {\r\n            window.clearInterval(intervalId);\r\n            reject(\r\n                createBrowserAuthError(\r\n                    BrowserAuthErrorCodes.monitorWindowTimeout\r\n                )\r\n            );\r\n        }, timeout);\r\n\r\n        const intervalId = window.setInterval(() => {\r\n            let href: string = \"\";\r\n            const contentWindow = iframe.contentWindow;\r\n            try {\r\n                /*\r\n                 * Will throw if cross origin,\r\n                 * which should be caught and ignored\r\n                 * since we need the interval to keep running while on STS UI.\r\n                 */\r\n                href = contentWindow ? contentWindow.location.href : \"\";\r\n            } catch (e) {}\r\n\r\n            if (!href || href === \"about:blank\") {\r\n                return;\r\n            }\r\n\r\n            let responseString = \"\";\r\n            if (contentWindow) {\r\n                if (responseType === ServerResponseType.QUERY) {\r\n                    responseString = contentWindow.location.search;\r\n                } else {\r\n                    responseString = contentWindow.location.hash;\r\n                }\r\n            }\r\n            window.clearTimeout(timeoutId);\r\n            window.clearInterval(intervalId);\r\n            resolve(responseString);\r\n        }, pollIntervalMilliseconds);\r\n    }).finally(() => {\r\n        invoke(\r\n            removeHiddenIframe,\r\n            PerformanceEvents.RemoveHiddenIframe,\r\n            logger,\r\n            performanceClient,\r\n            correlationId\r\n        )(iframe);\r\n    });\r\n}\r\n\r\n/**\r\n * @hidden\r\n * Loads iframe with authorization endpoint URL\r\n * @ignore\r\n * @deprecated\r\n */\r\nfunction loadFrame(\r\n    urlNavigate: string,\r\n    navigateFrameWait: number,\r\n    performanceClient: IPerformanceClient,\r\n    correlationId: string\r\n): Promise<HTMLIFrameElement> {\r\n    performanceClient.addQueueMeasurement(\r\n        PerformanceEvents.SilentHandlerLoadFrame,\r\n        correlationId\r\n    );\r\n\r\n    /*\r\n     * This trick overcomes iframe navigation in IE\r\n     * IE does not load the page consistently in iframe\r\n     */\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const frameHandle = createHiddenIframe();\r\n\r\n        window.setTimeout(() => {\r\n            if (!frameHandle) {\r\n                reject(\"Unable to load iframe\");\r\n                return;\r\n            }\r\n\r\n            frameHandle.src = urlNavigate;\r\n\r\n            resolve(frameHandle);\r\n        }, navigateFrameWait);\r\n    });\r\n}\r\n/**\r\n * @hidden\r\n * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\r\n * @param urlNavigate\r\n * @param frameName\r\n * @param logger\r\n */\r\nfunction loadFrameSync(urlNavigate: string): HTMLIFrameElement {\r\n    const frameHandle = createHiddenIframe();\r\n\r\n    frameHandle.src = urlNavigate;\r\n\r\n    return frameHandle;\r\n}\r\n\r\n/**\r\n * @hidden\r\n * Creates a new hidden iframe or gets an existing one for silent token renewal.\r\n * @ignore\r\n */\r\nfunction createHiddenIframe(): HTMLIFrameElement {\r\n    const authFrame = document.createElement(\"iframe\");\r\n\r\n    authFrame.className = \"msalSilentIframe\";\r\n    authFrame.style.visibility = \"hidden\";\r\n    authFrame.style.position = \"absolute\";\r\n    authFrame.style.width = authFrame.style.height = \"0\";\r\n    authFrame.style.border = \"0\";\r\n    authFrame.setAttribute(\r\n        \"sandbox\",\r\n        \"allow-scripts allow-same-origin allow-forms\"\r\n    );\r\n    document.body.appendChild(authFrame);\r\n\r\n    return authFrame;\r\n}\r\n\r\n/**\r\n * @hidden\r\n * Removes a hidden iframe from the page.\r\n * @ignore\r\n */\r\nfunction removeHiddenIframe(iframe: HTMLIFrameElement): void {\r\n    if (document.body === iframe.parentNode) {\r\n        document.body.removeChild(iframe);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    ICrypto,\r\n    Logger,\r\n    PromptValue,\r\n    CommonAuthorizationCodeRequest,\r\n    AuthorizationCodeClient,\r\n    AuthError,\r\n    ProtocolUtils,\r\n    IPerformanceClient,\r\n    PerformanceEvents,\r\n    invokeAsync,\r\n    invoke,\r\n} from \"@azure/msal-common/browser\";\r\nimport { StandardInteractionClient } from \"./StandardInteractionClient.js\";\r\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest.js\";\r\nimport { BrowserConfiguration } from \"../config/Configuration.js\";\r\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager.js\";\r\nimport { EventHandler } from \"../event/EventHandler.js\";\r\nimport { INavigationClient } from \"../navigation/INavigationClient.js\";\r\nimport {\r\n    createBrowserAuthError,\r\n    BrowserAuthErrorCodes,\r\n} from \"../error/BrowserAuthError.js\";\r\nimport {\r\n    InteractionType,\r\n    ApiId,\r\n    BrowserConstants,\r\n} from \"../utils/BrowserConstants.js\";\r\nimport {\r\n    initiateAuthRequest,\r\n    monitorIframeForHash,\r\n} from \"../interaction_handler/SilentHandler.js\";\r\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest.js\";\r\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler.js\";\r\nimport { NativeInteractionClient } from \"./NativeInteractionClient.js\";\r\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\r\nimport { InteractionHandler } from \"../interaction_handler/InteractionHandler.js\";\r\nimport * as BrowserUtils from \"../utils/BrowserUtils.js\";\r\nimport * as ResponseHandler from \"../response/ResponseHandler.js\";\r\n\r\nexport class SilentIframeClient extends StandardInteractionClient {\r\n    protected apiId: ApiId;\r\n    protected nativeStorage: BrowserCacheManager;\r\n\r\n    constructor(\r\n        config: BrowserConfiguration,\r\n        storageImpl: BrowserCacheManager,\r\n        browserCrypto: ICrypto,\r\n        logger: Logger,\r\n        eventHandler: EventHandler,\r\n        navigationClient: INavigationClient,\r\n        apiId: ApiId,\r\n        performanceClient: IPerformanceClient,\r\n        nativeStorageImpl: BrowserCacheManager,\r\n        nativeMessageHandler?: NativeMessageHandler,\r\n        correlationId?: string\r\n    ) {\r\n        super(\r\n            config,\r\n            storageImpl,\r\n            browserCrypto,\r\n            logger,\r\n            eventHandler,\r\n            navigationClient,\r\n            performanceClient,\r\n            nativeMessageHandler,\r\n            correlationId\r\n        );\r\n        this.apiId = apiId;\r\n        this.nativeStorage = nativeStorageImpl;\r\n    }\r\n\r\n    /**\r\n     * Acquires a token silently by opening a hidden iframe to the /authorize endpoint with prompt=none or prompt=no_session\r\n     * @param request\r\n     */\r\n    async acquireToken(\r\n        request: SsoSilentRequest\r\n    ): Promise<AuthenticationResult> {\r\n        this.performanceClient.addQueueMeasurement(\r\n            PerformanceEvents.SilentIframeClientAcquireToken,\r\n            request.correlationId\r\n        );\r\n        // Check that we have some SSO data\r\n        if (\r\n            !request.loginHint &&\r\n            !request.sid &&\r\n            (!request.account || !request.account.username)\r\n        ) {\r\n            this.logger.warning(\r\n                \"No user hint provided. The authorization server may need more information to complete this request.\"\r\n            );\r\n        }\r\n\r\n        // Check the prompt value\r\n        const inputRequest = { ...request };\r\n        if (inputRequest.prompt) {\r\n            if (\r\n                inputRequest.prompt !== PromptValue.NONE &&\r\n                inputRequest.prompt !== PromptValue.NO_SESSION\r\n            ) {\r\n                this.logger.warning(\r\n                    `SilentIframeClient. Replacing invalid prompt ${inputRequest.prompt} with ${PromptValue.NONE}`\r\n                );\r\n                inputRequest.prompt = PromptValue.NONE;\r\n            }\r\n        } else {\r\n            inputRequest.prompt = PromptValue.NONE;\r\n        }\r\n\r\n        // Create silent request\r\n        const silentRequest: AuthorizationUrlRequest = await invokeAsync(\r\n            this.initializeAuthorizationRequest.bind(this),\r\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\r\n            this.logger,\r\n            this.performanceClient,\r\n            request.correlationId\r\n        )(inputRequest, InteractionType.Silent);\r\n        BrowserUtils.preconnect(silentRequest.authority);\r\n\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\r\n            this.apiId\r\n        );\r\n\r\n        let authClient: AuthorizationCodeClient | undefined;\r\n\r\n        try {\r\n            // Initialize the client\r\n            authClient = await invokeAsync(\r\n                this.createAuthCodeClient.bind(this),\r\n                PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\r\n                this.logger,\r\n                this.performanceClient,\r\n                request.correlationId\r\n            )({\r\n                serverTelemetryManager,\r\n                requestAuthority: silentRequest.authority,\r\n                requestAzureCloudOptions: silentRequest.azureCloudOptions,\r\n                requestExtraQueryParameters: silentRequest.extraQueryParameters,\r\n                account: silentRequest.account,\r\n            });\r\n\r\n            return await invokeAsync(\r\n                this.silentTokenHelper.bind(this),\r\n                PerformanceEvents.SilentIframeClientTokenHelper,\r\n                this.logger,\r\n                this.performanceClient,\r\n                request.correlationId\r\n            )(authClient, silentRequest);\r\n        } catch (e) {\r\n            if (e instanceof AuthError) {\r\n                (e as AuthError).setCorrelationId(this.correlationId);\r\n                serverTelemetryManager.cacheFailedRequest(e);\r\n            }\r\n\r\n            if (\r\n                !authClient ||\r\n                !(e instanceof AuthError) ||\r\n                e.errorCode !== BrowserConstants.INVALID_GRANT_ERROR\r\n            ) {\r\n                throw e;\r\n            }\r\n\r\n            this.performanceClient.addFields(\r\n                {\r\n                    retryError: e.errorCode,\r\n                },\r\n                this.correlationId\r\n            );\r\n\r\n            const retrySilentRequest: AuthorizationUrlRequest =\r\n                await invokeAsync(\r\n                    this.initializeAuthorizationRequest.bind(this),\r\n                    PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\r\n                    this.logger,\r\n                    this.performanceClient,\r\n                    request.correlationId\r\n                )(inputRequest, InteractionType.Silent);\r\n\r\n            return await invokeAsync(\r\n                this.silentTokenHelper.bind(this),\r\n                PerformanceEvents.SilentIframeClientTokenHelper,\r\n                this.logger,\r\n                this.performanceClient,\r\n                this.correlationId\r\n            )(authClient, retrySilentRequest);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Currently Unsupported\r\n     */\r\n    logout(): Promise<void> {\r\n        // Synchronous so we must reject\r\n        return Promise.reject(\r\n            createBrowserAuthError(\r\n                BrowserAuthErrorCodes.silentLogoutUnsupported\r\n            )\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Helper which acquires an authorization code silently using a hidden iframe from given url\r\n     * using the scopes requested as part of the id, and exchanges the code for a set of OAuth tokens.\r\n     * @param navigateUrl\r\n     * @param userRequestScopes\r\n     */\r\n    protected async silentTokenHelper(\r\n        authClient: AuthorizationCodeClient,\r\n        silentRequest: AuthorizationUrlRequest\r\n    ): Promise<AuthenticationResult> {\r\n        const correlationId = silentRequest.correlationId;\r\n        this.performanceClient.addQueueMeasurement(\r\n            PerformanceEvents.SilentIframeClientTokenHelper,\r\n            correlationId\r\n        );\r\n\r\n        // Create auth code request and generate PKCE params\r\n        const authCodeRequest: CommonAuthorizationCodeRequest =\r\n            await invokeAsync(\r\n                this.initializeAuthorizationCodeRequest.bind(this),\r\n                PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest,\r\n                this.logger,\r\n                this.performanceClient,\r\n                correlationId\r\n            )(silentRequest);\r\n\r\n        // Create authorize request url\r\n        const navigateUrl = await invokeAsync(\r\n            authClient.getAuthCodeUrl.bind(authClient),\r\n            PerformanceEvents.GetAuthCodeUrl,\r\n            this.logger,\r\n            this.performanceClient,\r\n            correlationId\r\n        )({\r\n            ...silentRequest,\r\n            platformBroker: NativeMessageHandler.isPlatformBrokerAvailable(\r\n                this.config,\r\n                this.logger,\r\n                this.nativeMessageHandler,\r\n                silentRequest.authenticationScheme\r\n            ),\r\n        });\r\n\r\n        // Create silent handler\r\n        const interactionHandler = new InteractionHandler(\r\n            authClient,\r\n            this.browserStorage,\r\n            authCodeRequest,\r\n            this.logger,\r\n            this.performanceClient\r\n        );\r\n        // Get the frame handle for the silent request\r\n        const msalFrame = await invokeAsync(\r\n            initiateAuthRequest,\r\n            PerformanceEvents.SilentHandlerInitiateAuthRequest,\r\n            this.logger,\r\n            this.performanceClient,\r\n            correlationId\r\n        )(\r\n            navigateUrl,\r\n            this.performanceClient,\r\n            this.logger,\r\n            correlationId,\r\n            this.config.system.navigateFrameWait\r\n        );\r\n        const responseType = this.config.auth.OIDCOptions.serverResponseType;\r\n        // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\r\n        const responseString = await invokeAsync(\r\n            monitorIframeForHash,\r\n            PerformanceEvents.SilentHandlerMonitorIframeForHash,\r\n            this.logger,\r\n            this.performanceClient,\r\n            correlationId\r\n        )(\r\n            msalFrame,\r\n            this.config.system.iframeHashTimeout,\r\n            this.config.system.pollIntervalMilliseconds,\r\n            this.performanceClient,\r\n            this.logger,\r\n            correlationId,\r\n            responseType\r\n        );\r\n        const serverParams = invoke(\r\n            ResponseHandler.deserializeResponse,\r\n            PerformanceEvents.DeserializeResponse,\r\n            this.logger,\r\n            this.performanceClient,\r\n            this.correlationId\r\n        )(responseString, responseType, this.logger);\r\n\r\n        if (serverParams.accountId) {\r\n            this.logger.verbose(\r\n                \"Account id found in hash, calling WAM for token\"\r\n            );\r\n            if (!this.nativeMessageHandler) {\r\n                throw createBrowserAuthError(\r\n                    BrowserAuthErrorCodes.nativeConnectionNotEstablished\r\n                );\r\n            }\r\n            const nativeInteractionClient = new NativeInteractionClient(\r\n                this.config,\r\n                this.browserStorage,\r\n                this.browserCrypto,\r\n                this.logger,\r\n                this.eventHandler,\r\n                this.navigationClient,\r\n                this.apiId,\r\n                this.performanceClient,\r\n                this.nativeMessageHandler,\r\n                serverParams.accountId,\r\n                this.browserStorage,\r\n                correlationId\r\n            );\r\n            const { userRequestState } = ProtocolUtils.parseRequestState(\r\n                this.browserCrypto,\r\n                silentRequest.state\r\n            );\r\n            return invokeAsync(\r\n                nativeInteractionClient.acquireToken.bind(\r\n                    nativeInteractionClient\r\n                ),\r\n                PerformanceEvents.NativeInteractionClientAcquireToken,\r\n                this.logger,\r\n                this.performanceClient,\r\n                correlationId\r\n            )({\r\n                ...silentRequest,\r\n                state: userRequestState,\r\n                prompt: silentRequest.prompt || PromptValue.NONE,\r\n            });\r\n        }\r\n\r\n        // Handle response from hash string\r\n        return invokeAsync(\r\n            interactionHandler.handleCodeResponse.bind(interactionHandler),\r\n            PerformanceEvents.HandleCodeResponse,\r\n            this.logger,\r\n            this.performanceClient,\r\n            correlationId\r\n        )(serverParams, silentRequest);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    ClientConfiguration,\r\n    isOidcProtocolMode,\r\n} from \"../config/ClientConfiguration.js\";\r\nimport { BaseClient } from \"./BaseClient.js\";\r\nimport { CommonRefreshTokenRequest } from \"../request/CommonRefreshTokenRequest.js\";\r\nimport { Authority } from \"../authority/Authority.js\";\r\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse.js\";\r\nimport { RequestParameterBuilder } from \"../request/RequestParameterBuilder.js\";\r\nimport {\r\n    GrantType,\r\n    AuthenticationScheme,\r\n    Errors,\r\n    HeaderNames,\r\n} from \"../utils/Constants.js\";\r\nimport * as AADServerParamKeys from \"../constants/AADServerParamKeys.js\";\r\nimport { ResponseHandler } from \"../response/ResponseHandler.js\";\r\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\r\nimport { PopTokenGenerator } from \"../crypto/PopTokenGenerator.js\";\r\nimport { StringUtils } from \"../utils/StringUtils.js\";\r\nimport { RequestThumbprint } from \"../network/RequestThumbprint.js\";\r\nimport { NetworkResponse } from \"../network/NetworkResponse.js\";\r\nimport { CommonSilentFlowRequest } from \"../request/CommonSilentFlowRequest.js\";\r\nimport {\r\n    createClientConfigurationError,\r\n    ClientConfigurationErrorCodes,\r\n} from \"../error/ClientConfigurationError.js\";\r\nimport {\r\n    createClientAuthError,\r\n    ClientAuthErrorCodes,\r\n} from \"../error/ClientAuthError.js\";\r\nimport { ServerError } from \"../error/ServerError.js\";\r\nimport * as TimeUtils from \"../utils/TimeUtils.js\";\r\nimport { UrlString } from \"../url/UrlString.js\";\r\nimport { CcsCredentialType } from \"../account/CcsCredential.js\";\r\nimport { buildClientInfoFromHomeAccountId } from \"../account/ClientInfo.js\";\r\nimport {\r\n    InteractionRequiredAuthError,\r\n    InteractionRequiredAuthErrorCodes,\r\n    createInteractionRequiredAuthError,\r\n} from \"../error/InteractionRequiredAuthError.js\";\r\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent.js\";\r\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient.js\";\r\nimport { invoke, invokeAsync } from \"../utils/FunctionWrappers.js\";\r\nimport { generateCredentialKey } from \"../cache/utils/CacheHelpers.js\";\r\nimport { ClientAssertion } from \"../account/ClientCredentials.js\";\r\nimport { getClientAssertion } from \"../utils/ClientAssertionUtils.js\";\r\n\r\nconst DEFAULT_REFRESH_TOKEN_EXPIRATION_OFFSET_SECONDS = 300; // 5 Minutes\r\n\r\n/**\r\n * OAuth2.0 refresh token client\r\n * @internal\r\n */\r\nexport class RefreshTokenClient extends BaseClient {\r\n    constructor(\r\n        configuration: ClientConfiguration,\r\n        performanceClient?: IPerformanceClient\r\n    ) {\r\n        super(configuration, performanceClient);\r\n    }\r\n    public async acquireToken(\r\n        request: CommonRefreshTokenRequest\r\n    ): Promise<AuthenticationResult> {\r\n        this.performanceClient?.addQueueMeasurement(\r\n            PerformanceEvents.RefreshTokenClientAcquireToken,\r\n            request.correlationId\r\n        );\r\n\r\n        const reqTimestamp = TimeUtils.nowSeconds();\r\n        const response = await invokeAsync(\r\n            this.executeTokenRequest.bind(this),\r\n            PerformanceEvents.RefreshTokenClientExecuteTokenRequest,\r\n            this.logger,\r\n            this.performanceClient,\r\n            request.correlationId\r\n        )(request, this.authority);\r\n\r\n        // Retrieve requestId from response headers\r\n        const requestId = response.headers?.[HeaderNames.X_MS_REQUEST_ID];\r\n        const responseHandler = new ResponseHandler(\r\n            this.config.authOptions.clientId,\r\n            this.cacheManager,\r\n            this.cryptoUtils,\r\n            this.logger,\r\n            this.config.serializableCache,\r\n            this.config.persistencePlugin\r\n        );\r\n        responseHandler.validateTokenResponse(response.body);\r\n\r\n        return invokeAsync(\r\n            responseHandler.handleServerTokenResponse.bind(responseHandler),\r\n            PerformanceEvents.HandleServerTokenResponse,\r\n            this.logger,\r\n            this.performanceClient,\r\n            request.correlationId\r\n        )(\r\n            response.body,\r\n            this.authority,\r\n            reqTimestamp,\r\n            request,\r\n            undefined,\r\n            undefined,\r\n            true,\r\n            request.forceCache,\r\n            requestId\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Gets cached refresh token and attaches to request, then calls acquireToken API\r\n     * @param request\r\n     */\r\n    public async acquireTokenByRefreshToken(\r\n        request: CommonSilentFlowRequest\r\n    ): Promise<AuthenticationResult> {\r\n        // Cannot renew token if no request object is given.\r\n        if (!request) {\r\n            throw createClientConfigurationError(\r\n                ClientConfigurationErrorCodes.tokenRequestEmpty\r\n            );\r\n        }\r\n\r\n        this.performanceClient?.addQueueMeasurement(\r\n            PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken,\r\n            request.correlationId\r\n        );\r\n\r\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\r\n        if (!request.account) {\r\n            throw createClientAuthError(\r\n                ClientAuthErrorCodes.noAccountInSilentRequest\r\n            );\r\n        }\r\n\r\n        // try checking if FOCI is enabled for the given application\r\n        const isFOCI = this.cacheManager.isAppMetadataFOCI(\r\n            request.account.environment\r\n        );\r\n\r\n        // if the app is part of the family, retrive a Family refresh token if present and make a refreshTokenRequest\r\n        if (isFOCI) {\r\n            try {\r\n                return await invokeAsync(\r\n                    this.acquireTokenWithCachedRefreshToken.bind(this),\r\n                    PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,\r\n                    this.logger,\r\n                    this.performanceClient,\r\n                    request.correlationId\r\n                )(request, true);\r\n            } catch (e) {\r\n                const noFamilyRTInCache =\r\n                    e instanceof InteractionRequiredAuthError &&\r\n                    e.errorCode ===\r\n                        InteractionRequiredAuthErrorCodes.noTokensFound;\r\n                const clientMismatchErrorWithFamilyRT =\r\n                    e instanceof ServerError &&\r\n                    e.errorCode === Errors.INVALID_GRANT_ERROR &&\r\n                    e.subError === Errors.CLIENT_MISMATCH_ERROR;\r\n\r\n                // if family Refresh Token (FRT) cache acquisition fails or if client_mismatch error is seen with FRT, reattempt with application Refresh Token (ART)\r\n                if (noFamilyRTInCache || clientMismatchErrorWithFamilyRT) {\r\n                    return invokeAsync(\r\n                        this.acquireTokenWithCachedRefreshToken.bind(this),\r\n                        PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,\r\n                        this.logger,\r\n                        this.performanceClient,\r\n                        request.correlationId\r\n                    )(request, false);\r\n                    // throw in all other cases\r\n                } else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        // fall back to application refresh token acquisition\r\n        return invokeAsync(\r\n            this.acquireTokenWithCachedRefreshToken.bind(this),\r\n            PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,\r\n            this.logger,\r\n            this.performanceClient,\r\n            request.correlationId\r\n        )(request, false);\r\n    }\r\n\r\n    /**\r\n     * makes a network call to acquire tokens by exchanging RefreshToken available in userCache; throws if refresh token is not cached\r\n     * @param request\r\n     */\r\n    private async acquireTokenWithCachedRefreshToken(\r\n        request: CommonSilentFlowRequest,\r\n        foci: boolean\r\n    ) {\r\n        this.performanceClient?.addQueueMeasurement(\r\n            PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,\r\n            request.correlationId\r\n        );\r\n\r\n        // fetches family RT or application RT based on FOCI value\r\n        const refreshToken = invoke(\r\n            this.cacheManager.getRefreshToken.bind(this.cacheManager),\r\n            PerformanceEvents.CacheManagerGetRefreshToken,\r\n            this.logger,\r\n            this.performanceClient,\r\n            request.correlationId\r\n        )(\r\n            request.account,\r\n            foci,\r\n            undefined,\r\n            this.performanceClient,\r\n            request.correlationId\r\n        );\r\n\r\n        if (!refreshToken) {\r\n            throw createInteractionRequiredAuthError(\r\n                InteractionRequiredAuthErrorCodes.noTokensFound\r\n            );\r\n        }\r\n\r\n        if (\r\n            refreshToken.expiresOn &&\r\n            TimeUtils.isTokenExpired(\r\n                refreshToken.expiresOn,\r\n                request.refreshTokenExpirationOffsetSeconds ||\r\n                    DEFAULT_REFRESH_TOKEN_EXPIRATION_OFFSET_SECONDS\r\n            )\r\n        ) {\r\n            this.performanceClient?.addFields(\r\n                { rtExpiresOnMs: Number(refreshToken.expiresOn) },\r\n                request.correlationId\r\n            );\r\n            throw createInteractionRequiredAuthError(\r\n                InteractionRequiredAuthErrorCodes.refreshTokenExpired\r\n            );\r\n        }\r\n        // attach cached RT size to the current measurement\r\n\r\n        const refreshTokenRequest: CommonRefreshTokenRequest = {\r\n            ...request,\r\n            refreshToken: refreshToken.secret,\r\n            authenticationScheme:\r\n                request.authenticationScheme || AuthenticationScheme.BEARER,\r\n            ccsCredential: {\r\n                credential: request.account.homeAccountId,\r\n                type: CcsCredentialType.HOME_ACCOUNT_ID,\r\n            },\r\n        };\r\n\r\n        try {\r\n            return await invokeAsync(\r\n                this.acquireToken.bind(this),\r\n                PerformanceEvents.RefreshTokenClientAcquireToken,\r\n                this.logger,\r\n                this.performanceClient,\r\n                request.correlationId\r\n            )(refreshTokenRequest);\r\n        } catch (e) {\r\n            if (e instanceof InteractionRequiredAuthError) {\r\n                this.performanceClient?.addFields(\r\n                    { rtExpiresOnMs: Number(refreshToken.expiresOn) },\r\n                    request.correlationId\r\n                );\r\n\r\n                if (e.subError === InteractionRequiredAuthErrorCodes.badToken) {\r\n                    // Remove bad refresh token from cache\r\n                    this.logger.verbose(\r\n                        \"acquireTokenWithRefreshToken: bad refresh token, removing from cache\"\r\n                    );\r\n                    const badRefreshTokenKey =\r\n                        generateCredentialKey(refreshToken);\r\n                    this.cacheManager.removeRefreshToken(badRefreshTokenKey);\r\n                }\r\n            }\r\n\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Constructs the network message and makes a NW call to the underlying secure token service\r\n     * @param request\r\n     * @param authority\r\n     */\r\n    private async executeTokenRequest(\r\n        request: CommonRefreshTokenRequest,\r\n        authority: Authority\r\n    ): Promise<NetworkResponse<ServerAuthorizationTokenResponse>> {\r\n        this.performanceClient?.addQueueMeasurement(\r\n            PerformanceEvents.RefreshTokenClientExecuteTokenRequest,\r\n            request.correlationId\r\n        );\r\n\r\n        const queryParametersString = this.createTokenQueryParameters(request);\r\n        const endpoint = UrlString.appendQueryString(\r\n            authority.tokenEndpoint,\r\n            queryParametersString\r\n        );\r\n\r\n        const requestBody = await invokeAsync(\r\n            this.createTokenRequestBody.bind(this),\r\n            PerformanceEvents.RefreshTokenClientCreateTokenRequestBody,\r\n            this.logger,\r\n            this.performanceClient,\r\n            request.correlationId\r\n        )(request);\r\n        const headers: Record<string, string> = this.createTokenRequestHeaders(\r\n            request.ccsCredential\r\n        );\r\n        const thumbprint: RequestThumbprint = {\r\n            clientId:\r\n                request.tokenBodyParameters?.clientId ||\r\n                this.config.authOptions.clientId,\r\n            authority: authority.canonicalAuthority,\r\n            scopes: request.scopes,\r\n            claims: request.claims,\r\n            authenticationScheme: request.authenticationScheme,\r\n            resourceRequestMethod: request.resourceRequestMethod,\r\n            resourceRequestUri: request.resourceRequestUri,\r\n            shrClaims: request.shrClaims,\r\n            sshKid: request.sshKid,\r\n        };\r\n\r\n        return invokeAsync(\r\n            this.executePostToTokenEndpoint.bind(this),\r\n            PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint,\r\n            this.logger,\r\n            this.performanceClient,\r\n            request.correlationId\r\n        )(\r\n            endpoint,\r\n            requestBody,\r\n            headers,\r\n            thumbprint,\r\n            request.correlationId,\r\n            PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Helper function to create the token request body\r\n     * @param request\r\n     */\r\n    private async createTokenRequestBody(\r\n        request: CommonRefreshTokenRequest\r\n    ): Promise<string> {\r\n        this.performanceClient?.addQueueMeasurement(\r\n            PerformanceEvents.RefreshTokenClientCreateTokenRequestBody,\r\n            request.correlationId\r\n        );\r\n\r\n        const correlationId = request.correlationId;\r\n        const parameterBuilder = new RequestParameterBuilder(\r\n            correlationId,\r\n            this.performanceClient\r\n        );\r\n\r\n        parameterBuilder.addClientId(\r\n            request.embeddedClientId ||\r\n                request.tokenBodyParameters?.[AADServerParamKeys.CLIENT_ID] ||\r\n                this.config.authOptions.clientId\r\n        );\r\n\r\n        if (request.redirectUri) {\r\n            parameterBuilder.addRedirectUri(request.redirectUri);\r\n        }\r\n\r\n        parameterBuilder.addScopes(\r\n            request.scopes,\r\n            true,\r\n            this.config.authOptions.authority.options.OIDCOptions?.defaultScopes\r\n        );\r\n\r\n        parameterBuilder.addGrantType(GrantType.REFRESH_TOKEN_GRANT);\r\n\r\n        parameterBuilder.addClientInfo();\r\n\r\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\r\n        parameterBuilder.addApplicationTelemetry(\r\n            this.config.telemetry.application\r\n        );\r\n        parameterBuilder.addThrottling();\r\n\r\n        if (this.serverTelemetryManager && !isOidcProtocolMode(this.config)) {\r\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\r\n        }\r\n\r\n        parameterBuilder.addRefreshToken(request.refreshToken);\r\n\r\n        if (this.config.clientCredentials.clientSecret) {\r\n            parameterBuilder.addClientSecret(\r\n                this.config.clientCredentials.clientSecret\r\n            );\r\n        }\r\n\r\n        if (this.config.clientCredentials.clientAssertion) {\r\n            const clientAssertion: ClientAssertion =\r\n                this.config.clientCredentials.clientAssertion;\r\n\r\n            parameterBuilder.addClientAssertion(\r\n                await getClientAssertion(\r\n                    clientAssertion.assertion,\r\n                    this.config.authOptions.clientId,\r\n                    request.resourceRequestUri\r\n                )\r\n            );\r\n            parameterBuilder.addClientAssertionType(\r\n                clientAssertion.assertionType\r\n            );\r\n        }\r\n\r\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\r\n            const popTokenGenerator = new PopTokenGenerator(\r\n                this.cryptoUtils,\r\n                this.performanceClient\r\n            );\r\n\r\n            let reqCnfData;\r\n            if (!request.popKid) {\r\n                const generatedReqCnfData = await invokeAsync(\r\n                    popTokenGenerator.generateCnf.bind(popTokenGenerator),\r\n                    PerformanceEvents.PopTokenGenerateCnf,\r\n                    this.logger,\r\n                    this.performanceClient,\r\n                    request.correlationId\r\n                )(request, this.logger);\r\n\r\n                reqCnfData = generatedReqCnfData.reqCnfString;\r\n            } else {\r\n                reqCnfData = this.cryptoUtils.encodeKid(request.popKid);\r\n            }\r\n\r\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\r\n            parameterBuilder.addPopToken(reqCnfData);\r\n        } else if (request.authenticationScheme === AuthenticationScheme.SSH) {\r\n            if (request.sshJwk) {\r\n                parameterBuilder.addSshJwk(request.sshJwk);\r\n            } else {\r\n                throw createClientConfigurationError(\r\n                    ClientConfigurationErrorCodes.missingSshJwk\r\n                );\r\n            }\r\n        }\r\n\r\n        if (\r\n            !StringUtils.isEmptyObj(request.claims) ||\r\n            (this.config.authOptions.clientCapabilities &&\r\n                this.config.authOptions.clientCapabilities.length > 0)\r\n        ) {\r\n            parameterBuilder.addClaims(\r\n                request.claims,\r\n                this.config.authOptions.clientCapabilities\r\n            );\r\n        }\r\n\r\n        if (\r\n            this.config.systemOptions.preventCorsPreflight &&\r\n            request.ccsCredential\r\n        ) {\r\n            switch (request.ccsCredential.type) {\r\n                case CcsCredentialType.HOME_ACCOUNT_ID:\r\n                    try {\r\n                        const clientInfo = buildClientInfoFromHomeAccountId(\r\n                            request.ccsCredential.credential\r\n                        );\r\n                        parameterBuilder.addCcsOid(clientInfo);\r\n                    } catch (e) {\r\n                        this.logger.verbose(\r\n                            \"Could not parse home account ID for CCS Header: \" +\r\n                                e\r\n                        );\r\n                    }\r\n                    break;\r\n                case CcsCredentialType.UPN:\r\n                    parameterBuilder.addCcsUpn(\r\n                        request.ccsCredential.credential\r\n                    );\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if (request.embeddedClientId) {\r\n            parameterBuilder.addBrokerParameters({\r\n                brokerClientId: this.config.authOptions.clientId,\r\n                brokerRedirectUri: this.config.authOptions.redirectUri,\r\n            });\r\n        }\r\n\r\n        if (request.tokenBodyParameters) {\r\n            parameterBuilder.addExtraQueryParameters(\r\n                request.tokenBodyParameters\r\n            );\r\n        }\r\n\r\n        return parameterBuilder.createQueryString();\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { StandardInteractionClient } from \"./StandardInteractionClient.js\";\r\nimport {\r\n    CommonSilentFlowRequest,\r\n    ServerTelemetryManager,\r\n    RefreshTokenClient,\r\n    AuthError,\r\n    AzureCloudOptions,\r\n    PerformanceEvents,\r\n    invokeAsync,\r\n    AccountInfo,\r\n    StringDict,\r\n} from \"@azure/msal-common/browser\";\r\nimport { ApiId } from \"../utils/BrowserConstants.js\";\r\nimport {\r\n    createBrowserAuthError,\r\n    BrowserAuthErrorCodes,\r\n} from \"../error/BrowserAuthError.js\";\r\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\r\nimport { initializeBaseRequest } from \"../request/RequestHelpers.js\";\r\n\r\nexport class SilentRefreshClient extends StandardInteractionClient {\r\n    /**\r\n     * Exchanges the refresh token for new tokens\r\n     * @param request\r\n     */\r\n    async acquireToken(\r\n        request: CommonSilentFlowRequest\r\n    ): Promise<AuthenticationResult> {\r\n        this.performanceClient.addQueueMeasurement(\r\n            PerformanceEvents.SilentRefreshClientAcquireToken,\r\n            request.correlationId\r\n        );\r\n\r\n        const baseRequest = await invokeAsync(\r\n            initializeBaseRequest,\r\n            PerformanceEvents.InitializeBaseRequest,\r\n            this.logger,\r\n            this.performanceClient,\r\n            request.correlationId\r\n        )(request, this.config, this.performanceClient, this.logger);\r\n        const silentRequest: CommonSilentFlowRequest = {\r\n            ...request,\r\n            ...baseRequest,\r\n        };\r\n\r\n        if (request.redirectUri) {\r\n            // Make sure any passed redirectUri is converted to an absolute URL - redirectUri is not a required parameter for refresh token redemption so only include if explicitly provided\r\n            silentRequest.redirectUri = this.getRedirectUri(\r\n                request.redirectUri\r\n            );\r\n        }\r\n\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\r\n            ApiId.acquireTokenSilent_silentFlow\r\n        );\r\n\r\n        const refreshTokenClient = await this.createRefreshTokenClient({\r\n            serverTelemetryManager,\r\n            authorityUrl: silentRequest.authority,\r\n            azureCloudOptions: silentRequest.azureCloudOptions,\r\n            account: silentRequest.account,\r\n        });\r\n        // Send request to renew token. Auth module will throw errors if token cannot be renewed.\r\n        return invokeAsync(\r\n            refreshTokenClient.acquireTokenByRefreshToken.bind(\r\n                refreshTokenClient\r\n            ),\r\n            PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken,\r\n            this.logger,\r\n            this.performanceClient,\r\n            request.correlationId\r\n        )(silentRequest).catch((e: AuthError) => {\r\n            (e as AuthError).setCorrelationId(this.correlationId);\r\n            serverTelemetryManager.cacheFailedRequest(e);\r\n            throw e;\r\n        }) as Promise<AuthenticationResult>;\r\n    }\r\n\r\n    /**\r\n     * Currently Unsupported\r\n     */\r\n    logout(): Promise<void> {\r\n        // Synchronous so we must reject\r\n        return Promise.reject(\r\n            createBrowserAuthError(\r\n                BrowserAuthErrorCodes.silentLogoutUnsupported\r\n            )\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Creates a Refresh Client with the given authority, or the default authority.\r\n     * @param params {\r\n     *         serverTelemetryManager: ServerTelemetryManager;\r\n     *         authorityUrl?: string;\r\n     *         azureCloudOptions?: AzureCloudOptions;\r\n     *         extraQueryParams?: StringDict;\r\n     *         account?: AccountInfo;\r\n     *        }\r\n     */\r\n    protected async createRefreshTokenClient(params: {\r\n        serverTelemetryManager: ServerTelemetryManager;\r\n        authorityUrl?: string;\r\n        azureCloudOptions?: AzureCloudOptions;\r\n        extraQueryParameters?: StringDict;\r\n        account?: AccountInfo;\r\n    }): Promise<RefreshTokenClient> {\r\n        // Create auth module.\r\n        const clientConfig = await invokeAsync(\r\n            this.getClientConfiguration.bind(this),\r\n            PerformanceEvents.StandardInteractionClientGetClientConfiguration,\r\n            this.logger,\r\n            this.performanceClient,\r\n            this.correlationId\r\n        )({\r\n            serverTelemetryManager: params.serverTelemetryManager,\r\n            requestAuthority: params.authorityUrl,\r\n            requestAzureCloudOptions: params.azureCloudOptions,\r\n            requestExtraQueryParameters: params.extraQueryParameters,\r\n            account: params.account,\r\n        });\r\n        return new RefreshTokenClient(clientConfig, this.performanceClient);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    AccessTokenEntity,\r\n    ICrypto,\r\n    IdTokenEntity,\r\n    Logger,\r\n    ScopeSet,\r\n    Authority,\r\n    AuthorityOptions,\r\n    ExternalTokenResponse,\r\n    AccountEntity,\r\n    AuthToken,\r\n    RefreshTokenEntity,\r\n    CacheRecord,\r\n    TokenClaims,\r\n    CacheHelpers,\r\n    buildAccountToCache,\r\n} from \"@azure/msal-common/browser\";\r\nimport { BrowserConfiguration } from \"../config/Configuration.js\";\r\nimport { SilentRequest } from \"../request/SilentRequest.js\";\r\nimport { BrowserCacheManager } from \"./BrowserCacheManager.js\";\r\nimport { ITokenCache } from \"./ITokenCache.js\";\r\nimport {\r\n    createBrowserAuthError,\r\n    BrowserAuthErrorCodes,\r\n} from \"../error/BrowserAuthError.js\";\r\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\r\nimport { base64Decode } from \"../encode/Base64Decode.js\";\r\nimport * as BrowserCrypto from \"../crypto/BrowserCrypto.js\";\r\n\r\nexport type LoadTokenOptions = {\r\n    clientInfo?: string;\r\n    expiresOn?: number;\r\n    extendedExpiresOn?: number;\r\n};\r\n\r\n/**\r\n * Token cache manager\r\n */\r\nexport class TokenCache implements ITokenCache {\r\n    // Flag to indicate if in browser environment\r\n    public isBrowserEnvironment: boolean;\r\n    // Input configuration by developer/user\r\n    protected config: BrowserConfiguration;\r\n    // Browser cache storage\r\n    private storage: BrowserCacheManager;\r\n    // Logger\r\n    private logger: Logger;\r\n    // Crypto class\r\n    private cryptoObj: ICrypto;\r\n\r\n    constructor(\r\n        configuration: BrowserConfiguration,\r\n        storage: BrowserCacheManager,\r\n        logger: Logger,\r\n        cryptoObj: ICrypto\r\n    ) {\r\n        this.isBrowserEnvironment = typeof window !== \"undefined\";\r\n        this.config = configuration;\r\n        this.storage = storage;\r\n        this.logger = logger;\r\n        this.cryptoObj = cryptoObj;\r\n    }\r\n\r\n    // Move getAllAccounts here and cache utility APIs\r\n\r\n    /**\r\n     * API to load tokens to msal-browser cache.\r\n     * @param request\r\n     * @param response\r\n     * @param options\r\n     * @returns `AuthenticationResult` for the response that was loaded.\r\n     */\r\n    async loadExternalTokens(\r\n        request: SilentRequest,\r\n        response: ExternalTokenResponse,\r\n        options: LoadTokenOptions\r\n    ): Promise<AuthenticationResult> {\r\n        if (!this.isBrowserEnvironment) {\r\n            throw createBrowserAuthError(\r\n                BrowserAuthErrorCodes.nonBrowserEnvironment\r\n            );\r\n        }\r\n\r\n        const correlationId =\r\n            request.correlationId || BrowserCrypto.createNewGuid();\r\n\r\n        const idTokenClaims = response.id_token\r\n            ? AuthToken.extractTokenClaims(response.id_token, base64Decode)\r\n            : undefined;\r\n\r\n        const authorityOptions: AuthorityOptions = {\r\n            protocolMode: this.config.auth.protocolMode,\r\n            knownAuthorities: this.config.auth.knownAuthorities,\r\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\r\n            authorityMetadata: this.config.auth.authorityMetadata,\r\n            skipAuthorityMetadataCache:\r\n                this.config.auth.skipAuthorityMetadataCache,\r\n        };\r\n        const authority = request.authority\r\n            ? new Authority(\r\n                  Authority.generateAuthority(\r\n                      request.authority,\r\n                      request.azureCloudOptions\r\n                  ),\r\n                  this.config.system.networkClient,\r\n                  this.storage,\r\n                  authorityOptions,\r\n                  this.logger,\r\n                  request.correlationId || BrowserCrypto.createNewGuid()\r\n              )\r\n            : undefined;\r\n\r\n        const cacheRecordAccount: AccountEntity = await this.loadAccount(\r\n            request,\r\n            options.clientInfo || response.client_info || \"\",\r\n            correlationId,\r\n            idTokenClaims,\r\n            authority\r\n        );\r\n\r\n        const idToken = await this.loadIdToken(\r\n            response,\r\n            cacheRecordAccount.homeAccountId,\r\n            cacheRecordAccount.environment,\r\n            cacheRecordAccount.realm,\r\n            correlationId\r\n        );\r\n\r\n        const accessToken = await this.loadAccessToken(\r\n            request,\r\n            response,\r\n            cacheRecordAccount.homeAccountId,\r\n            cacheRecordAccount.environment,\r\n            cacheRecordAccount.realm,\r\n            options,\r\n            correlationId\r\n        );\r\n\r\n        const refreshToken = await this.loadRefreshToken(\r\n            response,\r\n            cacheRecordAccount.homeAccountId,\r\n            cacheRecordAccount.environment,\r\n            correlationId\r\n        );\r\n\r\n        return this.generateAuthenticationResult(\r\n            request,\r\n            {\r\n                account: cacheRecordAccount,\r\n                idToken,\r\n                accessToken,\r\n                refreshToken,\r\n            },\r\n            idTokenClaims,\r\n            authority\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Helper function to load account to msal-browser cache\r\n     * @param idToken\r\n     * @param environment\r\n     * @param clientInfo\r\n     * @param authorityType\r\n     * @param requestHomeAccountId\r\n     * @returns `AccountEntity`\r\n     */\r\n    private async loadAccount(\r\n        request: SilentRequest,\r\n        clientInfo: string,\r\n        correlationId: string,\r\n        idTokenClaims?: TokenClaims,\r\n        authority?: Authority\r\n    ): Promise<AccountEntity> {\r\n        this.logger.verbose(\"TokenCache - loading account\");\r\n\r\n        if (request.account) {\r\n            const accountEntity = AccountEntity.createFromAccountInfo(\r\n                request.account\r\n            );\r\n            await this.storage.setAccount(accountEntity, correlationId);\r\n            return accountEntity;\r\n        } else if (!authority || (!clientInfo && !idTokenClaims)) {\r\n            this.logger.error(\r\n                \"TokenCache - if an account is not provided on the request, authority and either clientInfo or idToken must be provided instead.\"\r\n            );\r\n            throw createBrowserAuthError(\r\n                BrowserAuthErrorCodes.unableToLoadToken\r\n            );\r\n        }\r\n\r\n        const homeAccountId = AccountEntity.generateHomeAccountId(\r\n            clientInfo,\r\n            authority.authorityType,\r\n            this.logger,\r\n            this.cryptoObj,\r\n            idTokenClaims\r\n        );\r\n\r\n        const claimsTenantId = idTokenClaims?.tid;\r\n\r\n        const cachedAccount = buildAccountToCache(\r\n            this.storage,\r\n            authority,\r\n            homeAccountId,\r\n            base64Decode,\r\n            idTokenClaims,\r\n            clientInfo,\r\n            authority.hostnameAndPort,\r\n            claimsTenantId,\r\n            undefined, // authCodePayload\r\n            undefined, // nativeAccountId\r\n            this.logger\r\n        );\r\n\r\n        await this.storage.setAccount(cachedAccount, correlationId);\r\n        return cachedAccount;\r\n    }\r\n\r\n    /**\r\n     * Helper function to load id tokens to msal-browser cache\r\n     * @param idToken\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param tenantId\r\n     * @returns `IdTokenEntity`\r\n     */\r\n    private async loadIdToken(\r\n        response: ExternalTokenResponse,\r\n        homeAccountId: string,\r\n        environment: string,\r\n        tenantId: string,\r\n        correlationId: string\r\n    ): Promise<IdTokenEntity | null> {\r\n        if (!response.id_token) {\r\n            this.logger.verbose(\"TokenCache - no id token found in response\");\r\n            return null;\r\n        }\r\n\r\n        this.logger.verbose(\"TokenCache - loading id token\");\r\n        const idTokenEntity = CacheHelpers.createIdTokenEntity(\r\n            homeAccountId,\r\n            environment,\r\n            response.id_token,\r\n            this.config.auth.clientId,\r\n            tenantId\r\n        );\r\n\r\n        await this.storage.setIdTokenCredential(idTokenEntity, correlationId);\r\n        return idTokenEntity;\r\n    }\r\n\r\n    /**\r\n     * Helper function to load access tokens to msal-browser cache\r\n     * @param request\r\n     * @param response\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param tenantId\r\n     * @returns `AccessTokenEntity`\r\n     */\r\n    private async loadAccessToken(\r\n        request: SilentRequest,\r\n        response: ExternalTokenResponse,\r\n        homeAccountId: string,\r\n        environment: string,\r\n        tenantId: string,\r\n        options: LoadTokenOptions,\r\n        correlationId: string\r\n    ): Promise<AccessTokenEntity | null> {\r\n        if (!response.access_token) {\r\n            this.logger.verbose(\r\n                \"TokenCache - no access token found in response\"\r\n            );\r\n            return null;\r\n        } else if (!response.expires_in) {\r\n            this.logger.error(\r\n                \"TokenCache - no expiration set on the access token. Cannot add it to the cache.\"\r\n            );\r\n            return null;\r\n        } else if (\r\n            !response.scope &&\r\n            (!request.scopes || !request.scopes.length)\r\n        ) {\r\n            this.logger.error(\r\n                \"TokenCache - scopes not specified in the request or response. Cannot add token to the cache.\"\r\n            );\r\n            return null;\r\n        }\r\n\r\n        this.logger.verbose(\"TokenCache - loading access token\");\r\n\r\n        const scopes = response.scope\r\n            ? ScopeSet.fromString(response.scope)\r\n            : new ScopeSet(request.scopes);\r\n        const expiresOn =\r\n            options.expiresOn ||\r\n            response.expires_in + new Date().getTime() / 1000;\r\n\r\n        const extendedExpiresOn =\r\n            options.extendedExpiresOn ||\r\n            (response.ext_expires_in || response.expires_in) +\r\n                new Date().getTime() / 1000;\r\n\r\n        const accessTokenEntity = CacheHelpers.createAccessTokenEntity(\r\n            homeAccountId,\r\n            environment,\r\n            response.access_token,\r\n            this.config.auth.clientId,\r\n            tenantId,\r\n            scopes.printScopes(),\r\n            expiresOn,\r\n            extendedExpiresOn,\r\n            base64Decode\r\n        );\r\n\r\n        await this.storage.setAccessTokenCredential(\r\n            accessTokenEntity,\r\n            correlationId\r\n        );\r\n        return accessTokenEntity;\r\n    }\r\n\r\n    /**\r\n     * Helper function to load refresh tokens to msal-browser cache\r\n     * @param request\r\n     * @param response\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @returns `RefreshTokenEntity`\r\n     */\r\n    private async loadRefreshToken(\r\n        response: ExternalTokenResponse,\r\n        homeAccountId: string,\r\n        environment: string,\r\n        correlationId: string\r\n    ): Promise<RefreshTokenEntity | null> {\r\n        if (!response.refresh_token) {\r\n            this.logger.verbose(\r\n                \"TokenCache - no refresh token found in response\"\r\n            );\r\n            return null;\r\n        }\r\n\r\n        this.logger.verbose(\"TokenCache - loading refresh token\");\r\n        const refreshTokenEntity = CacheHelpers.createRefreshTokenEntity(\r\n            homeAccountId,\r\n            environment,\r\n            response.refresh_token,\r\n            this.config.auth.clientId,\r\n            response.foci,\r\n            undefined, // userAssertionHash\r\n            response.refresh_token_expires_in\r\n        );\r\n\r\n        await this.storage.setRefreshTokenCredential(\r\n            refreshTokenEntity,\r\n            correlationId\r\n        );\r\n        return refreshTokenEntity;\r\n    }\r\n\r\n    /**\r\n     * Helper function to generate an `AuthenticationResult` for the result.\r\n     * @param request\r\n     * @param idTokenObj\r\n     * @param cacheRecord\r\n     * @param authority\r\n     * @returns `AuthenticationResult`\r\n     */\r\n    private generateAuthenticationResult(\r\n        request: SilentRequest,\r\n        cacheRecord: CacheRecord & { account: AccountEntity },\r\n        idTokenClaims?: TokenClaims,\r\n        authority?: Authority\r\n    ): AuthenticationResult {\r\n        let accessToken: string = \"\";\r\n        let responseScopes: Array<string> = [];\r\n        let expiresOn: Date | null = null;\r\n        let extExpiresOn: Date | undefined;\r\n\r\n        if (cacheRecord?.accessToken) {\r\n            accessToken = cacheRecord.accessToken.secret;\r\n            responseScopes = ScopeSet.fromString(\r\n                cacheRecord.accessToken.target\r\n            ).asArray();\r\n            expiresOn = new Date(\r\n                Number(cacheRecord.accessToken.expiresOn) * 1000\r\n            );\r\n            extExpiresOn = new Date(\r\n                Number(cacheRecord.accessToken.extendedExpiresOn) * 1000\r\n            );\r\n        }\r\n\r\n        const accountEntity = cacheRecord.account;\r\n\r\n        return {\r\n            authority: authority ? authority.canonicalAuthority : \"\",\r\n            uniqueId: cacheRecord.account.localAccountId,\r\n            tenantId: cacheRecord.account.realm,\r\n            scopes: responseScopes,\r\n            account: accountEntity.getAccountInfo(),\r\n            idToken: cacheRecord.idToken?.secret || \"\",\r\n            idTokenClaims: idTokenClaims || {},\r\n            accessToken: accessToken,\r\n            fromCache: true,\r\n            expiresOn: expiresOn,\r\n            correlationId: request.correlationId || \"\",\r\n            requestId: \"\",\r\n            extExpiresOn: extExpiresOn,\r\n            familyId: cacheRecord.refreshToken?.familyId || \"\",\r\n            tokenType: cacheRecord?.accessToken?.tokenType || \"\",\r\n            state: request.state || \"\",\r\n            cloudGraphHostName: accountEntity.cloudGraphHostName || \"\",\r\n            msGraphHost: accountEntity.msGraphHost || \"\",\r\n            fromNativeBroker: false,\r\n        };\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    AuthorizationCodeClient,\r\n    ClientConfiguration,\r\n} from \"@azure/msal-common/browser\";\r\n\r\nexport class HybridSpaAuthorizationCodeClient extends AuthorizationCodeClient {\r\n    constructor(config: ClientConfiguration) {\r\n        super(config);\r\n        this.includeRedirectUri = false;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    ICrypto,\r\n    Logger,\r\n    CommonAuthorizationCodeRequest,\r\n    AuthError,\r\n    IPerformanceClient,\r\n    PerformanceEvents,\r\n    invokeAsync,\r\n} from \"@azure/msal-common/browser\";\r\nimport { StandardInteractionClient } from \"./StandardInteractionClient.js\";\r\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest.js\";\r\nimport { BrowserConfiguration } from \"../config/Configuration.js\";\r\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager.js\";\r\nimport { EventHandler } from \"../event/EventHandler.js\";\r\nimport { INavigationClient } from \"../navigation/INavigationClient.js\";\r\nimport {\r\n    createBrowserAuthError,\r\n    BrowserAuthErrorCodes,\r\n} from \"../error/BrowserAuthError.js\";\r\nimport { InteractionType, ApiId } from \"../utils/BrowserConstants.js\";\r\nimport { AuthorizationCodeRequest } from \"../request/AuthorizationCodeRequest.js\";\r\nimport { HybridSpaAuthorizationCodeClient } from \"./HybridSpaAuthorizationCodeClient.js\";\r\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler.js\";\r\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\r\nimport { InteractionHandler } from \"../interaction_handler/InteractionHandler.js\";\r\n\r\nexport class SilentAuthCodeClient extends StandardInteractionClient {\r\n    private apiId: ApiId;\r\n\r\n    constructor(\r\n        config: BrowserConfiguration,\r\n        storageImpl: BrowserCacheManager,\r\n        browserCrypto: ICrypto,\r\n        logger: Logger,\r\n        eventHandler: EventHandler,\r\n        navigationClient: INavigationClient,\r\n        apiId: ApiId,\r\n        performanceClient: IPerformanceClient,\r\n        nativeMessageHandler?: NativeMessageHandler,\r\n        correlationId?: string\r\n    ) {\r\n        super(\r\n            config,\r\n            storageImpl,\r\n            browserCrypto,\r\n            logger,\r\n            eventHandler,\r\n            navigationClient,\r\n            performanceClient,\r\n            nativeMessageHandler,\r\n            correlationId\r\n        );\r\n        this.apiId = apiId;\r\n    }\r\n\r\n    /**\r\n     * Acquires a token silently by redeeming an authorization code against the /token endpoint\r\n     * @param request\r\n     */\r\n    async acquireToken(\r\n        request: AuthorizationCodeRequest\r\n    ): Promise<AuthenticationResult> {\r\n        // Auth code payload is required\r\n        if (!request.code) {\r\n            throw createBrowserAuthError(\r\n                BrowserAuthErrorCodes.authCodeRequired\r\n            );\r\n        }\r\n\r\n        // Create silent request\r\n        const silentRequest: AuthorizationUrlRequest = await invokeAsync(\r\n            this.initializeAuthorizationRequest.bind(this),\r\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\r\n            this.logger,\r\n            this.performanceClient,\r\n            request.correlationId\r\n        )(request, InteractionType.Silent);\r\n\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\r\n            this.apiId\r\n        );\r\n\r\n        try {\r\n            // Create auth code request (PKCE not needed)\r\n            const authCodeRequest: CommonAuthorizationCodeRequest = {\r\n                ...silentRequest,\r\n                code: request.code,\r\n            };\r\n\r\n            // Initialize the client\r\n            const clientConfig = await invokeAsync(\r\n                this.getClientConfiguration.bind(this),\r\n                PerformanceEvents.StandardInteractionClientGetClientConfiguration,\r\n                this.logger,\r\n                this.performanceClient,\r\n                request.correlationId\r\n            )({\r\n                serverTelemetryManager,\r\n                requestAuthority: silentRequest.authority,\r\n                requestAzureCloudOptions: silentRequest.azureCloudOptions,\r\n                requestExtraQueryParameters: silentRequest.extraQueryParameters,\r\n                account: silentRequest.account,\r\n            });\r\n            const authClient: HybridSpaAuthorizationCodeClient =\r\n                new HybridSpaAuthorizationCodeClient(clientConfig);\r\n            this.logger.verbose(\"Auth code client created\");\r\n\r\n            // Create silent handler\r\n            const interactionHandler = new InteractionHandler(\r\n                authClient,\r\n                this.browserStorage,\r\n                authCodeRequest,\r\n                this.logger,\r\n                this.performanceClient\r\n            );\r\n\r\n            // Handle auth code parameters from request\r\n            return await invokeAsync(\r\n                interactionHandler.handleCodeResponseFromServer.bind(\r\n                    interactionHandler\r\n                ),\r\n                PerformanceEvents.HandleCodeResponseFromServer,\r\n                this.logger,\r\n                this.performanceClient,\r\n                request.correlationId\r\n            )(\r\n                {\r\n                    code: request.code,\r\n                    msgraph_host: request.msGraphHost,\r\n                    cloud_graph_host_name: request.cloudGraphHostName,\r\n                    cloud_instance_host_name: request.cloudInstanceHostName,\r\n                },\r\n                silentRequest,\r\n                false\r\n            );\r\n        } catch (e) {\r\n            if (e instanceof AuthError) {\r\n                (e as AuthError).setCorrelationId(this.correlationId);\r\n                serverTelemetryManager.cacheFailedRequest(e);\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Currently Unsupported\r\n     */\r\n    logout(): Promise<void> {\r\n        // Synchronous so we must reject\r\n        return Promise.reject(\r\n            createBrowserAuthError(\r\n                BrowserAuthErrorCodes.silentLogoutUnsupported\r\n            )\r\n        );\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { CryptoOps } from \"../crypto/CryptoOps.js\";\r\nimport {\r\n    InteractionRequiredAuthError,\r\n    AccountInfo,\r\n    Constants,\r\n    INetworkModule,\r\n    Logger,\r\n    CommonSilentFlowRequest,\r\n    ICrypto,\r\n    DEFAULT_CRYPTO_IMPLEMENTATION,\r\n    AuthError,\r\n    PerformanceEvents,\r\n    PerformanceCallbackFunction,\r\n    IPerformanceClient,\r\n    BaseAuthRequest,\r\n    PromptValue,\r\n    InProgressPerformanceEvent,\r\n    RequestThumbprint,\r\n    AccountEntity,\r\n    invokeAsync,\r\n    createClientAuthError,\r\n    ClientAuthErrorCodes,\r\n    AccountFilter,\r\n    buildStaticAuthorityOptions,\r\n    InteractionRequiredAuthErrorCodes,\r\n    PkceCodes,\r\n} from \"@azure/msal-common/browser\";\r\nimport {\r\n    BrowserCacheManager,\r\n    DEFAULT_BROWSER_CACHE_MANAGER,\r\n} from \"../cache/BrowserCacheManager.js\";\r\nimport * as AccountManager from \"../cache/AccountManager.js\";\r\nimport { BrowserConfiguration, CacheOptions } from \"../config/Configuration.js\";\r\nimport {\r\n    InteractionType,\r\n    ApiId,\r\n    BrowserCacheLocation,\r\n    WrapperSKU,\r\n    TemporaryCacheKeys,\r\n    CacheLookupPolicy,\r\n    DEFAULT_REQUEST,\r\n    BrowserConstants,\r\n    iFrameRenewalPolicies,\r\n} from \"../utils/BrowserConstants.js\";\r\nimport * as BrowserUtils from \"../utils/BrowserUtils.js\";\r\nimport { RedirectRequest } from \"../request/RedirectRequest.js\";\r\nimport { PopupRequest } from \"../request/PopupRequest.js\";\r\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest.js\";\r\nimport { EventCallbackFunction, EventError } from \"../event/EventMessage.js\";\r\nimport { EventType } from \"../event/EventType.js\";\r\nimport { EndSessionRequest } from \"../request/EndSessionRequest.js\";\r\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest.js\";\r\nimport { INavigationClient } from \"../navigation/INavigationClient.js\";\r\nimport { EventHandler } from \"../event/EventHandler.js\";\r\nimport { PopupClient } from \"../interaction_client/PopupClient.js\";\r\nimport { RedirectClient } from \"../interaction_client/RedirectClient.js\";\r\nimport { SilentIframeClient } from \"../interaction_client/SilentIframeClient.js\";\r\nimport { SilentRefreshClient } from \"../interaction_client/SilentRefreshClient.js\";\r\nimport { TokenCache } from \"../cache/TokenCache.js\";\r\nimport { ITokenCache } from \"../cache/ITokenCache.js\";\r\nimport { NativeInteractionClient } from \"../interaction_client/NativeInteractionClient.js\";\r\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler.js\";\r\nimport { SilentRequest } from \"../request/SilentRequest.js\";\r\nimport {\r\n    NativeAuthError,\r\n    isFatalNativeAuthError,\r\n} from \"../error/NativeAuthError.js\";\r\nimport { SilentCacheClient } from \"../interaction_client/SilentCacheClient.js\";\r\nimport { SilentAuthCodeClient } from \"../interaction_client/SilentAuthCodeClient.js\";\r\nimport {\r\n    createBrowserAuthError,\r\n    BrowserAuthErrorCodes,\r\n} from \"../error/BrowserAuthError.js\";\r\nimport { AuthorizationCodeRequest } from \"../request/AuthorizationCodeRequest.js\";\r\nimport { NativeTokenRequest } from \"../broker/nativeBroker/NativeRequest.js\";\r\nimport { StandardOperatingContext } from \"../operatingcontext/StandardOperatingContext.js\";\r\nimport { BaseOperatingContext } from \"../operatingcontext/BaseOperatingContext.js\";\r\nimport { IController } from \"./IController.js\";\r\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\r\nimport { ClearCacheRequest } from \"../request/ClearCacheRequest.js\";\r\nimport { createNewGuid } from \"../crypto/BrowserCrypto.js\";\r\nimport { initializeSilentRequest } from \"../request/RequestHelpers.js\";\r\nimport { InitializeApplicationRequest } from \"../request/InitializeApplicationRequest.js\";\r\nimport { generatePkceCodes } from \"../crypto/PkceGenerator.js\";\r\n\r\nfunction getAccountType(\r\n    account?: AccountInfo\r\n): \"AAD\" | \"MSA\" | \"B2C\" | undefined {\r\n    const idTokenClaims = account?.idTokenClaims;\r\n    if (idTokenClaims?.tfp || idTokenClaims?.acr) {\r\n        return \"B2C\";\r\n    }\r\n\r\n    if (!idTokenClaims?.tid) {\r\n        return undefined;\r\n    } else if (idTokenClaims?.tid === \"9188040d-6c67-4c5b-b112-36a304b66dad\") {\r\n        return \"MSA\";\r\n    }\r\n    return \"AAD\";\r\n}\r\n\r\nfunction preflightCheck(\r\n    initialized: boolean,\r\n    performanceEvent: InProgressPerformanceEvent\r\n) {\r\n    try {\r\n        BrowserUtils.preflightCheck(initialized);\r\n    } catch (e) {\r\n        performanceEvent.end({ success: false }, e);\r\n        throw e;\r\n    }\r\n}\r\n\r\nexport class StandardController implements IController {\r\n    // OperatingContext\r\n    protected readonly operatingContext: StandardOperatingContext;\r\n\r\n    // Crypto interface implementation\r\n    protected readonly browserCrypto: ICrypto;\r\n\r\n    // Storage interface implementation\r\n    protected readonly browserStorage: BrowserCacheManager;\r\n\r\n    // Native Cache in memory storage implementation\r\n    protected readonly nativeInternalStorage: BrowserCacheManager;\r\n\r\n    // Network interface implementation\r\n    protected readonly networkClient: INetworkModule;\r\n\r\n    // Navigation interface implementation\r\n    protected navigationClient: INavigationClient;\r\n\r\n    // Input configuration by developer/user\r\n    protected readonly config: BrowserConfiguration;\r\n\r\n    // Token cache implementation\r\n    private tokenCache: TokenCache;\r\n\r\n    // Logger\r\n    protected logger: Logger;\r\n\r\n    // Flag to indicate if in browser environment\r\n    protected isBrowserEnvironment: boolean;\r\n\r\n    protected readonly eventHandler: EventHandler;\r\n\r\n    // Redirect Response Object\r\n    protected readonly redirectResponse: Map<\r\n        string,\r\n        Promise<AuthenticationResult | null>\r\n    >;\r\n\r\n    // Native Extension Provider\r\n    protected nativeExtensionProvider: NativeMessageHandler | undefined;\r\n\r\n    // Hybrid auth code responses\r\n    private hybridAuthCodeResponses: Map<string, Promise<AuthenticationResult>>;\r\n\r\n    // Performance telemetry client\r\n    protected readonly performanceClient: IPerformanceClient;\r\n\r\n    // Flag representing whether or not the initialize API has been called and completed\r\n    protected initialized: boolean;\r\n\r\n    // Active requests\r\n    private activeSilentTokenRequests: Map<\r\n        string,\r\n        Promise<AuthenticationResult>\r\n    >;\r\n\r\n    // Active Iframe request\r\n    private activeIframeRequest: [Promise<boolean>, string] | undefined;\r\n\r\n    private ssoSilentMeasurement?: InProgressPerformanceEvent;\r\n    private acquireTokenByCodeAsyncMeasurement?: InProgressPerformanceEvent;\r\n\r\n    private pkceCode: PkceCodes | undefined;\r\n\r\n    /**\r\n     * @constructor\r\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\r\n     *\r\n     * Important attributes in the Configuration object for auth are:\r\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\r\n     * - authority: the authority URL for your application.\r\n     * - redirect_uri: the uri of your application registered in the portal.\r\n     *\r\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\r\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\r\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\r\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\r\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\r\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\r\n     *\r\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\r\n     * Full B2C functionality will be available in this library in future versions.\r\n     *\r\n     * @param configuration Object for the MSAL PublicClientApplication instance\r\n     */\r\n    constructor(operatingContext: StandardOperatingContext) {\r\n        this.operatingContext = operatingContext;\r\n        this.isBrowserEnvironment =\r\n            this.operatingContext.isBrowserEnvironment();\r\n        // Set the configuration.\r\n        this.config = operatingContext.getConfig();\r\n        this.initialized = false;\r\n\r\n        // Initialize logger\r\n        this.logger = this.operatingContext.getLogger();\r\n\r\n        // Initialize the network module class.\r\n        this.networkClient = this.config.system.networkClient;\r\n\r\n        // Initialize the navigation client class.\r\n        this.navigationClient = this.config.system.navigationClient;\r\n\r\n        // Initialize redirectResponse Map\r\n        this.redirectResponse = new Map();\r\n\r\n        // Initial hybrid spa map\r\n        this.hybridAuthCodeResponses = new Map();\r\n\r\n        // Initialize performance client\r\n        this.performanceClient = this.config.telemetry.client;\r\n\r\n        // Initialize the crypto class.\r\n        this.browserCrypto = this.isBrowserEnvironment\r\n            ? new CryptoOps(this.logger, this.performanceClient)\r\n            : DEFAULT_CRYPTO_IMPLEMENTATION;\r\n\r\n        this.eventHandler = new EventHandler(this.logger);\r\n\r\n        // Initialize the browser storage class.\r\n        this.browserStorage = this.isBrowserEnvironment\r\n            ? new BrowserCacheManager(\r\n                  this.config.auth.clientId,\r\n                  this.config.cache,\r\n                  this.browserCrypto,\r\n                  this.logger,\r\n                  this.performanceClient,\r\n                  this.eventHandler,\r\n                  buildStaticAuthorityOptions(this.config.auth)\r\n              )\r\n            : DEFAULT_BROWSER_CACHE_MANAGER(\r\n                  this.config.auth.clientId,\r\n                  this.logger,\r\n                  this.performanceClient,\r\n                  this.eventHandler\r\n              );\r\n\r\n        // initialize in memory storage for native flows\r\n        const nativeCacheOptions: Required<CacheOptions> = {\r\n            cacheLocation: BrowserCacheLocation.MemoryStorage,\r\n            temporaryCacheLocation: BrowserCacheLocation.MemoryStorage,\r\n            storeAuthStateInCookie: false,\r\n            secureCookies: false,\r\n            cacheMigrationEnabled: false,\r\n            claimsBasedCachingEnabled: false,\r\n        };\r\n        this.nativeInternalStorage = new BrowserCacheManager(\r\n            this.config.auth.clientId,\r\n            nativeCacheOptions,\r\n            this.browserCrypto,\r\n            this.logger,\r\n            this.performanceClient,\r\n            this.eventHandler\r\n        );\r\n\r\n        // Initialize the token cache\r\n        this.tokenCache = new TokenCache(\r\n            this.config,\r\n            this.browserStorage,\r\n            this.logger,\r\n            this.browserCrypto\r\n        );\r\n\r\n        this.activeSilentTokenRequests = new Map();\r\n\r\n        // Register listener functions\r\n        this.trackPageVisibility = this.trackPageVisibility.bind(this);\r\n\r\n        // Register listener functions\r\n        this.trackPageVisibilityWithMeasurement =\r\n            this.trackPageVisibilityWithMeasurement.bind(this);\r\n    }\r\n\r\n    static async createController(\r\n        operatingContext: BaseOperatingContext,\r\n        request?: InitializeApplicationRequest\r\n    ): Promise<IController> {\r\n        const controller = new StandardController(operatingContext);\r\n        await controller.initialize(request);\r\n        return controller;\r\n    }\r\n\r\n    private trackPageVisibility(correlationId?: string): void {\r\n        if (!correlationId) {\r\n            return;\r\n        }\r\n        this.logger.info(\"Perf: Visibility change detected\");\r\n        this.performanceClient.incrementFields(\r\n            { visibilityChangeCount: 1 },\r\n            correlationId\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Initializer function to perform async startup tasks such as connecting to WAM extension\r\n     * @param request {?InitializeApplicationRequest} correlation id\r\n     */\r\n    async initialize(request?: InitializeApplicationRequest): Promise<void> {\r\n        this.logger.trace(\"initialize called\");\r\n        if (this.initialized) {\r\n            this.logger.info(\r\n                \"initialize has already been called, exiting early.\"\r\n            );\r\n            return;\r\n        }\r\n\r\n        if (!this.isBrowserEnvironment) {\r\n            this.logger.info(\"in non-browser environment, exiting early.\");\r\n            this.initialized = true;\r\n            this.eventHandler.emitEvent(EventType.INITIALIZE_END);\r\n            return;\r\n        }\r\n\r\n        const initCorrelationId =\r\n            request?.correlationId || this.getRequestCorrelationId();\r\n        const allowPlatformBroker = this.config.system.allowPlatformBroker;\r\n        const initMeasurement = this.performanceClient.startMeasurement(\r\n            PerformanceEvents.InitializeClientApplication,\r\n            initCorrelationId\r\n        );\r\n        this.eventHandler.emitEvent(EventType.INITIALIZE_START);\r\n\r\n        await invokeAsync(\r\n            this.browserStorage.initialize.bind(this.browserStorage),\r\n            PerformanceEvents.InitializeCache,\r\n            this.logger,\r\n            this.performanceClient,\r\n            initCorrelationId\r\n        )(initCorrelationId);\r\n\r\n        if (allowPlatformBroker) {\r\n            try {\r\n                this.nativeExtensionProvider =\r\n                    await NativeMessageHandler.createProvider(\r\n                        this.logger,\r\n                        this.config.system.nativeBrokerHandshakeTimeout,\r\n                        this.performanceClient\r\n                    );\r\n            } catch (e) {\r\n                this.logger.verbose(e as string);\r\n            }\r\n        }\r\n\r\n        if (!this.config.cache.claimsBasedCachingEnabled) {\r\n            this.logger.verbose(\r\n                \"Claims-based caching is disabled. Clearing the previous cache with claims\"\r\n            );\r\n\r\n            await invokeAsync(\r\n                this.browserStorage.clearTokensAndKeysWithClaims.bind(\r\n                    this.browserStorage\r\n                ),\r\n                PerformanceEvents.ClearTokensAndKeysWithClaims,\r\n                this.logger,\r\n                this.performanceClient,\r\n                initCorrelationId\r\n            )(this.performanceClient, initCorrelationId);\r\n        }\r\n\r\n        this.config.system.asyncPopups &&\r\n            (await this.preGeneratePkceCodes(initCorrelationId));\r\n        this.initialized = true;\r\n        this.eventHandler.emitEvent(EventType.INITIALIZE_END);\r\n        initMeasurement.end({\r\n            allowPlatformBroker: allowPlatformBroker,\r\n            success: true,\r\n        });\r\n    }\r\n\r\n    // #region Redirect Flow\r\n\r\n    /**\r\n     * Event handler function which allows users to fire events after the PublicClientApplication object\r\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\r\n     * auth flows.\r\n     * @param hash Hash to process. Defaults to the current value of window.location.hash. Only needs to be provided explicitly if the response to be handled is not contained in the current value.\r\n     * @returns Token response or null. If the return value is null, then no auth redirect was detected.\r\n     */\r\n    async handleRedirectPromise(\r\n        hash?: string\r\n    ): Promise<AuthenticationResult | null> {\r\n        this.logger.verbose(\"handleRedirectPromise called\");\r\n        // Block token acquisition before initialize has been called\r\n        BrowserUtils.blockAPICallsBeforeInitialize(this.initialized);\r\n\r\n        if (this.isBrowserEnvironment) {\r\n            /**\r\n             * Store the promise on the PublicClientApplication instance if this is the first invocation of handleRedirectPromise,\r\n             * otherwise return the promise from the first invocation. Prevents race conditions when handleRedirectPromise is called\r\n             * several times concurrently.\r\n             */\r\n            const redirectResponseKey = hash || \"\";\r\n            let response = this.redirectResponse.get(redirectResponseKey);\r\n            if (typeof response === \"undefined\") {\r\n                response = this.handleRedirectPromiseInternal(hash);\r\n                this.redirectResponse.set(redirectResponseKey, response);\r\n                this.logger.verbose(\r\n                    \"handleRedirectPromise has been called for the first time, storing the promise\"\r\n                );\r\n            } else {\r\n                this.logger.verbose(\r\n                    \"handleRedirectPromise has been called previously, returning the result from the first call\"\r\n                );\r\n            }\r\n\r\n            return response;\r\n        }\r\n        this.logger.verbose(\r\n            \"handleRedirectPromise returns null, not browser environment\"\r\n        );\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * The internal details of handleRedirectPromise. This is separated out to a helper to allow handleRedirectPromise to memoize requests\r\n     * @param hash\r\n     * @returns\r\n     */\r\n    private async handleRedirectPromiseInternal(\r\n        hash?: string\r\n    ): Promise<AuthenticationResult | null> {\r\n        const loggedInAccounts = this.getAllAccounts();\r\n        const request: NativeTokenRequest | null =\r\n            this.browserStorage.getCachedNativeRequest();\r\n        const useNative =\r\n            request &&\r\n            NativeMessageHandler.isPlatformBrokerAvailable(\r\n                this.config,\r\n                this.logger,\r\n                this.nativeExtensionProvider\r\n            ) &&\r\n            this.nativeExtensionProvider &&\r\n            !hash;\r\n        const correlationId = useNative\r\n            ? request?.correlationId\r\n            : this.browserStorage.getTemporaryCache(\r\n                  TemporaryCacheKeys.CORRELATION_ID,\r\n                  true\r\n              ) || \"\";\r\n        const rootMeasurement = this.performanceClient.startMeasurement(\r\n            PerformanceEvents.AcquireTokenRedirect,\r\n            correlationId\r\n        );\r\n        this.eventHandler.emitEvent(\r\n            EventType.HANDLE_REDIRECT_START,\r\n            InteractionType.Redirect\r\n        );\r\n\r\n        let redirectResponse: Promise<AuthenticationResult | null>;\r\n        if (useNative && this.nativeExtensionProvider) {\r\n            this.logger.trace(\r\n                \"handleRedirectPromise - acquiring token from native platform\"\r\n            );\r\n            const nativeClient = new NativeInteractionClient(\r\n                this.config,\r\n                this.browserStorage,\r\n                this.browserCrypto,\r\n                this.logger,\r\n                this.eventHandler,\r\n                this.navigationClient,\r\n                ApiId.handleRedirectPromise,\r\n                this.performanceClient,\r\n                this.nativeExtensionProvider,\r\n                request.accountId,\r\n                this.nativeInternalStorage,\r\n                request.correlationId\r\n            );\r\n\r\n            redirectResponse = invokeAsync(\r\n                nativeClient.handleRedirectPromise.bind(nativeClient),\r\n                PerformanceEvents.HandleNativeRedirectPromiseMeasurement,\r\n                this.logger,\r\n                this.performanceClient,\r\n                rootMeasurement.event.correlationId\r\n            )(this.performanceClient, rootMeasurement.event.correlationId);\r\n        } else {\r\n            this.logger.trace(\r\n                \"handleRedirectPromise - acquiring token from web flow\"\r\n            );\r\n            const redirectClient = this.createRedirectClient(correlationId);\r\n            redirectResponse = invokeAsync(\r\n                redirectClient.handleRedirectPromise.bind(redirectClient),\r\n                PerformanceEvents.HandleRedirectPromiseMeasurement,\r\n                this.logger,\r\n                this.performanceClient,\r\n                rootMeasurement.event.correlationId\r\n            )(hash, rootMeasurement);\r\n        }\r\n\r\n        return redirectResponse\r\n            .then((result: AuthenticationResult | null) => {\r\n                if (result) {\r\n                    // Emit login event if number of accounts change\r\n\r\n                    const isLoggingIn =\r\n                        loggedInAccounts.length < this.getAllAccounts().length;\r\n                    if (isLoggingIn) {\r\n                        this.eventHandler.emitEvent(\r\n                            EventType.LOGIN_SUCCESS,\r\n                            InteractionType.Redirect,\r\n                            result\r\n                        );\r\n                        this.logger.verbose(\r\n                            \"handleRedirectResponse returned result, login success\"\r\n                        );\r\n                    } else {\r\n                        this.eventHandler.emitEvent(\r\n                            EventType.ACQUIRE_TOKEN_SUCCESS,\r\n                            InteractionType.Redirect,\r\n                            result\r\n                        );\r\n                        this.logger.verbose(\r\n                            \"handleRedirectResponse returned result, acquire token success\"\r\n                        );\r\n                    }\r\n                    rootMeasurement.end({\r\n                        success: true,\r\n                        accountType: getAccountType(result.account),\r\n                    });\r\n                } else {\r\n                    /*\r\n                     * Instrument an event only if an error code is set. Otherwise, discard it when the redirect response\r\n                     * is empty and the error code is missing.\r\n                     */\r\n                    if (rootMeasurement.event.errorCode) {\r\n                        rootMeasurement.end({ success: false });\r\n                    } else {\r\n                        rootMeasurement.discard();\r\n                    }\r\n                }\r\n\r\n                this.eventHandler.emitEvent(\r\n                    EventType.HANDLE_REDIRECT_END,\r\n                    InteractionType.Redirect\r\n                );\r\n\r\n                return result;\r\n            })\r\n            .catch((e) => {\r\n                const eventError = e as EventError;\r\n                // Emit login event if there is an account\r\n                if (loggedInAccounts.length > 0) {\r\n                    this.eventHandler.emitEvent(\r\n                        EventType.ACQUIRE_TOKEN_FAILURE,\r\n                        InteractionType.Redirect,\r\n                        null,\r\n                        eventError\r\n                    );\r\n                } else {\r\n                    this.eventHandler.emitEvent(\r\n                        EventType.LOGIN_FAILURE,\r\n                        InteractionType.Redirect,\r\n                        null,\r\n                        eventError\r\n                    );\r\n                }\r\n                this.eventHandler.emitEvent(\r\n                    EventType.HANDLE_REDIRECT_END,\r\n                    InteractionType.Redirect\r\n                );\r\n\r\n                rootMeasurement.end(\r\n                    {\r\n                        success: false,\r\n                    },\r\n                    eventError\r\n                );\r\n\r\n                throw e;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\r\n     * the page, so any code that follows this function will not execute.\r\n     *\r\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n     *\r\n     * @param request\r\n     */\r\n    async acquireTokenRedirect(request: RedirectRequest): Promise<void> {\r\n        // Preflight request\r\n        const correlationId = this.getRequestCorrelationId(request);\r\n        this.logger.verbose(\"acquireTokenRedirect called\", correlationId);\r\n\r\n        const atrMeasurement = this.performanceClient.startMeasurement(\r\n            PerformanceEvents.AcquireTokenPreRedirect,\r\n            correlationId\r\n        );\r\n        atrMeasurement.add({\r\n            accountType: getAccountType(request.account),\r\n            scenarioId: request.scenarioId,\r\n        });\r\n\r\n        // Override on request only if set, as onRedirectNavigate field is deprecated\r\n        const onRedirectNavigateCb = request.onRedirectNavigate;\r\n        if (onRedirectNavigateCb) {\r\n            request.onRedirectNavigate = (url: string) => {\r\n                const navigate =\r\n                    typeof onRedirectNavigateCb === \"function\"\r\n                        ? onRedirectNavigateCb(url)\r\n                        : undefined;\r\n                if (navigate !== false) {\r\n                    atrMeasurement.end({ success: true });\r\n                } else {\r\n                    atrMeasurement.discard();\r\n                }\r\n                return navigate;\r\n            };\r\n        } else {\r\n            const configOnRedirectNavigateCb =\r\n                this.config.auth.onRedirectNavigate;\r\n            this.config.auth.onRedirectNavigate = (url: string) => {\r\n                const navigate =\r\n                    typeof configOnRedirectNavigateCb === \"function\"\r\n                        ? configOnRedirectNavigateCb(url)\r\n                        : undefined;\r\n                if (navigate !== false) {\r\n                    atrMeasurement.end({ success: true });\r\n                } else {\r\n                    atrMeasurement.discard();\r\n                }\r\n                return navigate;\r\n            };\r\n        }\r\n\r\n        // If logged in, emit acquire token events\r\n        const isLoggedIn = this.getAllAccounts().length > 0;\r\n        try {\r\n            BrowserUtils.redirectPreflightCheck(this.initialized, this.config);\r\n            this.browserStorage.setInteractionInProgress(true);\r\n\r\n            if (isLoggedIn) {\r\n                this.eventHandler.emitEvent(\r\n                    EventType.ACQUIRE_TOKEN_START,\r\n                    InteractionType.Redirect,\r\n                    request\r\n                );\r\n            } else {\r\n                this.eventHandler.emitEvent(\r\n                    EventType.LOGIN_START,\r\n                    InteractionType.Redirect,\r\n                    request\r\n                );\r\n            }\r\n\r\n            let result: Promise<void>;\r\n\r\n            if (\r\n                this.nativeExtensionProvider &&\r\n                this.canUsePlatformBroker(request)\r\n            ) {\r\n                const nativeClient = new NativeInteractionClient(\r\n                    this.config,\r\n                    this.browserStorage,\r\n                    this.browserCrypto,\r\n                    this.logger,\r\n                    this.eventHandler,\r\n                    this.navigationClient,\r\n                    ApiId.acquireTokenRedirect,\r\n                    this.performanceClient,\r\n                    this.nativeExtensionProvider,\r\n                    this.getNativeAccountId(request),\r\n                    this.nativeInternalStorage,\r\n                    correlationId\r\n                );\r\n                result = nativeClient\r\n                    .acquireTokenRedirect(request, atrMeasurement)\r\n                    .catch((e: AuthError) => {\r\n                        if (\r\n                            e instanceof NativeAuthError &&\r\n                            isFatalNativeAuthError(e)\r\n                        ) {\r\n                            this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\r\n                            const redirectClient =\r\n                                this.createRedirectClient(correlationId);\r\n                            return redirectClient.acquireToken(request);\r\n                        } else if (e instanceof InteractionRequiredAuthError) {\r\n                            this.logger.verbose(\r\n                                \"acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow\"\r\n                            );\r\n                            const redirectClient =\r\n                                this.createRedirectClient(correlationId);\r\n                            return redirectClient.acquireToken(request);\r\n                        }\r\n                        this.browserStorage.setInteractionInProgress(false);\r\n                        throw e;\r\n                    });\r\n            } else {\r\n                const redirectClient = this.createRedirectClient(correlationId);\r\n                result = redirectClient.acquireToken(request);\r\n            }\r\n\r\n            return await result;\r\n        } catch (e) {\r\n            atrMeasurement.end({ success: false }, e);\r\n            if (isLoggedIn) {\r\n                this.eventHandler.emitEvent(\r\n                    EventType.ACQUIRE_TOKEN_FAILURE,\r\n                    InteractionType.Redirect,\r\n                    null,\r\n                    e as EventError\r\n                );\r\n            } else {\r\n                this.eventHandler.emitEvent(\r\n                    EventType.LOGIN_FAILURE,\r\n                    InteractionType.Redirect,\r\n                    null,\r\n                    e as EventError\r\n                );\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Popup Flow\r\n\r\n    /**\r\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\r\n     *\r\n     * @param request\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    acquireTokenPopup(request: PopupRequest): Promise<AuthenticationResult> {\r\n        const correlationId = this.getRequestCorrelationId(request);\r\n        const atPopupMeasurement = this.performanceClient.startMeasurement(\r\n            PerformanceEvents.AcquireTokenPopup,\r\n            correlationId\r\n        );\r\n\r\n        atPopupMeasurement.add({\r\n            scenarioId: request.scenarioId,\r\n            accountType: getAccountType(request.account),\r\n        });\r\n\r\n        try {\r\n            this.logger.verbose(\"acquireTokenPopup called\", correlationId);\r\n            preflightCheck(this.initialized, atPopupMeasurement);\r\n            this.browserStorage.setInteractionInProgress(true);\r\n        } catch (e) {\r\n            // Since this function is syncronous we need to reject\r\n            return Promise.reject(e);\r\n        }\r\n\r\n        // If logged in, emit acquire token events\r\n        const loggedInAccounts = this.getAllAccounts();\r\n        if (loggedInAccounts.length > 0) {\r\n            this.eventHandler.emitEvent(\r\n                EventType.ACQUIRE_TOKEN_START,\r\n                InteractionType.Popup,\r\n                request\r\n            );\r\n        } else {\r\n            this.eventHandler.emitEvent(\r\n                EventType.LOGIN_START,\r\n                InteractionType.Popup,\r\n                request\r\n            );\r\n        }\r\n\r\n        let result: Promise<AuthenticationResult>;\r\n        const pkce = this.getPreGeneratedPkceCodes(correlationId);\r\n\r\n        if (this.canUsePlatformBroker(request)) {\r\n            result = this.acquireTokenNative(\r\n                {\r\n                    ...request,\r\n                    correlationId,\r\n                },\r\n                ApiId.acquireTokenPopup\r\n            )\r\n                .then((response) => {\r\n                    this.browserStorage.setInteractionInProgress(false);\r\n                    atPopupMeasurement.end({\r\n                        success: true,\r\n                        isNativeBroker: true,\r\n                        accountType: getAccountType(response.account),\r\n                    });\r\n                    return response;\r\n                })\r\n                .catch((e: AuthError) => {\r\n                    if (\r\n                        e instanceof NativeAuthError &&\r\n                        isFatalNativeAuthError(e)\r\n                    ) {\r\n                        this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\r\n                        const popupClient =\r\n                            this.createPopupClient(correlationId);\r\n                        return popupClient.acquireToken(request, pkce);\r\n                    } else if (e instanceof InteractionRequiredAuthError) {\r\n                        this.logger.verbose(\r\n                            \"acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow\"\r\n                        );\r\n                        const popupClient =\r\n                            this.createPopupClient(correlationId);\r\n                        return popupClient.acquireToken(request, pkce);\r\n                    }\r\n                    this.browserStorage.setInteractionInProgress(false);\r\n                    throw e;\r\n                });\r\n        } else {\r\n            const popupClient = this.createPopupClient(correlationId);\r\n            result = popupClient.acquireToken(request, pkce);\r\n        }\r\n\r\n        return result\r\n            .then((result) => {\r\n                /*\r\n                 *  If logged in, emit acquire token events\r\n                 */\r\n                const isLoggingIn =\r\n                    loggedInAccounts.length < this.getAllAccounts().length;\r\n                if (isLoggingIn) {\r\n                    this.eventHandler.emitEvent(\r\n                        EventType.LOGIN_SUCCESS,\r\n                        InteractionType.Popup,\r\n                        result\r\n                    );\r\n                } else {\r\n                    this.eventHandler.emitEvent(\r\n                        EventType.ACQUIRE_TOKEN_SUCCESS,\r\n                        InteractionType.Popup,\r\n                        result\r\n                    );\r\n                }\r\n\r\n                atPopupMeasurement.end({\r\n                    success: true,\r\n                    accessTokenSize: result.accessToken.length,\r\n                    idTokenSize: result.idToken.length,\r\n                    accountType: getAccountType(result.account),\r\n                });\r\n                return result;\r\n            })\r\n            .catch((e: Error) => {\r\n                if (loggedInAccounts.length > 0) {\r\n                    this.eventHandler.emitEvent(\r\n                        EventType.ACQUIRE_TOKEN_FAILURE,\r\n                        InteractionType.Popup,\r\n                        null,\r\n                        e\r\n                    );\r\n                } else {\r\n                    this.eventHandler.emitEvent(\r\n                        EventType.LOGIN_FAILURE,\r\n                        InteractionType.Popup,\r\n                        null,\r\n                        e\r\n                    );\r\n                }\r\n\r\n                atPopupMeasurement.end(\r\n                    {\r\n                        success: false,\r\n                    },\r\n                    e\r\n                );\r\n\r\n                // Since this function is syncronous we need to reject\r\n                return Promise.reject(e);\r\n            })\r\n            .finally(\r\n                () =>\r\n                    this.config.system.asyncPopups &&\r\n                    this.preGeneratePkceCodes(correlationId)\r\n            );\r\n    }\r\n\r\n    private trackPageVisibilityWithMeasurement(): void {\r\n        const measurement =\r\n            this.ssoSilentMeasurement ||\r\n            this.acquireTokenByCodeAsyncMeasurement;\r\n        if (!measurement) {\r\n            return;\r\n        }\r\n\r\n        this.logger.info(\r\n            \"Perf: Visibility change detected in \",\r\n            measurement.event.name\r\n        );\r\n        measurement.increment({\r\n            visibilityChangeCount: 1,\r\n        });\r\n    }\r\n    // #endregion\r\n\r\n    // #region Silent Flow\r\n\r\n    /**\r\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\r\n     * - Any browser using a form of Intelligent Tracking Prevention\r\n     * - If there is not an established session with the service\r\n     *\r\n     * In these cases, the request must be done inside a popup or full frame redirect.\r\n     *\r\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\r\n     *\r\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\r\n     * you session on the server still exists.\r\n     * @param request {@link SsoSilentRequest}\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    async ssoSilent(request: SsoSilentRequest): Promise<AuthenticationResult> {\r\n        const correlationId = this.getRequestCorrelationId(request);\r\n        const validRequest = {\r\n            ...request,\r\n            // will be PromptValue.NONE or PromptValue.NO_SESSION\r\n            prompt: request.prompt,\r\n            correlationId: correlationId,\r\n        };\r\n        this.ssoSilentMeasurement = this.performanceClient.startMeasurement(\r\n            PerformanceEvents.SsoSilent,\r\n            correlationId\r\n        );\r\n        this.ssoSilentMeasurement?.add({\r\n            scenarioId: request.scenarioId,\r\n            accountType: getAccountType(request.account),\r\n        });\r\n        preflightCheck(this.initialized, this.ssoSilentMeasurement);\r\n        this.ssoSilentMeasurement?.increment({\r\n            visibilityChangeCount: 0,\r\n        });\r\n\r\n        document.addEventListener(\r\n            \"visibilitychange\",\r\n            this.trackPageVisibilityWithMeasurement\r\n        );\r\n        this.logger.verbose(\"ssoSilent called\", correlationId);\r\n        this.eventHandler.emitEvent(\r\n            EventType.SSO_SILENT_START,\r\n            InteractionType.Silent,\r\n            validRequest\r\n        );\r\n\r\n        let result: Promise<AuthenticationResult>;\r\n\r\n        if (this.canUsePlatformBroker(validRequest)) {\r\n            result = this.acquireTokenNative(\r\n                validRequest,\r\n                ApiId.ssoSilent\r\n            ).catch((e: AuthError) => {\r\n                // If native token acquisition fails for availability reasons fallback to standard flow\r\n                if (e instanceof NativeAuthError && isFatalNativeAuthError(e)) {\r\n                    this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\r\n                    const silentIframeClient = this.createSilentIframeClient(\r\n                        validRequest.correlationId\r\n                    );\r\n                    return silentIframeClient.acquireToken(validRequest);\r\n                }\r\n                throw e;\r\n            });\r\n        } else {\r\n            const silentIframeClient = this.createSilentIframeClient(\r\n                validRequest.correlationId\r\n            );\r\n            result = silentIframeClient.acquireToken(validRequest);\r\n        }\r\n\r\n        return result\r\n            .then((response) => {\r\n                this.eventHandler.emitEvent(\r\n                    EventType.SSO_SILENT_SUCCESS,\r\n                    InteractionType.Silent,\r\n                    response\r\n                );\r\n                this.ssoSilentMeasurement?.end({\r\n                    success: true,\r\n                    isNativeBroker: response.fromNativeBroker,\r\n                    accessTokenSize: response.accessToken.length,\r\n                    idTokenSize: response.idToken.length,\r\n                    accountType: getAccountType(response.account),\r\n                });\r\n                return response;\r\n            })\r\n            .catch((e: Error) => {\r\n                this.eventHandler.emitEvent(\r\n                    EventType.SSO_SILENT_FAILURE,\r\n                    InteractionType.Silent,\r\n                    null,\r\n                    e\r\n                );\r\n                this.ssoSilentMeasurement?.end(\r\n                    {\r\n                        success: false,\r\n                    },\r\n                    e\r\n                );\r\n                throw e;\r\n            })\r\n            .finally(() => {\r\n                document.removeEventListener(\r\n                    \"visibilitychange\",\r\n                    this.trackPageVisibilityWithMeasurement\r\n                );\r\n            });\r\n    }\r\n\r\n    /**\r\n     * This function redeems an authorization code (passed as code) from the eSTS token endpoint.\r\n     * This authorization code should be acquired server-side using a confidential client to acquire a spa_code.\r\n     * This API is not indended for normal authorization code acquisition and redemption.\r\n     *\r\n     * Redemption of this authorization code will not require PKCE, as it was acquired by a confidential client.\r\n     *\r\n     * @param request {@link AuthorizationCodeRequest}\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    async acquireTokenByCode(\r\n        request: AuthorizationCodeRequest\r\n    ): Promise<AuthenticationResult> {\r\n        const correlationId = this.getRequestCorrelationId(request);\r\n        this.logger.trace(\"acquireTokenByCode called\", correlationId);\r\n        const atbcMeasurement = this.performanceClient.startMeasurement(\r\n            PerformanceEvents.AcquireTokenByCode,\r\n            correlationId\r\n        );\r\n        preflightCheck(this.initialized, atbcMeasurement);\r\n        this.eventHandler.emitEvent(\r\n            EventType.ACQUIRE_TOKEN_BY_CODE_START,\r\n            InteractionType.Silent,\r\n            request\r\n        );\r\n        atbcMeasurement.add({ scenarioId: request.scenarioId });\r\n\r\n        try {\r\n            if (request.code && request.nativeAccountId) {\r\n                // Throw error in case server returns both spa_code and spa_accountid in exchange for auth code.\r\n                throw createBrowserAuthError(\r\n                    BrowserAuthErrorCodes.spaCodeAndNativeAccountIdPresent\r\n                );\r\n            } else if (request.code) {\r\n                const hybridAuthCode = request.code;\r\n                let response = this.hybridAuthCodeResponses.get(hybridAuthCode);\r\n                if (!response) {\r\n                    this.logger.verbose(\r\n                        \"Initiating new acquireTokenByCode request\",\r\n                        correlationId\r\n                    );\r\n                    response = this.acquireTokenByCodeAsync({\r\n                        ...request,\r\n                        correlationId,\r\n                    })\r\n                        .then((result: AuthenticationResult) => {\r\n                            this.eventHandler.emitEvent(\r\n                                EventType.ACQUIRE_TOKEN_BY_CODE_SUCCESS,\r\n                                InteractionType.Silent,\r\n                                result\r\n                            );\r\n                            this.hybridAuthCodeResponses.delete(hybridAuthCode);\r\n                            atbcMeasurement.end({\r\n                                success: true,\r\n                                isNativeBroker: result.fromNativeBroker,\r\n                                accessTokenSize: result.accessToken.length,\r\n                                idTokenSize: result.idToken.length,\r\n                                accountType: getAccountType(result.account),\r\n                            });\r\n                            return result;\r\n                        })\r\n                        .catch((error: Error) => {\r\n                            this.hybridAuthCodeResponses.delete(hybridAuthCode);\r\n                            this.eventHandler.emitEvent(\r\n                                EventType.ACQUIRE_TOKEN_BY_CODE_FAILURE,\r\n                                InteractionType.Silent,\r\n                                null,\r\n                                error\r\n                            );\r\n                            atbcMeasurement.end(\r\n                                {\r\n                                    success: false,\r\n                                },\r\n                                error\r\n                            );\r\n                            throw error;\r\n                        });\r\n                    this.hybridAuthCodeResponses.set(hybridAuthCode, response);\r\n                } else {\r\n                    this.logger.verbose(\r\n                        \"Existing acquireTokenByCode request found\",\r\n                        correlationId\r\n                    );\r\n                    atbcMeasurement.discard();\r\n                }\r\n                return await response;\r\n            } else if (request.nativeAccountId) {\r\n                if (\r\n                    this.canUsePlatformBroker(request, request.nativeAccountId)\r\n                ) {\r\n                    const result = await this.acquireTokenNative(\r\n                        {\r\n                            ...request,\r\n                            correlationId,\r\n                        },\r\n                        ApiId.acquireTokenByCode,\r\n                        request.nativeAccountId\r\n                    ).catch((e: AuthError) => {\r\n                        // If native token acquisition fails for availability reasons fallback to standard flow\r\n                        if (\r\n                            e instanceof NativeAuthError &&\r\n                            isFatalNativeAuthError(e)\r\n                        ) {\r\n                            this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\r\n                        }\r\n                        throw e;\r\n                    });\r\n                    atbcMeasurement.end({\r\n                        accountType: getAccountType(result.account),\r\n                        success: true,\r\n                    });\r\n                    return result;\r\n                } else {\r\n                    throw createBrowserAuthError(\r\n                        BrowserAuthErrorCodes.unableToAcquireTokenFromNativePlatform\r\n                    );\r\n                }\r\n            } else {\r\n                throw createBrowserAuthError(\r\n                    BrowserAuthErrorCodes.authCodeOrNativeAccountIdRequired\r\n                );\r\n            }\r\n        } catch (e) {\r\n            this.eventHandler.emitEvent(\r\n                EventType.ACQUIRE_TOKEN_BY_CODE_FAILURE,\r\n                InteractionType.Silent,\r\n                null,\r\n                e as EventError\r\n            );\r\n            atbcMeasurement.end(\r\n                {\r\n                    success: false,\r\n                },\r\n                e\r\n            );\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates a SilentAuthCodeClient to redeem an authorization code.\r\n     * @param request\r\n     * @returns Result of the operation to redeem the authorization code\r\n     */\r\n    private async acquireTokenByCodeAsync(\r\n        request: AuthorizationCodeRequest\r\n    ): Promise<AuthenticationResult> {\r\n        this.logger.trace(\r\n            \"acquireTokenByCodeAsync called\",\r\n            request.correlationId\r\n        );\r\n        this.acquireTokenByCodeAsyncMeasurement =\r\n            this.performanceClient.startMeasurement(\r\n                PerformanceEvents.AcquireTokenByCodeAsync,\r\n                request.correlationId\r\n            );\r\n        this.acquireTokenByCodeAsyncMeasurement?.increment({\r\n            visibilityChangeCount: 0,\r\n        });\r\n        document.addEventListener(\r\n            \"visibilitychange\",\r\n            this.trackPageVisibilityWithMeasurement\r\n        );\r\n        const silentAuthCodeClient = this.createSilentAuthCodeClient(\r\n            request.correlationId\r\n        );\r\n        const silentTokenResult = await silentAuthCodeClient\r\n            .acquireToken(request)\r\n            .then((response) => {\r\n                this.acquireTokenByCodeAsyncMeasurement?.end({\r\n                    success: true,\r\n                    fromCache: response.fromCache,\r\n                    isNativeBroker: response.fromNativeBroker,\r\n                });\r\n                return response;\r\n            })\r\n            .catch((tokenRenewalError: Error) => {\r\n                this.acquireTokenByCodeAsyncMeasurement?.end(\r\n                    {\r\n                        success: false,\r\n                    },\r\n                    tokenRenewalError\r\n                );\r\n                throw tokenRenewalError;\r\n            })\r\n            .finally(() => {\r\n                document.removeEventListener(\r\n                    \"visibilitychange\",\r\n                    this.trackPageVisibilityWithMeasurement\r\n                );\r\n            });\r\n        return silentTokenResult;\r\n    }\r\n\r\n    /**\r\n     * Attempt to acquire an access token from the cache\r\n     * @param silentCacheClient SilentCacheClient\r\n     * @param commonRequest CommonSilentFlowRequest\r\n     * @param silentRequest SilentRequest\r\n     * @returns A promise that, when resolved, returns the access token\r\n     */\r\n    protected async acquireTokenFromCache(\r\n        commonRequest: CommonSilentFlowRequest,\r\n        cacheLookupPolicy: CacheLookupPolicy\r\n    ): Promise<AuthenticationResult> {\r\n        this.performanceClient.addQueueMeasurement(\r\n            PerformanceEvents.AcquireTokenFromCache,\r\n            commonRequest.correlationId\r\n        );\r\n        switch (cacheLookupPolicy) {\r\n            case CacheLookupPolicy.Default:\r\n            case CacheLookupPolicy.AccessToken:\r\n            case CacheLookupPolicy.AccessTokenAndRefreshToken:\r\n                const silentCacheClient = this.createSilentCacheClient(\r\n                    commonRequest.correlationId\r\n                );\r\n                return invokeAsync(\r\n                    silentCacheClient.acquireToken.bind(silentCacheClient),\r\n                    PerformanceEvents.SilentCacheClientAcquireToken,\r\n                    this.logger,\r\n                    this.performanceClient,\r\n                    commonRequest.correlationId\r\n                )(commonRequest);\r\n            default:\r\n                throw createClientAuthError(\r\n                    ClientAuthErrorCodes.tokenRefreshRequired\r\n                );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Attempt to acquire an access token via a refresh token\r\n     * @param commonRequest CommonSilentFlowRequest\r\n     * @param cacheLookupPolicy CacheLookupPolicy\r\n     * @returns A promise that, when resolved, returns the access token\r\n     */\r\n    public async acquireTokenByRefreshToken(\r\n        commonRequest: CommonSilentFlowRequest,\r\n        cacheLookupPolicy: CacheLookupPolicy\r\n    ): Promise<AuthenticationResult> {\r\n        this.performanceClient.addQueueMeasurement(\r\n            PerformanceEvents.AcquireTokenByRefreshToken,\r\n            commonRequest.correlationId\r\n        );\r\n        switch (cacheLookupPolicy) {\r\n            case CacheLookupPolicy.Default:\r\n            case CacheLookupPolicy.AccessTokenAndRefreshToken:\r\n            case CacheLookupPolicy.RefreshToken:\r\n            case CacheLookupPolicy.RefreshTokenAndNetwork:\r\n                const silentRefreshClient = this.createSilentRefreshClient(\r\n                    commonRequest.correlationId\r\n                );\r\n\r\n                return invokeAsync(\r\n                    silentRefreshClient.acquireToken.bind(silentRefreshClient),\r\n                    PerformanceEvents.SilentRefreshClientAcquireToken,\r\n                    this.logger,\r\n                    this.performanceClient,\r\n                    commonRequest.correlationId\r\n                )(commonRequest);\r\n            default:\r\n                throw createClientAuthError(\r\n                    ClientAuthErrorCodes.tokenRefreshRequired\r\n                );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Attempt to acquire an access token via an iframe\r\n     * @param request CommonSilentFlowRequest\r\n     * @returns A promise that, when resolved, returns the access token\r\n     */\r\n    protected async acquireTokenBySilentIframe(\r\n        request: CommonSilentFlowRequest\r\n    ): Promise<AuthenticationResult> {\r\n        this.performanceClient.addQueueMeasurement(\r\n            PerformanceEvents.AcquireTokenBySilentIframe,\r\n            request.correlationId\r\n        );\r\n\r\n        const silentIframeClient = this.createSilentIframeClient(\r\n            request.correlationId\r\n        );\r\n\r\n        return invokeAsync(\r\n            silentIframeClient.acquireToken.bind(silentIframeClient),\r\n            PerformanceEvents.SilentIframeClientAcquireToken,\r\n            this.logger,\r\n            this.performanceClient,\r\n            request.correlationId\r\n        )(request);\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Logout\r\n\r\n    /**\r\n     * Deprecated logout function. Use logoutRedirect or logoutPopup instead\r\n     * @param logoutRequest\r\n     * @deprecated\r\n     */\r\n    async logout(logoutRequest?: EndSessionRequest): Promise<void> {\r\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\r\n        this.logger.warning(\r\n            \"logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.\",\r\n            correlationId\r\n        );\r\n        return this.logoutRedirect({\r\n            correlationId,\r\n            ...logoutRequest,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param logoutRequest\r\n     */\r\n    async logoutRedirect(logoutRequest?: EndSessionRequest): Promise<void> {\r\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\r\n        BrowserUtils.redirectPreflightCheck(this.initialized, this.config);\r\n        this.browserStorage.setInteractionInProgress(true);\r\n\r\n        const redirectClient = this.createRedirectClient(correlationId);\r\n        return redirectClient.logout(logoutRequest);\r\n    }\r\n\r\n    /**\r\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\r\n     * @param logoutRequest\r\n     */\r\n    logoutPopup(logoutRequest?: EndSessionPopupRequest): Promise<void> {\r\n        try {\r\n            const correlationId = this.getRequestCorrelationId(logoutRequest);\r\n            BrowserUtils.preflightCheck(this.initialized);\r\n            this.browserStorage.setInteractionInProgress(true);\r\n\r\n            const popupClient = this.createPopupClient(correlationId);\r\n            return popupClient.logout(logoutRequest);\r\n        } catch (e) {\r\n            // Since this function is syncronous we need to reject\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates a cache interaction client to clear broswer cache.\r\n     * @param logoutRequest\r\n     */\r\n    async clearCache(logoutRequest?: ClearCacheRequest): Promise<void> {\r\n        if (!this.isBrowserEnvironment) {\r\n            this.logger.info(\"in non-browser environment, returning early.\");\r\n            return;\r\n        }\r\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\r\n        const cacheClient = this.createSilentCacheClient(correlationId);\r\n        return cacheClient.logout(logoutRequest);\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Account APIs\r\n\r\n    /**\r\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\r\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\r\n     * @returns Array of AccountInfo objects in cache\r\n     */\r\n    getAllAccounts(accountFilter?: AccountFilter): AccountInfo[] {\r\n        return AccountManager.getAllAccounts(\r\n            this.logger,\r\n            this.browserStorage,\r\n            this.isBrowserEnvironment,\r\n            accountFilter\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns the first account found in the cache that matches the account filter passed in.\r\n     * @param accountFilter\r\n     * @returns The first account found in the cache matching the provided filter or null if no account could be found.\r\n     */\r\n    getAccount(accountFilter: AccountFilter): AccountInfo | null {\r\n        return AccountManager.getAccount(\r\n            accountFilter,\r\n            this.logger,\r\n            this.browserStorage\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns the signed in account matching username.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found.\r\n     * This API is provided for convenience but getAccountById should be used for best reliability\r\n     * @param username\r\n     * @returns The account object stored in MSAL\r\n     */\r\n    getAccountByUsername(username: string): AccountInfo | null {\r\n        return AccountManager.getAccountByUsername(\r\n            username,\r\n            this.logger,\r\n            this.browserStorage\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns the signed in account matching homeAccountId.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found\r\n     * @param homeAccountId\r\n     * @returns The account object stored in MSAL\r\n     */\r\n    getAccountByHomeId(homeAccountId: string): AccountInfo | null {\r\n        return AccountManager.getAccountByHomeId(\r\n            homeAccountId,\r\n            this.logger,\r\n            this.browserStorage\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns the signed in account matching localAccountId.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found\r\n     * @param localAccountId\r\n     * @returns The account object stored in MSAL\r\n     */\r\n    getAccountByLocalId(localAccountId: string): AccountInfo | null {\r\n        return AccountManager.getAccountByLocalId(\r\n            localAccountId,\r\n            this.logger,\r\n            this.browserStorage\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\r\n     * @param account\r\n     */\r\n    setActiveAccount(account: AccountInfo | null): void {\r\n        AccountManager.setActiveAccount(account, this.browserStorage);\r\n    }\r\n\r\n    /**\r\n     * Gets the currently active account\r\n     */\r\n    getActiveAccount(): AccountInfo | null {\r\n        return AccountManager.getActiveAccount(this.browserStorage);\r\n    }\r\n\r\n    // #endregion\r\n\r\n    /**\r\n     * Hydrates the cache with the tokens from an AuthenticationResult\r\n     * @param result\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async hydrateCache(\r\n        result: AuthenticationResult,\r\n        request:\r\n            | SilentRequest\r\n            | SsoSilentRequest\r\n            | RedirectRequest\r\n            | PopupRequest\r\n    ): Promise<void> {\r\n        this.logger.verbose(\"hydrateCache called\");\r\n\r\n        // Account gets saved to browser storage regardless of native or not\r\n        const accountEntity = AccountEntity.createFromAccountInfo(\r\n            result.account,\r\n            result.cloudGraphHostName,\r\n            result.msGraphHost\r\n        );\r\n        await this.browserStorage.setAccount(\r\n            accountEntity,\r\n            result.correlationId\r\n        );\r\n\r\n        if (result.fromNativeBroker) {\r\n            this.logger.verbose(\r\n                \"Response was from native broker, storing in-memory\"\r\n            );\r\n            // Tokens from native broker are stored in-memory\r\n            return this.nativeInternalStorage.hydrateCache(result, request);\r\n        } else {\r\n            return this.browserStorage.hydrateCache(result, request);\r\n        }\r\n    }\r\n\r\n    // #region Helpers\r\n\r\n    /**\r\n     * Acquire a token from native device (e.g. WAM)\r\n     * @param request\r\n     */\r\n    public async acquireTokenNative(\r\n        request: PopupRequest | SilentRequest | SsoSilentRequest,\r\n        apiId: ApiId,\r\n        accountId?: string\r\n    ): Promise<AuthenticationResult> {\r\n        this.logger.trace(\"acquireTokenNative called\");\r\n        if (!this.nativeExtensionProvider) {\r\n            throw createBrowserAuthError(\r\n                BrowserAuthErrorCodes.nativeConnectionNotEstablished\r\n            );\r\n        }\r\n\r\n        const nativeClient = new NativeInteractionClient(\r\n            this.config,\r\n            this.browserStorage,\r\n            this.browserCrypto,\r\n            this.logger,\r\n            this.eventHandler,\r\n            this.navigationClient,\r\n            apiId,\r\n            this.performanceClient,\r\n            this.nativeExtensionProvider,\r\n            accountId || this.getNativeAccountId(request),\r\n            this.nativeInternalStorage,\r\n            request.correlationId\r\n        );\r\n\r\n        return nativeClient.acquireToken(request);\r\n    }\r\n\r\n    /**\r\n     * Returns boolean indicating if this request can use the platform broker\r\n     * @param request\r\n     */\r\n    public canUsePlatformBroker(\r\n        request: RedirectRequest | PopupRequest | SsoSilentRequest,\r\n        accountId?: string\r\n    ): boolean {\r\n        this.logger.trace(\"canUsePlatformBroker called\");\r\n        if (\r\n            !NativeMessageHandler.isPlatformBrokerAvailable(\r\n                this.config,\r\n                this.logger,\r\n                this.nativeExtensionProvider,\r\n                request.authenticationScheme\r\n            )\r\n        ) {\r\n            this.logger.trace(\r\n                \"canUsePlatformBroker: isPlatformBrokerAvailable returned false, returning false\"\r\n            );\r\n            return false;\r\n        }\r\n\r\n        if (request.prompt) {\r\n            switch (request.prompt) {\r\n                case PromptValue.NONE:\r\n                case PromptValue.CONSENT:\r\n                case PromptValue.LOGIN:\r\n                    this.logger.trace(\r\n                        \"canUsePlatformBroker: prompt is compatible with platform broker flow\"\r\n                    );\r\n                    break;\r\n                default:\r\n                    this.logger.trace(\r\n                        `canUsePlatformBroker: prompt = ${request.prompt} is not compatible with platform broker flow, returning false`\r\n                    );\r\n                    return false;\r\n            }\r\n        }\r\n\r\n        if (!accountId && !this.getNativeAccountId(request)) {\r\n            this.logger.trace(\r\n                \"canUsePlatformBroker: nativeAccountId is not available, returning false\"\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get the native accountId from the account\r\n     * @param request\r\n     * @returns\r\n     */\r\n    public getNativeAccountId(\r\n        request: RedirectRequest | PopupRequest | SsoSilentRequest\r\n    ): string {\r\n        const account =\r\n            request.account ||\r\n            this.getAccount({\r\n                loginHint: request.loginHint,\r\n                sid: request.sid,\r\n            }) ||\r\n            this.getActiveAccount();\r\n\r\n        return (account && account.nativeAccountId) || \"\";\r\n    }\r\n\r\n    /**\r\n     * Returns new instance of the Popup Interaction Client\r\n     * @param correlationId\r\n     */\r\n    public createPopupClient(correlationId?: string): PopupClient {\r\n        return new PopupClient(\r\n            this.config,\r\n            this.browserStorage,\r\n            this.browserCrypto,\r\n            this.logger,\r\n            this.eventHandler,\r\n            this.navigationClient,\r\n            this.performanceClient,\r\n            this.nativeInternalStorage,\r\n            this.nativeExtensionProvider,\r\n            correlationId\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns new instance of the Redirect Interaction Client\r\n     * @param correlationId\r\n     */\r\n    protected createRedirectClient(correlationId?: string): RedirectClient {\r\n        return new RedirectClient(\r\n            this.config,\r\n            this.browserStorage,\r\n            this.browserCrypto,\r\n            this.logger,\r\n            this.eventHandler,\r\n            this.navigationClient,\r\n            this.performanceClient,\r\n            this.nativeInternalStorage,\r\n            this.nativeExtensionProvider,\r\n            correlationId\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns new instance of the Silent Iframe Interaction Client\r\n     * @param correlationId\r\n     */\r\n    public createSilentIframeClient(\r\n        correlationId?: string\r\n    ): SilentIframeClient {\r\n        return new SilentIframeClient(\r\n            this.config,\r\n            this.browserStorage,\r\n            this.browserCrypto,\r\n            this.logger,\r\n            this.eventHandler,\r\n            this.navigationClient,\r\n            ApiId.ssoSilent,\r\n            this.performanceClient,\r\n            this.nativeInternalStorage,\r\n            this.nativeExtensionProvider,\r\n            correlationId\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns new instance of the Silent Cache Interaction Client\r\n     */\r\n    protected createSilentCacheClient(\r\n        correlationId?: string\r\n    ): SilentCacheClient {\r\n        return new SilentCacheClient(\r\n            this.config,\r\n            this.browserStorage,\r\n            this.browserCrypto,\r\n            this.logger,\r\n            this.eventHandler,\r\n            this.navigationClient,\r\n            this.performanceClient,\r\n            this.nativeExtensionProvider,\r\n            correlationId\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns new instance of the Silent Refresh Interaction Client\r\n     */\r\n    protected createSilentRefreshClient(\r\n        correlationId?: string\r\n    ): SilentRefreshClient {\r\n        return new SilentRefreshClient(\r\n            this.config,\r\n            this.browserStorage,\r\n            this.browserCrypto,\r\n            this.logger,\r\n            this.eventHandler,\r\n            this.navigationClient,\r\n            this.performanceClient,\r\n            this.nativeExtensionProvider,\r\n            correlationId\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns new instance of the Silent AuthCode Interaction Client\r\n     */\r\n    protected createSilentAuthCodeClient(\r\n        correlationId?: string\r\n    ): SilentAuthCodeClient {\r\n        return new SilentAuthCodeClient(\r\n            this.config,\r\n            this.browserStorage,\r\n            this.browserCrypto,\r\n            this.logger,\r\n            this.eventHandler,\r\n            this.navigationClient,\r\n            ApiId.acquireTokenByCode,\r\n            this.performanceClient,\r\n            this.nativeExtensionProvider,\r\n            correlationId\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Adds event callbacks to array\r\n     * @param callback\r\n     */\r\n    addEventCallback(\r\n        callback: EventCallbackFunction,\r\n        eventTypes?: Array<EventType>\r\n    ): string | null {\r\n        return this.eventHandler.addEventCallback(callback, eventTypes);\r\n    }\r\n\r\n    /**\r\n     * Removes callback with provided id from callback array\r\n     * @param callbackId\r\n     */\r\n    removeEventCallback(callbackId: string): void {\r\n        this.eventHandler.removeEventCallback(callbackId);\r\n    }\r\n\r\n    /**\r\n     * Registers a callback to receive performance events.\r\n     *\r\n     * @param {PerformanceCallbackFunction} callback\r\n     * @returns {string}\r\n     */\r\n    addPerformanceCallback(callback: PerformanceCallbackFunction): string {\r\n        BrowserUtils.blockNonBrowserEnvironment();\r\n        return this.performanceClient.addPerformanceCallback(callback);\r\n    }\r\n\r\n    /**\r\n     * Removes a callback registered with addPerformanceCallback.\r\n     *\r\n     * @param {string} callbackId\r\n     * @returns {boolean}\r\n     */\r\n    removePerformanceCallback(callbackId: string): boolean {\r\n        return this.performanceClient.removePerformanceCallback(callbackId);\r\n    }\r\n\r\n    /**\r\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\r\n     * @deprecated These events will be raised by default and this method will be removed in a future major version.\r\n     */\r\n    enableAccountStorageEvents(): void {\r\n        if (\r\n            this.config.cache.cacheLocation !==\r\n            BrowserCacheLocation.LocalStorage\r\n        ) {\r\n            this.logger.info(\r\n                \"Account storage events are only available when cacheLocation is set to localStorage\"\r\n            );\r\n            return;\r\n        }\r\n\r\n        this.eventHandler.subscribeCrossTab();\r\n    }\r\n\r\n    /**\r\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\r\n     * @deprecated These events will be raised by default and this method will be removed in a future major version.\r\n     */\r\n    disableAccountStorageEvents(): void {\r\n        if (\r\n            this.config.cache.cacheLocation !==\r\n            BrowserCacheLocation.LocalStorage\r\n        ) {\r\n            this.logger.info(\r\n                \"Account storage events are only available when cacheLocation is set to localStorage\"\r\n            );\r\n            return;\r\n        }\r\n\r\n        this.eventHandler.unsubscribeCrossTab();\r\n    }\r\n\r\n    /**\r\n     * Gets the token cache for the application.\r\n     */\r\n    getTokenCache(): ITokenCache {\r\n        return this.tokenCache;\r\n    }\r\n\r\n    /**\r\n     * Returns the logger instance\r\n     */\r\n    public getLogger(): Logger {\r\n        return this.logger;\r\n    }\r\n\r\n    /**\r\n     * Replaces the default logger set in configurations with new Logger with new configurations\r\n     * @param logger Logger instance\r\n     */\r\n    setLogger(logger: Logger): void {\r\n        this.logger = logger;\r\n    }\r\n\r\n    /**\r\n     * Called by wrapper libraries (Angular & React) to set SKU and Version passed down to telemetry, logger, etc.\r\n     * @param sku\r\n     * @param version\r\n     */\r\n    initializeWrapperLibrary(sku: WrapperSKU, version: string): void {\r\n        // Validate the SKU passed in is one we expect\r\n        this.browserStorage.setWrapperMetadata(sku, version);\r\n    }\r\n\r\n    /**\r\n     * Sets navigation client\r\n     * @param navigationClient\r\n     */\r\n    setNavigationClient(navigationClient: INavigationClient): void {\r\n        this.navigationClient = navigationClient;\r\n    }\r\n\r\n    /**\r\n     * Returns the configuration object\r\n     */\r\n    public getConfiguration(): BrowserConfiguration {\r\n        return this.config;\r\n    }\r\n\r\n    /**\r\n     * Returns the performance client\r\n     */\r\n    public getPerformanceClient(): IPerformanceClient {\r\n        return this.performanceClient;\r\n    }\r\n\r\n    /**\r\n     * Returns the browser env indicator\r\n     */\r\n    public isBrowserEnv(): boolean {\r\n        return this.isBrowserEnvironment;\r\n    }\r\n\r\n    /**\r\n     * Generates a correlation id for a request if none is provided.\r\n     *\r\n     * @protected\r\n     * @param {?Partial<BaseAuthRequest>} [request]\r\n     * @returns {string}\r\n     */\r\n    protected getRequestCorrelationId(\r\n        request?: Partial<BaseAuthRequest>\r\n    ): string {\r\n        if (request?.correlationId) {\r\n            return request.correlationId;\r\n        }\r\n\r\n        if (this.isBrowserEnvironment) {\r\n            return createNewGuid();\r\n        }\r\n\r\n        /*\r\n         * Included for fallback for non-browser environments,\r\n         * and to ensure this method always returns a string.\r\n         */\r\n        return Constants.EMPTY_STRING;\r\n    }\r\n\r\n    // #endregion\r\n\r\n    /**\r\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\r\n     * any code that follows this function will not execute.\r\n     *\r\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n     *\r\n     * @param request\r\n     */\r\n    async loginRedirect(request?: RedirectRequest): Promise<void> {\r\n        const correlationId: string = this.getRequestCorrelationId(request);\r\n        this.logger.verbose(\"loginRedirect called\", correlationId);\r\n        return this.acquireTokenRedirect({\r\n            correlationId,\r\n            ...(request || DEFAULT_REQUEST),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Use when initiating the login process via opening a popup window in the user's browser\r\n     *\r\n     * @param request\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    loginPopup(request?: PopupRequest): Promise<AuthenticationResult> {\r\n        const correlationId: string = this.getRequestCorrelationId(request);\r\n        this.logger.verbose(\"loginPopup called\", correlationId);\r\n        return this.acquireTokenPopup({\r\n            correlationId,\r\n            ...(request || DEFAULT_REQUEST),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Silently acquire an access token for a given set of scopes. Returns currently processing promise if parallel requests are made.\r\n     *\r\n     * @param {@link (SilentRequest:type)}\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     */\r\n    async acquireTokenSilent(\r\n        request: SilentRequest\r\n    ): Promise<AuthenticationResult> {\r\n        const correlationId = this.getRequestCorrelationId(request);\r\n        const atsMeasurement = this.performanceClient.startMeasurement(\r\n            PerformanceEvents.AcquireTokenSilent,\r\n            correlationId\r\n        );\r\n        atsMeasurement.add({\r\n            cacheLookupPolicy: request.cacheLookupPolicy,\r\n            scenarioId: request.scenarioId,\r\n        });\r\n\r\n        preflightCheck(this.initialized, atsMeasurement);\r\n        this.logger.verbose(\"acquireTokenSilent called\", correlationId);\r\n\r\n        const account = request.account || this.getActiveAccount();\r\n        if (!account) {\r\n            throw createBrowserAuthError(BrowserAuthErrorCodes.noAccountError);\r\n        }\r\n        atsMeasurement.add({ accountType: getAccountType(account) });\r\n\r\n        const thumbprint: RequestThumbprint = {\r\n            clientId: this.config.auth.clientId,\r\n            authority: request.authority || Constants.EMPTY_STRING,\r\n            scopes: request.scopes,\r\n            homeAccountIdentifier: account.homeAccountId,\r\n            claims: request.claims,\r\n            authenticationScheme: request.authenticationScheme,\r\n            resourceRequestMethod: request.resourceRequestMethod,\r\n            resourceRequestUri: request.resourceRequestUri,\r\n            shrClaims: request.shrClaims,\r\n            sshKid: request.sshKid,\r\n            shrOptions: request.shrOptions,\r\n        };\r\n        const silentRequestKey = JSON.stringify(thumbprint);\r\n\r\n        const cachedResponse =\r\n            this.activeSilentTokenRequests.get(silentRequestKey);\r\n        if (typeof cachedResponse === \"undefined\") {\r\n            this.logger.verbose(\r\n                \"acquireTokenSilent called for the first time, storing active request\",\r\n                correlationId\r\n            );\r\n\r\n            const response = invokeAsync(\r\n                this.acquireTokenSilentAsync.bind(this),\r\n                PerformanceEvents.AcquireTokenSilentAsync,\r\n                this.logger,\r\n                this.performanceClient,\r\n                correlationId\r\n            )(\r\n                {\r\n                    ...request,\r\n                    correlationId,\r\n                },\r\n                account\r\n            )\r\n                .then((result) => {\r\n                    this.activeSilentTokenRequests.delete(silentRequestKey);\r\n                    atsMeasurement.end({\r\n                        success: true,\r\n                        fromCache: result.fromCache,\r\n                        isNativeBroker: result.fromNativeBroker,\r\n                        cacheLookupPolicy: request.cacheLookupPolicy,\r\n                        accessTokenSize: result.accessToken.length,\r\n                        idTokenSize: result.idToken.length,\r\n                    });\r\n                    return result;\r\n                })\r\n                .catch((error: Error) => {\r\n                    this.activeSilentTokenRequests.delete(silentRequestKey);\r\n                    atsMeasurement.end(\r\n                        {\r\n                            success: false,\r\n                        },\r\n                        error\r\n                    );\r\n                    throw error;\r\n                });\r\n            this.activeSilentTokenRequests.set(silentRequestKey, response);\r\n            return {\r\n                ...(await response),\r\n                state: request.state,\r\n            };\r\n        } else {\r\n            this.logger.verbose(\r\n                \"acquireTokenSilent has been called previously, returning the result from the first call\",\r\n                correlationId\r\n            );\r\n            // Discard measurements for memoized calls, as they are usually only a couple of ms and will artificially deflate metrics\r\n            atsMeasurement.discard();\r\n            return {\r\n                ...(await cachedResponse),\r\n                state: request.state,\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Silently acquire an access token for a given set of scopes. Will use cached token if available, otherwise will attempt to acquire a new token from the network via refresh token.\r\n     * @param {@link (SilentRequest:type)}\r\n     * @param {@link (AccountInfo:type)}\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse}\r\n     */\r\n    protected async acquireTokenSilentAsync(\r\n        request: SilentRequest & { correlationId: string },\r\n        account: AccountInfo\r\n    ): Promise<AuthenticationResult> {\r\n        const trackPageVisibility = () =>\r\n            this.trackPageVisibility(request.correlationId);\r\n        this.performanceClient.addQueueMeasurement(\r\n            PerformanceEvents.AcquireTokenSilentAsync,\r\n            request.correlationId\r\n        );\r\n\r\n        this.eventHandler.emitEvent(\r\n            EventType.ACQUIRE_TOKEN_START,\r\n            InteractionType.Silent,\r\n            request\r\n        );\r\n\r\n        if (request.correlationId) {\r\n            this.performanceClient.incrementFields(\r\n                { visibilityChangeCount: 0 },\r\n                request.correlationId\r\n            );\r\n        }\r\n\r\n        document.addEventListener(\"visibilitychange\", trackPageVisibility);\r\n\r\n        const silentRequest = await invokeAsync(\r\n            initializeSilentRequest,\r\n            PerformanceEvents.InitializeSilentRequest,\r\n            this.logger,\r\n            this.performanceClient,\r\n            request.correlationId\r\n        )(request, account, this.config, this.performanceClient, this.logger);\r\n        const cacheLookupPolicy =\r\n            request.cacheLookupPolicy || CacheLookupPolicy.Default;\r\n\r\n        const result = this.acquireTokenSilentNoIframe(\r\n            silentRequest,\r\n            cacheLookupPolicy\r\n        ).catch(async (refreshTokenError: AuthError) => {\r\n            const shouldTryToResolveSilently =\r\n                checkIfRefreshTokenErrorCanBeResolvedSilently(\r\n                    refreshTokenError,\r\n                    cacheLookupPolicy\r\n                );\r\n\r\n            if (shouldTryToResolveSilently) {\r\n                if (!this.activeIframeRequest) {\r\n                    let _resolve: (result: boolean) => void;\r\n                    // Always set the active request tracker immediately after checking it to prevent races\r\n                    this.activeIframeRequest = [\r\n                        new Promise((resolve) => {\r\n                            _resolve = resolve;\r\n                        }),\r\n                        silentRequest.correlationId,\r\n                    ];\r\n                    this.logger.verbose(\r\n                        \"Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.\",\r\n                        silentRequest.correlationId\r\n                    );\r\n                    return invokeAsync(\r\n                        this.acquireTokenBySilentIframe.bind(this),\r\n                        PerformanceEvents.AcquireTokenBySilentIframe,\r\n                        this.logger,\r\n                        this.performanceClient,\r\n                        silentRequest.correlationId\r\n                    )(silentRequest)\r\n                        .then((iframeResult) => {\r\n                            _resolve(true);\r\n                            return iframeResult;\r\n                        })\r\n                        .catch((e) => {\r\n                            _resolve(false);\r\n                            throw e;\r\n                        })\r\n                        .finally(() => {\r\n                            this.activeIframeRequest = undefined;\r\n                        });\r\n                } else if (cacheLookupPolicy !== CacheLookupPolicy.Skip) {\r\n                    const [activePromise, activeCorrelationId] =\r\n                        this.activeIframeRequest;\r\n                    this.logger.verbose(\r\n                        `Iframe request is already in progress, awaiting resolution for request with correlationId: ${activeCorrelationId}`,\r\n                        silentRequest.correlationId\r\n                    );\r\n                    const awaitConcurrentIframeMeasure =\r\n                        this.performanceClient.startMeasurement(\r\n                            PerformanceEvents.AwaitConcurrentIframe,\r\n                            silentRequest.correlationId\r\n                        );\r\n                    awaitConcurrentIframeMeasure.add({\r\n                        awaitIframeCorrelationId: activeCorrelationId,\r\n                    });\r\n\r\n                    const activePromiseResult = await activePromise;\r\n                    awaitConcurrentIframeMeasure.end({\r\n                        success: activePromiseResult,\r\n                    });\r\n                    if (activePromiseResult) {\r\n                        this.logger.verbose(\r\n                            `Parallel iframe request with correlationId: ${activeCorrelationId} succeeded. Retrying cache and/or RT redemption`,\r\n                            silentRequest.correlationId\r\n                        );\r\n                        // Retry cache lookup and/or RT exchange after iframe completes\r\n                        return this.acquireTokenSilentNoIframe(\r\n                            silentRequest,\r\n                            cacheLookupPolicy\r\n                        );\r\n                    } else {\r\n                        this.logger.info(\r\n                            `Iframe request with correlationId: ${activeCorrelationId} failed. Interaction is required.`\r\n                        );\r\n                        // If previous iframe request failed, it's unlikely to succeed this time. Throw original error.\r\n                        throw refreshTokenError;\r\n                    }\r\n                } else {\r\n                    // Cache policy set to skip and another iframe request is already in progress\r\n                    this.logger.warning(\r\n                        \"Another iframe request is currently in progress and CacheLookupPolicy is set to Skip. This may result in degraded performance and/or reliability for both calls. Please consider changing the CacheLookupPolicy to take advantage of request queuing and token cache.\",\r\n                        silentRequest.correlationId\r\n                    );\r\n                    return invokeAsync(\r\n                        this.acquireTokenBySilentIframe.bind(this),\r\n                        PerformanceEvents.AcquireTokenBySilentIframe,\r\n                        this.logger,\r\n                        this.performanceClient,\r\n                        silentRequest.correlationId\r\n                    )(silentRequest);\r\n                }\r\n            } else {\r\n                // Error cannot be silently resolved or iframe renewal is not allowed, interaction required\r\n                throw refreshTokenError;\r\n            }\r\n        });\r\n\r\n        return result\r\n            .then((response) => {\r\n                this.eventHandler.emitEvent(\r\n                    EventType.ACQUIRE_TOKEN_SUCCESS,\r\n                    InteractionType.Silent,\r\n                    response\r\n                );\r\n                if (request.correlationId) {\r\n                    this.performanceClient.addFields(\r\n                        {\r\n                            fromCache: response.fromCache,\r\n                            isNativeBroker: response.fromNativeBroker,\r\n                        },\r\n                        request.correlationId\r\n                    );\r\n                }\r\n\r\n                return response;\r\n            })\r\n            .catch((tokenRenewalError: Error) => {\r\n                this.eventHandler.emitEvent(\r\n                    EventType.ACQUIRE_TOKEN_FAILURE,\r\n                    InteractionType.Silent,\r\n                    null,\r\n                    tokenRenewalError\r\n                );\r\n                throw tokenRenewalError;\r\n            })\r\n            .finally(() => {\r\n                document.removeEventListener(\r\n                    \"visibilitychange\",\r\n                    trackPageVisibility\r\n                );\r\n            });\r\n    }\r\n\r\n    /**\r\n     * AcquireTokenSilent without the iframe fallback. This is used to enable the correct fallbacks in cases where there's a potential for multiple silent requests to be made in parallel and prevent those requests from making concurrent iframe requests.\r\n     * @param silentRequest\r\n     * @param cacheLookupPolicy\r\n     * @returns\r\n     */\r\n    private async acquireTokenSilentNoIframe(\r\n        silentRequest: CommonSilentFlowRequest,\r\n        cacheLookupPolicy: CacheLookupPolicy\r\n    ): Promise<AuthenticationResult> {\r\n        if (\r\n            NativeMessageHandler.isPlatformBrokerAvailable(\r\n                this.config,\r\n                this.logger,\r\n                this.nativeExtensionProvider,\r\n                silentRequest.authenticationScheme\r\n            ) &&\r\n            silentRequest.account.nativeAccountId\r\n        ) {\r\n            this.logger.verbose(\r\n                \"acquireTokenSilent - attempting to acquire token from native platform\"\r\n            );\r\n            return this.acquireTokenNative(\r\n                silentRequest,\r\n                ApiId.acquireTokenSilent_silentFlow\r\n            ).catch(async (e: AuthError) => {\r\n                // If native token acquisition fails for availability reasons fallback to web flow\r\n                if (e instanceof NativeAuthError && isFatalNativeAuthError(e)) {\r\n                    this.logger.verbose(\r\n                        \"acquireTokenSilent - native platform unavailable, falling back to web flow\"\r\n                    );\r\n                    this.nativeExtensionProvider = undefined; // Prevent future requests from continuing to attempt\r\n\r\n                    // Cache will not contain tokens, given that previous WAM requests succeeded. Skip cache and RT renewal and go straight to iframe renewal\r\n                    throw createClientAuthError(\r\n                        ClientAuthErrorCodes.tokenRefreshRequired\r\n                    );\r\n                }\r\n                throw e;\r\n            });\r\n        } else {\r\n            this.logger.verbose(\r\n                \"acquireTokenSilent - attempting to acquire token from web flow\"\r\n            );\r\n            return invokeAsync(\r\n                this.acquireTokenFromCache.bind(this),\r\n                PerformanceEvents.AcquireTokenFromCache,\r\n                this.logger,\r\n                this.performanceClient,\r\n                silentRequest.correlationId\r\n            )(silentRequest, cacheLookupPolicy).catch(\r\n                (cacheError: AuthError) => {\r\n                    if (cacheLookupPolicy === CacheLookupPolicy.AccessToken) {\r\n                        throw cacheError;\r\n                    }\r\n\r\n                    this.eventHandler.emitEvent(\r\n                        EventType.ACQUIRE_TOKEN_NETWORK_START,\r\n                        InteractionType.Silent,\r\n                        silentRequest\r\n                    );\r\n\r\n                    return invokeAsync(\r\n                        this.acquireTokenByRefreshToken.bind(this),\r\n                        PerformanceEvents.AcquireTokenByRefreshToken,\r\n                        this.logger,\r\n                        this.performanceClient,\r\n                        silentRequest.correlationId\r\n                    )(silentRequest, cacheLookupPolicy);\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Pre-generates PKCE codes and stores it in local variable\r\n     * @param correlationId\r\n     */\r\n    private async preGeneratePkceCodes(correlationId: string): Promise<void> {\r\n        this.logger.verbose(\"Generating new PKCE codes\");\r\n        this.pkceCode = await invokeAsync(\r\n            generatePkceCodes,\r\n            PerformanceEvents.GeneratePkceCodes,\r\n            this.logger,\r\n            this.performanceClient,\r\n            correlationId\r\n        )(this.performanceClient, this.logger, correlationId);\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /**\r\n     * Provides pre-generated PKCE codes, if any\r\n     * @param correlationId\r\n     */\r\n    private getPreGeneratedPkceCodes(\r\n        correlationId: string\r\n    ): PkceCodes | undefined {\r\n        this.logger.verbose(\"Attempting to pick up pre-generated PKCE codes\");\r\n        const res = this.pkceCode ? { ...this.pkceCode } : undefined;\r\n        this.pkceCode = undefined;\r\n        this.logger.verbose(\r\n            `${res ? \"Found\" : \"Did not find\"} pre-generated PKCE codes`\r\n        );\r\n        this.performanceClient.addFields(\r\n            { usePreGeneratedPkce: !!res },\r\n            correlationId\r\n        );\r\n        return res;\r\n    }\r\n}\r\n\r\n/**\r\n * Determines whether an error thrown by the refresh token endpoint can be resolved without interaction\r\n * @param refreshTokenError\r\n * @param silentRequest\r\n * @param cacheLookupPolicy\r\n * @returns\r\n */\r\nfunction checkIfRefreshTokenErrorCanBeResolvedSilently(\r\n    refreshTokenError: AuthError,\r\n    cacheLookupPolicy: CacheLookupPolicy\r\n): boolean {\r\n    const noInteractionRequired = !(\r\n        refreshTokenError instanceof InteractionRequiredAuthError &&\r\n        // For refresh token errors, bad_token does not always require interaction (silently resolvable)\r\n        refreshTokenError.subError !==\r\n            InteractionRequiredAuthErrorCodes.badToken\r\n    );\r\n\r\n    // Errors that result when the refresh token needs to be replaced\r\n    const refreshTokenRefreshRequired =\r\n        refreshTokenError.errorCode === BrowserConstants.INVALID_GRANT_ERROR ||\r\n        refreshTokenError.errorCode ===\r\n            ClientAuthErrorCodes.tokenRefreshRequired;\r\n\r\n    // Errors that may be resolved before falling back to interaction (through iframe renewal)\r\n    const isSilentlyResolvable =\r\n        (noInteractionRequired && refreshTokenRefreshRequired) ||\r\n        refreshTokenError.errorCode ===\r\n            InteractionRequiredAuthErrorCodes.noTokensFound ||\r\n        refreshTokenError.errorCode ===\r\n            InteractionRequiredAuthErrorCodes.refreshTokenExpired;\r\n\r\n    // Only these policies allow for an iframe renewal attempt\r\n    const tryIframeRenewal = iFrameRenewalPolicies.includes(cacheLookupPolicy);\r\n\r\n    return isSilentlyResolvable && tryIframeRenewal;\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AccountInfo, AccountFilter, Logger } from \"@azure/msal-common/browser\";\r\nimport { BrowserCacheManager } from \"./BrowserCacheManager.js\";\r\n\r\n/**\r\n * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\r\n * @param accountFilter - (Optional) filter to narrow down the accounts returned\r\n * @returns Array of AccountInfo objects in cache\r\n */\r\nexport function getAllAccounts(\r\n    logger: Logger,\r\n    browserStorage: BrowserCacheManager,\r\n    isInBrowser: boolean,\r\n    accountFilter?: AccountFilter\r\n): AccountInfo[] {\r\n    logger.verbose(\"getAllAccounts called\");\r\n    return isInBrowser ? browserStorage.getAllAccounts(accountFilter) : [];\r\n}\r\n\r\n/**\r\n * Returns the first account found in the cache that matches the account filter passed in.\r\n * @param accountFilter\r\n * @returns The first account found in the cache matching the provided filter or null if no account could be found.\r\n */\r\nexport function getAccount(\r\n    accountFilter: AccountFilter,\r\n    logger: Logger,\r\n    browserStorage: BrowserCacheManager\r\n): AccountInfo | null {\r\n    logger.trace(\"getAccount called\");\r\n    if (Object.keys(accountFilter).length === 0) {\r\n        logger.warning(\"getAccount: No accountFilter provided\");\r\n        return null;\r\n    }\r\n\r\n    const account: AccountInfo | null =\r\n        browserStorage.getAccountInfoFilteredBy(accountFilter);\r\n\r\n    if (account) {\r\n        logger.verbose(\r\n            \"getAccount: Account matching provided filter found, returning\"\r\n        );\r\n        return account;\r\n    } else {\r\n        logger.verbose(\"getAccount: No matching account found, returning null\");\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns the signed in account matching username.\r\n * (the account object is created at the time of successful login)\r\n * or null when no matching account is found.\r\n * This API is provided for convenience but getAccountById should be used for best reliability\r\n * @param username\r\n * @returns The account object stored in MSAL\r\n */\r\nexport function getAccountByUsername(\r\n    username: string,\r\n    logger: Logger,\r\n    browserStorage: BrowserCacheManager\r\n): AccountInfo | null {\r\n    logger.trace(\"getAccountByUsername called\");\r\n    if (!username) {\r\n        logger.warning(\"getAccountByUsername: No username provided\");\r\n        return null;\r\n    }\r\n\r\n    const account = browserStorage.getAccountInfoFilteredBy({\r\n        username,\r\n    });\r\n    if (account) {\r\n        logger.verbose(\r\n            \"getAccountByUsername: Account matching username found, returning\"\r\n        );\r\n        logger.verbosePii(\r\n            `getAccountByUsername: Returning signed-in accounts matching username: ${username}`\r\n        );\r\n        return account;\r\n    } else {\r\n        logger.verbose(\r\n            \"getAccountByUsername: No matching account found, returning null\"\r\n        );\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns the signed in account matching homeAccountId.\r\n * (the account object is created at the time of successful login)\r\n * or null when no matching account is found\r\n * @param homeAccountId\r\n * @returns The account object stored in MSAL\r\n */\r\nexport function getAccountByHomeId(\r\n    homeAccountId: string,\r\n    logger: Logger,\r\n    browserStorage: BrowserCacheManager\r\n): AccountInfo | null {\r\n    logger.trace(\"getAccountByHomeId called\");\r\n    if (!homeAccountId) {\r\n        logger.warning(\"getAccountByHomeId: No homeAccountId provided\");\r\n        return null;\r\n    }\r\n\r\n    const account = browserStorage.getAccountInfoFilteredBy({\r\n        homeAccountId,\r\n    });\r\n    if (account) {\r\n        logger.verbose(\r\n            \"getAccountByHomeId: Account matching homeAccountId found, returning\"\r\n        );\r\n        logger.verbosePii(\r\n            `getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${homeAccountId}`\r\n        );\r\n        return account;\r\n    } else {\r\n        logger.verbose(\r\n            \"getAccountByHomeId: No matching account found, returning null\"\r\n        );\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns the signed in account matching localAccountId.\r\n * (the account object is created at the time of successful login)\r\n * or null when no matching account is found\r\n * @param localAccountId\r\n * @returns The account object stored in MSAL\r\n */\r\nexport function getAccountByLocalId(\r\n    localAccountId: string,\r\n    logger: Logger,\r\n    browserStorage: BrowserCacheManager\r\n): AccountInfo | null {\r\n    logger.trace(\"getAccountByLocalId called\");\r\n    if (!localAccountId) {\r\n        logger.warning(\"getAccountByLocalId: No localAccountId provided\");\r\n        return null;\r\n    }\r\n\r\n    const account = browserStorage.getAccountInfoFilteredBy({\r\n        localAccountId,\r\n    });\r\n    if (account) {\r\n        logger.verbose(\r\n            \"getAccountByLocalId: Account matching localAccountId found, returning\"\r\n        );\r\n        logger.verbosePii(\r\n            `getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${localAccountId}`\r\n        );\r\n        return account;\r\n    } else {\r\n        logger.verbose(\r\n            \"getAccountByLocalId: No matching account found, returning null\"\r\n        );\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\r\n * @param account\r\n */\r\nexport function setActiveAccount(\r\n    account: AccountInfo | null,\r\n    browserStorage: BrowserCacheManager\r\n): void {\r\n    browserStorage.setActiveAccount(account);\r\n}\r\n\r\n/**\r\n * Gets the currently active account\r\n */\r\nexport function getActiveAccount(\r\n    browserStorage: BrowserCacheManager\r\n): AccountInfo | null {\r\n    return browserStorage.getActiveAccount();\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { ITokenCache } from \"../cache/ITokenCache.js\";\r\nimport { INavigationClient } from \"../navigation/INavigationClient.js\";\r\nimport { AuthorizationCodeRequest } from \"../request/AuthorizationCodeRequest.js\";\r\nimport { PopupRequest } from \"../request/PopupRequest.js\";\r\nimport { RedirectRequest } from \"../request/RedirectRequest.js\";\r\nimport { SilentRequest } from \"../request/SilentRequest.js\";\r\nimport { WrapperSKU } from \"../utils/BrowserConstants.js\";\r\nimport { IPublicClientApplication } from \"./IPublicClientApplication.js\";\r\nimport { IController } from \"../controllers/IController.js\";\r\nimport {\r\n    PerformanceCallbackFunction,\r\n    AccountInfo,\r\n    AccountFilter,\r\n    Logger,\r\n} from \"@azure/msal-common/browser\";\r\nimport { EndSessionRequest } from \"../request/EndSessionRequest.js\";\r\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest.js\";\r\nimport * as ControllerFactory from \"../controllers/ControllerFactory.js\";\r\nimport { StandardController } from \"../controllers/StandardController.js\";\r\nimport {\r\n    BrowserConfiguration,\r\n    Configuration,\r\n} from \"../config/Configuration.js\";\r\nimport { StandardOperatingContext } from \"../operatingcontext/StandardOperatingContext.js\";\r\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\r\nimport { EventCallbackFunction } from \"../event/EventMessage.js\";\r\nimport { ClearCacheRequest } from \"../request/ClearCacheRequest.js\";\r\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest.js\";\r\nimport { NestedAppAuthController } from \"../controllers/NestedAppAuthController.js\";\r\nimport { NestedAppOperatingContext } from \"../operatingcontext/NestedAppOperatingContext.js\";\r\nimport { InitializeApplicationRequest } from \"../request/InitializeApplicationRequest.js\";\r\nimport { EventType } from \"../event/EventType.js\";\r\n\r\n/**\r\n * The PublicClientApplication class is the object exposed by the library to perform authentication and authorization functions in Single Page Applications\r\n * to obtain JWT tokens as described in the OAuth 2.0 Authorization Code Flow with PKCE specification.\r\n */\r\nexport class PublicClientApplication implements IPublicClientApplication {\r\n    protected controller: IController;\r\n\r\n    /**\r\n     * Creates StandardController and passes it to the PublicClientApplication\r\n     *\r\n     * @param configuration {Configuration}\r\n     */\r\n    public static async createPublicClientApplication(\r\n        configuration: Configuration\r\n    ): Promise<IPublicClientApplication> {\r\n        const controller = await ControllerFactory.createV3Controller(\r\n            configuration\r\n        );\r\n        const pca = new PublicClientApplication(configuration, controller);\r\n\r\n        return pca;\r\n    }\r\n\r\n    /**\r\n     * @constructor\r\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\r\n     *\r\n     * Important attributes in the Configuration object for auth are:\r\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\r\n     * - authority: the authority URL for your application.\r\n     * - redirect_uri: the uri of your application registered in the portal.\r\n     *\r\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\r\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\r\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\r\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\r\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\r\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\r\n     *\r\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\r\n     * Full B2C functionality will be available in this library in future versions.\r\n     *\r\n     * @param configuration Object for the MSAL PublicClientApplication instance\r\n     * @param IController Optional parameter to explictly set the controller. (Will be removed when we remove public constructor)\r\n     */\r\n    public constructor(configuration: Configuration, controller?: IController) {\r\n        this.controller =\r\n            controller ||\r\n            new StandardController(new StandardOperatingContext(configuration));\r\n    }\r\n\r\n    /**\r\n     * Initializer function to perform async startup tasks such as connecting to WAM extension\r\n     * @param request {?InitializeApplicationRequest}\r\n     */\r\n    async initialize(request?: InitializeApplicationRequest): Promise<void> {\r\n        return this.controller.initialize(request);\r\n    }\r\n\r\n    /**\r\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\r\n     *\r\n     * @param request\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    async acquireTokenPopup(\r\n        request: PopupRequest\r\n    ): Promise<AuthenticationResult> {\r\n        return this.controller.acquireTokenPopup(request);\r\n    }\r\n\r\n    /**\r\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\r\n     * the page, so any code that follows this function will not execute.\r\n     *\r\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n     *\r\n     * @param request\r\n     */\r\n    acquireTokenRedirect(request: RedirectRequest): Promise<void> {\r\n        return this.controller.acquireTokenRedirect(request);\r\n    }\r\n\r\n    /**\r\n     * Silently acquire an access token for a given set of scopes. Returns currently processing promise if parallel requests are made.\r\n     *\r\n     * @param {@link (SilentRequest:type)}\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthenticationResult} object\r\n     */\r\n    acquireTokenSilent(\r\n        silentRequest: SilentRequest\r\n    ): Promise<AuthenticationResult> {\r\n        return this.controller.acquireTokenSilent(silentRequest);\r\n    }\r\n\r\n    /**\r\n     * This function redeems an authorization code (passed as code) from the eSTS token endpoint.\r\n     * This authorization code should be acquired server-side using a confidential client to acquire a spa_code.\r\n     * This API is not indended for normal authorization code acquisition and redemption.\r\n     *\r\n     * Redemption of this authorization code will not require PKCE, as it was acquired by a confidential client.\r\n     *\r\n     * @param request {@link AuthorizationCodeRequest}\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    acquireTokenByCode(\r\n        request: AuthorizationCodeRequest\r\n    ): Promise<AuthenticationResult> {\r\n        return this.controller.acquireTokenByCode(request);\r\n    }\r\n\r\n    /**\r\n     * Adds event callbacks to array\r\n     * @param callback\r\n     * @param eventTypes\r\n     */\r\n    addEventCallback(\r\n        callback: EventCallbackFunction,\r\n        eventTypes?: Array<EventType>\r\n    ): string | null {\r\n        return this.controller.addEventCallback(callback, eventTypes);\r\n    }\r\n\r\n    /**\r\n     * Removes callback with provided id from callback array\r\n     * @param callbackId\r\n     */\r\n    removeEventCallback(callbackId: string): void {\r\n        return this.controller.removeEventCallback(callbackId);\r\n    }\r\n\r\n    /**\r\n     * Registers a callback to receive performance events.\r\n     *\r\n     * @param {PerformanceCallbackFunction} callback\r\n     * @returns {string}\r\n     */\r\n    addPerformanceCallback(callback: PerformanceCallbackFunction): string {\r\n        return this.controller.addPerformanceCallback(callback);\r\n    }\r\n\r\n    /**\r\n     * Removes a callback registered with addPerformanceCallback.\r\n     *\r\n     * @param {string} callbackId\r\n     * @returns {boolean}\r\n     */\r\n    removePerformanceCallback(callbackId: string): boolean {\r\n        return this.controller.removePerformanceCallback(callbackId);\r\n    }\r\n\r\n    /**\r\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\r\n     */\r\n    enableAccountStorageEvents(): void {\r\n        this.controller.enableAccountStorageEvents();\r\n    }\r\n\r\n    /**\r\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\r\n     */\r\n    disableAccountStorageEvents(): void {\r\n        this.controller.disableAccountStorageEvents();\r\n    }\r\n\r\n    /**\r\n     * Returns the first account found in the cache that matches the account filter passed in.\r\n     * @param accountFilter\r\n     * @returns The first account found in the cache matching the provided filter or null if no account could be found.\r\n     */\r\n    getAccount(accountFilter: AccountFilter): AccountInfo | null {\r\n        return this.controller.getAccount(accountFilter);\r\n    }\r\n\r\n    /**\r\n     * Returns the signed in account matching homeAccountId.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found\r\n     * @param homeAccountId\r\n     * @returns The account object stored in MSAL\r\n     * @deprecated - Use getAccount instead\r\n     */\r\n    getAccountByHomeId(homeAccountId: string): AccountInfo | null {\r\n        return this.controller.getAccountByHomeId(homeAccountId);\r\n    }\r\n\r\n    /**\r\n     * Returns the signed in account matching localAccountId.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found\r\n     * @param localAccountId\r\n     * @returns The account object stored in MSAL\r\n     * @deprecated - Use getAccount instead\r\n     */\r\n    getAccountByLocalId(localId: string): AccountInfo | null {\r\n        return this.controller.getAccountByLocalId(localId);\r\n    }\r\n\r\n    /**\r\n     * Returns the signed in account matching username.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found.\r\n     * This API is provided for convenience but getAccountById should be used for best reliability\r\n     * @param userName\r\n     * @returns The account object stored in MSAL\r\n     * @deprecated - Use getAccount instead\r\n     */\r\n    getAccountByUsername(userName: string): AccountInfo | null {\r\n        return this.controller.getAccountByUsername(userName);\r\n    }\r\n\r\n    /**\r\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\r\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\r\n     * @returns Array of AccountInfo objects in cache\r\n     */\r\n    getAllAccounts(accountFilter?: AccountFilter): AccountInfo[] {\r\n        return this.controller.getAllAccounts(accountFilter);\r\n    }\r\n\r\n    /**\r\n     * Event handler function which allows users to fire events after the PublicClientApplication object\r\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\r\n     * auth flows.\r\n     * @param hash Hash to process. Defaults to the current value of window.location.hash. Only needs to be provided explicitly if the response to be handled is not contained in the current value.\r\n     * @returns Token response or null. If the return value is null, then no auth redirect was detected.\r\n     */\r\n    handleRedirectPromise(\r\n        hash?: string | undefined\r\n    ): Promise<AuthenticationResult | null> {\r\n        return this.controller.handleRedirectPromise(hash);\r\n    }\r\n\r\n    /**\r\n     * Use when initiating the login process via opening a popup window in the user's browser\r\n     *\r\n     * @param request\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    loginPopup(\r\n        request?: PopupRequest | undefined\r\n    ): Promise<AuthenticationResult> {\r\n        return this.controller.loginPopup(request);\r\n    }\r\n\r\n    /**\r\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\r\n     * any code that follows this function will not execute.\r\n     *\r\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n     *\r\n     * @param request\r\n     */\r\n    loginRedirect(request?: RedirectRequest | undefined): Promise<void> {\r\n        return this.controller.loginRedirect(request);\r\n    }\r\n\r\n    /**\r\n     * Deprecated logout function. Use logoutRedirect or logoutPopup instead\r\n     * @param logoutRequest\r\n     * @deprecated\r\n     */\r\n    logout(logoutRequest?: EndSessionRequest): Promise<void> {\r\n        return this.controller.logout(logoutRequest);\r\n    }\r\n\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param logoutRequest\r\n     */\r\n    logoutRedirect(logoutRequest?: EndSessionRequest): Promise<void> {\r\n        return this.controller.logoutRedirect(logoutRequest);\r\n    }\r\n\r\n    /**\r\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\r\n     * @param logoutRequest\r\n     */\r\n    logoutPopup(logoutRequest?: EndSessionPopupRequest): Promise<void> {\r\n        return this.controller.logoutPopup(logoutRequest);\r\n    }\r\n\r\n    /**\r\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\r\n     * - Any browser using a form of Intelligent Tracking Prevention\r\n     * - If there is not an established session with the service\r\n     *\r\n     * In these cases, the request must be done inside a popup or full frame redirect.\r\n     *\r\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\r\n     *\r\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\r\n     * you session on the server still exists.\r\n     * @param request {@link SsoSilentRequest}\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    ssoSilent(request: SsoSilentRequest): Promise<AuthenticationResult> {\r\n        return this.controller.ssoSilent(request);\r\n    }\r\n\r\n    /**\r\n     * Gets the token cache for the application.\r\n     */\r\n    getTokenCache(): ITokenCache {\r\n        return this.controller.getTokenCache();\r\n    }\r\n\r\n    /**\r\n     * Returns the logger instance\r\n     */\r\n    getLogger(): Logger {\r\n        return this.controller.getLogger();\r\n    }\r\n\r\n    /**\r\n     * Replaces the default logger set in configurations with new Logger with new configurations\r\n     * @param logger Logger instance\r\n     */\r\n    setLogger(logger: Logger): void {\r\n        this.controller.setLogger(logger);\r\n    }\r\n\r\n    /**\r\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\r\n     * @param account\r\n     */\r\n    setActiveAccount(account: AccountInfo | null): void {\r\n        this.controller.setActiveAccount(account);\r\n    }\r\n\r\n    /**\r\n     * Gets the currently active account\r\n     */\r\n    getActiveAccount(): AccountInfo | null {\r\n        return this.controller.getActiveAccount();\r\n    }\r\n\r\n    /**\r\n     * Called by wrapper libraries (Angular & React) to set SKU and Version passed down to telemetry, logger, etc.\r\n     * @param sku\r\n     * @param version\r\n     */\r\n    initializeWrapperLibrary(sku: WrapperSKU, version: string): void {\r\n        return this.controller.initializeWrapperLibrary(sku, version);\r\n    }\r\n\r\n    /**\r\n     * Sets navigation client\r\n     * @param navigationClient\r\n     */\r\n    setNavigationClient(navigationClient: INavigationClient): void {\r\n        this.controller.setNavigationClient(navigationClient);\r\n    }\r\n\r\n    /**\r\n     * Returns the configuration object\r\n     * @internal\r\n     */\r\n    getConfiguration(): BrowserConfiguration {\r\n        return this.controller.getConfiguration();\r\n    }\r\n\r\n    /**\r\n     * Hydrates cache with the tokens and account in the AuthenticationResult object\r\n     * @param result\r\n     * @param request - The request object that was used to obtain the AuthenticationResult\r\n     * @returns\r\n     */\r\n    async hydrateCache(\r\n        result: AuthenticationResult,\r\n        request:\r\n            | SilentRequest\r\n            | SsoSilentRequest\r\n            | RedirectRequest\r\n            | PopupRequest\r\n    ): Promise<void> {\r\n        return this.controller.hydrateCache(result, request);\r\n    }\r\n\r\n    /**\r\n     * Clears tokens and account from the browser cache.\r\n     * @param logoutRequest\r\n     */\r\n    clearCache(logoutRequest?: ClearCacheRequest): Promise<void> {\r\n        return this.controller.clearCache(logoutRequest);\r\n    }\r\n}\r\n\r\n/**\r\n * creates NestedAppAuthController and passes it to the PublicClientApplication,\r\n * falls back to StandardController if NestedAppAuthController is not available\r\n *\r\n * @param configuration\r\n * @returns IPublicClientApplication\r\n *\r\n */\r\nexport async function createNestablePublicClientApplication(\r\n    configuration: Configuration\r\n): Promise<IPublicClientApplication> {\r\n    const nestedAppAuth = new NestedAppOperatingContext(configuration);\r\n    await nestedAppAuth.initialize();\r\n\r\n    if (nestedAppAuth.isAvailable()) {\r\n        const controller = new NestedAppAuthController(nestedAppAuth);\r\n        const nestablePCA = new PublicClientApplication(\r\n            configuration,\r\n            controller\r\n        );\r\n        await nestablePCA.initialize();\r\n        return nestablePCA;\r\n    }\r\n\r\n    return createStandardPublicClientApplication(configuration);\r\n}\r\n\r\n/**\r\n * creates PublicClientApplication using StandardController\r\n *\r\n * @param configuration\r\n * @returns IPublicClientApplication\r\n *\r\n */\r\nexport async function createStandardPublicClientApplication(\r\n    configuration: Configuration\r\n): Promise<IPublicClientApplication> {\r\n    const pca = new PublicClientApplication(configuration);\r\n    await pca.initialize();\r\n    return pca;\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { NestedAppOperatingContext } from \"../operatingcontext/NestedAppOperatingContext.js\";\r\nimport { StandardOperatingContext } from \"../operatingcontext/StandardOperatingContext.js\";\r\nimport { IController } from \"./IController.js\";\r\nimport { Configuration } from \"../config/Configuration.js\";\r\nimport { StandardController } from \"./StandardController.js\";\r\nimport { NestedAppAuthController } from \"./NestedAppAuthController.js\";\r\nimport { InitializeApplicationRequest } from \"../request/InitializeApplicationRequest.js\";\r\n\r\nexport async function createV3Controller(\r\n    config: Configuration,\r\n    request?: InitializeApplicationRequest\r\n): Promise<IController> {\r\n    const standard = new StandardOperatingContext(config);\r\n\r\n    await standard.initialize();\r\n    return StandardController.createController(standard, request);\r\n}\r\n\r\nexport async function createController(\r\n    config: Configuration\r\n): Promise<IController | null> {\r\n    const standard = new StandardOperatingContext(config);\r\n    const nestedApp = new NestedAppOperatingContext(config);\r\n\r\n    const operatingContexts = [standard.initialize(), nestedApp.initialize()];\r\n\r\n    await Promise.all(operatingContexts);\r\n\r\n    if (nestedApp.isAvailable() && config.auth.supportsNestedAppAuth) {\r\n        return NestedAppAuthController.createController(nestedApp);\r\n    } else if (standard.isAvailable()) {\r\n        return StandardController.createController(standard);\r\n    } else {\r\n        // Since neither of the actual operating contexts are available keep the UnknownOperatingContextController\r\n        return null;\r\n    }\r\n}\r\n","export const msalConfig = {\r\n    auth: {\r\n      clientId: \"71a81f6b-6b96-4390-8c99-c7f9caaeb5c4\", // ✅ Your Azure AD B2C App ID\r\n      authority: \"https://bytepantry.b2clogin.com/bytepantry.onmicrosoft.com/B2C_1_B2C_1A_SIGNUP_SIGNIN\", // ✅ Correct User Flow Name\r\n      knownAuthorities: [\"bytepantry.b2clogin.com\"],\r\n      redirectUri: \"http://localhost:3000\", // ✅ Make sure this is exactly the same as in Azure AD B2C\r\n      navigateToLoginRequestUrl: false, // ✅ Prevents clearing hash\r\n    },\r\n    cache: {\r\n      cacheLocation: \"sessionStorage\",\r\n      storeAuthStateInCookie: true, // ✅ Prevents losing session in WebView\r\n    },\r\n  };\r\n  \r\n  export const loginRequest = {\r\n    scopes: [\"openid\", \"profile\", \"email\"],\r\n  };\r\n\r\n  export const passwordResetRequest = {\r\n    authority: \"https://bytepantry.b2clogin.com/bytepantry.onmicrosoft.com/B2C_1_B2C_1A_PASSWORD_RESET\", // ✅ Password Reset Policy\r\n    scopes: [\"openid\", \"profile\", \"email\"],\r\n  };\r\n  ","import axios from \"axios\";\r\nimport { PublicClientApplication } from \"@azure/msal-browser\";\r\nimport { msalConfig, loginRequest } from \"./authConfig\";\r\n\r\nconst API_URL = \"http://localhost:3000\"; // Replace with your actual API URL\r\n\r\nconst msalInstance = new PublicClientApplication(msalConfig);\r\n\r\n// Get JWT Token from MSAL\r\nconst getToken = async () => {\r\n  const accounts = msalInstance.getAllAccounts();\r\n  if (accounts.length === 0) return null;\r\n\r\n  try {\r\n    const response = await msalInstance.acquireTokenSilent({\r\n      ...loginRequest,\r\n      account: accounts[0],\r\n    });\r\n    return response.idToken;\r\n  } catch (error) {\r\n    console.error(\"Error acquiring token:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Axios instance with JWT authentication\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: { \"Content-Type\": \"application/json\" },\r\n});\r\n\r\n// Attach JWT token to every request\r\napi.interceptors.request.use(async (config) => {\r\n  const token = await getToken();\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Function to fetch pantry items\r\nexport const getPantryItems = async () => {\r\n  try {\r\n    const response = await api.get(\"/api/pantry\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching pantry items:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Function to log out from Azure AD B2C\r\nexport const logout = () => {\r\n  msalInstance.logoutPopup()\r\n    .then(() => {\r\n      localStorage.removeItem(\"jwtToken\");\r\n      window.location.href = \"/login\"; // Redirect to login page\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Logout failed:\", error);\r\n    });\r\n};\r\n\r\nexport default api;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getPantryItems } from \"../api\"; // ✅ Ensure correct import\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { logout } from \"../api\";\r\n\r\nconst Home = () => {\r\n  const navigate = useNavigate();\r\n  const [pantryItems, setPantryItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchPantryItems();\r\n  }, []);\r\n\r\n  const fetchPantryItems = async () => {\r\n    try {\r\n      const items = await getPantryItems();\r\n      setPantryItems(items);\r\n    } catch (error) {\r\n      alert(\"Failed to fetch pantry items. Please log in again.\");\r\n      logout();\r\n      navigate(\"/login\");\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n      <h2>Welcome to BytePantry</h2>\r\n      <button onClick={handleLogout}>Logout</button>\r\n\r\n      <h3>Your Pantry Items:</h3>\r\n      <ul>\r\n        {pantryItems.map((item) => (\r\n          <li key={item.itemID}>\r\n            {item.name} - {item.expiryDate}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport * as React from \"react\";\r\nimport {\r\n    IPublicClientApplication,\r\n    stubbedPublicClientApplication,\r\n    Logger,\r\n    InteractionStatus,\r\n    AccountInfo,\r\n} from \"@azure/msal-browser\";\r\n\r\nexport interface IMsalContext {\r\n    instance: IPublicClientApplication;\r\n    inProgress: InteractionStatus;\r\n    accounts: AccountInfo[];\r\n    logger: Logger;\r\n}\r\n\r\n/*\r\n * Stubbed context implementation\r\n * Only used when there is no provider, which is an unsupported scenario\r\n */\r\nconst defaultMsalContext: IMsalContext = {\r\n    instance: stubbedPublicClientApplication,\r\n    inProgress: InteractionStatus.None,\r\n    accounts: [],\r\n    logger: new Logger({}),\r\n};\r\n\r\nexport const MsalContext =\r\n    React.createContext<IMsalContext>(defaultMsalContext);\r\nexport const MsalConsumer = MsalContext.Consumer;\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    AccountFilter,\r\n    AccountInfo,\r\n    Logger,\r\n    PerformanceCallbackFunction,\r\n} from \"@azure/msal-common/browser\";\r\nimport { RedirectRequest } from \"../request/RedirectRequest.js\";\r\nimport { PopupRequest } from \"../request/PopupRequest.js\";\r\nimport { SilentRequest } from \"../request/SilentRequest.js\";\r\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest.js\";\r\nimport { EndSessionRequest } from \"../request/EndSessionRequest.js\";\r\nimport {\r\n    BrowserConfigurationAuthErrorCodes,\r\n    createBrowserConfigurationAuthError,\r\n} from \"../error/BrowserConfigurationAuthError.js\";\r\nimport { WrapperSKU } from \"../utils/BrowserConstants.js\";\r\nimport { INavigationClient } from \"../navigation/INavigationClient.js\";\r\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest.js\";\r\nimport { ITokenCache } from \"../cache/ITokenCache.js\";\r\nimport { AuthorizationCodeRequest } from \"../request/AuthorizationCodeRequest.js\";\r\nimport { BrowserConfiguration } from \"../config/Configuration.js\";\r\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\r\nimport { EventCallbackFunction } from \"../event/EventMessage.js\";\r\nimport { ClearCacheRequest } from \"../request/ClearCacheRequest.js\";\r\nimport { InitializeApplicationRequest } from \"../request/InitializeApplicationRequest.js\";\r\nimport { EventType } from \"../event/EventType.js\";\r\n\r\nexport interface IPublicClientApplication {\r\n    // TODO: Make request mandatory in the next major version?\r\n    initialize(request?: InitializeApplicationRequest): Promise<void>;\r\n    acquireTokenPopup(request: PopupRequest): Promise<AuthenticationResult>;\r\n    acquireTokenRedirect(request: RedirectRequest): Promise<void>;\r\n    acquireTokenSilent(\r\n        silentRequest: SilentRequest\r\n    ): Promise<AuthenticationResult>;\r\n    acquireTokenByCode(\r\n        request: AuthorizationCodeRequest\r\n    ): Promise<AuthenticationResult>;\r\n    addEventCallback(\r\n        callback: EventCallbackFunction,\r\n        eventTypes?: Array<EventType>\r\n    ): string | null;\r\n    removeEventCallback(callbackId: string): void;\r\n    addPerformanceCallback(callback: PerformanceCallbackFunction): string;\r\n    removePerformanceCallback(callbackId: string): boolean;\r\n    enableAccountStorageEvents(): void;\r\n    disableAccountStorageEvents(): void;\r\n    getAccount(accountFilter: AccountFilter): AccountInfo | null;\r\n    getAccountByHomeId(homeAccountId: string): AccountInfo | null;\r\n    getAccountByLocalId(localId: string): AccountInfo | null;\r\n    getAccountByUsername(userName: string): AccountInfo | null;\r\n    getAllAccounts(): AccountInfo[];\r\n    handleRedirectPromise(hash?: string): Promise<AuthenticationResult | null>;\r\n    loginPopup(request?: PopupRequest): Promise<AuthenticationResult>;\r\n    loginRedirect(request?: RedirectRequest): Promise<void>;\r\n    logout(logoutRequest?: EndSessionRequest): Promise<void>;\r\n    logoutRedirect(logoutRequest?: EndSessionRequest): Promise<void>;\r\n    logoutPopup(logoutRequest?: EndSessionPopupRequest): Promise<void>;\r\n    ssoSilent(request: SsoSilentRequest): Promise<AuthenticationResult>;\r\n    getTokenCache(): ITokenCache;\r\n    getLogger(): Logger;\r\n    setLogger(logger: Logger): void;\r\n    setActiveAccount(account: AccountInfo | null): void;\r\n    getActiveAccount(): AccountInfo | null;\r\n    initializeWrapperLibrary(sku: WrapperSKU, version: string): void;\r\n    setNavigationClient(navigationClient: INavigationClient): void;\r\n    /** @internal */\r\n    getConfiguration(): BrowserConfiguration;\r\n    hydrateCache(\r\n        result: AuthenticationResult,\r\n        request:\r\n            | SilentRequest\r\n            | SsoSilentRequest\r\n            | RedirectRequest\r\n            | PopupRequest\r\n    ): Promise<void>;\r\n    clearCache(logoutRequest?: ClearCacheRequest): Promise<void>;\r\n}\r\n\r\nexport const stubbedPublicClientApplication: IPublicClientApplication = {\r\n    initialize: () => {\r\n        return Promise.reject(\r\n            createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n            )\r\n        );\r\n    },\r\n    acquireTokenPopup: () => {\r\n        return Promise.reject(\r\n            createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n            )\r\n        );\r\n    },\r\n    acquireTokenRedirect: () => {\r\n        return Promise.reject(\r\n            createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n            )\r\n        );\r\n    },\r\n    acquireTokenSilent: () => {\r\n        return Promise.reject(\r\n            createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n            )\r\n        );\r\n    },\r\n    acquireTokenByCode: () => {\r\n        return Promise.reject(\r\n            createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n            )\r\n        );\r\n    },\r\n    getAllAccounts: () => {\r\n        return [];\r\n    },\r\n    getAccount: () => {\r\n        return null;\r\n    },\r\n    getAccountByHomeId: () => {\r\n        return null;\r\n    },\r\n    getAccountByUsername: () => {\r\n        return null;\r\n    },\r\n    getAccountByLocalId: () => {\r\n        return null;\r\n    },\r\n    handleRedirectPromise: () => {\r\n        return Promise.reject(\r\n            createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n            )\r\n        );\r\n    },\r\n    loginPopup: () => {\r\n        return Promise.reject(\r\n            createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n            )\r\n        );\r\n    },\r\n    loginRedirect: () => {\r\n        return Promise.reject(\r\n            createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n            )\r\n        );\r\n    },\r\n    logout: () => {\r\n        return Promise.reject(\r\n            createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n            )\r\n        );\r\n    },\r\n    logoutRedirect: () => {\r\n        return Promise.reject(\r\n            createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n            )\r\n        );\r\n    },\r\n    logoutPopup: () => {\r\n        return Promise.reject(\r\n            createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n            )\r\n        );\r\n    },\r\n    ssoSilent: () => {\r\n        return Promise.reject(\r\n            createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n            )\r\n        );\r\n    },\r\n    addEventCallback: () => {\r\n        return null;\r\n    },\r\n    removeEventCallback: () => {\r\n        return;\r\n    },\r\n    addPerformanceCallback: () => {\r\n        return \"\";\r\n    },\r\n    removePerformanceCallback: () => {\r\n        return false;\r\n    },\r\n    enableAccountStorageEvents: () => {\r\n        return;\r\n    },\r\n    disableAccountStorageEvents: () => {\r\n        return;\r\n    },\r\n    getTokenCache: () => {\r\n        throw createBrowserConfigurationAuthError(\r\n            BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n        );\r\n    },\r\n    getLogger: () => {\r\n        throw createBrowserConfigurationAuthError(\r\n            BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n        );\r\n    },\r\n    setLogger: () => {\r\n        return;\r\n    },\r\n    setActiveAccount: () => {\r\n        return;\r\n    },\r\n    getActiveAccount: () => {\r\n        return null;\r\n    },\r\n    initializeWrapperLibrary: () => {\r\n        return;\r\n    },\r\n    setNavigationClient: () => {\r\n        return;\r\n    },\r\n    getConfiguration: () => {\r\n        throw createBrowserConfigurationAuthError(\r\n            BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n        );\r\n    },\r\n    hydrateCache: () => {\r\n        return Promise.reject(\r\n            createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n            )\r\n        );\r\n    },\r\n    clearCache: () => {\r\n        return Promise.reject(\r\n            createBrowserConfigurationAuthError(\r\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\r\n            )\r\n        );\r\n    },\r\n};\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AuthError, AccountInfo } from \"@azure/msal-common/browser\";\r\nimport { EventType } from \"./EventType.js\";\r\nimport {\r\n    InteractionStatus,\r\n    InteractionType,\r\n} from \"../utils/BrowserConstants.js\";\r\nimport { PopupRequest } from \"../request/PopupRequest.js\";\r\nimport { RedirectRequest } from \"../request/RedirectRequest.js\";\r\nimport { SilentRequest } from \"../request/SilentRequest.js\";\r\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest.js\";\r\nimport { EndSessionRequest } from \"../request/EndSessionRequest.js\";\r\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\r\n\r\nexport type EventMessage = {\r\n    eventType: EventType;\r\n    interactionType: InteractionType | null;\r\n    payload: EventPayload;\r\n    error: EventError;\r\n    timestamp: number;\r\n};\r\n\r\nexport type PopupEvent = {\r\n    popupWindow: Window;\r\n};\r\n\r\nexport type EventPayload =\r\n    | AccountInfo\r\n    | PopupRequest\r\n    | RedirectRequest\r\n    | SilentRequest\r\n    | SsoSilentRequest\r\n    | EndSessionRequest\r\n    | AuthenticationResult\r\n    | PopupEvent\r\n    | null;\r\n\r\nexport type EventError = AuthError | Error | null;\r\n\r\nexport type EventCallbackFunction = (message: EventMessage) => void;\r\n\r\nexport class EventMessageUtils {\r\n    /**\r\n     * Gets interaction status from event message\r\n     * @param message\r\n     * @param currentStatus\r\n     */\r\n    static getInteractionStatusFromEvent(\r\n        message: EventMessage,\r\n        currentStatus?: InteractionStatus\r\n    ): InteractionStatus | null {\r\n        switch (message.eventType) {\r\n            case EventType.LOGIN_START:\r\n                return InteractionStatus.Login;\r\n            case EventType.SSO_SILENT_START:\r\n                return InteractionStatus.SsoSilent;\r\n            case EventType.ACQUIRE_TOKEN_START:\r\n                if (\r\n                    message.interactionType === InteractionType.Redirect ||\r\n                    message.interactionType === InteractionType.Popup\r\n                ) {\r\n                    return InteractionStatus.AcquireToken;\r\n                }\r\n                break;\r\n            case EventType.HANDLE_REDIRECT_START:\r\n                return InteractionStatus.HandleRedirect;\r\n            case EventType.LOGOUT_START:\r\n                return InteractionStatus.Logout;\r\n            case EventType.SSO_SILENT_SUCCESS:\r\n            case EventType.SSO_SILENT_FAILURE:\r\n                if (\r\n                    currentStatus &&\r\n                    currentStatus !== InteractionStatus.SsoSilent\r\n                ) {\r\n                    // Prevent this event from clearing any status other than ssoSilent\r\n                    break;\r\n                }\r\n                return InteractionStatus.None;\r\n            case EventType.LOGOUT_END:\r\n                if (\r\n                    currentStatus &&\r\n                    currentStatus !== InteractionStatus.Logout\r\n                ) {\r\n                    // Prevent this event from clearing any status other than logout\r\n                    break;\r\n                }\r\n                return InteractionStatus.None;\r\n            case EventType.HANDLE_REDIRECT_END:\r\n                if (\r\n                    currentStatus &&\r\n                    currentStatus !== InteractionStatus.HandleRedirect\r\n                ) {\r\n                    // Prevent this event from clearing any status other than handleRedirect\r\n                    break;\r\n                }\r\n                return InteractionStatus.None;\r\n            case EventType.LOGIN_SUCCESS:\r\n            case EventType.LOGIN_FAILURE:\r\n            case EventType.ACQUIRE_TOKEN_SUCCESS:\r\n            case EventType.ACQUIRE_TOKEN_FAILURE:\r\n            case EventType.RESTORE_FROM_BFCACHE:\r\n                if (\r\n                    message.interactionType === InteractionType.Redirect ||\r\n                    message.interactionType === InteractionType.Popup\r\n                ) {\r\n                    if (\r\n                        currentStatus &&\r\n                        currentStatus !== InteractionStatus.Login &&\r\n                        currentStatus !== InteractionStatus.AcquireToken\r\n                    ) {\r\n                        // Prevent this event from clearing any status other than login or acquireToken\r\n                        break;\r\n                    }\r\n                    return InteractionStatus.None;\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AccountIdentifiers } from \"../types/AccountIdentifiers.js\";\r\nimport { AccountInfo } from \"@azure/msal-browser\";\r\n\r\ntype FaaCFunction = <T>(args: T) => React.ReactNode;\r\n\r\nexport function getChildrenOrFunction<T>(\r\n    children: React.ReactNode | FaaCFunction,\r\n    args: T\r\n): React.ReactNode {\r\n    if (typeof children === \"function\") {\r\n        return children(args);\r\n    }\r\n    return children;\r\n}\r\n\r\n/*\r\n * Utility types\r\n * Reference: https://github.com/piotrwitek/utility-types\r\n */\r\nexport type SetDifference<A, B> = A extends B ? never : A;\r\nexport type SetComplement<A, A1 extends A> = SetDifference<A, A1>;\r\nexport type Subtract<T extends T1, T1 extends object> = Pick<\r\n    T,\r\n    SetComplement<keyof T, keyof T1>\r\n>;\r\n\r\n/**\r\n * Helper function to determine whether 2 arrays are equal\r\n * Used to avoid unnecessary state updates\r\n * @param arrayA\r\n * @param arrayB\r\n */\r\nexport function accountArraysAreEqual(\r\n    arrayA: Array<AccountIdentifiers>,\r\n    arrayB: Array<AccountIdentifiers>\r\n): boolean {\r\n    if (arrayA.length !== arrayB.length) {\r\n        return false;\r\n    }\r\n\r\n    const comparisonArray = [...arrayB];\r\n\r\n    return arrayA.every((elementA) => {\r\n        const elementB = comparisonArray.shift();\r\n        if (!elementA || !elementB) {\r\n            return false;\r\n        }\r\n\r\n        return (\r\n            elementA.homeAccountId === elementB.homeAccountId &&\r\n            elementA.localAccountId === elementB.localAccountId &&\r\n            elementA.username === elementB.username\r\n        );\r\n    });\r\n}\r\n\r\nexport function getAccountByIdentifiers(\r\n    allAccounts: AccountInfo[],\r\n    accountIdentifiers: AccountIdentifiers\r\n): AccountInfo | null {\r\n    if (\r\n        allAccounts.length > 0 &&\r\n        (accountIdentifiers.homeAccountId ||\r\n            accountIdentifiers.localAccountId ||\r\n            accountIdentifiers.username)\r\n    ) {\r\n        const matchedAccounts = allAccounts.filter((accountObj) => {\r\n            if (\r\n                accountIdentifiers.username &&\r\n                accountIdentifiers.username.toLowerCase() !==\r\n                    accountObj.username.toLowerCase()\r\n            ) {\r\n                return false;\r\n            }\r\n            if (\r\n                accountIdentifiers.homeAccountId &&\r\n                accountIdentifiers.homeAccountId.toLowerCase() !==\r\n                    accountObj.homeAccountId.toLowerCase()\r\n            ) {\r\n                return false;\r\n            }\r\n            if (\r\n                accountIdentifiers.localAccountId &&\r\n                accountIdentifiers.localAccountId.toLowerCase() !==\r\n                    accountObj.localAccountId.toLowerCase()\r\n            ) {\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        return matchedAccounts[0] || null;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n","/* eslint-disable header/header */\r\nexport const name = \"@azure/msal-react\";\r\nexport const version = \"3.0.5\";\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport React, {\r\n    useEffect,\r\n    useReducer,\r\n    PropsWithChildren,\r\n    useMemo,\r\n} from \"react\";\r\nimport {\r\n    IPublicClientApplication,\r\n    EventMessage,\r\n    EventMessageUtils,\r\n    InteractionStatus,\r\n    Logger,\r\n    WrapperSKU,\r\n    AccountInfo,\r\n} from \"@azure/msal-browser\";\r\nimport { MsalContext, IMsalContext } from \"./MsalContext.js\";\r\nimport { accountArraysAreEqual } from \"./utils/utilities.js\";\r\nimport { name as SKU, version } from \"./packageMetadata.js\";\r\n\r\nexport type MsalProviderProps = PropsWithChildren<{\r\n    instance: IPublicClientApplication;\r\n}>;\r\n\r\ntype MsalState = {\r\n    inProgress: InteractionStatus;\r\n    accounts: AccountInfo[];\r\n};\r\n\r\nconst MsalProviderActionType = {\r\n    UNBLOCK_INPROGRESS: \"UNBLOCK_INPROGRESS\",\r\n    EVENT: \"EVENT\",\r\n} as const;\r\ntype MsalProviderActionType =\r\n    (typeof MsalProviderActionType)[keyof typeof MsalProviderActionType];\r\n\r\ntype MsalProviderReducerAction = {\r\n    type: MsalProviderActionType;\r\n    payload: {\r\n        logger: Logger;\r\n        instance: IPublicClientApplication;\r\n        message?: EventMessage;\r\n    };\r\n};\r\n\r\n/**\r\n * Returns the next inProgress and accounts state based on event message\r\n * @param previousState\r\n * @param action\r\n */\r\nconst reducer = (\r\n    previousState: MsalState,\r\n    action: MsalProviderReducerAction\r\n): MsalState => {\r\n    const { type, payload } = action;\r\n    let newInProgress = previousState.inProgress;\r\n\r\n    switch (type) {\r\n        case MsalProviderActionType.UNBLOCK_INPROGRESS:\r\n            if (previousState.inProgress === InteractionStatus.Startup) {\r\n                newInProgress = InteractionStatus.None;\r\n                payload.logger.info(\r\n                    \"MsalProvider - handleRedirectPromise resolved, setting inProgress to 'none'\"\r\n                );\r\n            }\r\n            break;\r\n        case MsalProviderActionType.EVENT:\r\n            const message = payload.message as EventMessage;\r\n            const status = EventMessageUtils.getInteractionStatusFromEvent(\r\n                message,\r\n                previousState.inProgress\r\n            );\r\n            if (status) {\r\n                payload.logger.info(\r\n                    `MsalProvider - ${message.eventType} results in setting inProgress from ${previousState.inProgress} to ${status}`\r\n                );\r\n                newInProgress = status;\r\n            }\r\n            break;\r\n        default:\r\n            throw new Error(`Unknown action type: ${type}`);\r\n    }\r\n\r\n    const currentAccounts = payload.instance.getAllAccounts();\r\n    if (\r\n        newInProgress !== previousState.inProgress &&\r\n        !accountArraysAreEqual(currentAccounts, previousState.accounts)\r\n    ) {\r\n        // Both inProgress and accounts changed\r\n        return {\r\n            ...previousState,\r\n            inProgress: newInProgress,\r\n            accounts: currentAccounts,\r\n        };\r\n    } else if (newInProgress !== previousState.inProgress) {\r\n        // Only only inProgress changed\r\n        return {\r\n            ...previousState,\r\n            inProgress: newInProgress,\r\n        };\r\n    } else if (\r\n        !accountArraysAreEqual(currentAccounts, previousState.accounts)\r\n    ) {\r\n        // Only accounts changed\r\n        return {\r\n            ...previousState,\r\n            accounts: currentAccounts,\r\n        };\r\n    } else {\r\n        // Nothing changed\r\n        return previousState;\r\n    }\r\n};\r\n\r\n/**\r\n * MSAL context provider component. This must be rendered above any other components that use MSAL.\r\n */\r\nexport function MsalProvider({\r\n    instance,\r\n    children,\r\n}: MsalProviderProps): React.ReactElement {\r\n    useEffect(() => {\r\n        instance.initializeWrapperLibrary(WrapperSKU.React, version);\r\n    }, [instance]);\r\n    // Create a logger instance for msal-react with the same options as PublicClientApplication\r\n    const logger = useMemo(() => {\r\n        return instance.getLogger().clone(SKU, version);\r\n    }, [instance]);\r\n\r\n    const [state, updateState] = useReducer(reducer, undefined, () => {\r\n        // Lazy initialization of the initial state\r\n        return {\r\n            inProgress: InteractionStatus.Startup,\r\n            accounts: instance.getAllAccounts(),\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        const callbackId = instance.addEventCallback(\r\n            (message: EventMessage) => {\r\n                updateState({\r\n                    payload: {\r\n                        instance,\r\n                        logger,\r\n                        message,\r\n                    },\r\n                    type: MsalProviderActionType.EVENT,\r\n                });\r\n            }\r\n        );\r\n        logger.verbose(\r\n            `MsalProvider - Registered event callback with id: ${callbackId}`\r\n        );\r\n\r\n        instance\r\n            .initialize()\r\n            .then(() => {\r\n                instance\r\n                    .handleRedirectPromise()\r\n                    .catch(() => {\r\n                        // Errors should be handled by listening to the LOGIN_FAILURE event\r\n                        return;\r\n                    })\r\n                    .finally(() => {\r\n                        /*\r\n                         * If handleRedirectPromise returns a cached promise the necessary events may not be fired\r\n                         * This is a fallback to prevent inProgress from getting stuck in 'startup'\r\n                         */\r\n                        updateState({\r\n                            payload: {\r\n                                instance,\r\n                                logger,\r\n                            },\r\n                            type: MsalProviderActionType.UNBLOCK_INPROGRESS,\r\n                        });\r\n                    });\r\n            })\r\n            .catch(() => {\r\n                // Errors should be handled by listening to the LOGIN_FAILURE event\r\n                return;\r\n            });\r\n\r\n        return () => {\r\n            // Remove callback when component unmounts or accounts change\r\n            if (callbackId) {\r\n                logger.verbose(\r\n                    `MsalProvider - Removing event callback ${callbackId}`\r\n                );\r\n                instance.removeEventCallback(callbackId);\r\n            }\r\n        };\r\n    }, [instance, logger]);\r\n\r\n    const contextValue: IMsalContext = {\r\n        instance,\r\n        inProgress: state.inProgress,\r\n        accounts: state.accounts,\r\n        logger,\r\n    };\r\n\r\n    return (\r\n        <MsalContext.Provider value={contextValue}>\r\n            {children}\r\n        </MsalContext.Provider>\r\n    );\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { useContext } from \"react\";\r\nimport { IMsalContext, MsalContext } from \"../MsalContext.js\";\r\n\r\n/**\r\n * Returns Msal Context values\r\n */\r\nexport const useMsal = (): IMsalContext => useContext(MsalContext);\r\n","import React from \"react\";\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport { loginRequest, passwordResetRequest } from \"../authConfig\";\r\n\r\nexport default function Login() {\r\n  const { instance } = useMsal();\r\n\r\n  const handleLogin = () => {\r\n    instance.loginRedirect(loginRequest);\r\n  };\r\n\r\n  const handlePasswordReset = () => {\r\n    instance.loginRedirect(passwordResetRequest);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n      {/* Card Container */}\r\n      <div className=\"max-w-md w-full bg-white p-6 rounded-lg shadow-md\">\r\n        <h2 className=\"text-2xl font-bold mb-6 text-center text-gray-700\">\r\n          Login with Azure AD B2C\r\n        </h2>\r\n        <button\r\n          onClick={handleLogin}\r\n          className=\"w-full py-2 mb-4 bg-blue-600 text-white font-semibold rounded-md hover:bg-blue-700 transition-colors\"\r\n        >\r\n          Login\r\n        </button>\r\n        <button\r\n          onClick={handlePasswordReset}\r\n          className=\"w-full py-2 bg-gray-200 text-gray-700 font-semibold rounded-md hover:bg-gray-300 transition-colors\"\r\n        >\r\n          Forgot Password?\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Profile() {\r\n  return (\r\n    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\r\n      <h1>Profile Page</h1>\r\n      <p>This is a placeholder for the Profile feature.</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Donation() {\r\n  return (\r\n    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\r\n      <h1>Donation Page</h1>\r\n      <p>This is a placeholder for the Donation feature.</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function ItemAdd() {\r\n  return (\r\n    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\r\n      <h1>Add Item Page</h1>\r\n      <p>This is a placeholder for adding new items.</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function ItemList() {\r\n  return (\r\n    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\r\n      <h1>Item List Page</h1>\r\n      <p>This is a placeholder for listing your items.</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./pages/Login\";\r\nimport Profile from \"./pages/Profile\";\r\nimport Donation from \"./pages/Donation\";\r\nimport ItemAdd from \"./pages/ItemAdd\";\r\nimport ItemList from \"./pages/ItemList\";\r\nimport { useMsal } from \"@azure/msal-react\";\r\n\r\nconst ProtectedRoute = ({ element }) => {\r\n  const { accounts } = useMsal();\r\n  return accounts.length > 0 ? element : <Navigate to=\"/login\" />;\r\n};\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<ProtectedRoute element={<Home />} />} />\r\n        <Route path=\"/home\" element={<ProtectedRoute element={<Home />} />} />\r\n        <Route path=\"/login\" element={<Login />} />\r\n        <Route path=\"/profile\" element={<Profile />} />\r\n        <Route path=\"/donation\" element={<Donation />} />\r\n        <Route path=\"/itemadd\" element={<ItemAdd />} />\r\n        <Route path=\"/itemlist\" element={<ItemList />} />\r\n        <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./App.css\";\r\nimport \"./index.css\";\r\nimport { PublicClientApplication } from \"@azure/msal-browser\";\r\nimport { MsalProvider } from \"@azure/msal-react\";\r\nimport { msalConfig } from \"./authConfig\";\r\n\r\nconst msalInstance = new PublicClientApplication(msalConfig);\r\n\r\nReactDOM.render(\r\n  <MsalProvider instance={msalInstance}>\r\n    <App />\r\n  </MsalProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"names":["module","exports","f","require","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","jsx","jsxs","r","t","u","v","w","x","y","z","iterator","B","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","C","assign","D","E","this","context","refs","updater","F","G","isReactComponent","setState","Error","forceUpdate","H","constructor","isPureReactComponent","I","Array","isArray","J","K","L","M","arguments","length","children","O","P","Q","replace","escape","toString","R","N","push","A","next","done","value","String","keys","join","S","T","_status","_result","then","default","U","V","transition","W","ReactCurrentDispatcher","ReactCurrentBatchConfig","X","Children","map","forEach","apply","count","toArray","only","Component","Fragment","Profiler","PureComponent","StrictMode","Suspense","act","cloneElement","createContext","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","_context","createElement","createFactory","bind","createRef","forwardRef","render","isValidElement","lazy","_payload","_init","memo","compare","startTransition","unstable_act","useCallback","useContext","useDebugValue","useDeferredValue","useEffect","useId","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useSyncExternalStore","useTransition","version","pop","sortIndex","id","performance","now","unstable_now","Date","setTimeout","clearTimeout","setImmediate","callback","startTime","expirationTime","priorityLevel","navigator","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_IdlePriority","unstable_ImmediatePriority","unstable_LowPriority","unstable_NormalPriority","unstable_Profiling","unstable_UserBlockingPriority","unstable_cancelCallback","unstable_continueExecution","unstable_forceFrameRate","console","error","Math","floor","unstable_getCurrentPriorityLevel","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_requestPaint","unstable_runWithPriority","unstable_scheduleCallback","delay","unstable_shouldYield","unstable_wrapCallback","cookieNameRegExp","cookieValueRegExp","domainValueRegExp","pathValueRegExp","__toString","NullObject","create","startIndex","str","index","max","code","charCodeAt","endIndex","min","decode","indexOf","decodeURIComponent","aa","ca","encodeURIComponent","da","Set","ea","fa","ha","add","ia","window","document","ja","ka","la","ma","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","split","toLowerCase","ra","sa","toUpperCase","ta","slice","pa","isNaN","qa","test","oa","removeAttribute","setAttribute","setAttributeNS","xlinkHref","ua","va","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","Ma","stack","trim","match","Na","Oa","prepareStackTrace","defineProperty","set","Reflect","construct","displayName","includes","name","Pa","tag","Qa","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","get","configurable","enumerable","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","setProperty","charAt","substring","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","ub","vb","is","wb","xb","target","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","addEventListener","removeEventListener","Nb","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","Yb","$b","ac","bc","cc","dc","ec","fc","gc","hc","ic","jc","kc","lc","oc","clz32","pc","qc","log","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","shift","Zc","$c","ad","bd","cd","dd","ed","fd","gd","hd","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","data","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","fromCharCode","location","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","number","password","range","search","tel","text","time","url","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","node","offset","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","href","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","start","end","selectionStart","selectionEnd","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","concat","nf","Ub","instance","listener","of","has","pf","qf","rf","random","sf","capture","passive","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","unshift","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","Gf","Hf","Promise","Jf","queueMicrotask","resolve","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","Vf","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","zg","Ag","Bg","elementType","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","_stringRef","Mg","Ng","Og","Pg","Qg","Rg","implementation","Sg","Tg","Ug","Vg","Wg","Xg","Yg","Zg","$g","ah","bh","childLanes","ch","dependencies","firstContext","lanes","dh","eh","memoizedValue","fh","gh","hh","interleaved","ih","jh","kh","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","lh","mh","eventTime","lane","payload","nh","oh","ph","qh","rh","sh","th","uh","vh","wh","xh","yh","tagName","zh","Ah","Bh","Ch","revealOrder","Dh","Eh","_workInProgressVersionPrimary","Fh","Gh","Hh","Ih","Jh","Kh","Lh","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","baseQueue","queue","Uh","Vh","Wh","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","Xh","Yh","Zh","$h","ai","getSnapshot","bi","ci","di","lastEffect","stores","ei","fi","gi","hi","ii","destroy","deps","ji","ki","li","mi","ni","oi","pi","qi","ri","si","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","readContext","useMutableSource","unstable_isNewReconciler","identifierPrefix","Ci","Di","Ei","_reactInternals","Fi","shouldComponentUpdate","Gi","contextType","state","Hi","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Ii","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Ji","message","digest","Ki","Li","Mi","WeakMap","Ni","Oi","Pi","Qi","getDerivedStateFromError","componentDidCatch","Ri","componentStack","Si","pingCache","Ti","Ui","Vi","Wi","Xi","Yi","Zi","$i","aj","bj","cj","dj","baseLanes","cachePool","transitions","ej","fj","gj","hj","ij","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","jj","kj","pendingContext","lj","zj","Aj","Bj","Cj","mj","nj","oj","fallback","pj","qj","sj","dataset","dgst","tj","uj","_reactRetry","rj","subtreeFlags","vj","wj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","xj","Dj","Ej","Fj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","size","createElementNS","autoFocus","createTextNode","Gj","Hj","Ij","Jj","Kj","WeakSet","Lj","Mj","Nj","Pj","Qj","Rj","Sj","Tj","Uj","Vj","insertBefore","_reactRootContainer","Wj","Xj","Yj","Zj","onCommitFiberUnmount","componentWillUnmount","ak","bk","ck","dk","ek","isHidden","fk","gk","display","hk","ik","jk","kk","__reactInternalSnapshotBeforeUpdate","src","Vk","lk","ceil","mk","nk","ok","Y","Z","pk","qk","rk","sk","tk","Infinity","uk","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Ek","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","finishedWork","finishedLanes","Pk","timeoutHandle","Qk","Rk","Sk","Tk","Uk","mutableReadLanes","Bc","Oj","onCommitFiberRoot","mc","onRecoverableError","Wk","onPostCommitFiberRoot","Xk","Yk","$k","pendingChildren","al","mutableSourceEagerHydrationData","bl","cache","pendingSuspenseBoundaries","dl","el","fl","gl","hl","il","yj","Zk","kl","reportError","ll","_internalRoot","ml","nl","ol","pl","rl","ql","unmount","unstable_scheduleHydration","splice","querySelectorAll","JSON","stringify","form","sl","usingClientEntryPoint","Events","tl","findFiberByHostInstance","bundleType","rendererPackageName","ul","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","vl","isDisabled","supportsFiber","inject","createPortal","cl","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","err","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","definition","o","obj","prop","toStringTag","PopStateEventType","createBrowserHistory","getUrlBasedHistory","window2","globalHistory","pathname","hash","createLocation","usr","to","createPath","invariant","warning","cond","warn","getHistoryState","idx","parsePath","_ref","path","parsedPath","hashIndex","searchIndex","getLocation","createHref2","validateLocation","v5Compat","history","getIndex","handlePop","nextIndex","delta","createURL","origin","href2","URL","replaceState","listen","fn","createHref","encodeLocation","historyState","pushState","DOMException","go","matchRoutes","routes","locationArg","matchRoutesImpl","basename","allowPartial","stripBasename","branches","flattenRoutes","sort","score","siblings","every","i","compareIndexes","routesMeta","childrenIndex","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","parentsMeta","parentPath","flattenRoute","route","relativePath","caseSensitive","startsWith","joinPaths","computeScore","exploded","explodeOptionalSegments","segments","first","rest","isOptional","endsWith","required","restExploded","result","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","some","filter","reduce","segment","branch","matchedParams","matchedPathname","remainingPathname","matchPath","params","pathnameBase","normalizePathname","pattern","matcher","compiledParams","regexpSource","_","paramName","RegExp","compilePath","captureGroups","memo2","_ref2","splatValue","nextChar","getInvalidPathError","field","dest","getPathContributingMatches","getResolveToMatches","pathMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","toPathname","routePathnameIndex","toSegments","fromPathname","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","isRouteErrorResponse","status","statusText","internal","validMutationMethodsArr","validRequestMethodsArr","DataRouterContext","React","DataRouterStateContext","ViewTransitionContext","isTransitioning","FetchersContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","React2","useLocation","navigateEffectWarning","useIsomorphicLayoutEffect","static","useNavigate","router","useDataRouterContext","useCurrentRouteId","activeRef","navigate","async","fromRouteId","useNavigateStable","dataRouterContext","navigator2","routePathnamesJson","parse","relative","useNavigateUnstable","useResolvedPath","useRoutesImpl","dataRouterState","future","isStatic","parentMatches","routeMatch","parentParams","parentPathname","parentPathnameBase","parentRoute","warningOnce","locationFromContext","parsedLocationArg","parentSegments","renderedMatches","_renderMatches","navigationType","DefaultErrorComponent","useRouteError","lightgrey","preStyles","padding","backgroundColor","codeStyles","devInfo","fontStyle","defaultErrorElement","RenderErrorBoundary","super","revalidation","errorInfo","routeContext","component","RenderedRoute","_ref9","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","errors","initialized","errorIndex","findIndex","renderFallback","fallbackIndex","HydrateFallback","hydrateFallbackElement","loaderData","errors2","needsToRunLoader","loader","reduceRight","shouldRenderHydrateFallback","matches2","getChildren","getDataRouterConsoleError","hookName","ctx","useDataRouterState","useRouteContext","thisRoute","routeId","alreadyWarned","React3","_ref12","Navigate","_ref14","replace2","jsonPath","Route","_props","Router","_ref15","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref16","createRoutesFromChildren","treePath","hasErrorBoundary","shouldRevalidate","handle","defaultMethod","defaultEncType","isHtmlElement","object","_formDataSupportsSubmitter","supportedFormEncTypes","getFormEncType","encType","getFormSubmissionInfo","method","formData","attr","getAttribute","FormData","isButtonElement","isInputElement","isFormDataSubmitterSupported","prefix","append","invariant2","loadRouteModule","routeModulesCache","routeModule","import","__reactRouterContext","isSpaMode","reload","isPageLinkDescriptor","page","isHtmlLinkDescriptor","rel","imageSrcSet","imageSizes","getNewMatchesForLinks","nextMatches","currentMatches","manifest","isNew","matchPathChanged","manifestRoute","hasLoader","routeChoice","currentUrl","currentParams","nextUrl","nextParams","defaultShouldRevalidate","getModuleLinkHrefs","includeHydrateFallback","hrefs","clientActionModule","clientLoaderModule","hydrateFallbackModule","imports","flat","dedupeLinkDescriptors","descriptors","preloads","preloadsSet","deduped","descriptor","as","sorted","sortKeys","createHtml","html","singleFetchUrl","reqUrl","React5","RemixRootDefaultErrorBoundary","_ref21","isOutsideRemixApp","errorInstance","heyDeveloper","BoundaryShell","title","fontSize","errorString","background","_ref22","renderScripts","routeModules","useFrameworkContext","root","Layout","lang","charSet","content","fontFamily","Scripts","isFogOfWarEnabled","ssr","useDataRouterContext2","React9","useDataRouterStateContext","FrameworkContext","composeEventHandlers","theirHandler","ourHandler","getActiveMatches","isHydrated","errorIdx","PrefetchPageLinks","_ref29","dataLinkProps","PrefetchPageLinksImpl","useKeyedPrefetchLinks","keyedPrefetchLinks","setKeyedPrefetchLinks","interrupted","all","mod","links","getKeyedPrefetchLinks","_ref30","linkProps","newMatchesForData","newMatchesForAssets","dataHrefs","routesParams","foundOptOutRoute","m2","hasClientLoader","searchParams","moduleHrefs","_ref31","serverHandoffString","renderMeta","routerMatches","enableFogOfWar","didRenderScripts","initialScripts","contextScript","routeModulesScript","hmr","runtime","routeIndex","routeVarName","manifestEntry","chunks","varName","chunk","routeIds","Boolean","initialRoutes","acc","getPartialManifest","entry","crossOrigin","array","mergeRefs","_len3","_key3","isBrowser","__reactRouterVersion","BrowserRouter","_ref32","historyRef","React10","setStateImpl","newState","ABSOLUTE_URL_REGEX2","Link","_ref35","forwardedRef","absoluteHref","discover","prefetch","reloadDocument","preventScrollReset","viewTransition","isAbsolute","isExternal","targetUrl","protocol","joinedPathname","useHref","shouldPrefetch","prefetchRef","prefetchHandlers","theirElementProps","frameworkContext","maybePrefetch","setMaybePrefetch","setShouldPrefetch","onFocus","onBlur","onMouseEnter","onMouseLeave","onTouchStart","observer","IntersectionObserver","entries","isIntersecting","threshold","observe","disconnect","setIntent","cancelIntent","usePrefetchBehavior","internalOnClick","replaceProp","isModifiedEvent","shouldProcessLinkClick","useLinkClickHandler","_ref36","ariaCurrentProp","className","classNameProp","styleProp","routerState","opts","vtContext","useDataRouterContext3","currentPath","currentLocation","nextPath","nextLocation","useViewTransitionState","nextLocationPathname","navigation","endSlashPosition","isActive","isPending","renderProps","ariaCurrent","Form","_ref37","fetcherKey","onSubmit","submit","useSubmit","formAction","URLSearchParams","indexValues","getAll","qs","useFormAction","formMethod","submitter","submitMethod","getDataRouterConsoleError2","fetcherId","getUniqueFetcherId","currentRouteId","fetch","formEncType","TextEncoder","thisArg","getPrototypeOf","kindOf","thing","kindOfTest","typeOfTest","isUndefined","isArrayBuffer","isString","isFunction","isNumber","isObject","isPlainObject","val","isDate","isFile","isBlob","isFileList","isURLSearchParams","isReadableStream","isRequest","isResponse","isHeaders","allOwnKeys","getOwnPropertyNames","len","findKey","_key","_global","globalThis","self","global","isContextDefined","isTypedArray","TypedArray","Uint8Array","isHTMLForm","isRegExp","reduceDescriptors","reducer","getOwnPropertyDescriptors","reducedDescriptors","ret","defineProperties","isAsyncFn","_setImmediate","setImmediateSupported","postMessageSupported","token","callbacks","asap","process","nextTick","isBuffer","isFormData","kind","isArrayBufferView","ArrayBuffer","isView","buffer","isBoolean","isStream","pipe","merge","caseless","assignValue","targetKey","stripBOM","inherits","superConstructor","toFlatObject","sourceObj","destObj","propFilter","merged","searchString","position","lastIndex","arr","forEachEntry","pair","matchAll","regExp","exec","hasOwnProp","freezeMethods","writable","toObjectSet","arrayOrString","delimiter","define","toCamelCase","p1","p2","noop","toFiniteNumber","Number","isFinite","isSpecCompliantForm","toJSONObject","visit","reducedValue","isThenable","AxiosError","config","request","response","captureStackTrace","utils","toJSON","description","fileName","lineNumber","columnNumber","customProps","axiosError","cause","isVisitable","removeBrackets","renderKey","dots","predicates","TypeError","metaTokens","indexes","option","visitor","defaultVisitor","useBlob","Blob","convertValue","toISOString","Buffer","isFlatArray","exposedHelpers","build","encode","charMap","AxiosURLSearchParams","_pairs","toFormData","encoder","_encode","buildURL","serialize","serializeFn","serializedParams","hashmarkIndex","handlers","use","fulfilled","rejected","synchronous","runWhen","eject","clear","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","classes","protocols","hasBrowserEnv","_navigator","hasStandardBrowserEnv","product","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","platform","buildPath","isNumericKey","isLast","arrayToObject","parsePropPath","defaults","transitional","transitionalDefaults","adapter","transformRequest","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","formDataToJSON","setContentType","helpers","isNode","toURLEncodedForm","formSerializer","_FormData","env","rawValue","parser","stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","ignoreDuplicateOf","$internals","normalizeHeader","header","normalizeValue","matchHeaderValue","isHeaderNameFilter","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","rawHeaders","parsed","line","parseHeaders","tokens","tokensRE","parseTokens","deleted","deleteHeader","normalize","format","normalized","formatHeader","_len","targets","asStrings","computed","_len2","_key2","accessor","accessors","defineAccessor","accessorName","methodName","arg1","arg2","arg3","buildAccessors","mapped","headerValue","transformData","fns","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","settle","reject","ERR_BAD_REQUEST","samplesCount","bytes","timestamps","firstSampleTS","head","chunkLength","startedAt","bytesCount","passed","round","freq","lastArgs","timer","timestamp","invoke","args","flush","progressEventReducer","isDownloadStream","bytesNotified","_speedometer","speedometer","throttle","loaded","total","lengthComputable","progressBytes","rate","progress","estimated","progressEventDecorator","throttled","asyncDecorator","isMSIE","host","port","userAgent","write","expires","domain","secure","cookie","toGMTString","read","remove","buildFullPath","baseURL","requestedURL","allowAbsoluteUrls","isRelativeUrl","relativeURL","combineURLs","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","paramsSerializer","timeoutMessage","withCredentials","withXSRFToken","onUploadProgress","onDownloadProgress","decompress","beforeRedirect","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding","configValue","newConfig","auth","btoa","username","unescape","isURLSameOrigin","xsrfValue","cookies","XMLHttpRequest","_config","resolveConfig","requestData","requestHeaders","onCanceled","uploadThrottled","downloadThrottled","flushUpload","flushDownload","unsubscribe","signal","onloadend","responseHeaders","getAllResponseHeaders","responseText","open","onreadystatechange","readyState","responseURL","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","setRequestHeader","upload","cancel","abort","subscribe","aborted","parseProtocol","send","composeSignals","signals","controller","AbortController","reason","streamChunk","chunkSize","byteLength","pos","readStream","stream","asyncIterator","reader","getReader","trackStream","onProgress","onFinish","iterable","readBytes","_onFinish","ReadableStream","pull","close","loadedBytes","enqueue","highWaterMark","isFetchSupported","Request","Response","isReadableStreamSupported","encodeText","arrayBuffer","supportsRequestStream","duplexAccessed","hasContentType","duplex","supportsResponseStream","resolvers","res","ERR_NOT_SUPPORT","resolveBodyLength","getContentLength","_request","getBodyLength","fetchOptions","composedSignal","toAbortSignal","requestContentLength","contentTypeHeader","isCredentialsSupported","credentials","isStreamResponse","responseContentLength","responseData","knownAdapters","http","xhr","xhrAdapter","fetchAdapter","renderReason","isResolvedHandle","adapters","nameOrAdapter","rejectedReasons","reasons","throwIfCancellationRequested","throwIfRequested","dispatchRequest","VERSION","validators","deprecatedWarnings","validator","formatMessage","opt","desc","ERR_DEPRECATED","spelling","correctSpelling","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","Axios","instanceConfig","interceptors","InterceptorManager","configOrUrl","dummy","boolean","function","baseUrl","withXsrfToken","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","responseInterceptorChain","promise","chain","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","axios","createInstance","defaultConfig","Cancel","promises","spread","isAxiosError","formToJSON","getAdapter","Constants","LIBRARY_NAME","SKU","CACHE_PREFIX","DEFAULT_AUTHORITY","DEFAULT_AUTHORITY_HOST","DEFAULT_COMMON_TENANT","ADFS","DSTS","AAD_INSTANCE_DISCOVERY_ENDPT","CIAM_AUTH_URL","AAD_TENANT_DOMAIN_SUFFIX","RESOURCE_DELIM","NO_ACCOUNT","CLAIMS","CONSUMER_UTID","OPENID_SCOPE","PROFILE_SCOPE","OFFLINE_ACCESS_SCOPE","EMAIL_SCOPE","CODE_RESPONSE_TYPE","CODE_GRANT_TYPE","RT_GRANT_TYPE","FRAGMENT_RESPONSE_MODE","S256_CODE_CHALLENGE_METHOD","URL_FORM_CONTENT_TYPE","AUTHORIZATION_PENDING","NOT_DEFINED","EMPTY_STRING","NOT_APPLICABLE","NOT_AVAILABLE","FORWARD_SLASH","IMDS_ENDPOINT","IMDS_VERSION","IMDS_TIMEOUT","AZURE_REGION_AUTO_DISCOVER_FLAG","REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX","KNOWN_PUBLIC_CLOUDS","TOKEN_RESPONSE_TYPE","ID_TOKEN_RESPONSE_TYPE","SHR_NONCE_VALIDITY","INVALID_INSTANCE","HttpStatus","OIDC_DEFAULT_SCOPES","OIDC_SCOPES","HeaderNames","PersistentCacheKeys","AADAuthorityConstants","ClaimsRequestKeys","PromptValue","LOGIN","SELECT_ACCOUNT","CONSENT","NONE","CREATE","NO_SESSION","CodeChallengeMethodValues","PLAIN","S256","ServerResponseType","QUERY","FRAGMENT","ResponseMode","FORM_POST","GrantType","CacheAccountType","Separators","CredentialType","ID_TOKEN","ACCESS_TOKEN","ACCESS_TOKEN_WITH_AUTH_SCHEME","REFRESH_TOKEN","APP_METADATA","THE_FAMILY_ID","AUTHORITY_METADATA_CONSTANTS","AuthorityMetadataSource","SERVER_TELEM_CONSTANTS","SCHEMA_VERSION","MAX_CUR_HEADER_BYTES","MAX_LAST_HEADER_BYTES","MAX_CACHED_ERRORS","CACHE_KEY","CATEGORY_SEPARATOR","VALUE_SEPARATOR","OVERFLOW_TRUE","OVERFLOW_FALSE","UNKNOWN_ERROR","AuthenticationScheme","BEARER","POP","SSH","ThrottlingConstants","Errors","PasswordGrantConstants","ResponseCodes","RegionDiscoverySources","RegionDiscoveryOutcomes","CacheOutcome","JsonWebTokenTypes","LogLevel","Logger","loggerOptions","packageName","packageVersion","level","Info","setLoggerOptions","createDefaultLoggerOptions","localCallback","loggerCallback","defaultLoggerCallback","piiLoggingEnabled","logLevel","correlationId","clone","logMessage","containsPii","toUTCString","executeCallback","errorPii","Warning","warningPii","info","infoPii","verbose","Verbose","verbosePii","trace","Trace","tracePii","isPiiLoggingEnabled","ProtocolMode","AzureCloudInstance","unexpectedError","postRequestFailed","AuthErrorMessages","AuthError","errorCode","errorMessage","suberror","setPrototypeOf","subError","setCorrelationId","createAuthError","additionalMessage","clientInfoDecodingError","clientInfoEmptyError","tokenParsingError","nullOrEmptyToken","endpointResolutionError","networkError","openIdConfigError","hashNotDeserialized","invalidState","stateMismatch","stateNotFound","nonceMismatch","authTimeNotFound","maxAgeTranspired","multipleMatchingTokens","multipleMatchingAccounts","multipleMatchingAppMetadata","requestCannotBeMade","cannotRemoveEmptyScope","cannotAppendScopeSet","emptyInputScopeSet","deviceCodePollingCancelled","deviceCodeExpired","deviceCodeUnknownError","noAccountInSilentRequest","invalidCacheRecord","invalidCacheEnvironment","noAccountFound","noCryptoObject","unexpectedCredentialType","invalidAssertion","invalidClientCredential","tokenRefreshRequired","userTimeoutReached","tokenClaimsCnfRequiredForSignedJwt","authorizationCodeMissingFromServerResponse","bindingKeyNotRemoved","endSessionEndpointNotSupported","keyIdMissing","noNetworkConnectivity","userCanceled","missingTenantIdError","methodNotImplemented","nestedAppAuthBridgeDisabled","ClientAuthErrorMessages","ClientAuthError","createClientAuthError","DEFAULT_CRYPTO_IMPLEMENTATION","createNewGuid","base64Decode","base64Encode","base64UrlEncode","encodeKid","getPublicKeyThumbprint","removeTokenBindingKey","clearKeystore","signJwt","hashString","extractTokenClaims","encodedToken","jswPayload","authToken","getJWSPayload","base64Decoded","checkMaxAge","authTime","maxAge","nowSeconds","getTime","isTokenExpired","expiresOn","expirationSec","generateCredentialKey","credentialEntity","generateAccountId","generateCredentialId","generateTarget","generateClaimsHash","generateScheme","createIdTokenEntity","homeAccountId","environment","idToken","clientId","tenantId","credentialType","secret","realm","createAccessTokenEntity","accessToken","scopes","extExpiresOn","refreshOn","tokenType","userAssertionHash","keyId","requestedClaims","requestedClaimsHash","atEntity","cachedAt","extendedExpiresOn","tokenClaims","cnf","kid","createRefreshTokenEntity","refreshToken","familyId","rtEntity","isCredentialEntity","entity","clientOrFamilyId","generateAuthorityMetadataExpiresAt","updateAuthorityEndpointMetadata","authorityMetadata","updatedValues","fromNetwork","authorization_endpoint","token_endpoint","end_session_endpoint","issuer","endpointsFromNetwork","jwks_uri","updateCloudDiscoveryMetadata","aliases","preferred_cache","preferred_network","aliasesFromNetwork","isAuthorityMetadataExpired","metadata","expiresAt","redirectUriEmpty","claimsRequestParsingError","authorityUriInsecure","urlParseError","urlEmptyError","emptyInputScopesError","invalidPromptValue","invalidClaims","tokenRequestEmpty","logoutRequestEmpty","invalidCodeChallengeMethod","pkceParamsMissing","invalidCloudDiscoveryMetadata","invalidAuthorityMetadata","untrustedAuthority","missingSshJwk","missingSshKid","missingNonceAuthenticationHeader","invalidAuthenticationHeader","cannotSetOIDCOptions","cannotAllowPlatformBroker","authorityMismatch","ClientConfigurationErrorMessages","ClientConfigurationError","createClientConfigurationError","StringUtils","isEmptyObj","strObj","lastIndexOf","queryStringToObject","query","trimArrayEntries","removeEmptyStringsFromArray","jsonParseHelper","matchPattern","ScopeSet","inputScopes","scopeArr","filteredInput","scope","fromString","inputScopeString","createSearchScopes","scopeSet","containsOnlyOIDCScopes","removeScope","removeOIDCScopes","containsScope","lowerCaseScopes","printScopesLowerCase","lowerCaseScopesSet","containsScopeSet","asArray","defaultScopeCount","defaultScope","appendScope","newScope","appendScopes","newScopes","unionScopeSets","otherScopes","unionScopes","intersectingScopeSets","sizeOtherScopes","getScopeCount","sizeThisScopes","printScopes","buildClientInfo","rawClientInfo","decodedClientInfo","buildClientInfoFromHomeAccountId","clientInfoParts","uid","utid","tenantIdMatchesHomeTenant","buildTenantProfile","localAccountId","idTokenClaims","oid","sub","tid","tfp","acr","isHomeTenant","updateAccountTenantProfileData","baseAccountInfo","tenantProfile","idTokenSecret","updatedAccountInfo","tenantProfileOverride","claimsSourcedTenantProfile","AuthorityType","getTenantIdFromIdTokenClaims","AccountEntity","generateAccountKey","generateAccountCacheKey","getAccountInfo","nativeAccountId","authorityType","tenantProfiles","isSingleTenant","accountInterface","homeTenantId","createAccount","accountDetails","authority","account","clientInfo","protocolMode","getPreferredCache","preferredUsername","preferred_username","upn","emails","cloudGraphHostName","msGraphHost","createFromAccountInfo","accountInfo","values","generateHomeAccountId","serverClientInfo","authType","logger","cryptoObj","isAccountEntity","accountInfoIsEqual","accountA","accountB","compareClaims","claimsMatch","accountAClaims","accountBClaims","iat","nonce","stripLeadingHashOrQuery","responseString","getDeserializedResponse","normalizedResponse","deserializedHash","fromEntries","error_description","UrlString","urlString","_urlString","canonicalizeUri","lowerCaseUrl","validateAsUri","components","getUrlComponents","HostNameAndPort","PathSegments","Protocol","appendQueryString","queryString","removeHashFromUrl","replaceTenantPath","urlObject","pathArray","constructAuthorityUriFromObject","regEx","urlComponents","AbsolutePath","QueryString","pathSegments","getDomainFromUrl","getAbsoluteUrl","relativeUrl","baseComponents","hashContainsKnownProperties","EndpointMetadata","InstanceDiscoveryMetadata","tenant_discovery_endpoint","InstanceDiscoveryMetadataAliases","getAliasesFromMetadata","authorityHost","cloudDiscoveryMetadata","getCloudDiscoveryMetadataFromNetworkResponse","metadataEntry","alias","cacheQuotaExceededErrorCode","cacheUnknownErrorCode","CacheErrorMessages","CacheError","CacheManager","cryptoImpl","staticAuthorityOptions","commonLogger","getAllAccounts","accountFilter","buildTenantProfiles","getAccountsFilteredBy","getAccountInfoFilteredBy","allAccounts","getBaseAccountInfo","accountEntities","cachedAccounts","flatMap","accountEntity","getTenantProfilesFromAccountEntity","getTenantedAccountInfoByFilter","tokenKeys","tenantProfileFilter","tenantedAccountInfo","tenantProfileMatchesFilter","getIdToken","idTokenClaimsMatchTenantProfileFilter","targetTenantId","searchTenantProfiles","getTokenKeys","matchingTenantProfiles","matchLocalAccountIdFromTenantProfile","matchLocalAccountIdFromTokenClaims","loginHint","matchLoginHintFromTokenClaims","matchUsername","matchName","sid","matchSid","saveCacheRecord","cacheRecord","storeInCache","setAccount","setIdTokenCredential","saveAccessToken","setRefreshTokenCredential","appMetadata","setAppMetadata","credential","accessTokenFilter","currentScopes","removedAccessTokens","accessTokenKeyMatchesFilter","tokenEntity","getAccessTokenCredential","credentialMatchesFilter","removeAccessToken","setAccessTokenCredential","allAccountKeys","getAccountKeys","matchingAccounts","cacheKey","isAccountKey","getAccount","matchHomeAccountId","matchEnvironment","matchRealm","matchNativeAccountId","matchAuthorityType","isCredentialKey","lowerCaseKey","clientIdValidation","familyIdValidation","matchClientId","matchUserAssertionHash","matchCredentialType","matchFamilyId","matchTarget","matchTokenType","matchKeyId","getAppMetadataFilteredBy","allCacheKeys","getKeys","matchingAppMetadata","isAppMetadata","getAppMetadata","getAuthorityMetadataByAlias","getAuthorityMetadataKeys","matchedEntity","isAuthorityMetadata","getAuthorityMetadata","removeAllAccounts","removedAccounts","removeAccount","accountKey","removeAccountContext","removeItem","allTokenKeys","accountId","removedCredentials","removeIdToken","removeRefreshToken","removeAppMetadata","readAccountFromCache","targetRealm","performanceClient","idTokenFilter","idTokenMap","getIdTokensByFilter","numIdTokens","tokensToBeRemoved","homeIdTokenMap","numHomeIdTokens","addFields","multiMatchedID","idTokenKeys","idTokens","idTokenKeyMatchesFilter","getIdTokenCredential","inputKey","getAccessToken","authScheme","authenticationScheme","sshKid","accessTokenKeys","accessTokens","numAccessTokens","multiMatchedAT","keyMustContainAllScopes","getAccessTokensByFilter","getRefreshToken","familyRT","refreshTokenFilter","refreshTokenKeys","refreshTokens","refreshTokenKeyMatchesFilter","getRefreshTokenCredential","numRefreshTokens","multiMatchedRT","readAppMetadataFromCache","appMetadataFilter","appMetadataEntries","numAppMetadata","isAppMetadataFOCI","claims","cachedUsername","filterUsername","staticAliases","canonicalAuthority","knownAuthorities","getAliasesFromStaticSources","cloudMetadata","login_hint","generateAuthorityMetadataCacheKey","toObject","json","DefaultStorageClass","setServerTelemetry","getServerTelemetry","setAuthorityMetadata","setThrottlingCache","getThrottlingCache","DEFAULT_SYSTEM_OPTIONS","tokenRenewalOffsetSeconds","preventCorsPreflight","DEFAULT_LOGGER_IMPLEMENTATION","DEFAULT_CACHE_OPTIONS","claimsBasedCachingEnabled","DEFAULT_NETWORK_IMPLEMENTATION","sendGetRequestAsync","sendPostRequestAsync","DEFAULT_LIBRARY_INFO","sku","cpu","os","DEFAULT_CLIENT_CREDENTIALS","clientSecret","clientAssertion","DEFAULT_AZURE_CLOUD_OPTIONS","azureCloudInstance","tenant","DEFAULT_TELEMETRY_OPTIONS","application","appName","appVersion","isOidcProtocolMode","authOptions","StubbedNetworkModule","PerformanceEvents","PerformanceEventStatus","StubPerformanceMeasurement","startMeasurement","endMeasurement","flushMeasurement","StubPerformanceClient","generateId","measureName","discard","increment","eventId","libraryName","libraryVersion","startTimeMs","measurement","startPerformanceMeasurement","calculateQueuedTime","addQueueMeasurement","setPreQueueTime","discardMeasurements","removePerformanceCallback","addPerformanceCallback","emitEvents","incrementFields","cacheEventByCorrelationId","BrowserConstants","NativeConstants","NativeExtensionMethod","BrowserCacheLocation","HTTP_REQUEST_TYPE","TemporaryCacheKeys","StaticCacheKeys","InMemoryCacheKeys","ApiId","InteractionType","InteractionStatus","DEFAULT_REQUEST","WrapperSKU","DB_NAME","DB_TABLE_NAME","CacheLookupPolicy","iFrameRenewalPolicies","NavigationClient","navigateInternal","defaultNavigateWindow","navigateExternal","noHistory","NetworkError","httpStatus","createNetworkError","pkceNotCreated","cryptoNonExistent","emptyNavigateUri","hashEmptyError","noStateInHash","hashDoesNotContainKnownProperties","unableToParseState","stateInteractionTypeMismatch","interactionInProgress","popupWindowError","emptyWindowError","userCancelled","monitorPopupTimeout","monitorWindowTimeout","redirectInIframe","blockIframeReload","blockNestedPopups","iframeClosedPrematurely","silentLogoutUnsupported","noAccountError","silentPromptValueError","noTokenRequestCacheError","unableToParseTokenRequestCacheError","noCachedAuthorityError","authRequestNotSetError","invalidCacheType","nonBrowserEnvironment","databaseNotOpen","getRequestFailed","failedToParseResponse","unableToLoadToken","cryptoKeyNotFound","authCodeRequired","authCodeOrNativeAccountIdRequired","spaCodeAndNativeAccountIdPresent","databaseUnavailable","unableToAcquireTokenFromNativePlatform","nativeHandshakeTimeout","nativeExtensionNotInstalled","nativeConnectionNotEstablished","uninitializedPublicClientApplication","nativePromptNotSupported","invalidBase64String","invalidPopTokenRequest","failedToBuildHeaders","failedToParseHeaders","ErrorLink","BrowserAuthErrorMessages","BrowserAuthError","createBrowserAuthError","FetchClient","responseStatus","reqHeaders","getFetchHeaders","onLine","getHeaderDict","reqBody","Headers","optionsHeaders","headerDict","urlEncode","urlEncodeArr","inputArr","base64EncArr","aBytes","binString","fromCodePoint","TextDecoder","base64DecToArr","base64String","encodedString","atob","codePointAt","AES_GCM","HKDF","S256_HASH_ALG","PUBLIC_EXPONENT","UUID_CHARS","UINT32_ARR","Uint32Array","ENCRYPT","DECRYPT","keygenAlgorithmOptions","modulusLength","publicExponent","sha256Digest","dataString","crypto","subtle","getRandomValues","dataBuffer","getRandomUint32","currentTimestamp","baseRand","randA","trunc","randBHi","randBLo","exportJwk","exportKey","generateBaseKey","generateKey","generateHKDF","baseKey","importKey","deriveKey","salt","encrypt","rawData","encodedData","derivedKey","encryptedData","iv","decrypt","decryptedData","plainText","hashBuffer","storageNotSupported","stubbedPublicClientApplicationCalled","inMemRedirectUnavailable","BrowserConfigurationAuthErrorMessages","BrowserConfigurationAuthError","createBrowserConfigurationAuthError","isInIframe","parent","getCurrentUri","blockAcquireTokenInPopups","opener","blockNonBrowserEnvironment","blockAPICallsBeforeInitialize","preflightCheck","blockReloadInHiddenIframes","redirectPreflightCheck","allowRedirectInIframe","blockRedirectInIframe","system","cacheLocation","storeAuthStateInCookie","preconnect","DEFAULT_IFRAME_TIMEOUT_MS","BaseOperatingContext","debug","sessionStorage","browserEnvironment","isBrowserEnvironment","userInputAuth","userInputCache","userInputSystem","telemetry","userInputTelemetry","DEFAULT_AUTH_OPTIONS","redirectUri","postLogoutRedirectUri","navigateToLoginRequestUrl","clientCapabilities","OIDCOptions","serverResponseType","defaultScopes","azureCloudOptions","skipAuthorityMetadataCache","supportsNestedAppAuth","instanceAware","temporaryCacheLocation","secureCookies","cacheMigrationEnabled","DEFAULT_LOGGER_OPTIONS","providedSystemOptions","networkClient","navigationClient","loadFrameTimeout","windowHashTimeout","iframeHashTimeout","navigateFrameWait","redirectNavigationTimeout","asyncPopups","allowPlatformBroker","nativeBrokerHandshakeTimeout","pollIntervalMilliseconds","client","ClientConfigurationErrorCodes","buildConfiguration","logLevelKey","getItem","piiLoggingKey","available","getConfig","getLogger","isAvailable","StandardOperatingContext","getModuleName","MODULE_NAME","getId","ID","initialize","missingKidError","missingAlgError","JoseHeaderErrorMessages","JoseHeaderError","createJoseHeaderError","JoseHeader","typ","alg","getShrHeaderString","shrHeaderOptions","shrHeader","DatabaseStorage","dbName","tableName","dbOpen","openDB","indexedDB","createObjectStore","closeConnection","validateDbIsOpen","dbGet","transaction","objectStore","setItem","dbPut","put","dbDelete","dbGetKeys","getAllKeys","containsKey","dbContainsKey","deleteDatabase","deleteDbRequest","MemoryStorage","getUserData","setUserData","cacheKeys","AsyncMemoryStorage","inMemoryCache","indexedDBCache","handleDatabaseAccessError","item","clearInMemory","clearPersistent","dbDeleted","CryptoOps","skipValidateSubtleCrypto","validateCryptoAvailable","inputKid","publicKeyThumbMeasurement","keyPair","extractable","usages","generateKeyPair","EXTRACTABLE","POP_KEY_USAGES","publicKeyJwk","publicKey","publicJwkString","getSortedObjectString","kty","publicJwkHash","privateKeyJwk","privateKey","unextractablePrivateKey","importJwk","requestMethod","resourceRequestMethod","requestUri","resourceRequestUri","success","shrOptions","signJwtMeasurement","cachedKeyPair","publicKeyJwkString","encodedKeyIdThumbprint","encodedShrHeader","jwk","tokenString","tokenBuffer","signatureBuffer","sign","signedJwt","eventName","telemetryClient","inProgressEvent","eventCount","invokeAsync","RegionDiscovery","networkInterface","detectRegion","environmentRegion","regionDiscoveryMetadata","autodetectedRegionName","region_source","IMDS_OPTIONS","localIMDSVersionResponse","getRegionFromIMDS","currentIMDSVersion","getCurrentVersion","currentIMDSVersionResponse","Metadata","Authority","cacheManager","authorityOptions","managedIdentity","_canonicalAuthority","region_used","region_outcome","regionDiscovery","getAuthorityType","authorityUri","canonicalAuthorityUrlComponents","_canonicalAuthorityUrlComponents","hostnameAndPort","authorizationEndpoint","discoveryComplete","replacePath","tokenEndpoint","deviceCodeEndpoint","endSessionEndpoint","selfSignedJwtAudience","jwksUri","canReplaceTenant","reservedTenantDomains","replaceTenant","endpoint","cachedAuthorityUrlComponents","canonical_authority","cachedAuthorityParts","currentPart","cachedPart","defaultOpenIdConfigurationEndpoint","canonicalAuthorityHost","isAliasOfKnownMicrosoftAuthority","resolveEndpointsAsync","metadataEntity","getCurrentMetadataEntity","cloudDiscoverySource","endpointSource","updateEndpointMetadata","updateCachedMetadata","authorityEndpointSource","endpointMetadataResult","localMetadata","updateEndpointMetadataFromLocalSources","azureRegionConfiguration","azureRegion","updateMetadataWithRegionalInformation","getEndpointMetadataFromNetwork","configMetadata","getEndpointMetadataFromConfig","hardcodedMetadata","getEndpointMetadataFromHardcodedValues","metadataEntityExpired","isAuthoritySameType","openIdConfigurationEndpoint","isValidResponse","isOpenIdConfigResponse","userConfiguredAzureRegion","replaceWithRegionalInformation","localMetadataSource","updateCloudDiscoveryMetadataFromLocalSources","getCloudDiscoveryMetadataFromNetwork","getCloudDiscoveryMetadataFromConfig","createCloudDiscoveryMetadataFromHost","isInKnownAuthorities","instanceDiscoveryEndpoint","typedResponseBody","isCloudInstanceDiscoveryResponse","isCloudInstanceDiscoveryErrorResponse","typedError","generateAuthority","authorityString","authorityAzureCloudInstance","isAlias","isPublicCloudAuthority","buildRegionalAuthorityString","region","authorityUrlInstance","authorityUrlParts","hostNameAndPort","regionalMetadata","transformCIAMAuthority","ciamAuthority","authorityUrlComponents","formatAuthorityUri","noTokensFound","nativeAccountUnavailable","refreshTokenExpired","badToken","InteractionRequiredServerErrorMessage","InteractionRequiredAuthSubErrorMessage","InteractionRequiredAuthErrorMessages","InteractionRequiredAuthError","traceId","errorNo","isInteractionRequiredError","isInteractionRequiredErrorCode","isInteractionRequiredSubError","isInteractionRequiredErrorDesc","irErrorCode","createInteractionRequiredAuthError","ProtocolUtils","setRequestState","userState","libraryState","generateLibraryState","stateObj","stateString","parseRequestState","splitState","libraryStateString","libraryStateObj","userRequestState","CcsCredentialType","COOKIE_LIFE_MULTIPLIER","SameSiteOptions","CookieStorage","cookieList","ClientAuthErrorCodes","cookieLifeDays","sameSite","cookieStr","expireTime","today","expr","getCookieExpirationTime","cookieParts","storage","accountKeys","ENCRYPTION_KEY","LocalStorage","localStorage","memoryStorage","broadcast","BroadcastChannel","cookieString","parsedCookie","encryptionCookie","importExistingCache","keyStr","cookieData","updateCache","getContext","importArray","getItemFromEncryptedCache","rawCache","encObj","encryptedCacheExpiredCount","unencryptedCacheCount","importedArr","promiseArr","perfMeasurement","isBackground","SessionStorage","extractBrowserRequestState","browserCrypto","EventType","BrowserCacheManager","cacheConfig","eventHandler","internalStorage","browserStorage","getStorageImplementation","temporaryCacheStorage","cookieStorage","validateAndParseJson","jsonValue","parsedJson","serializedAccount","removeAccountKeyFromMap","parsedAccount","wasAdded","addAccountKeyToMap","emitEvent","removalIndex","removeTokenKey","addTokenKey","idRemoval","accessRemoval","refreshRemoval","idTokenKey","parsedIdToken","CacheHelpers","accessTokenKey","parsedAccessToken","refreshTokenKey","parsedRefreshToken","appMetadataKey","parsedMetadata","serverTelemetryKey","parsedEntity","validateKey","validateEntity","serverTelemetry","setWrapperMetadata","wrapperSKU","wrapperVersion","getWrapperMetadata","getActiveAccount","activeAccountKeyFilters","generateCacheKey","activeAccountValueFilters","activeAccountValueObj","setActiveAccount","activeAccountKey","activeAccountValue","throttlingCacheKey","parsedThrottlingCache","throttlingCache","getTemporaryCache","itemCookie","setTemporaryCache","removeTemporaryItem","clearTokensAndKeysWithClaims","generateAuthorityKey","stateId","generateNonceKey","generateStateKey","getCachedAuthority","cachedState","stateCacheKey","authorityCacheKey","updateCacheEntries","authorityInstance","nonceCacheKey","ccsCredential","resetRequestCache","setInteractionInProgress","cleanRequestByState","stateKey","cleanRequestByInteractionType","interactionType","stateValue","parsedState","cacheCodeRequest","authCodeRequest","encodedValue","getCachedRequest","encodedTokenRequest","parsedRequest","cachedAuthority","getCachedNativeRequest","cachedRequest","isInteractionInProgress","getInteractionInProgress","inProgress","hydrateCache","idTokenEntity","claimsHash","cacheRtCount","cacheIdCount","cacheAtCount","EventHandler","eventCallbacks","broadcastChannel","invokeCrossTabCallbacks","addEventCallback","eventTypes","callbackId","removeEventCallback","eventType","invokeCallbacks","subscribeCrossTab","unsubscribeCrossTab","ServerError","ThrottlingUtils","generateThrottlingStorageKey","thumbprint","preProcess","throttleTime","errorCodes","postProcess","checkResponseStatus","checkResponseForRetryAfter","thumbprintValue","calculateThrottleTime","parseInt","error_codes","currentSeconds","removeThrottle","homeAccountIdentifier","shrClaims","CLIENT_ID","REDIRECT_URI","RESPONSE_TYPE","TOKEN_TYPE","REQ_CNF","RETURN_SPA_CODE","X_CLIENT_EXTRA_SKU","BROKER_CLIENT_ID","BROKER_REDIRECT_URI","RequestValidator","validateRedirectUri","validatePrompt","prompt","promptValues","validateClaims","validateCodeChallengeParams","codeChallenge","codeChallengeMethod","validateCodeChallengeMethod","RequestParameterBuilder","parameters","addResponseTypeCode","addResponseTypeForTokenAndIdToken","addResponseMode","responseMode","addNativeBroker","addScopes","addOidcScopes","requestScopes","addClientId","addRedirectUri","addPostLogoutRedirectUri","addIdTokenHint","idTokenHint","addDomainHint","domainHint","addLoginHint","addCcsUpn","addCcsOid","addSid","addClaims","mergedClaims","addClientCapabilitiesToClaims","addCorrelationId","addLibraryInfo","libraryInfo","addApplicationTelemetry","appTelemetry","addPrompt","addState","addNonce","addCodeChallengeParams","addAuthorizationCode","addDeviceCode","addRefreshToken","addCodeVerifier","codeVerifier","addClientSecret","addClientAssertion","addClientAssertionType","clientAssertionType","addOboAssertion","oboAssertion","addRequestTokenUse","tokenUse","addGrantType","grantType","addClientInfo","addExtraQueryParameters","eQParams","addUsername","addPassword","addPopToken","cnfString","addSshJwk","sshJwkString","addServerTelemetry","serverTelemetryManager","generateCurrentRequestHeaderValue","generateLastRequestHeaderValue","addThrottling","addLogoutHint","logoutHint","addBrokerParameters","brokerParams","brokerClientId","brokerRedirectUri","createQueryString","queryParameterArray","embeddedClientId","embeddedRedirectUri","instrumentBrokerParams","createDiscoveredInstance","authorityUriFinal","acquireTokenAuthority","BaseClient","configuration","userAuthOptions","systemOptions","userSystemOptions","userLoggerOption","cacheOptions","userCacheOptions","storageInterface","storageImplementation","networkImplementation","cryptoInterface","cryptoImplementation","clientCredentials","persistencePlugin","serializableCache","buildClientConfiguration","cryptoUtils","createTokenRequestHeaders","ccsCred","executePostToTokenEndpoint","queuedEvent","sendPostRequest","clearTelemetryCache","refreshTokenSize","refresh_token","httpVerToken","requestId","contentLengthHeader","updateAuthority","cloudInstanceHostname","cloudInstanceAuthorityUri","cloudInstanceAuthority","createTokenQueryParameters","parameterBuilder","tokenQueryParameters","KeyLocation","PopTokenGenerator","generateCnf","reqCnf","generateKid","reqCnfString","xms_ksl","signPopToken","signPayload","shrNonce","resourceUrlString","resourceUrlComponents","at","ts","client_claims","TokenCacheContext","tokenCache","hasChanged","cacheHasChanged","ResponseHandler","cacheStorage","validateServerAuthorizationCodeResponse","serverResponse","requestState","decodedServerResponseState","decodedRequestState","serverErrorNo","errorCodePrefix","errorCodePrefixIndex","error_uri","parseServerErrorNo","trace_id","correlation_id","validateTokenResponse","refreshAccessToken","errString","serverError","handleServerTokenResponse","serverTokenResponse","reqTimestamp","authCodePayload","handlingRefreshTokenResponse","forceCacheRefreshTokenResponse","serverRequestId","requestStateObj","id_token","auth_time","client_info","key_id","generateCacheRecord","cacheContext","beforeCacheAccess","generateAuthenticationResult","afterCacheAccess","claimsTenantId","cachedIdToken","cachedAccount","buildAccountToCache","cachedAccessToken","access_token","responseScopes","expiresIn","expires_in","extExpiresIn","ext_expires_in","refreshIn","refresh_in","tokenExpirationSeconds","extendedTokenExpirationSeconds","refreshOnSeconds","token_type","cachedRefreshToken","rtExpiresOn","refresh_token_expires_in","foci","cachedAppMetadata","fromTokenCache","popKid","popTokenGenerator","spa_accountid","uniqueId","fromCache","spa_code","fromNativeBroker","baseAccountKey","find","baseAccount","cloud_graph_host_name","msgraph_host","newTenantProfile","getClientAssertion","AuthorizationCodeClient","includeRedirectUri","oidcDefaultScopes","getAuthCodeUrl","createAuthCodeUrlQueryString","acquireToken","executeTokenRequest","responseHandler","handleFragmentResponse","serverParams","getLogoutUri","logoutRequest","createLogoutUrlQueryString","queryParametersString","requestBody","createTokenRequestBody","tokenBodyParameters","assertion","assertionType","reqCnfData","sshJwk","enableSpaAuthorizationCode","extraQueryParameters","extraScopesToConsent","domainHintFromRequest","sidFromRequest","accountSid","extractAccountSid","accountLoginHintClaim","extractLoginHint","loginHintFromClaim","sidFromClaim","loginHintFromRequest","loginHintFromUpn","addExtraQueryParams","platformBroker","makeExtraSkuString","skus","extensionName","extensionVersion","skuMap","skuArr","skuName","skuVersion","setSku","ServerTelemetryManager","telemetryRequest","cacheOutcome","apiId","wrapperVer","telemetryCacheKey","platformFieldsArr","nativeBrokerErrorCode","getNativeBrokerErrorCode","platformFields","requestWithRegionDiscoveryFields","getRegionDiscoveryFields","lastRequests","getLastRequests","maxErrors","maxErrorsToSend","failedRequests","errorCount","cacheHits","cacheFailedRequest","incrementCacheHits","numErrorsFlushed","serverTelemEntity","serverTelemetryEntity","dataSize","regionDiscoveryFields","regionUsed","regionSource","regionOutcome","updateRegionDiscoveryMetadata","setCacheOutcome","setNativeBrokerErrorCode","clearNativeBrokerErrorCode","BaseInteractionClient","storageImpl","nativeMessageHandler","clearCacheOnLogout","getRedirectUri","requestRedirectUri","initializeServerTelemetryManager","forceRefresh","telemetryPayload","getDiscoveredAuthority","instanceAwareEQ","requestExtraQueryParameters","resolvedAuthority","requestAuthority","resolvedInstanceAware","userAuthority","builtAuthority","requestAzureCloudOptions","discoveredAuthority","AuthorityFactory","generatePkceCodes","generateCodeVerifier","verifier","challenge","generateCodeChallengeFromVerifier","pkceCodeVerifier","pkceHashedCodeVerifier","initializeBaseRequest","validatedRequest","initializeSilentRequest","baseRequest","StandardInteractionClient","initializeAuthorizationCodeRequest","pkceCodes","generatedPkceParams","initializeLogoutRequest","validLogoutRequest","getLogoutHintFromIdTokenClaims","createAuthCodeClient","clientConfig","getClientConfiguration","initializeAuthorizationRequest","browserState","userSwitch","NativeAuthErrorMessages","NativeAuthError","ext","isFatalNativeAuthError","createNativeAuthError","InteractionRequiredAuthErrorCodes","SilentFlowClient","acquireCachedToken","lastCacheOutcome","requestTenantId","getTenantFromAuthorityString","generateResultFromCacheRecord","SilentCacheClient","silentRequest","silentAuthClient","authResponse","logout","NativeInteractionClient","provider","nativeStorageImpl","nativeStorageManager","silentCacheClient","getExtensionId","getExtensionVersion","addRequestSKUs","extraParameters","AADServerParamKeys","nativeATMeasurement","TimeUtils","nativeRequest","initializeNativeRequest","acquireTokensFromCache","isNativeBroker","nativeTokenRequest","messageBody","sendMessage","validatedResponse","validateNativeResponse","handleNativeResponse","subErrorCode","createSilentCacheRequest","fullAccount","acquireTokenRedirect","rootMeasurement","remainingParameters","onRedirectNavigate","navigationOptions","handleRedirectPromise","AuthToken","createHomeAccountIdentifier","cachedhomeAccountId","cacheAccount","cacheNativeTokens","generateScopes","generatePopAccessToken","shr","shrParameters","mats","addTelemetryFromNativeResponse","accountProperties","properties","responseAccessToken","isResponseFromCache","nativeCacheRecord","getMATSFromResponse","extensionId","matsBrokerVersion","broker_version","matsAccountJoinOnStart","account_join_on_start","matsAccountJoinOnEnd","account_join_on_end","matsDeviceJoin","device_join","matsPromptBehavior","prompt_behavior","matsApiErrorCode","api_error_code","matsUiVisible","ui_visible","matsSilentCode","silent_code","matsSilentBiSubCode","silent_bi_sub_code","matsSilentMessage","silent_message","matsSilentStatus","silent_status","matsHttpStatus","http_status","matsHttpEventCount","http_event_count","AuthErrorCodes","MATS","is_cached","remainingProperties","getPrompt","windowTitleSubstring","extendedExpiryToken","handleExtraBrokerParams","generatedReqCnfData","hasExtraBrokerParams","child_client_id","child_redirect_uri","NativeMessageHandler","handshakeTimeoutMs","handshakeResolvers","messageChannel","windowListener","onWindowMessage","handshakeEvent","req","channel","responseId","createProvider","preferredProvider","sendHandshakeRequest","backupProvider","extensionHandshakeTimeoutMs","onChannelMessage","timeoutId","extensionHandshakeTimedOut","handshakeResolver","extensionInstalled","resolver","isPlatformBrokerAvailable","nativeExtensionProvider","InteractionHandler","authCodeModule","authModule","handleCodeResponse","authCodeResponse","handleCodeResponseFromServer","validateNonce","cloud_instance_host_name","createCcsCredentials","deserializeResponse","responseLocation","UrlUtils","PopupClient","unloadWindow","nativeStorage","popupParams","popupName","generatePopupName","popupWindowAttributes","popupWindowParent","isAsyncPopup","acquireTokenPopupAsync","popup","openSizedPopup","generateLogoutPopupName","mainWindowRedirectUri","logoutPopupAsync","validRequest","Popup","authClient","isPlatformBroker","fetchNativeAccountIdMeasurement","navigateUrl","interactionHandler","popupWindow","initiateAuthRequest","monitorPopupForHash","nativeInteractionClient","absoluteUrl","logoutUri","openPopup","requestUrl","intervalId","setInterval","closed","clearInterval","finally","cleanPopup","urlNavigate","currentWindow","winLeft","screenLeft","winTop","screenTop","winWidth","innerWidth","clientWidth","winHeight","innerHeight","clientHeight","popupSize","popupPosition","RedirectHandler","redirectStartPage","redirectTimeout","nonceKey","cachedNonce","cachedCcsCred","checkCcsCredentials","tokenResponse","RedirectClient","Redirect","handleBackButton","persisted","getRedirectStartPage","parentMeasurement","getRedirectResponse","getEntriesByType","navigationEntries","getNavigationType","loginRequestUrl","loginRequestUrlNormalized","urlParts","replaceHash","handleResponse","processHashOnRedirect","homepage","getHomepage","userProvidedResponse","platformStateObj","validateInteractionType","cachedHash","currentAuthority","requestStartPage","loadFrame","loadFrameSync","monitorIframeForHash","iframe","removeHiddenIframe","frameHandle","createHiddenIframe","authFrame","visibility","border","SilentIframeClient","inputRequest","Silent","silentTokenHelper","retryError","retrySilentRequest","msalFrame","RefreshTokenClient","forceCache","acquireTokenByRefreshToken","acquireTokenWithCachedRefreshToken","noFamilyRTInCache","clientMismatchErrorWithFamilyRT","refreshTokenExpirationOffsetSeconds","rtExpiresOnMs","refreshTokenRequest","badRefreshTokenKey","SilentRefreshClient","refreshTokenClient","createRefreshTokenClient","authorityUrl","TokenCache","loadExternalTokens","cacheRecordAccount","loadAccount","loadIdToken","loadAccessToken","loadRefreshToken","accessTokenEntity","refreshTokenEntity","HybridSpaAuthorizationCodeClient","SilentAuthCodeClient","cloudInstanceHostName","getAccountType","performanceEvent","preflightCheck$1","StandardController","operatingContext","DEFAULT_BROWSER_CACHE_MANAGER","redirectResponse","hybridAuthCodeResponses","rawCloudDiscoveryMetadata","buildStaticAuthorityOptions","nativeCacheOptions","nativeInternalStorage","activeSilentTokenRequests","trackPageVisibility","trackPageVisibilityWithMeasurement","createController","visibilityChangeCount","initCorrelationId","getRequestCorrelationId","initMeasurement","preGeneratePkceCodes","redirectResponseKey","handleRedirectPromiseInternal","loggedInAccounts","useNative","nativeClient","redirectClient","createRedirectClient","accountType","eventError","atrMeasurement","scenarioId","onRedirectNavigateCb","configOnRedirectNavigateCb","isLoggedIn","canUsePlatformBroker","getNativeAccountId","acquireTokenPopup","atPopupMeasurement","pkce","getPreGeneratedPkceCodes","acquireTokenNative","createPopupClient","accessTokenSize","idTokenSize","ssoSilentMeasurement","acquireTokenByCodeAsyncMeasurement","ssoSilent","createSilentIframeClient","acquireTokenByCode","atbcMeasurement","hybridAuthCode","acquireTokenByCodeAsync","silentAuthCodeClient","createSilentAuthCodeClient","tokenRenewalError","acquireTokenFromCache","commonRequest","cacheLookupPolicy","createSilentCacheClient","silentRefreshClient","createSilentRefreshClient","acquireTokenBySilentIframe","silentIframeClient","logoutRedirect","logoutPopup","clearCache","isInBrowser","getAccountByUsername","getAccountByHomeId","getAccountByLocalId","enableAccountStorageEvents","disableAccountStorageEvents","getTokenCache","setLogger","initializeWrapperLibrary","setNavigationClient","getConfiguration","getPerformanceClient","isBrowserEnv","loginRedirect","loginPopup","acquireTokenSilent","atsMeasurement","silentRequestKey","cachedResponse","acquireTokenSilentAsync","acquireTokenSilentNoIframe","shouldTryToResolveSilently","refreshTokenError","noInteractionRequired","refreshTokenRefreshRequired","isSilentlyResolvable","tryIframeRenewal","checkIfRefreshTokenErrorCanBeResolvedSilently","activeIframeRequest","activePromise","activeCorrelationId","awaitConcurrentIframeMeasure","awaitIframeCorrelationId","activePromiseResult","iframeResult","cacheError","pkceCode","usePreGeneratedPkce","PublicClientApplication","createPublicClientApplication","standard","createV3Controller","localId","userName","msalConfig","loginRequest","passwordResetRequest","msalInstance","api","accounts","getToken","Authorization","Home","pantryItems","setPantryItems","fetchPantryItems","items","getPantryItems","alert","_jsxs","textAlign","marginTop","_jsx","handleLogout","expiryDate","itemID","defaultMsalContext","MsalContext","EventMessageUtils","getInteractionStatusFromEvent","currentStatus","accountArraysAreEqual","arrayA","arrayB","comparisonArray","elementA","elementB","MsalProviderActionType","previousState","newInProgress","currentAccounts","MsalProvider","updateState","contextValue","React__default","useMsal","Login","handleLogin","handlePasswordReset","Profile","Donation","ItemAdd","ItemList","ProtectedRoute","App","ReactDOM","getElementById"],"sourceRoot":""}