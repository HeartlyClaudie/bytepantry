{"ast":null,"code":"/*! @azure/msal-common v15.2.0 2025-02-18 */\n'use strict';\n\nimport { AuthError } from './AuthError.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n/**\r\n * Represents network related errors\r\n */\nclass NetworkError extends AuthError {\n  constructor(error, httpStatus, responseHeaders) {\n    super(error.errorCode, error.errorMessage, error.subError);\n    Object.setPrototypeOf(this, NetworkError.prototype);\n    this.name = \"NetworkError\";\n    this.error = error;\n    this.httpStatus = httpStatus;\n    this.responseHeaders = responseHeaders;\n  }\n}\n/**\r\n * Creates NetworkError object for a failed network request\r\n * @param error - Error to be thrown back to the caller\r\n * @param httpStatus - Status code of the network request\r\n * @param responseHeaders - Response headers of the network request, when available\r\n * @returns NetworkError object\r\n */\nfunction createNetworkError(error, httpStatus, responseHeaders) {\n  return new NetworkError(error, httpStatus, responseHeaders);\n}\nexport { NetworkError, createNetworkError };","map":{"version":3,"names":["NetworkError","AuthError","constructor","error","httpStatus","responseHeaders","errorCode","errorMessage","subError","Object","setPrototypeOf","prototype","name","createNetworkError"],"sources":["C:\\bytepantry\\frontend\\node_modules\\@azure\\msal-common\\src\\error\\NetworkError.ts"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AuthError } from \"./AuthError.js\";\r\n\r\n/**\r\n * Represents network related errors\r\n */\r\nexport class NetworkError extends AuthError {\r\n    error: AuthError;\r\n    httpStatus?: number;\r\n    responseHeaders?: Record<string, string>;\r\n\r\n    constructor(\r\n        error: AuthError,\r\n        httpStatus?: number,\r\n        responseHeaders?: Record<string, string>\r\n    ) {\r\n        super(error.errorCode, error.errorMessage, error.subError);\r\n\r\n        Object.setPrototypeOf(this, NetworkError.prototype);\r\n        this.name = \"NetworkError\";\r\n        this.error = error;\r\n        this.httpStatus = httpStatus;\r\n        this.responseHeaders = responseHeaders;\r\n    }\r\n}\r\n\r\n/**\r\n * Creates NetworkError object for a failed network request\r\n * @param error - Error to be thrown back to the caller\r\n * @param httpStatus - Status code of the network request\r\n * @param responseHeaders - Response headers of the network request, when available\r\n * @returns NetworkError object\r\n */\r\nexport function createNetworkError(\r\n    error: AuthError,\r\n    httpStatus?: number,\r\n    responseHeaders?: Record<string, string>\r\n): NetworkError {\r\n    return new NetworkError(error, httpStatus, responseHeaders);\r\n}\r\n"],"mappings":";;;;;AAAA;;;AAGG;AAIH;;AAEG;AACG,MAAOA,YAAa,SAAQC,SAAS;EAKvCC,YACIC,KAAgB,EAChBC,UAAmB,EACnBC,eAAwC;IAExC,KAAK,CAACF,KAAK,CAACG,SAAS,EAAEH,KAAK,CAACI,YAAY,EAAEJ,KAAK,CAACK,QAAQ,CAAC;IAE1DC,MAAM,CAACC,cAAc,CAAC,IAAI,EAAEV,YAAY,CAACW,SAAS,CAAC;IACnD,IAAI,CAACC,IAAI,GAAG,cAAc;IAC1B,IAAI,CAACT,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,eAAe,GAAGA,eAAe;;AAE7C;AAED;;;;;;AAMG;SACaQ,kBAAkBA,CAC9BV,KAAgB,EAChBC,UAAmB,EACnBC,eAAwC;EAExC,OAAO,IAAIL,YAAY,CAACG,KAAK,EAAEC,UAAU,EAAEC,eAAe,CAAC;AAC/D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}