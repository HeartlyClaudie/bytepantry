{"ast":null,"code":"/*! @azure/msal-common v15.2.0 2025-02-18 */\n'use strict';\n\nimport { cacheUnknownErrorCode, cacheQuotaExceededErrorCode } from './CacheErrorCodes.mjs';\nimport * as CacheErrorCodes from './CacheErrorCodes.mjs';\nexport { CacheErrorCodes };\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nconst CacheErrorMessages = {\n  [cacheQuotaExceededErrorCode]: \"Exceeded cache storage capacity.\",\n  [cacheUnknownErrorCode]: \"Unexpected error occurred when using cache storage.\"\n};\n/**\r\n * Error thrown when there is an error with the cache\r\n */\nclass CacheError extends Error {\n  constructor(errorCode, errorMessage) {\n    const message = errorMessage || (CacheErrorMessages[errorCode] ? CacheErrorMessages[errorCode] : CacheErrorMessages[cacheUnknownErrorCode]);\n    super(`${errorCode}: ${message}`);\n    Object.setPrototypeOf(this, CacheError.prototype);\n    this.name = \"CacheError\";\n    this.errorCode = errorCode;\n    this.errorMessage = message;\n  }\n}\nexport { CacheError, CacheErrorMessages };","map":{"version":3,"names":["CacheErrorMessages","cacheQuotaExceededErrorCode","cacheUnknownErrorCode","CacheError","Error","constructor","errorCode","errorMessage","message","Object","setPrototypeOf","prototype","name"],"sources":["C:\\bytepantry\\frontend\\node_modules\\@azure\\msal-common\\src\\error\\CacheError.ts"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport * as CacheErrorCodes from \"./CacheErrorCodes.js\";\r\nexport { CacheErrorCodes };\r\n\r\nexport const CacheErrorMessages = {\r\n    [CacheErrorCodes.cacheQuotaExceededErrorCode]:\r\n        \"Exceeded cache storage capacity.\",\r\n    [CacheErrorCodes.cacheUnknownErrorCode]:\r\n        \"Unexpected error occurred when using cache storage.\",\r\n};\r\n\r\n/**\r\n * Error thrown when there is an error with the cache\r\n */\r\nexport class CacheError extends Error {\r\n    /**\r\n     * Short string denoting error\r\n     */\r\n    errorCode: string;\r\n\r\n    /**\r\n     * Detailed description of error\r\n     */\r\n    errorMessage: string;\r\n\r\n    constructor(errorCode: string, errorMessage?: string) {\r\n        const message =\r\n            errorMessage ||\r\n            (CacheErrorMessages[errorCode]\r\n                ? CacheErrorMessages[errorCode]\r\n                : CacheErrorMessages[CacheErrorCodes.cacheUnknownErrorCode]);\r\n\r\n        super(`${errorCode}: ${message}`);\r\n        Object.setPrototypeOf(this, CacheError.prototype);\r\n\r\n        this.name = \"CacheError\";\r\n        this.errorCode = errorCode;\r\n        this.errorMessage = message;\r\n    }\r\n}\r\n"],"mappings":";;;;;;;AAAA;;;AAGG;AAKU,MAAAA,kBAAkB,GAAG;EAC9B,CAACC,2BAA2C,GACxC,kCAAkC;EACtC,CAACC,qBAAqC,GAClC;;AAGR;;AAEG;AACG,MAAOC,UAAW,SAAQC,KAAK;EAWjCC,WAAYA,CAAAC,SAAiB,EAAEC,YAAqB;IAChD,MAAMC,OAAO,GACTD,YAAY,KACXP,kBAAkB,CAACM,SAAS,CAAC,GACxBN,kBAAkB,CAACM,SAAS,CAAC,GAC7BN,kBAAkB,CAACE,qBAAqC,CAAC,CAAC;IAEpE,KAAK,CAAC,GAAGI,SAAS,KAAKE,OAAO,EAAE,CAAC;IACjCC,MAAM,CAACC,cAAc,CAAC,IAAI,EAAEP,UAAU,CAACQ,SAAS,CAAC;IAEjD,IAAI,CAACC,IAAI,GAAG,YAAY;IACxB,IAAI,CAACN,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,YAAY,GAAGC,OAAO;;AAElC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}