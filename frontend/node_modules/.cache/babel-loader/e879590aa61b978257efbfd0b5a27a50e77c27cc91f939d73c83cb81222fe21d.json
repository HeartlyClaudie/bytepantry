{"ast":null,"code":"import axios from\"axios\";import{PublicClientApplication}from\"@azure/msal-browser\";import{msalConfig,loginRequest}from\"./authConfig\";const API_URL=\"http://localhost:3000\";// Replace with your actual API URL\nconst msalInstance=new PublicClientApplication(msalConfig);// Get JWT Token from MSAL\nconst getToken=async()=>{const accounts=msalInstance.getAllAccounts();if(accounts.length===0)return null;try{const response=await msalInstance.acquireTokenSilent({...loginRequest,account:accounts[0]});return response.idToken;}catch(error){console.error(\"Error acquiring token:\",error);return null;}};// Axios instance with JWT authentication\nconst api=axios.create({baseURL:API_URL,headers:{\"Content-Type\":\"application/json\"}});// Attach JWT token to every request\napi.interceptors.request.use(async config=>{const token=await getToken();if(token){config.headers.Authorization=`Bearer ${token}`;}return config;});// Function to fetch pantry items\nexport const getPantryItems=async()=>{try{const response=await api.get(\"/api/pantry\");return response.data;}catch(error){console.error(\"Error fetching pantry items:\",error);throw error;}};// Function to log out from Azure AD B2C\nexport const logout=()=>{msalInstance.logoutPopup().then(()=>{localStorage.removeItem(\"jwtToken\");window.location.href=\"/login\";// Redirect to login page\n}).catch(error=>{console.error(\"Logout failed:\",error);});};export default api;","map":{"version":3,"names":["axios","PublicClientApplication","msalConfig","loginRequest","API_URL","msalInstance","getToken","accounts","getAllAccounts","length","response","acquireTokenSilent","account","idToken","error","console","api","create","baseURL","headers","interceptors","request","use","config","token","Authorization","getPantryItems","get","data","logout","logoutPopup","then","localStorage","removeItem","window","location","href","catch"],"sources":["C:/bytepantry/frontend/src/api.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { PublicClientApplication } from \"@azure/msal-browser\";\r\nimport { msalConfig, loginRequest } from \"./authConfig\";\r\n\r\nconst API_URL = \"http://localhost:3000\"; // Replace with your actual API URL\r\n\r\nconst msalInstance = new PublicClientApplication(msalConfig);\r\n\r\n// Get JWT Token from MSAL\r\nconst getToken = async () => {\r\n  const accounts = msalInstance.getAllAccounts();\r\n  if (accounts.length === 0) return null;\r\n\r\n  try {\r\n    const response = await msalInstance.acquireTokenSilent({\r\n      ...loginRequest,\r\n      account: accounts[0],\r\n    });\r\n    return response.idToken;\r\n  } catch (error) {\r\n    console.error(\"Error acquiring token:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Axios instance with JWT authentication\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: { \"Content-Type\": \"application/json\" },\r\n});\r\n\r\n// Attach JWT token to every request\r\napi.interceptors.request.use(async (config) => {\r\n  const token = await getToken();\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Function to fetch pantry items\r\nexport const getPantryItems = async () => {\r\n  try {\r\n    const response = await api.get(\"/api/pantry\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching pantry items:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Function to log out from Azure AD B2C\r\nexport const logout = () => {\r\n  msalInstance.logoutPopup()\r\n    .then(() => {\r\n      localStorage.removeItem(\"jwtToken\");\r\n      window.location.href = \"/login\"; // Redirect to login page\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Logout failed:\", error);\r\n    });\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,uBAAuB,KAAQ,qBAAqB,CAC7D,OAASC,UAAU,CAAEC,YAAY,KAAQ,cAAc,CAEvD,KAAM,CAAAC,OAAO,CAAG,uBAAuB,CAAE;AAEzC,KAAM,CAAAC,YAAY,CAAG,GAAI,CAAAJ,uBAAuB,CAACC,UAAU,CAAC,CAE5D;AACA,KAAM,CAAAI,QAAQ,CAAG,KAAAA,CAAA,GAAY,CAC3B,KAAM,CAAAC,QAAQ,CAAGF,YAAY,CAACG,cAAc,CAAC,CAAC,CAC9C,GAAID,QAAQ,CAACE,MAAM,GAAK,CAAC,CAAE,MAAO,KAAI,CAEtC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAL,YAAY,CAACM,kBAAkB,CAAC,CACrD,GAAGR,YAAY,CACfS,OAAO,CAAEL,QAAQ,CAAC,CAAC,CACrB,CAAC,CAAC,CACF,MAAO,CAAAG,QAAQ,CAACG,OAAO,CACzB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9C,MAAO,KAAI,CACb,CACF,CAAC,CAED;AACA,KAAM,CAAAE,GAAG,CAAGhB,KAAK,CAACiB,MAAM,CAAC,CACvBC,OAAO,CAAEd,OAAO,CAChBe,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAChD,CAAC,CAAC,CAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,KAAO,CAAAC,MAAM,EAAK,CAC7C,KAAM,CAAAC,KAAK,CAAG,KAAM,CAAAlB,QAAQ,CAAC,CAAC,CAC9B,GAAIkB,KAAK,CAAE,CACTD,MAAM,CAACJ,OAAO,CAACM,aAAa,CAAG,UAAUD,KAAK,EAAE,CAClD,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAAG,cAAc,CAAG,KAAAA,CAAA,GAAY,CACxC,GAAI,CACF,KAAM,CAAAhB,QAAQ,CAAG,KAAM,CAAAM,GAAG,CAACW,GAAG,CAAC,aAAa,CAAC,CAC7C,MAAO,CAAAjB,QAAQ,CAACkB,IAAI,CACtB,CAAE,MAAOd,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACpD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAe,MAAM,CAAGA,CAAA,GAAM,CAC1BxB,YAAY,CAACyB,WAAW,CAAC,CAAC,CACvBC,IAAI,CAAC,IAAM,CACVC,YAAY,CAACC,UAAU,CAAC,UAAU,CAAC,CACnCC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,QAAQ,CAAE;AACnC,CAAC,CAAC,CACDC,KAAK,CAACvB,KAAK,EAAI,CACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAAC,CACxC,CAAC,CAAC,CACN,CAAC,CAED,cAAe,CAAAE,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}