{"ast":null,"code":"/*! @azure/msal-common v15.2.0 2025-02-18 */\n'use strict';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nasync function getClientAssertion(clientAssertion, clientId, tokenEndpoint) {\n  if (typeof clientAssertion === \"string\") {\n    return clientAssertion;\n  } else {\n    const config = {\n      clientId: clientId,\n      tokenEndpoint: tokenEndpoint\n    };\n    return clientAssertion(config);\n  }\n}\nexport { getClientAssertion };","map":{"version":3,"names":["getClientAssertion","clientAssertion","clientId","tokenEndpoint","config"],"sources":["C:\\bytepantry\\frontend\\node_modules\\@azure\\msal-common\\src\\utils\\ClientAssertionUtils.ts"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    ClientAssertionCallback,\r\n    ClientAssertionConfig,\r\n} from \"../account/ClientCredentials.js\";\r\n\r\nexport async function getClientAssertion(\r\n    clientAssertion: string | ClientAssertionCallback,\r\n    clientId: string,\r\n    tokenEndpoint?: string\r\n): Promise<string> {\r\n    if (typeof clientAssertion === \"string\") {\r\n        return clientAssertion;\r\n    } else {\r\n        const config: ClientAssertionConfig = {\r\n            clientId: clientId,\r\n            tokenEndpoint: tokenEndpoint,\r\n        };\r\n        return clientAssertion(config);\r\n    }\r\n}\r\n"],"mappings":";;;AAAA;;;AAGG;AAOI,eAAeA,kBAAkBA,CACpCC,eAAiD,EACjDC,QAAgB,EAChBC,aAAsB;EAEtB,IAAI,OAAOF,eAAe,KAAK,QAAQ,EAAE;IACrC,OAAOA,eAAe;EACzB,OAAM;IACH,MAAMG,MAAM,GAA0B;MAClCF,QAAQ,EAAEA,QAAQ;MAClBC,aAAa,EAAEA;KAClB;IACD,OAAOF,eAAe,CAACG,MAAM,CAAC;EACjC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}